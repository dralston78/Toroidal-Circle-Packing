(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    441069,       8505]
NotebookOptionsPosition[    430713,       8331]
NotebookOutlinePosition[    431164,       8349]
CellTagsIndexPosition[    431121,       8346]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analysis of Packing V3E06L1N02T1_1 ", "Title",
 CellChangeTimes->{{3.580135852891836*^9, 3.580135862589938*^9}, 
   3.580137141312297*^9, 3.581161087909637*^9, 3.5818563558208227`*^9, {
   3.5819486698826113`*^9, 3.5819486708477287`*^9}, {3.58195172547116*^9, 
   3.581951738572076*^9}, {3.5821220906444807`*^9, 3.58212209551359*^9}, {
   3.603189474778634*^9, 3.603189487631043*^9}, {3.603208780082828*^9, 
   3.603208780234962*^9}, {3.604159900860963*^9, 3.604159903777851*^9}, {
   3.607700600015931*^9, 3.607700600356484*^9}, {3.6465858884999866`*^9, 
   3.646585900513159*^9}, {3.646755644997344*^9, 3.646755645131776*^9}, {
   3.647265088709795*^9, 3.647265088860635*^9}, {3.6473560363001137`*^9, 
   3.647356067794221*^9}, {3.7083389526131077`*^9, 3.7083389608763103`*^9}, {
   3.709640641361698*^9, 3.709640647919407*^9}, {3.73896733808869*^9, 
   3.738967346324815*^9}, {3.77238412671733*^9, 3.7723841267798367`*^9}, {
   3.772708595445504*^9, 3.772708600511737*^9}, {3.7727441047277393`*^9, 
   3.7727441049122963`*^9}},ExpressionUUID->"3bc0b118-19e5-4ef3-836d-\
0d9f018f7019"],

Cell["\<\
Three Vertices, Six Edges, 1 Loop, Combinatorial Number 02, Face Pattern 1, \
Type 1\
\>", "Text",
 CellChangeTimes->{{3.580137445604217*^9, 3.5801375254067383`*^9}, {
   3.581856358992407*^9, 3.581856384416295*^9}, {3.5819517426040287`*^9, 
   3.581951767642358*^9}, {3.582122103025394*^9, 3.582122111216773*^9}, {
   3.603189492504524*^9, 3.603189498647831*^9}, {3.604159907960268*^9, 
   3.604159912193075*^9}, {3.646585904328833*^9, 3.6465859252879257`*^9}, {
   3.646755662934144*^9, 3.646755663058913*^9}, {3.6472650912123737`*^9, 
   3.647265091300403*^9}, {3.647356044921232*^9, 3.647356058120769*^9}, {
   3.708338967340601*^9, 3.708338985260412*^9}, {3.7096406554076014`*^9, 
   3.709640670631276*^9}, 3.709979002564518*^9, {3.738967376997569*^9, 
   3.7389673972246437`*^9}, {3.7723841302684526`*^9, 3.772384130439761*^9}, {
   3.7727085810155487`*^9, 3.7727085892228317`*^9}, {3.772744106920402*^9, 
   3.772744116923418*^9}},ExpressionUUID->"baec14af-3b99-4417-84bc-\
478b4d896230"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQV8U/f6xkmLQ2mpAqVCKVbc3W1IcXd3KO5S3Iq7l2LFbQzG2BgM2Jje
+e7+d7tz5mPbnY+9//O+adqT5KSa5CTp83w+38FKm/PLyWnyO89rZUbE9Rjj
lSdPnhkFlf/0GD6n5fTpw+f19FP+p/eUGePHThk9qsOUmaPHjp7eYIS38sXH
lP+Uz5cnT17l7wRBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBdtajR4/or7/+ot9//53++OMP+fs///yj97IgCIIg
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
QJ73Y5oLPmfOHPruu+9sfq49ePBAZneXLl1aE9O/1a1TJ93PR2ftPW/fvk0t
W7aUHFSeLcQ9JnnG5LaT79DZO3/oft0BAAAAuQX4ku6Fqcckzw589913HbJP
U8tZe8MPPviA+vfvr+ynvahIUT+qVL0x9Rm5iNbuv0vJN3/W/byD3Al8SQAA
sD/u5ksu2XKVQkpFSd20wWLGjPr/2S/kfQt7efZew9m7f9KZO3/QxqP/orKV
aqfWc5uvx7yWm/9etU4L2nLizRytaf3B+9LfslWrVuLl2dKnn35qdXyjT6qe
zWMQbzI9OWPvyfHwhIQECgkJobIValH5yvWoqI8fFS7iQ/6BJala3dY0ZMJq
2nT4VTp92369QgEAAABgDXxJ94LnK7bqOJTKly9Pp06dsvs+zVLO8iWTk5Op
SpUqFFmuOlWp1Zz8AkJkf+/jFyQ+bLeBM5Tr8wYde/oH3V8DkHuALwkAAPbH
3XzJIRPXkG/xYO38xBTPjf3BitUa0c4z7ztkDat236K5687RnLVnqX33scr+
KNDq+Np9J/PQoPErKOna19k+Ns/P6Tl0LgUGBtPGjRttzuU2+ZKWx89jsTZX
8CXfe+896tOnD0Up+86ZK07I+UlIfImGTUkQT5LPb6HCRcnXPwSxcgAAAMDB
wJd0L7h/+ZiZ2ymkZDhNnz6dvvzyS7vv1dRyxt6Q+/tMmTKFAoNKSv1M0vVv
aPupd2nK4kRq2ravcu8SZvQoiwVQRHQ1eqzneJnXzf029X49gGcDXxIAAOyP
u/mSzTsMooIFC5t7bhr9HWP7xknNtyPWEKPs0w1eXuke39L/M/3dL6CExHbP
3vkz28fneeQVqjRId/ZiWr6khjepqjvPyJf87bff6Ouvv6bPP/+cfvrpJ8lt
tLd27twpdeUde02UmD8/x3P3/qKTz/6Pjjz5LW059rrUr3NfUT5/6lh51wHT
adn2pxArBwAAAOwEfEn3Y/PxN6h+sy7iF16+fNnuezW1nLE3vHTpEtWpU4fq
N+9KG5NekefIvTS5bubYU9/TrnP/oZkrT1Kr2OEUElpW9oZFivlT6YiK1LLT
UJqxItnY1/35nM2cBMAS+JIAAGB/3MmX5J6O5WLq2ejnmPY1/ve4JYcp+dn/
OWQd4ktarUH1/waTF2jQnMvTtE1f2nX2/7JVz8015PHbnqTKtZpTsWLFpMf5
L7/8YvW5ZvQltY+v9ikz8iUdrbfeeot69uxJ4VGVadaqU5ozy/lrp279Qkev
f6eKlffTjJXPT7iYo3xUAAAAILcDX9L94H7cvDcqULAQxcXFiWforvrmm29o
4sSJMstn9IzNdPq5362eL++hT9/5TeLS+y58RAuU/R/Ht0uXqSQ1NkV8/Khk
aFlq3KY3TVl4kPZe+FBzjwlAVoEvCQAA9sedfEnOmwuNKJ9hXiJ7VdyH0RG9
JZmYGk01vVFb9duWeZXe3nlp4oJ9WZoryDHihMMvU7vuYym4RITsO729valx
48b01FNPWX2uaeZLWuZ1GvT1JXlm5KpVqygoOJi6DJhGiVcfZOo8IFYOAAAA
OA74ku7D3ov/lR5BHJ/lvSHvT8uUKUNHjx6lR48e6bbHy4mSkpKkV2bjNn0l
DzSjc8D7/TPP/S6zLrnuZum269R90CyKKldD5k7yzJygEhFUp2lnqXfffuo9
zFQE2Qa+JAAA2B938iVnrkimIGWtZvmJGrNcysXUlT2Ho9Zh9CW9bB7feh63
werPiOiqtCHxpYy90+cfyZ6sc784KlE6WmLA3Dtz0sL91G3QTAoIKkmTJ0+m
Tz75xOxzjX3J9I5v8iu5flovXb16lRo2bCj5p5wDyp5jVl4H61j5JerYe5J1
rLx1H+V8HUCsHAAAAMgE8CVdH/bfhk/dSGUr1pY9T2h4BRowdpkQViaGunfv
Tq+88opue7zs6vXXX5e1h4ZF09T4JKkTytK5uf9IPMcTN3+iQ1cf0Ko9t5R7
nSVUoWoD2ReyTxkQVIqq12tDQyetoU1H/yV7Sb1fT+A+wJcEAAD7406+ZH9l
rcV8A63rpi3yAlt3GUn7L33qsHXE1FT5kpp5kYaU9an9Smu6D55Fh67YzhFk
b7XnkLmS/8e5gNxPcfycXbT3/H+lpn3H6X9LzU7JkqWkR6N6Bk5qHXcG/S/1
8iU//PBDGjZsGAUElqCRyr76ZA5r7lNj5U//mBYrHzybosprxcq3ST04YuUA
AACANfAlXZfDV7+SvSD3GS9cxIdCQqOo57B54q/xPED+9679ppK/fyAtXLhQ
aqLdRQ8fPqS5c+cqaw+Q2Hvi1S9zfL7Y1+Tzwj1+uJZq6KS1VLV2S7mfYD+3
uH+I5Bv0G7WE1h14Icf7UeD5wJcEAAD7406+ZPP2A401KpoeW1oO4PC4DQ6d
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
gNOAL6kN1zas2PWMzGzxDyip7A/9qW6zWFq48bJ8Tp/JZfNb7MGhqw9kLrWv
XzANm5IgfYL0XpOrw/2XTt0yzVR8n6YtOyq/r9z/hz1Kn2L+FB5Vmdp2HU1z
1pyVvkx6r9mTgC8JAAD2x519SUfAeWpz154V74dn1BT3D6HWscNp9Z7bdPwG
z5r+WzX3xtzzs8xN1KrjZrjWnP0577z5rLxMdQ6lyUMcNmVdlvMLU/MlNbxI
dc25M+q4TfC8xbGzdshcSp5JvSP5Xd1fb3dCHSvfmvy2/M6qY+VFOVZeHrFy
AAAAOQO+pDkcI+TZLK06D6PA4DDpr8K1O3PWnBHP5wx6q2Qb3idzfgHvrTnO
umTrNd3X5E6oZyryLEq+h2nXfQyVCi+fOlOR51g2bz+ApsYfkbwFzFTMGfAl
AQDA/sCXNHLq1i+0aPMVmTPCOWg+foESD1+244Z4guoeQWbzuC39SNUMbFv5
kszUpUckrml7Jo0h9XG4L+PGpFeylDNpmsdtPpNbNT88Zc2BTqrjNnHw8ufU
pssoqXsaOW2jnHe9X3t3hGefm8fKj1HLDoMpRBUrDysTQ226jkKsHAAAQJaA
L2mE/Rvef7XvMU72bNxLhWeOTFc+c7lGR3o930dPxJzCvtrgiatkXlCHXhNp
34WPdF+TO6Keqcj+I8eoY/tNpfCyVeXa5Z7lPLuT+w9MmLuHdp39P8yizAbw
JQEAwH6Y4ms8C8/XP4TGzNyu+5r04Mzd32m5sudu3KavzKPhOYoNmnejRZuu
yGzAsxo1OTE1mpLBy3oOt+X/r9pz26aXyHUqdZt0pnz5CqTUcBvS5nlrzOYe
PnWjzMnO7PMyzr2x7oFpuV5n5kvKdafs8XmfxLXwlao1pqXbn9L9GnB31LHy
vef/S3PXnlPFyouYxcrj4pPkfhOxcgAAALbI9b7k849oy4k3qUv/adL7kPPO
KlRtKD2DeH/Fn7n26hsEjOw8+z41bduPAoJCaeKCfZgZlEPEozTNVHz8C1q+
82nqNWw+RVeqkzpTkXN/uT6M8wS4tyfyfjMHfEkAAMg5xp4kv9CBS5/KfGmO
TXLuX9cB0zU9OE+F9ztr9t2RemKedcyf0fzZPHfdOZk3kl6PIN6nG1T9JdMw
z0W0VcdtYubKZKlp1vI1LR+zbMXaWZrNra7jtuWd6uFLMlyLPGDscvGBO/eL
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
V+ovqYZr1lvHjpCZRqNnbJaaD73XBOyPZax84cbL8vtvK1bO8SDMQwIAAMfi
ar4k7wHit1yjhi17yL6AZx42at2L4rc+SUeuf5ft/ThwL0499ysNGr+C/AJL
yF5h/+VPdF8TcAD3H6XNVLz6Ja3e+xwNGLOUKlZtREV9/KiwaaZi3dY0ZMJq
2nT4VafeJ8CXBAA4Gp4TG5Hi2WnlEKr/3n3wrCzls/G9NNcxchxo19n/0MbE
V2QGOMd3eYaOM/2rJu36Uv4CBc38VkMeg5V31aHXRKfVq+9Ifpd6DJlNpSLK
S85UdExdmjB3t8x44X2IK/iRJizruA0a14nuvmRqvqTBrD7foPJNDVLHHaH7
+dTi/L2/JbeXe9jz+eb+onqvCTj4NedYubIPNYuVD+VYeS2zWHmdxp1o9Iyt
Mr9dr1g5AAB4Mq7iS/JnwopdN6XvB/sQRXz8qE7TWFq44RIlXftat34+QD+4
hqZRmz6SR8L5E+eQI+vxpM1U/Frq6YZNSRBPkvuUcwybYxWVqjemPiMX0dr9
dx2eUwNfEgDgDFp1Hi6zRmz35DPOSOb6kZW7b2VqT8Tvj1zTy/nokeWqU968
+VLqaA0UVb6GzIPg+mRn3WOPiEuQ2peM5vvUbtxR9qaOXAv3sOw3egmFRVUW
P5LPz6jpm+Tr7OO6kh9ponLNZunkm+ZsHre9SOsvmVazrZUb64p13Ca4Xqv/
mKUy66hL/6l08PLnuq8JOAkXj5UDAIAno7cvee7uX7TmwD3Zk7P/xHGpmvXb
0pw1p+UzQfr5uMB5As6H8zxmLD8utV8cp1x/8L7uawLOff1lpuKT30qN3djZ
O6hO085yr2CcqRhE0ZXqULeBMySnwRHzM+FLAgCcwdSlRyTuYjCbZaJd51yu
cn3adOQ1m34ie1I8i7Zj74mS76M5uzkFfg9duOGych/+o8O9LM5D4vpdW/XH
pnzJssqaOLfTEWvgHoqDJ60RX5ZjXaXLVKLBE1fR9lPvKp83v+jS1zKzxCj7
dJMvadA6fy7gS+49/990PWfTuoNLRup+PtNj28m3qVHLHnK9xi057BL9roHz
cbVYOQAAeDJ6+ZK899uY9Co91nM8hSj7E+4vXrlWc5q27CgdvPKZ9P3Qs784
cA3Ya+o2aKZ4UH1HLZa57HqvCTif1JmKyuvP94/c96tp234Sy0idqRhdTd5P
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
r/UdtVhmCfJ9ad68+cznoJg8vjxGn4//vWDhIlSjfltaqezdTO8XvFfjfpDs
raTlTWrP0zGbYaKV56jlMaq/rvW9Fj4ar4HvrxMOv2KWw7j73H/kPZDjj/x8
I8tXp1HTt8jXTXPC+blwP0nuN12xakPKX6Bgpo+fL39BatlpKG1MesXob7q4
P1m5RlPy8vLK8Pzr6UtyDUBmzr875ksyfF5X732OqtdtLf2h56+/qPuagOcj
sXLl/ZvrbDgeMz/hAnXoNUH6/xRKqbMpUTqaGrftS5MXH5LvQZ0NAMDdyIwv
ybULaw7co1adh8tMRb4/5ly1OWvOSH2M9PNxgecCchecX9amy0jJ2R05bbPc
p+i9JuBZONWXtCC7M8QBAJ4N35vOXXuWWnYeJvnUPGeQ3xMKFCws/h33XPQt
HkwtOwymZdtvSI2L5WNwjiHP2uZ+4OwLqnMYUz2kVO/QRm9Ls3nQWvmVGt9r
2RdROXZIqTK0fMeN1Ng295ccPGmNzM7h58U9NgdPXC354jzvm9fO9+kcw4mL
T6LwslXJ2ztvto7P8LkaN3un9HdzZW8ybe5N+udf1zpuU75kBuffXX1Jhu95
Ril7Ts75bB07gnaeeV/3NYHcg1adTbeBM6W+m/t9cJ0NX5v1mnalsbN20I7T
/0ZfNQCAW5CeL8l7v41Jr0rND/d55r1ulVrNZe4I9+o5bau/OABOgK9PngtQ
oWpD6TO1TLmv0XtNwLPQ05dUY9kXnXOFLWeIl6tcT2aIL9/5DGrLAMgl8D6M
93Gr99+huWvPyefgzjP/Nvp3GXhT/O/cL69UeHnJrTR6kbbruG31h7TKrTRY
51pq1Yzz8QKCQ2n13tt05u7vUmM+esY2mfHAfmTJsGjqO3IxbT3+JiUr739c
12haN9+PN28/QN7/sn/8NHhuOM9b5jiQ3q+pLczmcadz/nWfe5OJ8++uddwm
9l36hFp1HibxwTEzt6F2AeiDcg9u7GHxY2qdDb9nlq9cX/xJU50N58wPm7JO
evTiWgUAuCqavuTzj2jbibeo64Bpsi/kWQzs/UxaeEC+39RfXO+1A8B9t7jH
j19ACYrtFyf3KnqvCXgOruJLquE6R77uzfqit+4l9/dWfdE3Pi5ept7nEQDg
uuw4/Z6yDxwos+S88+bV9L5s95xMJ0fRxvdzv8e8+fJTgQKFqf+45VKHPWn+
fqpYrZHcR3MuHcdYNh55VXLG1fWIvPfcc+FDuc/On79Ato5v8kQNKr+M/55P
WRPnoWrll7oCnB9v8LKew235/6v23NZ57k3G59+d8yXlOrz3Ny3YcJHKV65H
VWq1kB5Xeq8JgNQ6m6vGOhvOO69Su4XsCzm3yFRn039MvPw76mwAAK6EpS/J
cfZew+ZLzwq+x42qUEvywPec/9At+u+A3Af3xG/UqpfE36csTnS7GZvAdXFF
X1KNqS86z5k1zRBvaasv+qpTdOgJ9EUHAFjDezv2VvizlPOw2TNk/9ArtX+l
jTw9zVpdbS+S68z5/rhRq97UTNl3ck4k1+BUVe6bObeHYyscT+H7Za7R1vos
T7z6gGo37igzxbNy/Ix9SiPV6raW91K9Xw8teJ9uUPWXtPX8XaWOO73z7+6+
JMOeDvdR8Q0Ioa4DZxg/X11gXQAwZnU2R16TXPTajTqm1dkUN9bZ9Bg8m1Zw
nc0zqLMBAOiLyZcMVPaD3LssIrqqvF9FlK1Kw6dskL4pp25lXA8EgF7wZ++0
pUflmq3XNJYSDr2o+5qAZ+DqvqQa0wzx1L7o6y9ID47SEca+6EVT+qI3bduP
pqAvOgBAA34f4X3fhPn7JA+b51lzDiN7igUKFqL8+QsKPBdc/sxXQObHmL7O
c2fS+lwWpUJFi1FIyTLUuE1veUx+3+H3qI69J6bO5vELCKG2sSNo9Z7b0oPi
7N2/NdfGPdW4pzQ/rrlXalF7noFvp+WTmb7Ga5q27KhL5hFJvqTZPG7t569n
HfeeC//N1PkP8QBfktly4k1q0KKb9EiduvQIPlOBS6Kus9me/DZNXrBfYlBc
422qs+F+vp36TJL+WEeeQp0NAMD58DwbrofhGX+8P+R72IFjlyvvW+/Ivox7
+Om9RgAy4uiN76jLgOnSZ6/f6HjJH9N7TcD9cSdfUo1ZX/THP6UlW5+UfA7L
vuh1m3WReQ+70BcdAKAB9y7juQl8r8p+3cR5e2Um9uAJq6jvyEXSy4x7qQyZ
uJqGT91Eo2Zukzjh0u1PiWfD97emvEeOcXNvCZ7HwLN62KOq26Sz9MTkz+yM
3oNmLD8h99EGg7WfaOnTZdRPUrw8jX/jGT/1m3cV/1Tvc2+JyZfM6Pmv3K2z
L5mJ8885/XqfT3vAcfEpSxIprEyM+JM8213vNQGQHuo6m51n/o+mLz9OLToO
kfiRus6GZzrNXn0adTYAAIeTeO0rGjtnF0VXqpNaD8P1f5uOvW7VzwcAV4f3
4Gv33xWPPbxsFen/r/eagPvjrr6kGeq+6FceSI0f+wnmfdFDqabyuzN8SgJt
OfoG+qIDAOwGx0iW7XhK8i85N9KnWIDkVPJ7D3ucZ1PmcKcHe5rV6rYib+98
aX6XTc9Ry6u0/n5TL0rL/El+X0xIfMnl6oRiaqryJdN5/rrOvbGq49Y+/55Q
x22C62Q7942TuPjAcctRDwvcBrM6G+V3d9668/RYj3EUGl6BChZKqbMJi6Ym
7fqK/77vwsfIVwIA2A2OXXMNH+9vOF7t7Z1X9gjcY2LhpsfRmw+4LXxvw/1T
OObXstNQ2n7qPd3XBNwbj/AlLTDvi/685DlxjzdTX3T2DSrXbEb9xyxFX3QA
QLbh9xqetd28w2DJc2S/r3ajDnLvy3PquJ/khPl7M/VYCzZcosCQ8Ez4kMZa
bJ6vzXXlcm+tvLf5Fg8WH9S457U9l8Xkn8XFJ1HyrZ91P4dqKlW3mMdtA719
Sas8VI38Tk/yJflc86yhanVaUWS5GrQg4ZLuawIgq5jV2Vz6lJZsuUZdB0yn
yOhqaXU2yu8t55NzXhP3+ziHOhsAQDbg95mZK5OlpzfHP/wDS1L77mOVr52k
hi27m8/jBsBN4c9Srj3gvs6ch+GqczWBe+CJvqQa677oW6lWow4WfdHrU48h
c2jlrpt04ukfdV8zAMC14Xob7vPctusoCiph7E/Je0/eb3LONt/79hu9RHxG
7jmZ4WPef0Tte4yTuInB5G1Zel2GNE+yQIFCcjx+P+N1SE+ie39LP3We+W2K
x6fnT/YesZCSrn2j+7lUw3XcXl6GdJ8/PyfXmHuTVstt9CnVdd0G6ceo9/m0
J3xNj5y6SbneI6QHqqvOTgIgU1jW2Sj7vz7Ke2K5mHppdTbBoVSzQTsaHreB
Nh9/k04rvwO6rxsA4NJwvHfe+gtUp1FHKuYbqNxvBlOrjkNk33L8xg+05/wH
ZvO49V4vADmB7z24f1WFKg1kD899q/ReE3BfPN2XVKPui77V1Be9ZQ+NvuiT
afGmJ9AXHQBgBnthm479S94jQkKjZD4N5/jFLTksMUPuD2Hyy7gPdGZ9Sb43
jipfkwyps8Gte0Ka/Dkfv0CaqLx38TxvrcfqN2qx7IW1Zt6ovT72lg5e/kz3
c6pG+kt6WZ8D9fPXO19yz4UPNfpeWtfPe5ovyXCNK9fq+AWUoLGztqMfCvAY
jHU2P9Hhq1/RugP3pL9wlZrNpCdHap1NrebSa1hiQcpeUu81AwBcB84TW7Ll
KjVo0YN8i4fIPoznIcZvuy73nWfvGHOvTfO44UsCT4FzI7gGlT8nu/Sfqtxb
fK77moB7kpt8STXmfdHf1+yLzn3+Wyv37tIX/coD3dcMANCPbSffpe6DZ1Op
8PJUqFBRKhdTl8bP2yPzY3g/aumTZcWX5BpZ9jkN6fiI8nUvLxo5baP0SrP1
WDOU97LAkLCU/D1Dav6euZdmoDpNO4vHpvd5VROj7NP5Odp6/ib0zJc0zr3J
o+1NqmrQPamO2wTnCc9ff1FyyqrWbqm8Djd1XxMA9obrbJKV+6yk69/QxqRX
pTatVsPHpFcG983gP8tXaUA9h86V9yKOK+m9ZgCAPnDe9Ypdz1Czdv3JP6Ak
FfXxp7rNYmnhxsvyHnLGor84fEngiWw7+bbkevHM4SmLE9E3FWSL3OpLqrHs
i84zpbgHiLovesmwaPnM4bwo/kxBX3QAcge7z/1HchDDoipLzCKyfHW5T+Wv
n7pl7UeayIovyfmPnIOm7cOleV3sie7MoK/00m3XZRa0Te8sBe6x62q1uOJL
WvWXNJ8rY3CB/pKpfq/mnCEjIR7oSzJco8Zz5bgXSrdBMynxKmJ2wHMx1dkc
Samz4fdz7g2XVmcTKLnunftOocWbn5C8KL3XDABwPBy/4HnErToPo8BgYz+f
mvXb0Zw1Z5TPxS+l94nWz8GXBJ4I/z5MXXpEZnPXb9aFNiS+pPuagPsBX9Ic
677oV6nLgGkUEV1V+cxJ64veoEU3Gjd3N+08i77oAHgi+5W94+BJayiqXA3J
jyxdJkZmaLEvePLZXzKMTWTFl+w7crHkaKdXF5xae30l/foIrjFk/1LT2zOk
PV5UhZoZepzORuq4NebeGCz+rm8dt0a+pMYcHE/1JZnNx9+Q2SDsf/M+lPMo
9V4TAI5G6mxupdXZTFt2jFp2GCy/69KvPKXOpk3XUTRnzVnxJvReMwDAvvDe
b2PSK9ITnO8Huc8Dz1adrrwf8P5M+tDet/2ZCF8SeCocl+vSfxr5+gXRgDFL
063tAkAL+JLpYNEXfcWum9R7xAKp3zTvi94efdEB8BAOPfGFzJOJVn7PuX8k
50qzb7hV+f02zZfJzONkxZfs2GuixD2sPUTzvw+dtJaOPfV9uo+15cRbFBph
w5dUPVZYmcq07eQ7up9vNUZf0svm83eVOm6DwfK8mv/pqf0lTXAvvsmLD1Hp
yEqSO8a1rnqvCQBnolVn0677GIkJSR5lSp1N8/YDKC4+CXU2ALg7zz9S9ldv
iu9SonS07A8rVG1IkxYeoP0XP5H3g8zsS+BLAk+Fr/81++5QjXptJZ9r3rrz
uq8JuBfwJTOPui/6mgP3aND4lVRZuY/mGLmpLzrHzAaOXU4JiS+hLzoAbkTS
ta/FQ+R51hxz4Dh498GzaOORV5Xf+5+znBOWFV+S96gFCha29hAt8vImLzoo
70HpPRZ7jaUjKtrszWiCPaUdye/qft7VxNRsqjn7Jy0v0dgzU/+5N+b5p1p4
si/JcN+sTn2mkI9fkPJZuIJOPI0eeyB3Yllnw/Xcsf2mUnjZqrI3VNfZTJi7
R/pnoPcWAO7DrtP/pl7D5lNoZEXp71W2Ym0aM3un7Ad4VkFW9iPwJYEnw/lc
nNvBn3nc42CH8ruj95qA+wBfMnsYPcqfKemaqi96g/ZmfdErVGmgfI7NoxXK
PTT6ogPgmnD+IdeiVqnVQu4fA4NDqWPvSbTu0H2ZeZ3d+8es+JL1m3WlfPkL
2OgFmZaDN3vNGYnJp/dY4ktGVsog9zKPeJeumS+p3V9SPRNI//6S2v6xGk+c
e6OGzz/nrVar00r66y3YcEn3NQGgO+o6m8e/oBU7n6Hew+dL/r26zqZWw/Y0
fOpG2nbiLZt96AAA+sK+Y/9xyyX3i/OgI8pWlfo47uNw6tYv2dqHwJcEng7H
59p0Hi59yNmjzOi+BQAT8CVzjvRFf/YXOvLUt1JDOWH+XrO+6MW4L3qFlL7o
W66iLzoALgB7juzz1WzQjnyKBcjcGe7fuHrvc5L3wj2cc/L4WfEluVe6d958
2nXXqXmCeSQPJ6N7WKMvWVGzL6P68Tnuvz35bd1fBzVpddzaz9816rg/tOFF
pq3R4OH9JU3wtcjeSpBynXNPvV1n/6P7mgBwJdR1Njwjg3OL+X2uiKnOJrAE
VandggaOW0EbEl8Wr0PvNQOQ2zlw+TPxH6Mq1JJcE47jDhy3XPZX0s8nBz0Z
4EsCT4f7XS3YcJnKV6kvMzaX78R1DjIHfEn7wrWepr7onPc/belR+fwJVvVF
D4+qTG27jkZfdAB0gO/7Fm68TPWaxkpvZqZ5+4HyuXns6e/lPtIex8mKL1m5
VjPy9s5rlRdo6X3xGjPK39x+6l3rfEkNQpXvcbV8yUrVm5BXSh23Zu5oSq6n
3vmSttZmUHmUnl7HnXo+Ln5ELToOEV9/zOwd6LEMgA3UdTYJh1+hkdM2SkzK
rM6makPqNXw+rdx7W2Jneq8ZgNwE35ONm71T/BTu+R0SWlbqt7ccez1b/Xy0
gC8JcgPs3/dX7oM4Z5LnB2c0sxMABr6k4+B4mqkv+p7zH9KctWepXbcxFBpW
Xvag0hc9vDw1e2yg1JHuv/wJ+qID4CBO3/mNlm6/To1a9ZLPSc6RbNiyBy3Z
clVync/e+cOux8uKL1mpWmPy9va22VfR9Cf7cRnlcZr1lxSvzKDpnXG+pKv5
kpZ13LY8Wl37S57/MNV7VNfHG1S+qafPvVHD92nc25zrVLmmm3NZ9V4TAK6O
sc7mf/LZwzPVJs7bK/0n/QNLGmPYfoGSqxXbL47it16TWLfeawbAU+Hfw8mL
DskepFBRPwoqESbzbRIOv5yjfj5awJcEuYWtyW9RwxY9pH4obslhu/j6wLOB
L+kc1H3R2X/U6ovO97ENlN9f9EUHwH5wjsrqvbepeYdB0luBf9fqNOpI89df
oMNPfi29wBxx3Cz5ktUbk5eXt8pDtPzT+Hd+Hhl9rpv3l0x/7o2r+ZJc72FI
mW2j9fxdsY7bejZ37ph7o4bzSPqMXES+/sHUbdAsSrz6QPc1AeAupNXZfCcz
AqbGH5Ec/qASEVSwYBGJoYWXrUJtu42Wud+J177Sfc0AeAJ8TzZzxQmqVre1
5IpwXKB9j3Ey2/T40z/muJ+PFvAlQW6Bf3/i4pMoLKoy1W/eVXx+vdcEXBv4
ks5HPEpVX3SuzeQ6gehKdVL7ogcGh1Gtho9JnQ/6ogOQdfheb92hF6lN15ES
++bfK957zlx1kg5deeDw36ks+ZLK/tTLLF/SYJ4jmFq/fDvDfTLn3ki+pMbP
p+VLGig8qorUfOv9OqmJUc6DyZfUev4u4Uue/yBdv9eQ6ktG6X4+nQnXudVt
1oVCQqNo2rJjyP0HIBuY19l8QHPWnJG+PyXDoiWPkr2TUuHlJc42bdlRmS+g
13shAO5K8q2fad7681S7UUeZAeBXPIRadhpKq5S9xfEbP9itn48W8CVBbuLo
9W8lD8vHL4gGjF2m/H491H1NwHWBL6k/Z+/8KXUCpr7o3FuZ78/VfdGr1m4p
/dI51oC+6ADYhu/RNh39F3XqM0k8kkKFi0rfQq4hOPD4p1LP7Yz7uKz4kjHK
+rzN8iW1/bjM1HFvOvIahYZXsPpZg8XjRZarTjtPvaf766WmcurcG+3nn3Ye
but2L77b5Etq1Mir8yaDQ3NPviTD93GTFx2UmUvcK4GvQ73XBIA7w+9xp1V1
Nos2XaHYvnHSozytziZK+pHwvMXd5/6DOhsA0uH07V9pyaar1KB5N/ItHiKe
ZOM2fWnptusyk9SRfqQJ+JIgN8GfY6v2PUfV67WhyOhqNH/9Rd3XBFwX+JKu
hVZf9BrSFz1I/BV1X3SeG4y+6ACkwXXJXEfK+SSFChWlcjH1aPy8vTKbg/ej
zvSyslbHnZYvaekfGix9yQzuOzlHlHNr0n5W2+vk/GyuGdT7NbM8D5IvaeP5
m76+crfe/SUNVr6ppaec2/IlmaTrX1OnPpNlltTACSulJkDvNQHgCaTW2Tz9
o8wPWLbjBvUcOo/KVqwt/fBMdTa1G3WgEdM30fbktx3WowQAd4N/F1bsfIaa
tu1H/gElJO+Y8/sXbnxc+dz6xqm/K/AlQW6D69NGTdtMwSUiqHXscJkLrPea
gGsCX9J1seyLPn7eHmrQvKtZX/SyFWtJfnT81ifRF93OcC3V/kuf0o6T79D+
i5/I/+u9JqAN92PtO3IRhZWJkd+NqPI1aPSMrZI/wn279PCwsuNLWs95Np8B
k5k6bs65/n/2zgMqquvr4hnU2AXpVRCs2HvvvffesPeuYO8IlogdNRS7KIot
1mhMbIlJTO89pph/YoopmsTw7W/OHQamFxi4U85b67cEBObM47137933nH3U
uqShOm7112h/Y+dx+5obqOq43Yy+f/Xn9pAvqdD9O+nkdrqiLkl/kzWJ10R+
P/XsoL73smNiGGfkhPAC+h17L/6A+Gdvijob8immOptiJUuLeSL1oRoxJRab
9t8V46DsmBmmoKH5Es2J2naPEro9afh1GnfCgnUnsE957xy/VfAeWaxLMq7I
s2fuifuwrKcfJszbJmrXZMfE2B+sSzoGhnzRW3QaqvJFL57ji079vhesP8m+
6FZAa2nStain7JAJK0UNIvnzUV2tbv2oX0B5tO06UugisuNmVPO7kVPjEF6x
tuhxT7rkyKnxoj756PW/pHrcWaNL1mrQTtTlFSteAkWLESVRrFjOx0WLFRf3
Oa0/zeVLrkl8QdSv62qcmroefVytTgvldf+Z9L+hJpr9uPU1Wnvxl/zCYI25
bu9wV9QlCdoXHz3zGeW1HyL6dNDegOyYGMaZ0a6zeR2jZ21C7YbtRd4y1dmQ
d16Vmk0xYPRixO+5Ib5XdswMk5/Q3I9qzqiHjW9AGEqULI3q9VpjzurDIt+Y
/BFO3ZHTG5h1ScYVOXn7Pyx+5jQqVWuI6nVbibWK7JgY+4N1ScfDsC/6OPhn
+6J7Zvuiz1l1iH3RdaDzEbPuhKiBqtmgrfBo0qt1NVKbqalFUG4C1dXKfj+u
SMpz34t8yAqRDcS6i/IDB49bLnpEUY4xjX+yY7RGl9yR/hE27X9D5LWo/lV/
rE0a+TaYmUvTte2jfF21Rqa6hvXz+eo36yY0NtnnSRNVHbeb2fuP7jvpuqRB
3ZdiVMVM2rDs8ymLPSe/RKuuI4Q38sSYndy3jWEKCM06m82H38GkBbtEvSrV
rubU2dRDzyGzsYI89bjOhnEmXs4U9WU9hsyCf3AFMT+sUrOJ8D5W1z3JXg+x
Lsm4KjQ20VrN3dMPvYbOQer576XHxNgXrEs6Ntm+6Fd+E2Pu0oTn0H3QDCO+
6M9iV8bnLu2LTrmk2XqNMQ87Q70sFIZqSlV0GzS9QLyyGWD/xR/FdUy5H+Sn
5RdYHn1HRIseG5QDQnnFsmNUY40uaUumLNgtaviyr1vFU1p9uNXXL/WeJI1e
9nnSJNJY3xud+2+tZH9JzftfoTCc2+mq+ZIE3YcL1mUgomp91GzQjvdvGEYC
qjqbv7LqbD7CzBX70bLjELFvpa6zCY2ogU59JmLhhlOi96LsmBkmt1AtGeUb
UL0T1c+Q/j4peid2n/oSx27I8fMxBOuSjCuz5ci7aNy6t3KOHIZZyjHJntZt
jHxYl3QeDPuiL8j2RS9eqoyoravXtCvGzdnikr7o1P9Et2+upr6gnZtlOIdS
rZPkaBEKtO81Tvp7c2YOPf8LZq08gOp1Wwut3ds3SPTb3pj6qvDYsketXZYu
OWJyLNw9fA3n82n0lOk1bC72XvhB+nnSROUvqTB7/0nPl9S5/3XPM+V5kmYu
+3zKhHJ7B45ZLHq10d6BvV1rDONK5NTZ/CI8cqPjjqF9z7FadTZB5SqjTZcR
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
Iz16VgJ8/EPQvuc44f8lOyamYGFdkslvqFaD5humfNGDwsgXPcpufdFJl6G+
h9l6j65eovE5aa70M/Q8pf1o8u8OCSmHhQsXilpt0iNN7X0PHz7crBap+/pq
XVJ90JyW9M0TJ06gdZs2KFW6DKrUaCp6o5CXY36co4NXfhEabPW6rbL9Lun9
07qD8iQcoSePLbG1LklrOfKe2nr4Hcxfe1R4dVIvJtJ+nzKaX6hPocJFULhI
ERQpUlT579MoXPhpFHma/i2iIutr4uvK7ymi/Jz8HNVae35StZZOP24jSNUl
T35u8v7P7nsTyLqkMehvt3rnVfGsqFClHpYmnJMeE8MwBQ+NK9l1NgffwsT5
21GveTehTWbX2UQ2QO/h88Qz4/CV36THnOf3rJwLLd9yAbUbdRA6LNXP7N+/
H/fv3xc12fl5qPVJ2huPi4tDxYoVRX+Ztt2jxPnPr/e8++QXGDphJcpFVBd6
JOUljJ61ScyTKYfBFfRINaxLMoxx9pz+Cq27jhRrZ6q7TJfsN8EULKxLMgWJ
vi/6aZHLp+mLTv0iqL5vxpKUAvdFj028hh6DZ4qeODRnrBjZUOWLWKyEhvaQ
U0ud3etYkfN16i+9LukmGrXqiZIlS6NDhw6iJofqcQzlR2oen332GQoVcsvq
o6yjdZh4fV1dUn1QDc/nn38u/CdJG/ULCBNzQUv6/FgKaY6kd9Zu1FFosjSW
dOg1TvgXUY5pQehZ9oitdEm6Z0Te7coDYi5PuqKp6+8phc41YiLPVu9rClVu
pe71R+vBgtCVqY7bzU1h9vqX2/fmc4vOP9dxm4Zq9ShPivzOOvWZKNatsmNi
GEYemnU2245+gGlLU9C0/UCxx0kaJfWhpvkY5VoveeasXfb3Mwe9v8kL9wh9
jvrSUJ+ad999V2iFuanVzu1Bc1Hyo3zppZfQp08f4U1eo15roZfacqxPOvMN
Rs/YiPDKdYQeSXmS5B1HdVTCz8dJ/cVNwbokwxiHxoGFG06J/aga9duI+b7s
mJiCg3VJRhbZvugv/Cb6cKzYegl9hs9HeEVdX/QeGD9/O7Yf+yjffNFJ92nb
fbRRHUeR9XXFUzpaiQFadBiEOo07omxZL0ydOlXkSFq6B75ixYpcvb4xXZIO
mn+SJnrw4EHUrVtX5CGMmBKX5544NKekGnzqYUE5DdSHvFWnYaKu+NDVX0R+
n+xrTCa20CVpzk79AEgnL1qshEXXn6H/y/7cSJ23vuatDflfFZQuKfpxm7n+
5dZxf2bR+Wdd0jy7T36uXJ8NE14TkxbsEt4EsmNiGEY+5D+dXWdz4lPMW5OG
dt2iRB66us6Gere2V87b5sceRepz39tdnY0u9H7Gz90qPD4qV66CxMREUbP9
33//2WTNRbom/S6ab9KeNEGfm9I7qbaGvCdjYmLgFxCIitUaiXyBvOYD7L3w
g8h1on364iVKi3yDAaMXY8vBd1zKz8cQrEsyjGnoGUH9cslzt/fw+crnyX3p
MTEFA+uSjF1g1he9DLx8AlW+6NPXIeHQWyLv0havTfoZeRupe2mb0nHM6T+U
P1WtTkt4e/uIHMVvv/3Wqjln/fr1c/X6pnRJ9UH78ZS32aJFS+W5DBDz49z4
utF5p96awqfd00/kSDZu21fss5PW6co9NTWxhS5JdVXk/+zmVsji6087H1Kh
lT+p0Pw/Xf9GE9f/6gLTJZsLXdLc9W8f+ZKmzz/7S5qH1qbR8ccRXqWuyE+P
23NDekwMw9gXmnU2VOO3aOMpdOk/Rfj/qOtsqH9Ksw6DMH1Zqvgee9O9qG6E
+n0FhlYSPuOHDx8WPbVtlSNJ+8/k3XP27FnMnj0bXbt2xahRUUhJScHHH39s
0q9S/bNr165FuXKhYg67avvzuXqfVI8/bUmK0NyKlyoDX/9Q9BwyG5v23hU9
x13Nz8cQrEsyjHloD6NRq15iLj171UGXzK12RViXZOwRTV/0DSl3MGraOtSo
1ybbF72s8EVvYRNf9GWbz+vUYOqiMKDdGNB1lHiU9YWHhyeio6OFJmmublvz
IN/JwoUL5+r1X331VYteg/bRT506hcaNG4ve4PSstzSvkfRG0otbivymQLEW
qN+sm1gjUK8bznXSJq+6JHmq1G3SWXg8Wnr9GcrhM5bXp+2RaPr6p3zJgsh/
Fbqknr+k/vUvv++N+fPPuqRl0F5U/6hFYl+836gF4pkvOyaGYewTQ3U2vYfN
U/ntlCwt6mxIC2vYohcmzt8h+qzYQ+3Gog2nhC8Q9TQkL0naJ7bVQXvfr7/+
OgYOHIhixYrpjUnkIXlA+ZqUP2nsIH30119/FTU7AQGBaNq2Lzbtv2vx+yPf
z7mrD4s9/lLKuaGXco7Yue9kxCffxuGrD13Wz8cQrEsyjHnouT19aQqCw6qI
PBjq2Sk7Jib/YV2SsXcM+aKTHqbpi061In1GzBd5Xdb6olOvaHO5icbqZ3Xz
umh/eOzYsfjkk0+s0iTpII+h3L4+1WhbetDcNDk5GVWrVhXarrl9cdrfJm24
fc+xokca5a7WatAe89ceQ+q5+2KNIPsasUfyqkuuT3lF5IBYc/09ZexzHd3R
oFZp4vovOF2yhcG+N7rvWb4uaf78sy5pIXcysenAG2jQvBsCQipgXmyaS/VA
YBgmlyifHcdFnc3D7DqbQWOXoVK1RkKfVNfZUC521Iz12HLobZvV2VjDhr2v
omGLHggODsGWLVvwxx9/WLucMnrQPPPFF19E69atTY7/DRs2wqVLl0zmZ9L/
Ue+dGTNmoKynF3oMniE0NFPvjfIHFq7PQL2mXYT/J83LqYfl2l0vKefiv9qF
JmxvsC7JMJax//KPon8q+YQNmxIrnvWyY2LyF9YlGUfCoC96u/7w8g3S90Xf
9JzQMs39zladhmrnZBnqH6LVS0Qz1yynvwjlcXbr1g23bt3KlV/QtWvXcv36
M2fOsuq1yG9y9erVYl+8TbdRwoNc97yQNrDp4JvoOmCq8HQijyDSjajnNuUp
0Pye9QPj5FWXnLJoDzy8Ayy+/jT/1dcdtXMO6fNsz0ad323omluTWID+kgo3
s9e/7DpuS84/+0taDq1dpynvE8rhbtZ+kKjfkR0TwzCORXadzQVVnc2IafGo
Xq+1mBfS/EVdZzNEOTZvSHk5T3U2lpJ6/nsxh/Io64kFCxbghx9+sHpuaOwg
HfGtt95Cr1694CZ8mY2P/7TfR6//yy+/mP2dH3zwgci99PDyw9jZmw2eJ/LK
pFojqrOkXPfSHt7CW532uQ9eYX9xU7AuyTCWQfN8mu9T/5vwynWV6/qz0mNi
8hfWJRlHRe2LTnMg8kWfu+aI2Kc16ItOuX3nDfuiD5mwwriGo5cXleXZp5N/
Rq9XrVp1pKWlmfTxMXWcP38+16/fuXNnq1/vm2++wbhx45TzZR+MmLJW1EWp
z8n2tA9EbVRASCXx3igflfS1Z099Lfrosh5pnrzqktSrmOb7lvz9DWLGm9Q4
+tef6HtTAHVYkXU0dEkT17/8vjfmz79fMOuS1rDvwv/Qpd8UsS9OekJuvG8Z
hmEIrTqbA29i/NxtqNe0a06dTVlVnQ3Vy9D4pjn/sRWkzY2bkwAvnyAMGTIU
7733nk17bn///feYMGECihQpYtH4379/f7zzzjtmfy/tq1+8eBHNmjcXfbQX
bzyT/Z6O3/obq3deFV6eHl7+KFXaU2iTSxKeE/3R2V/cPKxLMozlUE3emJmb
4KNcT3XoPV7MwWXHxOQfrEsyzoDwRb+u4Yu+4RQ695uM4FCVL3qpLF/0Fh0G
Y4aOL3rS2Xt4+uniRvaZ9XPQFE/p6zfkC7lq1So8fPgw1/fLiYwTuX79WrVq
Wf16VP/z0ksvoW3bdgiNqIGF609i5/FPMHDMEgSXjxRz9/BKtUV/HMoRO/bS
I9YjrSCvuuSM5XtFDZolf3+zGqNe7qHh32Xs+pNbx63//mXqktRD2pLzz3Xc
1kF/z1U7roieCxUi64tcHNkxMQzj+FCu/9HrGnU2S5KFXxmNr+o6G5rrdBs4
DUsTzon+fbZ4XXqeVa/bCg0aNMDp06dt1nebDvIKj4+Ph6+vr8Xjf7euXS32
Iie/n82bN6NcaKioqdly5F3EJd0UH3v7BqF4KQ/UadIJC9adwL6LPwi9Uvbf
2VFgXZJhrGPPyS/RuutIeHj7Y0L0DuG/LzsmJn9gXZJxNrR80Z/7Bsu3XkKv
YXP1fNEbtOyJSdE7kZj+sfCsNJkzZsDzTpfJU6bkaS/8yJEjuX79ypUr5+o1
Kbdz27ZtCAsrL3RbdX5kSHg1jJoWLzzjaT7PfdCsJ6+6JGnE9HcQ9dYWXH/Z
+p3CDU8/XRRFixVH0aLFVf8WK4FiWTwtvlZSfE39PcXUH2d/Xf19qo9JByyI
/qY5ddymr3/Zddwm14BPqWrjWZe0Htpboh5nlF/Uue8k7D71pfSYGIZxHjTr
bHYe/xRzVh8W612/gPJadTbteoxBdFy60Tobc1D/LvJF8/b2FfqhLT0laZ55
7tw50b/Q2Piju89IH1O9N/XHsfT47rvvRE2Nu4c3gkIrwcc/VMyhq9drI85b
yvnvVP7id+yr97m9w7okw1gHrT8od6ZC1fqitxb518qOickfWJdknBpNX/Rz
94WeMWjsUh1f9CDUadRB1KWUUM659PPS9GtjDP1f8eLFce/evVzfL6mpqUby
4sy/flhYWK5fl+q5o6KiULhIEaFNUo/zbUfeEzVQNIeX/jd0UPKqSxKkp5cu
42XR9Uf/V7hwEVSu0QQbU18Vay+69skHlP6l9UM29Ln6a8b+T+P/C0oDrFqr
Odyy6rhNXf+y8yWNxaaZfxrA/pK5gnRf8vz19AnA5IW7uS6QYZh8QavO5uSX
Yt1L+yFB5SqjWPGsOpuQCmjecZCoXyAfG0v3aGevPCj0TfJppNppW9Zvk0cl
9VcsVKiQ0fHH0P726NGj8dlnn1n8OlRTo9Y/3ZSvVblGY0xfmipqjNjPJ/ew
Lskw1pN27XdRz0f+Vn1GRGPvhR+kx8TYHtYlGVdC2xf9ZYycGifqbNS+6OQ9
RLXftDdsViMUeWzadaaUM5nbY9euXXqvYenrBwcH5/p1ae557NgxUQtet2kX
xD97s0By45wdW+iS1Fue5q+koRvssa1Q5RKS5z19D43VKee+c9j1gm4dt7Hr
X6YuSV62xu5/Td2YNH7Z59MRoZpLylMij/PajTuK55HsmBiGcW606mzOfIPl
Wy6i19A5CKtQM6fOJiBMeClOjEkU9QwZRrxNkk7fQ9vuUQgNDUNKSgqePHmS
6/mZofkazRVpL9rU+KOaGzyV3d+ONEzyGnr06JFVr/fnn39i4cKFKFPGHf1G
LcCByz857PzCXmBdkmFywZ1MJBx6Gw1a9hB9JeesPsS1fE4I65KMq6Lvi75V
6HJqX/RSHt7w9A5AocJFcnQIA/qgZm/eEiVKmO13aOzYsmVL9hzS8H638df3
9w/I07364MEDTJkyBV4+/iJHiXXJvGMLXZKgvMdxszeLOrMiTxcVea2Uu0DX
ZeEiT4v666ZtB2Dj3tcc3uOJvAUV2b19jF//cuu4PzN6/2t+3Z/73uQaym+n
NTD1wOkftVDURMqOiWEYF0G3zibxmsjTqRjZMKfOxpfqbDpi9MxnsPnwu1p+
ZyJXMrQKRo0ahU8//TRPczPd491330XPnj3Njj+6VKxYUew/5+a4du0aWrVq
hVoN2yNuzw35fx8Hh3VJhskdlFtE/sD0fG2mXPds3v+m9JgY28K6JMNo+6Jv
TXsf0xcnoWmbvsIXnfz3FG76PYKNsXv37lzdL6RLamowWjliZnork/d5Xg6q
MaJe4jVq1BD7/JQLIPtv4ujYSpdUQ35YpMdRn27q6TRiSiyWPHMWSWe+KZCe
NAVBpHKertYlTV3/MnXJxBOfmbwX1XFzvmQeuJOJTfvvon6zrggoVwnzYtM4
R4dhGCmo6mx+x74L/8P65NvKsXctqtdpKTxWqM7Gw8sP1eq2wtCJq7Bi2yW0
7zkGwSEhSEpKsmmvG8q7XLNmDTzLljU7/mh9zU2BQYMGCU0zN8dff/2FmJgY
eCrf57g5W9hbI4+wLskwuYf2qbsOmIbSHj7iWXxE+WyWHRNjO1iXZBhttH3R
PxH+3nWbdNbvPaJRI6OpnXTr3j1X94t2vqQFeqTG63t6eub5fv36668xfPhw
0WtlwboM6X8HR8fWuqQrUC27743p63/t7uvy67iN3P/qvBXOl8wbpAVMXbhH
9OIif7eth9+RHhPDMK4N1dmkUZ3N5Z+w6cAbQqej+SF5nglPSncv0Suud+/e
uHv3bp7nZZrHrVu30K5dO4vGH82xs1ixYli/fr3osZ3b4+TJk6hbtx7adBmB
ncc+kv53cGRYl2SY3ENz/zWJL6B6vdYIr1IXSzY9Jz0mxnawLskwxtH0Rade
DKbmfuo5oru7e672yBMSEnL2u7V+ryGdUvv1vb2983y/km/Rhg0b4O8fiGGT
Vov8Udnn35FhXdJ6qO+NyJc0c/3H7pLnL6mq4zZ+/+fUcXO+ZF4hX/POfSfD
3cMXo6avE97AsmNiGIYh1HU2B7LqbKYpx3oaw55+uqjwcqQ8Q1sd//77L5Yt
W4YyZcpYNP7kjJ0KNG3aFJcvX87T61N/xBEjRiA0ogYWbjgl/dw7MqxLMkze
IC/g0TM2KtdYIejYe4Lolyg7JsY2sC7JMJax7egHWh4+2vUy2lqKNT0P6aD6
HMM1OLqvZ/j1vby8bHLPXrhwQfRepDnT9mMfSj/njgzrktajquN2M3v920O+
pKn7n3VJ20B/41Xbnxe+o+TttmzzeekxMQzD6EJ1NuSp0qZbFCpVqoSjR4/a
tAf37du30a5de4vmn7rMmz8PP/30U55en/atY2Nj4ePjhzEzNxrt+cOYh3VJ
hsk7u09+Ie4jTy9/TIzZKbRK2TExeYd1SYaxHKopNFZjqtk7mPQ9a47o6Ggj
e92m67jVH3vaSJf8/PPPMXjwYFSu0UT4JMk+344M65LWo9mP29T1L9VfUt33
xsT9z7qk7aB89RHT4uDpEyh8Vfec/FJ6TAzDMLpQ7zmq6e7WrRteffVVm8zJ
6KD6m7i4OFGLY8n8U3f8bNa0KS4q56R59bqkvjk1a9ZE1wFTkXz2W+nn21Fh
XZJh8g71ZyXPsYgq9VGrQTuRryA7JibvsC7JMJZTr2kXo1pJ9jxQoUBqaqrF
98lbb72FQoUKGfmdlvtN2uL4559/MGfOHPj6h2Lm8v3Sz7cjw7qk9ajquN3M
Xv9rd8ur4zbW90bz/mdd0vbnvGXHIaIPGXlOct8FhmHsjQXrTiC8Um1MmTIF
3377rU3mZHR8/PHH6Nevn8n5n+74o/6aagxVoFnzZrhy5Uqecjjv3LmDTp06
oUHLnti473Xp59tRYV2SYWwD9SMbMHqx8PftOyJG9CaTHROTN1iXZBjLady6
t95etEKhn9uVmJho8X3Sq1cv/ZocXR1SYbyGW/36tjrIH93PLwBjZyXg1MuZ
0s+5o8K6pPVEGut7o3P9r5XoL0kambn7X6VLct8bW0E+bvPXHlOu+eugbuNO
iH/2tvSYGIZhNJkckwgf5Zi/evXqPPWY0T3279+PiIgIk/M/ozU1WdD3zJ07
N0/13Pfu3RO9EStXb4wVW7meJrewLskwNuJOJhIOvomGLXqIXADqU3vylf/k
x8XkGtYlGcZyKJ9LPd/LmQtq53TR13fv3m3RPXL//n0ULlw4e36pPafU9zHX
nG/qvr6tjqSkJJQvXx6Dxy/H0et/Sj/njgrrktaj8pdUmL3+ZeZLir43Zu5/
ylFhXdK2HLn6EP1GxcDdwwcDRi/C/ss/SY+JYRhGzYgpa+HjG4Bt27bZzFvy
8ePHmDVrVvY80ZL5p7EeOO3at8fNmzdzHcuff/6JqVOnIji0CqLjjks/344K
65IMYztO3PoXUxcnIahcZTRrNxAJB9+SHhOTe1iXZJgcqD6Q5gzrU14RPQfJ
S5dyxBu37ouAoAi9XtnGSDuaZtE9cuDAARO/x9B80/jr2+o4cuQIIiMj0WfE
fBy8/LP0v4mjwrqk9Qhd0s3N7PUvXZc0c/9TjKxL2pg7maJ2sF6zrmL+OT/2
KOdzMwxjNwwcuxSBgSFib9dWx2uvvYbOXTqbnf/p5Uka+P7w8HAxv8vtQVrr
vHnzhM/PrJUHpJ9vR4V1SYaxLVS/3aX/VJT28MHIqXFIu/aH9JiY3MG6JOOK
kKZBfXWj49IxeNxysccSUj4ShQsX0Z7XZc/pTOQuZusmOd/zzjvvWHSPLFq8
SE97ye3r2+pIT08X3ua9hs7B/os/Sv9bOSqsS1pPdj9uM9e/1L43Rv0ltWNk
f0nbQ/viUxbsQkBIBeE3ufXwu9JjYhiGIfpHLURwSAj27t1rs/lYcnIyKlSo
aNX805g+6e7uYXEtj7Fj4cKF8PUPwYxle6Wfb0eFdUmGsS20Hli98yqq122F
ClXqYWnCOekxMbmDdUnG2Tl+8x+R1z19aQq6D5qBarVboGTJMpbP7dT6SJbH
na52qDsH9PP1RWZmpkX3yOjRo232+rY6qOdijRo10Hv4PBzgWslcw7qk9UTW
amGwflv3+pfb9+ZTk/e/+j7mfMn8IfXCfXTqMwnuHr6ImrEeR19krwmGYeRD
tTXBwSFISUmxyVzs33//FZ6QRYoUtnj+aXAemfV/ZUqXxs6dO/MUU0xMjNAl
Z67gvoi5hXVJhrE96dcfI2r6enj7BinniBOx++QX0mNirId1ScaZoHyauD03
MG7eVrTrOUb0SShS5Gm9vhma/TS0PMQN7TMbmONpfV3ne2keaemh2/MmL69v
qyMnX3Iu50vmAdYlrYf2DNzc3Mxe/7LruE3d/+qv+YdwvmR+QH/3ldsuix5J
lao3wvItF6XHxDAM0z9qEYJDyiE1NdUmc7HsPtxWzD+zv6apY2Z9HBAQkOdc
zgULFqh0yeX7pJ9vR4V1SYbJH0iLpHvL0zsAkxYkirwk2TEx1sG6JONM0DOo
cOGnDdazaO4hZ8/hsuduujla2nM+Y54+unPB4sWLi56Flh7dunez2es/efLE
JvetOl+S67jzBuuS1pPT98b09S+3jvtTo/e/5r3Lddz5B+2Lk4eQl08guvSf
gmdPfSU9JoZhXBuhSwaH2EyXPPvcWTRo0MDi+afW3NHA/LdWrVo4ffp0nmJi
XTLvsC7JMPlDxu1MxMSfQESVeqjVsD3i9lyXHhNjHaxLMs5GeKXaBudwOXM0
hVaOounvNbRPnbMfrdD5vcuWLbPqHhkwYIDNXp9qfmxxHDx4EFWqVEG/UQtw
6Oqv0v+ejgrrktaj1Y/bxPUvvY7byP2vGTPrkvn/d2jRYTC8fIIwdfGzIlde
dkwMw7guNOb7BQTl2cNRfWzeshmBgYEWzz9N7WETHTt2xK1bt3IdD+19z5kz
B36B5TFn9WHp59tRYV2SYfKPI9d+F3tE7mV9xTp236X/SY+JsRzWJRlno10P
tWejuoZFkb23rDA0Z9OqgzG2J21kj1qDZs2a4fHjx1bdI9OmTbPZ69vqSExM
REhICIZPXsM58HmAdUnrodpchZt+H27dz9fuvi45X9J4Hyp1vAFcx52vZNx+
gnmxR8U+VN0mnbEu6WXpMTEM47qMnrERXj4B2LRpk+hdnZeD9plnz56NwoUK
WTT/0x8v9ee/Y8eOxeeff57rmH755RdMmDAB5SKqY+H6k9LPt6PCuiTD5CN3
MrHpwBto0Lw7AoIrYu6aI9LWC4z1sC7JOBvj5241qWs8pTFvM/q5nn5pei96
QP/+ePjwodX3SEJCgk1eX2FDXXLVqlXw9vXHxPk7pP8tHRnWJa2H5ukKDX9J
Y9e/zDruncc/Mbt3wLpkwXD4hd/Qd2Q03Mv6YOCYxThw6YH0mBiGcU2otyLl
yS9evDhX80HN45NPPkH/Af0tnv+Z0ynd3AohNjYWf//9d55iohqfanVaYU3i
Nenn21FhXZJh8heqn5mmXHsFlquEZu0HYcuht6XHxFgG65KMsxG765rBeZrB
/jJmUWT/q10zo/o3IiICGRkZub5HXnrppTy9vub32eKgufSUKVPEs3z+2qPS
/5aODOuS1iPyJbX6cRu+/u2ijtuEbkqxch13/kPXwMa9r6Fe0y4IDq2C6LXH
cOrlTOlxMQzjeizbfAGVqzdGVFQUPv300zzNxS5evIgmTZpYPP/THX9055IR
4eFIS0vLU0wvvvgiWrVqJfwzth15T/r5dlRYl2SY/Gffhf+hS78pcPfwwYhp
8Ui79of0mBjzsC7JOBuUQ6PunWGoblu/x4yB71Fofr/2/I/2nYs8XRQjRoyw
um5b96CfL1WqlFWvn/2vhp8Q+QbZ4nj77bfRo0cP1GrQTvQ1l/23dGRYl7Qe
tS5p7vqP3SVZl9S5/ww9QzhfsmCgffHJMYlCB27VaSivlxmGkcK2ox+gSZu+
aNmyJa5du5anudiOHTuEn44l8z9je9qa42jPnj1x9+7dPMWUkpIi9uIpR/3g
lV+kn29HhXVJhsl/aI2wascVVKvTEhUi62PZ5vPSY2LMw7ok44z4B0doaBom
+two9HXKosVKILRCTdRp3BFtuo1C3xHRmBS9U+yF7zz2EaYvTUVwWBXMmDED
33//fZ7vkyFDhhiNzZSHueb801b9H2k/vXr16ujcbzKSznwj/e/oyLAuaT2R
dTTyJU1c/9LzJQ2uFbXj5XzJgiP13H107D1R+JxHzdyAoy/+KT0mhmFci2M3
HqHX0DkICAxCcnJyrudh5E1JNdde3l4oXLgw3MjbxGxNjf54mTP/VYja8t9+
+y3XMf3zzz+IiYmBt28AJi/czX5teYB1SYYpGNKvP0bU9HXK51YQOvedhN2n
vpQeE2Ma1iUZZ6RpW/N9rgu5FUJQaCVRkzJyahwWbTwtNIeTt/8z+bsTDrwp
/HSpnoXqWvJ6XL9+3UL90XA+JfHNN9/kOQ6ady5atEg5F/bDhLlbkXHrifS/
oyPDuqT1VK2l04/bCLJ1Sb08bAP5naxLFhwnX/kPK7ZeEus8qqOkj2XHxDCM
i3EnE9OWJIlceepb/b///S/X8zHSJn/44Qfs27cPDRs2zMmPNDD/MzT+aBIU
FCR+T14OqqWhnEuqaVi9k7W0vMC6JMMUHLsyPhe1NJ4+qj2VE9zP1a5hXZJx
RoZNWqO1l1ykyNOIqFof7XuOxYR527D22Rs4cu33XP1u2hPvO3IBvH18sXXr
Vjx58iTP90rr1q2z5peq3E6Foblm9ufatTxVqlSxwd0KvPHGG+jevbtq3rnj
ivS/oaPDuqT10LXn5qYwe/3L7HuTky+ZU0unWidq1tUpuI67gEm//ggjpqyF
p3cAug6YKtZ+smNiGMa1UO1bd0Pz5s1x9epVm8zNdu7YAS8vL4PzP2Pjj+b3
ks/P7du38xRDUlISypcvj+6DZiD1wn3p59mRYV2SYQqOjNtPEB2XjvDKdVG7
UUfEP8seZfYM65KMM7I++TZ6DJmFGctSseXgOzhu4/2RBesyEKF8xg0aNAjv
vvtunu+VO3fuKOeWbto1OVr1OAq9vXD1x7aq4SaNNTAwCL2HzcP+iz9J/xs6
OqxLWo/wlzRQs6Z7/cvMl1T34zbXA5V1STl/G+q9SDU7UxcnCe9J2TExDOM6
pN/4GwPHLIGXlx/WrVuHR48e5Xlu9ssvv6Bt27ZatQSW9OBWaZYKzJ41S+Re
5va4f/8+xo4dC7+gcMxcsd9sTRFjGtYlGaZgOXLtIfqPWii8fujf/Rd/lB4T
YxjWJRnGeqjPV8feExAYGCj2kTMzM/N8v5CfkEJ3Xmmmvpt+5u+//87za3/4
4YcYOHAgQiOqIyb+OHsH2QDWJa0nUjlPJ13S3PVvH/mSBtaGGutGruMueGhf
fF5sGsIq1hI9uml/SnZMDMO4Fiu3XULVWs3QqVOnPOcpqg/yhrx06RJGjRqF
0NBQFCtWDG66nidan6t6P5YuUxo7d+4UdeG5PY4cOYLIyEi07DwMO45+IP38
OjqsSzJMAXMnE5v230W95t0QUK6SmCfyOtc+YV2SYayHnmdz1xxBWIWaGDBg
gPDescVRtGhRAzqMtq+52st8woQJNnlN0lQ3b94sNNZuA6ch5ex30s+vM8C6
pPUIXVLPX1L/+pftL6mqodPXTTV1ygDWJaVw+IXf0HfEfLh7+Ii8pQPPP5Ae
E8MwrkPatd9Fv0RPLx+sXbsWf/zxh03mapqHul+3sfFHTYP69XHhwoVcvw55
l48ZMwa+/iFiLsM56HmHdUmGKXjo2TV14R4EhKj6Smw+/I70mBh9WJdkmNyx
//JP6Np/qvCZfOaZZ2xSr0P9sM3W5WT9m5f9b83jlVdeQZcuXRBRpS4WbjjF
NTo2gnVJ6xF13Ab63uhe//J1STN5zQrOl5QFXRfrU19F3SadERxWVfgKnXo5
U3pcDMO4CHcysSbxGqrXa43GjRuLPEdbHlQjM2vWLNGr29j4o/542LBhoh4m
NwfNMXft2iXyM9t2jxJjn/Rz6wSwLskwcqBax879Jot961HT1yHt2h/SY2K0
YV2SYXIHrX9XbL0o6nWaNGlik7nna6++ati/XMvL/CmUK1fOBnco8OuvvyI6
Ohqent4YNHYpDl75Wfp5dRZYl7QelS7pZvb6l13HrTDUg0rjX/aXlMuJm/9i
YsxO+AVHiPXf1rT3pcfEMIzrkH7zMUZOjYO3TwCmTJmCr7/+2iZzNjref/99
9O7d2+T4o/KWdMPq1atzvWeu3rMOrVAD8+OOCZ8M2efVGWBdkmHkQOuGVduf
R7U6LVExsiGWbT4vPSZGG9YlGSb3UG9u6gHr7RuI8ePH47PPPsvTPUP+5oZ6
3+TkZak8gwq5FcqzryTthVPPnIoVK6Jhix7YmPoq+23YENYlrSeyjoYuaeL6
l9/3RlMvNQzrknJJPf+98AAmn/MxMzfi6PW/pMfEMIzrQHtYLTsORUBAgKi7
fvz4cZ7mbOrjZMZJ1KlTx7T/uPL/goODcfDgwVy9xk8//SRyMst6erMfho1h
XZJh5JF+/TFGTYuHl0+gyJ3cc/JL6TExObAuyTB5Y/epL9G26yh4e/uI/osP
Hz7M033j4eFh0F9PtyfOO++8k6fXuX79Ojp06CBqHWevPGjznuWuDuuS1mO4
jlv/+rePOm79/QNNuI5bLidf+Q8rtqjy2avUaCJ6UciOiWEY14HyCxdtPI1K
1Ruifv36OHfuXJ7mbOojPj4enp5eJscfon379rh586bVv//JkyfYvn27qMtp
2rY/Eg68yXvWNoR1SYaRy66Mz8SeEWmT5Dl5gte/dgPrkgyTNzJuZ2L1zquo
Ua+1yD2k/Wma1+X2aNCggb7mYcBzj3ok5vb4/PPPERUVJfbCh0xYiYOXuX7b
1rAuaT05ddymr3+ZddyqfElD68CcGKnOm/Ml5UP57MMnr4GHt7/o6ZV0+p70
mBiGcR3oGTR65jPwDSiHfv364e7du7met9FB3jsTJ05EoUKF4ObmZnT8oX8n
T56Me/fuWf0ap06dEvNQ8hxfsC6De93YGNYlGUYutGdE3hThleugbuNOiH/2
tvSYGBWsSzJM3jl+629MX5qCkPKRwmvy4sWLub5vokaN0uv1oetnTv+3dOnS
XP1+qs+JiYkR++0deo0T+V+8F257WJe0nqq1msMtq47b1PUvu47bWGwKjTVi
YLlK0s8nA+xI/xjN2g9S3oshmLYkGRm8xmYYpgDZe+EHdB80Ax5lvYTX5Bdf
fJHr+SF5Rb5w9aqosa5ZsyZKlCwh9Ek3N4WoNVBkeZ0UK1oUCQkJVu+R3759
G127doWP8nk5fu5W7guRD7AuyTDyOXLtIfqNihE9cPpHLcL+iz9Jj4lhXZJh
bAU944ZNiRXzOfIKv3XrVq7uG6oF1/XVM6SD9OvX3+rf/fvvvyM2Nhb+/v7C
U3J98ivsZZ5PsC5pPbp13Mauf7m65Mc5+Ska/XgUOvsGAaxL2gX0fJu7+gjC
KtZC/WZdsT7lFekxMQzjOtBYtf3Yh2jZcQjKlvXEokWLcP/+/VzNDzWP//77
T3iaJycnY+jQoQgNC0XhIoVRyM0N1apVQ0ZGhlW/77333sOQIUOEfkrrdNJT
ZZ87Z4R1SYaxA+5kYtPeu2JeGFSuMubHHsWplzPlx+XisC7JMLZj78Uf0Hv4
XJT19EXnzp3x0ksvif4y1hzPPfecXn9FQ352VapUter3PnjwAKtWrUJgYKDQ
f5ZtvsCeGvkI65LWQz3y1Pkepq5/e6rj1u/NzX1v7I1DV39VPpfnobSHDwaN
Xcq+FQzDFCi0PxKffBv1mnYRtSrR0dG5qrE2dfz111+4c+cO4uLihAflBx98
YPHPvvHGGxg4cCDKlHEXvSB2ZXzOdTT5BOuSDGMfkEfF5IW7xXy9ecch2Hr4
XekxuTqsSzKM7aB5XPKZb9Br6Gx4ePkJr/PDhw+L+aKlB9X4kMahlSNmoO9i
4cKF8c8//1j0Oz/88ENMmjQJXl5eiKzVHEueOYv0G39LP1/ODOuS1hOpnKer
dUlT17896ZK6KLJ1Sc6XtBfoWtmQcgd1m3RCcFgkouOPS4+JYRjX4sTNf7F2
93Xlc6iz0P8ox/H111+3eu/algfVeZ89exatWrVCaWVMnfpMxI70j4Rvuuzz
5aywLskw9gPlhXfuOxnuZX0RNWM9jr74p/SYXBnWJRnGtlAfWMqbpJpuv6Dy
Ij9x9uzZ+OSTTyy6bzIzM1GyZEmjeqSmVvPuu++a/F3kRXTs2DG0aNECpUqV
RqOWPUUNLGuS+Q/rktZTLbvvjXE9XlXHfV1+Hbfwk1QYiFX1tYBynC9pT1Bu
+IToncpncgRadRmBbUc/kB4TwzCuBT2HNh14A606DUUZ97KoW7cukpKSRD+b
gj6++eYbLF++HOHh4fDy9kP/qIXYc/or9vbJZ1iXZBj7gdYSK7ddFnWElao1
wvItF6TH5MqwLskwtoeec2kv/I6F6zNEbSppgtTfcM+ePaLvjLmjfoP6evlX
hrSPtKNpBn+etM1XX30Vo0aNEl6S3r6B6Ddqgcj14trtgoF1SeuhvjciX1Kh
n3+oef3H7pLb9ya7ZlsrTq7jtndSzn2HDr3Gw6OsH0bP2oSj1/+SHhPDMK5F
xq0noq5m+KQ18A+OgKenJwYMGIAXX3zR4hqYvBzkM37kyBFVjmTp0qhQtT5m
rdiPg1d+Fvvqss+Ps8O6JMPYF+nXH2Pk1Dh4+QSiS/8pePbUV9JjclVYl2SY
/IPyEqkf7IDRi+EXWB7u7u5o3769mBOa2h8fOXKknmedwsDny5Yt0/o5qgd6
++23Ra/GiIgIFC9eHG5uhdC26yjsSPuQa3MKENYlrUdVx62RL2nk+reHfEnt
XjwKvdxOruO2P2jNvWzzeVSp2VSwcvtl6TExDON6iL3ra39g9c6raNKmj3Ju
WBYhISEYN26c8Ij8999/bb4mIz8hqtnu0aMHvL29UaRIERQtVgLDJq3C4asP
RR8I2efFFWBdkmHsj8QTn6JFh8FCm5ymXLeR96TsmFwR1iUZJn85efs/kTsZ
t+c62nQbBU8vP5QtWxYtW7bExo0b8dFHH4m+ipoH9eQ21INbt467f39VT27S
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
3XwcQSffGez39tzVSHKvKdAh7bVfC9aQa+6zM7jP2Prv2rfFwUiBX/LocyQ2
acD3IXdT+SUVuR0wqks+0OiY6vUfjJ2RKXTJ4Oh4HDt+B6cPn8TFYF/c8v8V
D3aMxMtN7fHBu6K2rlfMXyfQtIzOTtHx3eXU+5m2zjjZS18Ty6lbV2xh68tX
foY7s3MgYlRubOyeBzNbfIGetfLArVxuFM+XA9nM5OGLHpc7w4//wfxcaFVF
Ao9kCpAWSRAEQRCEqZAuSRCEJeEXGY/eIxajYOHiaN5hCNbuu2O2tUmXJLI8
MUk4uzUKcYOGI7FxXcjr1QJcnQT6oIOOF1E7G1s5H/vvWSsQrKdN/jPzV8V+
aiq1QsHjWY04n7XD9s++5t9XR7K7k+BnTkoPJasnd1Vuy+5Xfu+Ed21bG/gl
lf5Hrdfy+cChRuu4jxy8q9zeWV3H7WAxddz7YxJwOPIBTh2OxfmQANwM8MB9
34l4vqUr4tc6QWfGCUfEf6fvndPx5ulpdqLzUkQ8eEK/oQWuz+57PD87Ysbl
xs4+ebCgzecY6JIHjb/7AuUK50LO7Mb9e+ZkR5/cGXr+t/bKg6/zpJ+/86Mx
0HnFZuAQBEEQBEEYh3RJgiAsjTUBt1GvWTcUKGyLoVPWwj/qg1nWJV2SsCYi
Dv6Dqyv24Mnwn/ChRWMk1q/DdUplz0mBPumqrs2243rg1V93IuiU9m/yzs9e
2jpu1bZsxs7LPgMQ13cgnvcbpGCwzm1c30H89gX7XvW1ctvBylvVz27PWYXg
qHjNWmGsjpv3i3TQzMeJG8B0SXG/5JHQu9wvqdRH7fn2D8ysS+4/LcfvoSG4
vm8t7/H4dGtv/OfjjuRV+cFmnGhmMxvrR6g3r1nosVPqV7mU81VEtEDtXJSc
/D7hnBTlfixz/eQ1ZfBhSyP859cLL0Mm4enRFfg3eifuXjiG29ev4M8//7R4
XoTOzJDz/3BBDrSzYx5Jpf63c+dO3Lx5U5JjDAkJUeaRSj/JChW+k/z5IIjU
YH9HU6dORaFChdClSxdERERInhNBEIS5OX36NLp27YqvvvqKvyZeuZL+77sG
DBhAuiRBEBZPQHQiJi70Q9nvnOBQpykWrYsyy7qkSxLWSnDUB0Tv+QM3lmzB
M+albOIOecPa3N8Ilaan7gfJNMdDR55pHntjyWaNLplcV6lpPhs0kvekTO88
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
ovS39nCp3wqHI05nyOtvvvyF0aXvNGw79EzyY7Zm4voN5lqbVh9y0H7NdDCm
IalxYf7JNYY+R8X3TIt7NnCoUtNS6Y/GcVTpUo5IbFhX68lMIU+mdybVrynI
0x5XVvoh7NgL/DNlMeRuNQTanfH1E1o0xLlNEWnS1pi37++fVyCpQS0dnU69
vlonZMcid3PCP9MWI+TkO67jyt1raNZk5zhY8fMU12PnMPAGng0azj2rxs6/
/vrPBo9CRPBf3P+X0v7ZvpOauOuc/2vLfHHo8FP8PXMZP8a0PP+JzevjvM8h
7qtMy+9XaMRL3Js0T3kORZ5/db8A4e9fsuLcPRw7g3tShRr47bmrIW/orHP8
iU3cuL8zrT5OppG+7tZdcTxOOuuzcxBywny65A8Df0buz/OQLmlCsHnczBNn
qCPpzpeR2i9pLDeZQPeiOu60BZtN4+3tzc8Xq6vOkT07P38pPf9pOf9p8bTK
1PsUzFZnNeIrV66kudEZFFevXkXHjh3xzTffYPPmzbxWn4KCgsIaQkyXLF26
NOav2Em6JEEQVsuOoy/Qrsd45Pu6sOI9uGeGvP5Wr9sSxb+pgIkL9mSNHoCZ
lOf9h6h8aw6Qu6n1HrWuZy/Q+eyV/SbnrzF4vk75XcKHFo0EGpNKe+Jalqpf
Jde2HLV6l2Y9pUb119zVKWqTrB47qX4tjYbFZ4UvXIdX3XsCbo6adY2uz3Qv
NweVz7EWovZeSrG+OvTYczzvN0ixjxo6xy9cX8frp1r3wdiZ/HFcJ1WtH9dv
CA5ExRt/HhTn88z2aO715BpxCudfbP2kJm447xOa8vnbdxOJTd11zv+tud54
1bOPSqNL2/MvV/ldY3b9nqq2yzTP54pjV2rG2vMv9vyLrc+8kaHHX2uPIeCa
8hzp6acX14TwOvO0/L6f2n0BCap9aNZXELPngsk+0E+B6ZI2RWx5/zrSJdMW
+nXcss/EdSjp+0sKPXcyXY1L9bW9A/klUwr2/IWGhqJ+/fpcC8yePZvB9Zqx
5z8t51+tNcqE2qTMuIdS+HXZsmUQERFB87szIJgOuW3bNj6b+/vvv8dvv/0m
dUoUFBQUZgkxXZLVBbTp1B+bgm5Jfr1IEAQhBaz/2S8bY+Hk3Ay//PJLhrz+
Dpm8BkVLlIdbs27w9L0s+TFbK3GDhnNvX5Jbde7503gABTofu59pS8n1avG6
WaGex+qI37Vro+eTtFNqkOwx9WviQxN3ZU2yey2lj1Clg2n1L+U6l7wClf0F
RfJkmlRy/doCv51aU1J7Fh01Xjs2U5zXWrP13dWapaPOsb3q1gPBJ8W1Qlbb
rNQWnXT37+qkcz6UOGlzEh6/wG/4rP8Qo2sxzmyNQoLay6hz/h35HCLlejX5
+ZerfqZ//PIGdXFm2ymj2tqJfTeUNdRC/6je+efniR0jP4c1ledR5/w6avJ6
/WN3hEa8MnpMzDf6os9ARc7VDc+/YA1+TOz3T71vvd+/679s1XpNY+V42auv
8ndIcPyPRk/BwRNv0vT7zvoWJDWsq3P8r7r3QOjR52b9u2O6ZBHbYrw2lHTJ
tIW7u7vu7BIdv5tlzOPW9pfUrRnW9+ZRHbfxYPW8CxYs4D4RtT9W6ZEUn2+e
kvfR2Pk3He36MkVOrL8l/Y1mTLAenj/99BMKFSqE2bNnkzeVgoLCKkJMl2T/
AwsWKoqhk1bD72TaPn8nCILIarCZNMOmrMK2Hbsz5PV3U8hDNGs/GPm+tkGf
UUux+7j5aigJLdG7fsfvm47h3IZj+HvGrypPo0B/6tYd59cfVnAEvys4sf+W
Ts3sxVX7lFqgSlNSaluKx3X9Ab9ticRhVour2pbNNYnxPYsHE2Zr6nrlKi8l
6wH5bMhoo7qa0i9ZU6D92Wv1K8V6TFd980M3XF3my3U+1s/wiocf99yxPpD6
PRrZuqy2WcwzeXF1kCK/OoI6XzueI8v54dhpuOh9AGd2xOCSYjtWux3frpVK
K3QU+DW1+mTcgCFG67jDwx8hvn0rgeZnr9IjnfC6e0/F8ezic2IiDtzhz9Ff
sz0Vz0lPfs41td2uSi9jQvNGfOaPmP+YHWsi0z4Fxy88/0xjffPjD7ixdDs/
f6x35RXPAK75JTWso1rLTuf8n9p7WXzujGJ9rv/xcyjQQBXPU0LTBvwYWN0/
Oyes7yXrbXlvymIkNnbVHL9Gl1Wcc9ZvUq1Xs76diY3ddJ5/5gNl5zG133Ve
w604RrW+rD7+m0s2cR3VnH93pEuaHqyOW5ZNZljHq9cL0DL7S+r67kiXFI+X
L19i5MiRKFSosECTFNMIjT//aTn/n4k9XuOXVHssjWmZMri5ueLcuXNSn64s
Gexv99SpU2jSpAmqVauGffv2SZ0SBQUFRYaHmC5ZsWJFlCtXDnY1GmL+muOS
XzMSBEFIxZ6jD3D11uMMef0NPJ2Enz0OoZKDKypUrYNZHmGSH6+1w/oGKr2M
yt5/yXXtcGuhT4r1zqy/of6cmUdjZ6Y6i+TKyj3cK6fVCu2R0Ly+0b6FTJdM
rldHdy2VLsf8c9dW7ObzssUey2bWcE3T1VHr21M89ubiTQbzaJg+9a7991yb
ZcevrsV+16k9ny0upvmxeuVnQ8Zw/5/6eOQu2v6JRvtLKvb1iOmmvM5Z1cOR
PdbdiWvExvodHoh8h8cjxnHNTr9/JtP8gkVqmrku2dRd5/g1XklF3jeWbuO6
sdh6So+hs1InFKzFfjfEfKCsZjyhRX1dP6tivXft2/Ln0ZgnlvtGeY219veP
Pe7q8t2a3I6G3uNzf4TPP+MPVseeSi030z+Zb1d4/Ox3R/m8mm8eN4N0SdOD
1XHraFVG9CiLqOMWqREW+vZIlzSM+Ph4/rtfoEABCOdjy4zphCnpkamcf4O5
NgY/S3l9VlvO6sypljtjgs1d9/Dw4J7ZPn364MaNG1KnREFBQZGhIaZLsn67
nTr/gK8L2KBdjwnYHPpQ8mtFgiAIKTh2UY5/n8sz5PWX7d8v8h16DluAAoVs
0bLzcKwL+kfyY7ZmLvgcUvr+BL0Fby1IWZdkWpNy3jbTkOyQ0LRemmtimR9Q
u55SzzsW8rfoDBPul1Tpfrp9Ch25vzHF3oAxcjwbNErHJ6fUT6cjKEpXB72x
ZLPKl6mdaxPfujmOht5NsQ8q00QfjpuuqjF21OTJzsvz/kNFdUne85F7BLXH
z/SyPxeuF9UWhbD9PR45QVDTLDj/x14YbM91ycbuuroum9ejOH+XvQJS1vQU
zz/TQZNUs4XU5//R6Kmi2uk/035R9gJ1U3tGFevUq4MoY/5KAWy2TSLXQLXn
n83xDhHUabM53Ema41aeN76NoBel6L7nrEZCI2ed42dzhthsHnP/raWkS/bu
3Rs3b97MkNfdzBx87g2bxy3T05P0tCfp/ZKG2pe+pka6pGF4enryeSfsusxg
PrYR/VDcN5ny+Wf7/zx3buTLlw9fKfjf//6nnO0tkxmZnSO+PpsP/vbtW6lP
W5aNe/fuod//2bsK8CiuLtpFiv/BQoK7Q0iCBpLg7ileKG5FihaKuxWX4h40
uAUJUhxKgUJLC5QCxUqxQnFI77/nzcrs7uxmk2wyu5t7vu98SSDZmXk78/bN
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
eUY+Bo0XerW+jh3n73vxvutr4n3ojzFzHJ7DE13ao0tCOzl79izVrl2bChUq
RGFhYarpbc6A4KAgSpxI5pdU8EqqXccNvcpkv5T2FXXcfqxLAjOmT6essswb
Ew1X1qcTNdyOqJvGdbV582b6rMln5O2dmZJ9mkx3H2h7+/r3MNmnn9LixYvp
33//jf3BM6IN1PDv3LlTZINVrFiRDh8+rPYuMRgMhkMQHV1yy4kP9NWoVZQ9
T1EqW7EhTV15TtU1LZPJZMY11dIlt5z8QP3HraNc+UtQqQp1aMqy06qPRUKg
1F9S37dQ0idvTFismHsDre59rYoyv5+kQcG7F37oqV3be9jra0M/R72Hz5ou
+b1J7o2ked39enT0dMkq5aXjC5C8kK+bNDbRyx5+NVjn9TMe/5WZYdGq9z21
9ozI2Y401LT70dOOln7Jn+dupUhDb0Tp916HNKLdMel5qNfubOh4el1Sfvz3
o1HHjfF7Z8i9kV4DvtDwI6a6JHo5mh//rREz7N4OeHbNGbo6ZSVdm7yUrk9e
RtcmLaX9+x4onoffb/+d3tWuaqKXvqlbjfYdeCTG4XnrL7TvYylDbtBH7f4g
B2e7HVlOcUl7dEkAfSXnz59P+fLlo1atWolsjoQK5N5oEmksND9zb6Kz1HEr
6ZP6n/38uI4bGDt2rPC+yevcDeNm8MBqaNCgQXT//v1ovTZqvm/f/pPCw/fS
6NGjhefS29ubUqVKJTJ0DPd/mk+i3L7+/5o1b0a//vprgn4+oDZevXpFI0eO
pEyZMlG/fv2ifV4wGAyGMyI6uiQYuv8JNWjZhzzSelKrLqNpzcFnqq5rmUwm
My6pli4JYn5t3HogpdHOt807Dhfzr9rj4e4UuqTQ5Yw6I/pLKulcxzf9TB91
2d2S19FH1G7vj3hs9/aef97amEWi89bZ8kuijluuP6EO3F7NEPXakfDVGfQy
Hwu/5I0x3+lqq0vItjHGIt/ZFm+NnCnlUevqhiNF7o1lHvfJjT/RB/n+YAyD
S9G+iEeixt3e7cGTenXqaroK/W7yckH0TjT3eEKX/Kj3S+qOP1r9JVHHXcPU
L4ncG3O/JDJuPlavYHL8qC03/z1b/KddJ0MtOPpr4rw6vPuWVd/k0w5djeei
7th+XHFEjLEhh1tX64068/CD9unmcUl7dUngwYMH1LVrV/L09KSpU6eK+/KE
CIs6brkeKfO2qV7HrbH02n2iMdUnuY5bwqhRo4QuKR8npTpq6FAPHz60+Hto
j48ePRI13vDRzZ07V/Q+aNioIRXIn5/SpUtHqVOlouQpUlDSJEkU+wB8YvY+
Wavjhmc5IiKCM6icAHg+g5yiXLlyiV4AcZGFxGAwGPGJ6OqSW0/9R5MWHyff
MtUpZ97i9M2UraqvbZlMJjOuqKYuifl2yvIz5B9Qi7LlKkJfT9qk+ni4O6X+
kn4m+g76Syr51PC7/6E3ZIUSxhyZkIZ21zxDZ4oUedTGzBJoWVb7S8rzuHUa
5r2v7c+9gS75sZK5P7Gx9t+NuiS0LIMnU7dPkZXLUUT4Hbuyb8IP/0NvGtaT
atNlr/Gkk6UuKfKta1ezOP6rU1bYr4OeiaSHvQeJHCF5T8yrU0OFv1H+u1Lu
TZDJ8cMvaW9/yR0ij7uqyfi/CbHMvUEWzQcT/VLSQU+tP0fb7PC2Ht55Q2TX
yP/2ees2Ymyt/c2VmRuNvTMDJD/n3UHj6NaI6SKHW57B85uoKY+bWvnoMDq6
JO659+/fL3JfUL+4d+/euJmUnRxSHrdlDrf5z0ePHlPZL2ld+9Lvry/7JQVG
jR6t80tayb/W/dvIESOELvn+/Xvas2cPdevWjcqVK0eZvTNT2rRpxXWUOnVq
SpkyJSVPnoKS6DRI83s84/mi0x81xqwdW9uHN2/t2rUJ9pmAswF69MqVK6lI
kSJCn/zxxx/V3iUGg8GIFaKrS4Kbjr+jzv1na9eTualq3XY0L+w31de3TCaT
GRdUU5cENx9/T92+/o68sualSrVa09z1v6g+Ju5MyS9pWld9A7rkSUtd8vyS
CClbW1/zHOBDL5s0tk8nPPWRHqAPYZAuJyfA6Bm0lXujz4mJDNJ5GUXujX0a
ntAloVHp+lhK+Semfsn9EY8k7U54/fwM+3RzxAyTfBzlY4qkW8O+pY9mGiEJ
v6Rlf0nwL9SxQ9uVHf+berVo7yH7ajFOrTtH76uVN4w/xiUyqBQd2n3bQksW
umSNYJPjR+5NdPySUva1cfxRx73HTC/E670QmdyyXHPte3xvwCjt2iqKGvVT
uiykyuVMxv/G6Nm0+6h1LTFi/0N6W7e6Yb+kWu4a9KZ+HamGu4KUHx5ZJYAO
77bd8zS+GB1dEnjz5g1NmjSJsmTJQl9++SXdvn07biZmJ0ZgYCBpZP0lP5Fp
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
pEtCh+w/di3lyuejnW/r0rfLzqg+Pu7Iq9+uMtQkW+pGfnRj3ALaLquxhi/u
Y5XysswRqf5ZqtPWZZ8E+hi0S/grXzesT+e0fwffpZSR4ktybROEhmiiS27V
+SV1mp3wSw4cHb08bp1GFqnblsjjVqqv1hG5Mi+aNhW9EUl/PLLt/1feOD6R
wX6iJvtg+B3RM1J+/I+/7GNzOyDqx183qifLQ1cef8lbKtu+9vcf9BlKew89
NdTYK/H7bTq/pOz47w8YFa3cG6mO27j9V40bKPaXNFC7PzhfRN6Qoa7auH1L
PVvnR60WRNcnLol2bjZq2D/UqmRx/v2nfW+Oa8fX3qz4+GBMdUkAHq5FixYJ
XbJFixZ06dKluJmknQz6PG6NktakMepY6tdxm9YSSzqZvK5Yw7qkDtAl4f21
6XOEjluiBKVPn0HKzY7i/bdn/M230aNnT/HevXjxQvRLYLgWUGuPbCR4JgcM
GEAPHjxQe5cYDAYjWoitLgmuOfCUGrbqT2nSemrXmSMpNOKp6utdJpPJdASd
SZcE1xx8Ro1aDxDzbfNOIyh0f9R955jRpMhwWSH5zlBbHFiKPoqcZ/RALEm/
T1hokfV8ePctetK5h9CCInW9/ECpP6NUqw09En67myNniZpb/d8e33yF3tar
Jb2+6Eco/e3HKoG087ixRvvQrpv0Af0hg/3po9Cc/OnuoHHRquMWGTMV/IXO
iNd51SQkypxt+AmvTloi/IjwNMq3D34MLkVPO3Sjn+dtE55CHNsH0XfTmGNz
b+DoqPO8tdx78AndHj5V6LxSXbef2N9InT4pjaOvdvuSn/Df5s3pp+920E47
tFn0/HxXs7L4O/3xIyM7Wn7J2jVMjh/jZ62OW05ork/bd9H5XeX6rq+hfl2M
ZeUy4j2NCL8To8xs7CP2SZ/dpB//Z+06U7gd+xmfjI0uCTx8+JC6d+8uNJ3J
kyfTv//+GzcTtRMhMBC6ZCJLf5xOX9J74dT0S+rzuKPKgOb+khJEf0m9Lmml
zhr/3qtXbypTpiwlTZo0yvffnvE3/3no0KF0/8F9tYeDEQtcvnyZGjVqRLlz
56bQ0FD2uzIYDJeCI3TJraf+oylLT5NfuZqUPXdRGjR5s+rrXSaTyXQEnU2X
FPPtMp5v44PQ145t/oUuLNpHl+bvpB+XHqKjW65Y18DORIp65GuTltL9PkPp
+eet6fkXbemvngOF1vbj8sPKedZa7ot4QueXH6KLC8OFJnplxgY6HnbZQv9U
ndr9Obj3Lp0JPSkyfI7s+kPSWGU+xYi992W53yWENntz1EwTjTUq7j/wN12a
t034IJEfg3rzV82aCm0UWiJq6Y9r3xulnHRn5uE9t8V7i/Phr96DRD42vr8y
fb3IXDogcn6ir0fK+ah7P/pYqZTJ+P8yZ3O06sHjg7HVJaG7RUREiGyO0qVL
0549e+JmonYiBAUGCl3SoCtZ6S+opl9Sr0sqamOy+w3WJSWMGg2/ZCaz8dJY
9I9Ev8cNGzaQv7+/MZsmiv6StsZf8kpqDP7JDBkz0Lp16+j169dqDwkjhoCP
fMWKFVSkSBGRk/Tjjz+qvUsMBoNhNxyhS4KbtfcbXQfOI6+seahy7TY0Z8MV
1de8TCaTGVs6my4J8nzLjFMacq9ljMbfX1h6UOpjKculgdZqr6+TGXPCb2ro
d6obf3h0D+z7y2aNuxqMrS4JIN9hypQplDVrVurWrRvdvHkzbiZrJ4HUX9Lc
L2maa6JxCr+kpa5mrpOxLilBsb/kJ+Y9IjVCl7x7967o/dikSRNKkyaN1fff
nvE3/zfcC5YtV47Onj2r9pAwYoHHjx9T7969RXbRuHHjRE4Yg8FguAIcpUuC
y3bfo+oNO1PadF7Uvs90kdet9rqXyWQyY0Nn1CVBzLfVGnYij3SZqGOfGbTx
e55vmbGnqNmespKuT15GVyctFd7PX6evt7uHJYgs8cjg0sbMGu1XeE2dqbeh
u/K3aaH0sWoFY7/KAD+ny7vR0xG6JHDjxg2xbs2SJQstWLCA3r9/HzcTthMA
/SUtdUnL+l31dUmz/VLIYWFdUgJ6Ahp0SY11/RC6JHoXoPcjehZcv35d5Jvs
2LGDwjZupGXLlgkdqkOHDqLeH9ndiTRWfJUWPkvp95IkTUIjR4wU22G4JnDd
4/qvUqWK6OGK84PBYDBcAY7UJbee/kgjZoVTIZ/ygqPn7Fd93ctkMpmxobPq
kmK+nbmHChUPoMI+FWj03AOqjxXT9SmyXepUk2XM+AjPHerT7amZRg9DKbum
hCF3HL0mna23oTsSuu+LVp+LPqaG/PLg0nRs8xWnrHd3lC4JnWbTpk2ivrV6
9ep07NixuJmwnQAmuqTVLBP167g1Shkssq/Q3fB+MXT9JTN5mWmGGmPPSN3P
0C/leiHeX5z70OHBd+/e0Zs3b+jly5fCI3flyhX69ttvqUSJEpTs02QW42/N
c1ugQAG3voYSAnAuTJ8+nXLkyEEdO3YUGjaDwWA4OxypS4Ibj72m1t3HUdqM
3lS3WU9asv1P1de+TCaTGVM6qy4JwpPequtYSpvBm+o1701Ld9xRfbyYrk/0
PYwM9jfJiH7cpUeUedrwVCLf5mNQKeHT02dp//XVoCj/lhkDyuuytd9fXBBO
H2pUpP/K+xnG/2GPvhR+xEZeuIp0lC4JwD82ZMgQkYEzaNAg+vvvv+Nm0lYZ
UfolNVLPQPX9klH3P2RdUoKo41bM41b2S9oLZJ5Ap7x37x7169fPMvPbynuT
OHFimjhxoqgHZrgubt++TW3btiVvb2+aN2+e6HnBYDAYzgxH65LgvLCrVKFa
c8rolZ16DltKW6JR/8VkMpnORGfWJcG5G3+l8lWbkKd3duo1fDlt4VpZZiz5
89wtFFmxtJSboqvDhu/x7tdjRC7LNpxjJv0nP9L323+nx12+lPLEZdnZooZ7
+RGu4XYwT268SBcX7Bbj/v226/TL7E30vlYlnY5sHP+zoaecduwdqUtCg7tw
4QLVr1+f8uXLR2vXrnXLLFpJl9SYjZepB07tOm68DxZ9DxXo6+eryv45GyS/
ZCZFLVeegxNdXVIPnAfwUA4YMIAyZMio7JM0895WrVqVLl68GAdHy4gvYP7b
tm2byARDTTc81AwGg+HMiAtdEvfF/ceuo1z5S1DJ8nVEVrfa618mk8mMCZ1d
l8R823fMGsqZtziVDmxAU5afVX3MmK7N/fv/orf1akv1wHqdK0DSuj5WDaKn
HbvR3a/H0s2RM4Q/8kXLVvRfsD7/2dfEZ3lf+/872CvpcF6dvFyXee4jq7k3
HX9kl+897JxeSdCRuiSALNolS5ZQwYIFqWnTpm6pqwQFBVMi4Zc00/zM1vFq
13Era5HGfdRwf0kD9Lk3GvOxMvMzQpeMjQ/4zp07VLt2bUqaJKmhzt68L6n+
e1yTyLd3R20/IQF69PDhw8X5NXDgwGjPqQwGgxGfiAtdElxz8Bk1bj2Q0qT1
pGYdhtHqA49VXwMzmUxmdOnsuiS45sBTatiqv5hvW3QeSaERT1UfN6Zr80TY
JXpfq6pUDxzoZ5KtLfoWiq8ljH5KnW5p9FiWoJfNmol8aLWPxR0JXVLk2yiN
fwU/+i/Yn06t+yFaeUXxTUfrksCjR4+oZ8+eomYVtagvXryIg5lbPSCPO1Gi
RFZ6BBq9dmr7Ja3tm9z/x3XcEtA30svLy3K89O+xLld7xMgRsdKVcD7s2rWL
ihUrRpZ9P822q70vnDFjBj17FkeLH0a84dKlS9SoUSPKkycPhYaGstbMYDCc
FnGlS2499Z/w7fgH1KKsuQrR1xPDpHovJ1gLM5lMpr10BV1SzLdLT5Jf2RqU
PU9RGjR5i+rjxnR9ngk9Se9rVyWq4E+RuvybSIMX0sdMo/QxeCRRP/yg73Da
e+iZaQ9EpsN4bcpykSekNP4fKpWjKzM2OH1Pz7jQJaG9HD58mCpVqiR0L+gw
7gTzOm6N2Vc91e8vKff8aUw1Nt33fv7slwTgl/SS5XFb8zCa597EBOgx2LJl
S0qeLJlB79TItUnZ9rt/+SXdunXLQUfJUAvwkS9fvpwKFy5Mn332mbg+GeoA
78XTp0/p5s2b9Pvvv4vPOO77yWAYEVe6JLj5+HvqOmg+eWfLSxVrfk5z1v2s
+jqYyWQyo0NX0CXBzcffUZcBc8krSx6qUucL0XdS7bFjuj7Dj7ygK9PX0euQ
RhRZoSRRUEmDJw+M1H2FpzKyYjl61L0PnV9+yGl7GroLr05ZQR+qBYnxj9SP
f5UK9PyLtnRq/Tmn9knqGRe6JIAs2mnTplH27Nmpc+fOdOPGDQfP3OohODhY
t2ZX8rs5Rx63sb+ksWZbyZvHddwSRuvquG314nREHbces2bNEtdGVNtr3Lix
yPRmuD6QYdSrVy/KmDEjTZgwwe185M4G6I/43AkLC6Nhw4aJviIlS5akLFmy
UPr06SldunSUNm1a8TVz5sxUsWJF8b5cvnyZ3r9/r/buMxiqIS51SXD57gdU
s3FX8kiXidr1nkobjrxUfS3MZDKZ9tJVdElw6c67VK1BR/JI70Wd+s2gjd+/
Vn38mO5B6IxHt/xKPy49RL9OX0O3RkynO99MphsTFtIvszbSjyuOUDj7I+Pv
/Tj1kQ7vvkmn15+j02tO0+E9t11Ci5QzrnRJAD6vNm3aiHu+7777TmiV7gDU
cWsSSbqkiUfSrBehc/aXNPUAsi4pQfglvcz9knqPqfH+zBF+ScBYy61w/si2
z9k37gPMBZgTKleuLK67nTt3qr1LbgWM759//il0yB49epCfr6/QgFOnTk0p
UqSgpJ9+KvpvQG9R6nGRJGkSSpkyJXl5e1H37t35eQAjwSKudcmtpz/SqNn7
qLBvIBUoVpZGztqr+lqYyWQy7aUr6ZKYb4fP2E0FiweIOXfMvAjVx4/JZDKV
GJe6JHqobd26lUqVKuVWWbSo49b3l1TSI52qjluhRljum2RdUoJJ7o3J+6kx
GUdH6ZL79u0jHx8fi3PHfPvohQDvK8M9IPeRd+rUSdQRM2KON2/e0Llz50Qf
Y3zGwAsJHTJZsmSUOHESnQZpff5Tuv7wN8mTJxe+eFyn8F0yGAkJca1LgmFH
X9MXPSZSBs8sVLvJl7R42y3V18NMJpNpD11JlwQ3HH1FrbqOobQZvKh+i6+E
h1LtMWQymUxzxqUuCbhjFq3IvUEet8ZMTzK791XfL2l5763hOm5FmPSXlI2Z
eT43dElHnMNLly6l3Llzy7Zhnu0ufa1bp46oK2W4D9zVRx5fePLkCYXv2UN9
+vahEiVKiJrslClSUpIkkg5pS3s0n/9sXX94PcyP27dvZ22SkaAQH7okOH/z
dQqq3kJok18OWSR6oam9JmYymcyo6Gq6JDhv/a9UvkoTyuSdk3qPWEFbuNcf
k8l0Msa1Lgm4WxZtkCyP+xOze1r5Pa4z+CXNdTVzfxDrkhKEX1JWx23NC+sI
XRIeL9zjobbUWh23/t/at2/Pnjo3g9xHjjp9zBMM64BuC21+3rx5okdknjy5
xecVPI2JMQ9bZJBZZpJZm/+iuv6gTcKzzO8RIyEhvnRJ3BcPnLCB8hTwJf9y
NWnS4pOqr4mZTCYzKrqiLrnlxAfqOzqUcuQtRmWC6tO3K86qPo5MJpMpZ3zo
kvIs2pCQEJfPopXncSv1KdNTTb/kjz/+aLVOUf4VeekMszruT5TeW6knXWzr
uKFJffvtt4bMG/Pzx3z7o0ePdkjODsO58O+//4osFnfykTsK//zzD505c4YW
LFggdHn0O8iYISOlSpWKPtX1iFTWHW1ojVbmv6iuP3xNmjQpDRkyhN8jRoJB
fOmS4LqD/9BnbQeRR1pPatJuCK3a+0j1dTGTyWTaoivqkmBoxBNq0KofpdHO
t7j/D414qvpYMplMpp7xoUsCyKLt3bu3yCEYN24cPX/+3CGvqwYCzfySFrWB
unthNf2SBl1S8b77E4PHCPm0DKMuadNPFcs6btTvDhgwgLJmzUqJEyc2eU+k
c8jUzwU9ZNOmTZwN7Kb46aefqEGDBpQ3b15as2aNy/vI7QXmRGSR//zzzyL/
afbs2dS3b1/hqff1LaH9PPImDw8PSYdMlkw312rIotY6ivnXnvnP1vUnZ6lS
penAgQNqDx2DES+IT10SOZ3TV/xIpSrUoSw5CtCA8etp6ykHb4PJZDIdSFfV
JTG3Tl5ygnzLVhe+ycGTt6g+lkwmk6lnfOmSuBeFTodsAvQE27Fjh0NeVw1I
fkmF3BuNaQ2h2n5JuRdIo1H2FrFfUoI1v6TGrIco8nrRG3D27DlCU0EmzcO/
H9LHjx8tXhOeOHiDV61aRZ07d6YC+fOL2m3THgC680ZH+fYDAgLo3LkfVBgN
RnwAPvJly5ZRoUKFqEmTJm6bux4REUHDRwyndm3birp1HC+utXTp0onPnZSp
UlLyFMkp6adJRV22xsb1J39GENX8a8/8Z+v6k28fPs2ZM2eKHgwMhrsjXnVJ
LTefeE89vllImbPnE/0mZ669pPramMlkMq3RVXVJEH18O/efo733z02V67al
uRt/U308mUwmE4wvXRJAn7AZM2ZQjhw5qEOHDnTt2jWHvXZ8IjBQlsetUfbw
OIVf0uRe3HQ/9R4h1iUliNwbLy9dHrZCdoZM34BGAS9XmjRpKG26dCJ3I3vW
rKLeFFpi2bJlqVixYpQ5S2ahvUj5wMlN7vOMHi0FP5du++PHjRM+Y4b74tGj
R9SzZ0/hI58wYYLwEbob0IsAGT+4bvTZNBpN1Oe/tevPVFO0Pv/aM//Zu33s
c4cOHV32M4vBiA7iW5cEV+79i2p/1p080mWitj0n0/rD/6q+PmYymUwlurIu
CS7dcYeq1u9AHum9qHP/mRR29LXqY8pkMpnxqUsCt2/fprZt2woNaM6cOfT2
7VuHvn58AH5Jo+dN6X5XuidWVZfU5d7YpIb9knpAl/T09FQcJwstxIpvK1Hi
RJQkcWLh+Uok6rRtaCYyn5dG9r2eJXx86Pjx46qdP4z4Ad7fI0eOUOXKlcW1
CA+uu2HatGmid0F0zv+YXH/m86+1v0mUKDGl+V8a0eM1W7ZswgNtz/bxHh07
dkzt4WQw4hxq6JKoLxwzL4KK+gVTviKlaMTMPaqvj5lMJlOJrq5Lbj35kYZN
30UFi5WjIr5BYu5Ve0yZTCYzvnVJ9FBDDXeZMmWoYsWKdPjwYYe+fnzAUMet
Mb9vNl3Hq13HrXiPbbaP/v7cXxIQfklDf0nT3AtzXcTYo872+2/P+CvpM0mT
fio0e+R/MNwf8JFPnTpVaGSo979x44bau+RQrFixggoWLGj3+e/I6w/aCjTR
unXr0dixY4Xue/36dZEl9fTpU3ry5AmFhoYKr3NU2y9atCjt3r1b7eFkMOIc
auiSYNjRN9Su12TKmCkr1QzpRgu3/aH6GpnJZDLN6eq6JLjhyEtq2WU0pc3g
RQ1a9qFlO++pPq5MJjNhM751SeDVq1ciPwQ9xvr160f37993+DbiEkGBQRZr
dsP9q+6+Fve0qtdxK/mGTPq1cR23HqNGjRYeXvnYWOtHp6itKLz/9oy/0v91
6tRJaCfslUw4uHnzJrVu3VrUO8+fP19ole4CPIfy9/ez+/yP7fWXRvtZFhwU
JJ414NnQvXv3hMaP3pDIkDK/rq5cuUL16tWLcvu5cueiLVu2qDSKDEb8QS1d
Ely49QZVqvU5pffMTN0GL6BNx9+pvk5mMplMOd1BlwTnbPiFylcOoUzeOan3
iBW05eQH1ceWyWQmXKqhSwLIYm3cuDHlypVL5IK4UhYt7nlRq2vi81G4x1ZT
l0Teisl+Ke0r6rhLsi4JSLk3nmQtT8MkQ0PJ56Xw/tsz/iY6pvb7kJAQkX+i
lKPDcF9g/oPmVbJkSapWrZqYO9wFJ06coODgYLvO/5hdf/BEZqPmzZvTkiVL
hM4IHfL169fiOopqDr569So1qF8/yu3nyJ6dNm3aFE+jxmCoBzV1yS0nI+nr
SZsoTyF/8ilbnSYuOqr6OpnJZDLldBddcsuJD9Rn1CrKkacolQ1uQNNW/KD6
2DKZzIRLtXRJ3C+uXLlS1MY1atSIzp07FyfbiQsg90aTSGOhOZl745yljltJ
H9P/DB2EoesvmcnTxItlGDeDdmLu07L9/tsz/nqiXyn6rkKvZ00yYQL57cOG
DRM+8kGDBtHDhw/V3iWH4LfffqM6derYPP+N+p9911+SpElEthQ+o1Cb/eef
f4rMIPQrju4zLjzDqV69epTbz5M7D/slGQkCauqS4LrDL6hJuyEiAyfki0G0
Mvyh6mtlJpPJ1NNddEkwdP8TatCyL3mk9aRWXUbTmoPPVB9fJpOZMKmWLgmg
v1ffvn1FFu2YMWNcpp+eRR23xvzeWvpe9TpujaXXyJBfq9tnruOWgL4C8jpu
jJO1OlIlPUXp/bdn/EHkeY8fP57u3LnDmmQCB7yy9evXp7x589LatWtdykdu
DY/+/puaNm1q9fxXvqZMrz/o9jlz5hSeSPRexXMs9Ih8+fKlqHmPzTyL50eB
gYE2tw8WL16c9uzZ48CRYTCcE2rrktvORNKM1ReodGA98s6Wj/qNXUtbT39U
fb3MZDKZoDvpksgcm7T4OPmWqU458xWnb6ZsVX18mUxmwqSauiTuJZE5jLpF
3PNt27YtzrblSEh53JY5sOY/Hz16TGW/pPUcFv3++rNfUmDUaKm/pMjzVdJM
NMrvs633P6rxT5EihdBZoF/DK8f9JBkfPnygpUuXipwYaHnQKV0dOKYOHTro
PObm14u+htuYNQM9BM+qKlSoQF26dKHvvvuOzpw5Qw8ePDB4Ih2p3yOXp4Ah
l8f69Y9adHeqr2cwrEF1XVLLzSfeU4+hSyhrjoJUvmoTmhF6UfX1MpPJZILu
pEuC6OPbuf9sypQ5F1Wp157mhV1VfYyZTGbCo5q6JIAcgtmzZ4s+k+3atRM1
f84OeGs0sv6Sn8juseUalpp13OfOWeZxK2lqJbm/pMCokaNE/aylhmildlvR
82XbC6Yf/3z58om8J/Tdg2cYug2DoQd8gD169BDa3MSJE4Vm7erA+Z4yZUrD
tZAkSRLt9eZFpUuXos+afEYDBgyguXPnipps9DLA5w788zh25NXElW8Ur4tt
p5Ltm7XrvVmzZnT58uU42Q8Gw5ngDLokiPrtOk16UJq0ntTmywmivlvtNTOT
yWS6my4JLt1xh6rVa0/p0nsJjTLs6JtYvR4ydNC/Uu33islkug7V1iUB1K/C
TwO/2qxZs8R9qDMDfknTNbvG8FWu/TlFHbcN3Qz7ynXcEtBf0ssrk3K+howY
r/bt2wufI/TpvHnzUerUqSmRRmPx/mOcUaNdvnx56tatm6g/PXbsmMgHht7C
NdsMJWDOOHToEFWqVEn0f929e3esXxPnmpo14XhGs2jRItq8eTOdOnVK5I8/
evSInj17JjyQqMeGDxLPqeJzP2/duiWypvRzo63rHz0/4+PzkMFQG86iS6K+
cNz8Q1SsZCXKU9Cfhk3fpfqamclkMt1Rl9x68iMNnbaTChQrS0X9gmnsdwej
/Bv0ppyw4HvqOmi+6AlctX4HKlm+NuUp4CsyvjN6ZacceYtRiTJVqWLtNtSo
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
M0P184PJZMaM7qBLAjdu3KBWrVpR5syZacGCBQ7JcLCG4KAgSizLfbU2/6qp
SyITyHz+t9hX1HGXZl2SwYgv4BkK5lU8I16/fr3DXrdHjx5ibWhr/ad0/ct1
vIqVKtLJkydjvS94Fv/FF19Q2bJlad++fXb9zU8//UTVa1Qna3mOJhk20Vz/
Ql9p0KABDR48mEr4+Fg9fvPcsiRJk1CNGjXs0lYZDHeCu+iS4PrD/1KzDsPI
I10matR6IK0If6D6PjGZTNemq+mSIovbOyeNGzeO3r1757B93bjBSm9Jjdk6
zuL5svS7Hh4eDtuXefPmUdZs2eiLHhPFMym1zxEmkxl9uosuifrDTZs2kb+/
v90+nZgCuTcm2a9W5l9nqeNW0if0P6NekcFgxA+eP38usriLFStGW7dudchr
vnnzRjyTsZbBZev6lxOfAcgHj23t8pMnT6hz587RyuRGPTuedWfPlt1yvw3a
ofk+R73+/fTTT6lD+/ZC94RHYOzYseTt7a14/JKWaZrnjb+vX78+nTlzJlZj
wmC4EtxJlwRnrfmJygY3IK+seajP6FC+Z2UymbGiq+mS3QYvIE+vHDR+/HiH
+XbQHz1FihSK606T9ZjG7Hmy7OcMGTI4ZF8A9DPKnj07tflyAm058UH1c4TJ
ZEaf7qJLAshQHTJkiMjAgTfm77//jpPtWNRxW5l/Va/jNpv/pf0zvZfnOm4G
I/7wzz//iF4TyL3Zvn27Q14T2TKNGzeOcv2ndP3LiSwv6BGx7T307Nkz6tq1
K5UoUYJ27Nhh999hvoaeiboe7Ke1Om5717/o4Tlh4gT6888/DX0zHz58KLyl
adKkjuI1jduHNgm/JXLUGYyEAHfTJTefeE+9hi+nbLkKU/nKITR99XnV94nJ
ZLouXU2XRM/FTJlzOdwvib5E1nvu2HhGriPqahwF+CWz6fySW09+VP0cYTKZ
0ac76ZLQAC9cuCD8LaiTXLduXZzoglIet2UOrPnPR48eU9kvaT0HQr+/pdgv
yWDEG+DZc7RfEjoi5ryo1n/K85W+hln63SpVqtCpU7Gr5YZfskuXLtHySwKY
K5HN3bRpU6EFKmmP9qx/EydOTNWrVaM9e8LFeMv9n9jGtWvXqHnz5rptmB6/
yPNW0GyTJUsmtEn2TTISAtxNlwRX7X9EdZv1pjRpPal193G07uBz1feJyWS6
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
F//crnM/UJvuY6hgwUC7amSMcebMGb1nSKX33Yb3khkzZqb72OB5D++t8RzY
oEVvWn/goVXf4rwNV8jTy9d07WqSDWs/8+V3o3Fz9qp+PgqF2YU5VZfE2hdZ
sKifhF6A9a2tgI9Hk5rtYn7+VbOOO62/pOX5F/XTAHRZ6CfQA6CLQBNADzj0
VUtKSuJ1Cmoqke2bN29em+8/GZn/sR0fXx8qX74813h+/vnnUuMtcBlgjnn7
7bfZ/xsaGqp99ivI76Wh5f3888+p5zKuPWiUyHqGbxLvSRx5nmMO2rVrJ5Us
WdKm6w/eSuRpW8OjR4/Y44nnQ1v9lfYCxxC+afTexFyEfkLo1Y4cc9QC4U+M
d/r06dzXEvOXQCDIGHKyLok17pJtt6lS9aZUNKIsTVqcrPqYhEKhc9EZdcnt
p7+jQeNWU2SpyuTm7kXFImM4u2Xjkc/p4I0/TfQ7fL0q6T7FNehAQUHB/A44
Pc9x6LuNZzHdGs/Ao2LUCwy1cenNnMWzMp6PUXtetmIdmrnmHHvcLR2TRQm3
KF9+d5vWnJbq/9L8kjqPjb6XUsN5aW8sPMSfgdrnplDoysypuiSAte6YMWNS
fUq//vqrTf8P/iBNLo3V+dc5+0sazr86XdIcdHolPFc4XtAqsf5fs2Y1Z3ZE
FC9O+XQ6pR3Z3vbM/7lz52YNIiIygj8v6BOSiStwZsCPjXMVOiM8fg0bNuQe
PvD+Kp27+B6et2JiYlhng3bpSGBuGz58OF9Hlq4/XGszZszgHpiWgH/H+3XU
WeP3fv3115k+12EuwrtyzEM4vvBS450SfN3YL8zj6NkJTQVzL+YsgUBgP3Ky
Lgkeufkfip+4joJCI6h+yz60fv+nqo9JKBQ6D51Jl0Qd85jZu6lspbpcrx1U
OIK69J9Gq/d9zPXaR+/8n9n/C11vxqozVLpCLYqKimK/Tnry/WbNnKW8njNi
7969031c4MtExk5oWDSNnrGdDl3/l8XjknTlV86rUXrWNa7RNvDNGI1dY/I9
jcnvwZ/53TwopGgU1W3+Gnso4U+VHpRCoX3Mybok1tHIW0CNYLly5bgO0Rag
jlvXX9LS/KtmHTd6tNky/2Idby90HiZ4vuD7xzGEXwo5ukHBQSbHxlHzP7KG
PD09qVjRYhQfH8+eUOkzJ3AmIMMa7zjgw4ZWhutr69at9M033/C5amk+wHvq
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
hw8fslZWrFgx9ieZ8zyl+CUVcm+M5j+1/ZLG86+S3zCz/ZLmAF0DmRXoDTl9
+nSKLhlNefLmMfFL2jL/Gx9/ZAqjprZ58+asFyHDVyDICHTPSyNHjkx5XtLO
l02aNKEjR46wFzgzntWwTfRtRQ/HZs2a8TmNvj+zZs1iT3BmAtfMiRMnqGXL
lvzuANooMnngO3T1Xgk4rvi84D/FO5ILFy5wtjh6UEJ7xXGG9xoabEJCgviv
BTkOoksaEj3b4H/x9g2krgPepN0Xf1R9TEKhUD1mti4JbyAyp+Gtg68uuEgU
dR80g9bs/4QOXPvDYsa2I4iMFuRZv7niFFWu2UL7zOvLPXxQn4138458N63r
fY66cdSwwF9SqlwcvT5rF9dC21vnPEp73Mz6W/TWwrly56E1SR/b9DtxDyhX
paGiR0Zj7Kd5de+EFxLHUPH43vofe1NR771i9/s0cOwqqli9KfkUDOS+mD5+
QVSmYh3qMXgWLdl+V3LXhDmGokumATrknj17OI8Mfd3M5eHWrq2Xx61R9vA5
hV/SQIs0mkdf+QzV0iV1wDFHfQDyirdv304N6tfX3oM9TbPTrMz/SsyXPx8V
LlyY73XQFsT/JEgPUFM9Y8YM7j8Abx3qmBMTE+n58+fswcvs8wrbePr0Ka1c
uTI15xu13QsXLuRelI7cPnzjqE9HLje848i1hh6BuQwaaXbU53QaJfpronZo
6tSpVLlyZb4nQqNEfg7q9eHBRq5ORmr0BQJXgOiShoQnacn2d7iXW5Hw0vTG
wkPc603tcQmFQnWYmbrklKXHeK7xLODH2lbLLiNp2Y532WuX1ZnO8E5uP/OC
NcIyFWuTl3cB7lvUsGFDfgaFtyQ93g88Rz169IjWr1/P6234gaBHRkRXoEFj
V9HG5M/p0PX0+UE79H5DYb37N5N6vNi4Znb9Xng24WdUXIua8c106D3R6u+F
Jx9aM953rd5zn4a+sYEq127F2iQ8sj4FC1HJcnFcx79g6w0+D9Q+/4XCzKLo
koZALeb48eO5rxt8SfjaGPBLptVxK+l9KfOfqrrkO+9YmDPT3huprUvqgOOE
exu8Z/CHoWYAPi175n+l+4+utjsuLo6OHz/OuotAYAsw9yEHCxoVtMCYmBha
sWIFff7553ZlbDsC2BbOXbxTfvPNN7nmGN4+Xe3xzp07WbtMj26I9wKYq9Cb
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
DoJvnqJI45hWNEqPjNlQukJ9dB+8GIu2X0PIGa2RfRVSy2XtfM58JVCoZBVM
XHLc8DnZI5fvuoW2PSYja85C0n8ge9ja7DpwoejlmrGdOKm6pFKpVJqf1tIl
TcHP2+zj9uDBA9GC5s2bJ/ktHh4eUjPLW/Y9HDFihORK25p3SOq4w/bsDia6
n0MsOpU1/JIRuHbtmvSYpAeVPSfZ51PmEUc/uwiW0zpufPfdd9ITNU+ePLL+
uPbo82OmE3sNElyvbdu2haOjo4nuFvv5Z95zv379EqweR721f//+SJ8+fbzr
n7cVK1WyiVxuI/HLLw/Qo0ePWP/GipYb7b1Jn2nz5s3xxRdfGD11hUKRCGFV
XTIat4tG+QTB++6Kjta8wwjkyl9K9EnqlKydLRFQG50HzMP8LVclf9rofbQt
c1PYsWzWfjjSpfdAwzYfhB3X/xo+J3vhmoP30X3oUuQpWEZ8vN4+edC66/iw
dXcFW45rxnZipuqSSqVSaX4aoUuagholvZHUKL/88kssXboU9evXF/8kNSD6
KVmfPGjQINH5mE1hNAIDTfySDnFrftbySxI8jswYZiZJ9erVsWjRojg8fVHn
m5j9kqy1njlzpvjTuNYKFSok+dvMj2cuSvRzxxr5AgX8oh7XWM5/tmxZMXv2
bOlfkFDB/Hfxj8az/kn2Pd2/f7/R0zUUXEdff/01atWsFd6nNNrxisjrNtV2
2Wty1KhRkiWmUCgU1oSRuqQpqTky05j50lOWn8a7Xcchb6Gy0osyjaMz3Nwz
oah/dbR/fzrmbLystbSx8fy/mLX+c5QMrAtPb1/0HbteeiQaPi8bJrVc5jAV
LlUVjmFrzd3TR/oMzFxzSdZj6Bk9fomdqksqlUql+Wm0LmkK+rCoUTIj98qV
K1i1ahWaNm0qWTnUjdjrj7oba0NZ5/jrrxb6p/ASSH/J+PKZDdAlCWq2Q4YM
ES2oTZs2MXxY/4nF3xeQCPO4ub6Cg4PlPHLd58iRAyNHjpQcJvoi46q/5trs
2LGjeCpjO9+sox8wYAA+/vhjPHr0KMHWcRPUbitVqhTv+uf6S5IkCZYuWSLH
NTGDfUt37twpGnhcNdzRryN4e2fC2rVrbbqnhUKhSHiwFV3SlBEa5Zr99zF9
1cd4r+cUyZt2SucmXjYXNy8ULFEJbbpPDNeNzmo/StNj12vESmTOlhdlKzfB
rLWfGj4nWyR17THzD6FMpUbiLyUr12mHSUtPSi9U7R+gjKDqkkqlUml+2pIu
aQpqOvSsUXtkne369evRunVr6f1HjZLZOfS3sT5yz5494re0FiLyuB1i0/oc
XugK1qzjJjjWpUuXUKdOHdFyI32Szz9fhOuUpnXdDpF+Sf4uc9TZm5K62t69
e6WWmf7BBQsWYPPmzTh69CguX74sHi57zDKhNkZtqGbNmrJ+qCP27NkTFy5c
kNf+Kjoi+0YWLlxYznXE+aYOzHV4+vRpWYfUoBI6+BrbvfceUqVKFef6j7gd
NHhQgs4BelVQX5w0eXL4e9Mh6jGKTZukpsvMHGv/HVEoFIkbtqhLmjLk9N/Y
/NHvkn88c+0ldOg7G0X8qyNdenfJI/HNXRTlq7XA+6OCJftb/YGsSb6H2s16
wdnFHa27TcDGI49f+Xc3n3gq+ejUM0fPOyCeS9bRk33HrsPouQcwa/UlLN/5
o5wXe9OE2Ydz2srzqFK3Pdw8vMUj6V+hPkbO3ot1Bx9orwBlDKouqVQqlean
reqSpuBncupg1CivX78uNaRBQUGSJRGhUbKmtFOnTggNDbV4/Wy5cuVFM4jh
D3uuL0R4oaztlySoFy1fvhw+Pj4v9WXxPj8/P6kXZd40NV/29mTtPI8ps1+Y
ScS14eLiIn5VanCenp7Ily+f9LNkvTi1SmrItoq//vpL+m2yZx/nztfHz1j8
GX2Nr5MvwtfZo0dPpHNJJ8ekQ4cOohtxzSUGPdIUEydORKaMGeNc/xFf87jT
/6yA/D3l3y7+3Yr+3oz8/rm2mzJlSvHnfvPNN0ZPW6FQJCLYui5pSnrYNn/0
FGsP/YI5676QPBLHtK5I5fg81ztTdpSp2Ej6BC4JvZ5oc73ZC3HC4o9QqERl
0W2HzdgV52NZxzx15Tm06z0VpcrXhVfmnEjn6imapnNat+e9Pp2F/Jo/4318
DHPUS5Svg/d6TcHUFeekV6jRrz0+ztv8Neq/219eI323BYtXwoDxm7Bq313J
YzJ6fkrbpOqSSqVSaX7agy5pigiNknrSDz/8IHnJXbp0Qe7cuaW+llkczC95
7733xONHn5a5tcHy5cqJLhldR4hOo3xO1MgaNWoUU++InO+LzxvMaImokS9Y
sKBkUPPYsZ8ney+yln7ZsmWYMGECevfujWbNmkluevbs2SM1S2qZgYGBkrHO
/B1b8XZxHp988omsD+q01Flr166NXbt2SS489co3wblz5zB58mTpJcD3R2LT
IyOwdevWFz0m49G/WS9PD67ihaeZeeZJkiZ57pV0iOKf5PuVnkquMdbLv+k6
VSgUijeBPemSpqTmyDySZTtuYsKiY2jWfhhy5i8ZmZnDPoHUzLp8sACLtn6D
kETmg2OdclCfWXD3yoKq9Tpi0fbvXhy703+LH7Jp0DDkyFtcdEbqdM5p04Xt
r/PI/yyuAWb6TZkyBStXrsSKFSvka/6M91WtWjVs/50XadO5iG81bboM8lxN
gobKc2+3IZ2PPtrW3cbDJ4efZGxznt0HL5Gfa8a28mVUXVKpVCrNT3vTJU3B
z/jMS378+LFkH7Oem9oZtRJqlPSz5cyZU3x97NPGx5hDMwvvLxndLxk1V8bB
IL8kwTHnzp37Qu+INWcjnJ4eHlIjf/XqVdEzWYdMzZd1zax7pj+QZCY6jzM9
q9T0WMt99uxZTJ06VXJ2qE1Sp8ybNy+GDh0qHi8j9UmOP3jwYNGrOS/W3q9b
t0506oiM7TdFhC7+ts9j72D9e+nSpeNc/xHrL2eunFL/rggHdeyNGzeKVzn6
e5K3XKshISHSBzUh9yhVKBS2CXvVJSN59t/n/SifSGbOpOWn0KrLWOQtWEZq
dKlRurl7o1jpd9ChzyzM3/RVovHGUbOtVPs96cfZ5YP52PLRU+nXWb1hZ/GW
UqPLnDkLGjduLPUwn332GX7++WfZG3L/xz7mpntDfs2f8T4+ho/l7yxevBhN
mjSR56JG6eGVFdUadJKxjKyLXn3gHroNWoRcBUrJvLyz5UWbHhOxYOs3mrGt
fGWqLqlUKpXmpz3rkqagBkZfEbWzO3fu4ODBg5JBwh6U1KXolaPHj/skXuNl
H8U3/cxP3SCmLhmzftUoXZKgDhRXfaipfsT+ddTZ3uRYsP6Ze1LuRT///HPx
VBYoUECON72XvI5++/ZtC7y6uMHxqJWyByS16SJFimD+/Plyvvk6bcXLmRDA
9xn9EXGt/4iv07u4yDUDxQtQ9x89erT0FYg4TvQt09tLj69m3SgUCqNg97pk
NL7IzLknfQTb9pgEv2IVpP6YnkDXDBmlvrltj8mYte4zbD31h+FzthTpKR06
bSdy5S+F7HmKoliZd+CVOQfSODqhTJkyokXyui51Rv4fep0+NxGIyLCM6A+/
ZMmSsOdmjnpa0T7rt+qHBZuuWLUPJevJB0zYLOeZ/lnqpA1aD5Dzvemj3zVj
W/laVF1SqVQqzc+EokuaIkKj5DVc+vqo0dHDV7x4cXmd1CjZS7F+/fqyB+O+
6XX2XlF0yViyZIyu4yZOnTplkscdPV/jRb0ovZ/mAPeh9FTSd0l9krX01CfZ
t5K19pbWWaiNUm8uW7asjJsrVy6MHTtW+hpybNUjzQ/6RevWq/vi82u09R+x
/pImTYZt27bpOYgGaujM8kqVKrX0ymXGFD3dibUvgEKhsA0kNF3SlBGZOWsO
3sf01Z8gqM9MFC5V9XndshPSu3qiQNFAtOo8FjOCL4iHzug5m5sr99xBtfqd
kCJlKqRIkRIlSpQU7ZC9kbhfMqdPn//3+Zw//vgjli5dKmOxL6VvnqJSN81c
GUu+VmrMo+fuh3+FBpE9MKvW64DJy05h4zHN2Fa+GVWXVCqVSvMzIeqS0cHP
+fQnsb7k5MmT4lNi/SnrvPm62cuNGc3UBahjvayf20v9kg7hPeOM8ktyTxlZ
xx1P/8v/mFGXNB2b+iR76HXv3h0ZM2aU3Gvqwjdv3jTrWATHYs0ra8nZW5Tn
kuuWnjPep3WwlgPXNj+rpkiRItb1b7r+mO1ujxnulgTXJnuVjhkzBnv37pXe
ALpeFQqF0UjIuqQpwzNzfpfMnFnrP5e+k8XL1hLtKlVqJ6RL74G8BcuiWfvh
mLL8tHgujZ7z25LZQJXrBEk9O6/P8/8P/ZGWvn4boU/SB8Brxr45csA5rSuq
1A2SY2+Jczt5xRmpWXdzzwQnZ1fJPxo1dz/WHdaMbeXbUXVJpVKpND8Tgy5p
CmqU1KvYS5GaADOFqTMyf5o+u0yZMkltKmuBv/jii1h7CIbrkg7RjlfULGKj
6rip/bAfOftqxuj7FwvLBpS1yDzoP6XOwmyUgIAAWV/MZb548aJZnp/a8ZEj
R6Qun70tmRPepk0b8aiylv9Nao8Ur4+uXbtI/XFs6990/S1ZvETed4qoiOhV
qpqtQqGwFSQWXdKUEZk59O/N3fSV5HeXrlBfarzZc5FeO/YkbNRmoORa02tn
9Jxfh+ybOHLOXqljdnJKi/oNGuDo0aNyzd6a18Mirl2zjok1S2nTusCvWEWM
nL3XbN7FeRu/RN0W78PT2xepHNOiUMkqGDhpK4L3/zfR9BFVWpaqSyqVSqX5
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
j35H54EL4OaRKez4JkEax7QoEVAbo+bsx/bTf73x83bsN0dyb6ZNm2aR3JvY
YG1dcvz48fD0yqS5N0qboOqSSqVSaX6qLmk/4N4vU6ZMWLx4sdXGtObe886d
O3jvvfdQqlQp7N+/32LjKCwLfi6iHklfpbU+IykUCoXCPFBd0vwMPft/GDp9
J3zzFEUShySRPZmTp0gJ39xF0eWDBdhw9NEbPXePYcvhmckXo0aNwtOnT62y
Rqy5N+Q+YtCgQXD3zILeI4MNP5dKpeqSSqVSaX6qLmk/mDt3Lry9vTFp0iSr
ZRxbc+/5xRdfoF69enjnnXdw9uxZi42jUCgUCoUidqguaX5OX30RZSo1QrLk
KaJlxDkgabJkyOCRBQ3bfIAlO2689nMPnhIC39xF0KNHD7m+aw1Yc2/48OFD
dO7cGT6+BTBkaojh51KpVF1SqVQqzU/VJe0H7LlYsGBB9OrVCz/99JNVxrTm
3pMeyTJlyohn8rvvvrPYOAqFQqFQKGKH6pLm5fJdt9Dg3f5IlcYp0idpSv6M
x9vJ2QXl32mFqas+fq3nn7L8NAqXqoqGDRvi008/tcoasebe8Msvv0SDBg1Q
qGRlTFh6wvDzqVSqLqlUKpXmp+qS9oNz586hevXqqFu3Li5cuGCVMa2591y0
aBGyZMmCESNGSL9ChUKhUCgU1oXqkuaj9JQcMA+u7hmj7rEdouuT4cc7VRpH
FCpRGcNn7EbI6b9faQxm6VSu1Vb2art377bKGrHm3pCvqWTJkqhSNwiLQ64Z
fk6VStUllUql0vxUXdJ+8ODBA6llyZ07t9Xyqq2192RPpL59+0qd+ooVK7Qv
oUKhUCgUBkB1SfMw9Nw/GDpth/SPTJIkaRT9MaZv8sXxTp4iFXzzFEOvESux
5fjTl44TcuZvtOg4EhncPaTfD3MSLQ1r6pLTp0+Hh4cnWncbj60n/jD8vCqV
qksqlUql+am6pP2AWt3MmTNFu+M+8LfffrP4mNbae168eBE1a9ZE8uTJ4e/v
jwkTJsjPLJ3xqFAoFAqF4gVUlzQPNx37DR36zkQ6V88Y++vYPZMvyJ6T3j55
5PfXH/n1pWMNmLAZWXMWRKdOnfD9999bfI1Ya2/InkXt27dHkiRJkDlrXtRt
2Qej5x7AusMPDT+/ysRL1SWVSqXS/FRd0r5w9OhRBAYGWq2W21p7z4gabldX
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
tLauXbu+tEejLYB9g0qWLCl7T+5BI3RWS4C14U+fPpU69y+++EJygurVqyf+
SWqU1CpZ+92vXz8cOnTIrvvEKxQKhULxtlBd0rpk3fGCrVdRu2lPpErjGCUD
J7Z87oivkyZJiryFymLk7L2SA2P6nFtP/SE10F6Zc6BOnTp20Yf8448/Rt26
deGR0QddBy4UDdFSx5x9Ptljcv2hh+Iv/WDiZlSp216OF32U7NPpnTU3Ktdq
i/7jN2Ilc9Bf0uNSmXiouqRSqVSan6pLGg/qcvTtMZc6c+bM0huR/kdqdqxL
pl4ZF3gN/LvvvpM8atZEjx49WnyCtgrWnjOrh69z7ty5Vq0vYp37s2fPxHN6
9epVrF69Gi1atJDcHUdHR7i6uqJgwYKi71I7vXfvntXmplAoFAqFLUB1SeuT
Wd2Ltn+Hei37Sg/E6F5Jh//ErlHSYxlYozXmb/oqxnOuPXgfDVsPQHrXDOjU
qZNN95q8ceOG9E13Se8mudqsR7fWsaemSx13w+FfJS992IzdqNW0JzJnyyfn
gn07Pb1zIKBKM/QcvgJLQm+I99LoNaM0jqpLKpVKpfmpuqRxoE7GOuMuXbog
a9as0gexUqVK0iuSWS7UI1+l9oaeQOqa77zzjmTiMOeFeTC2hq+//hqtWrUS
/ZQeTyPXFo896+Xpj6THdOvWrdIjPkeOHKJR0quaJ08etG3bVs7H7du37aYO
SqFQKBSKN4XqksaQNcv07tVt8T5SpkoTI4s7toxu9pt0TOuKJkFDse7wwyjP
R72NWic9f+ldXeW83rlzx+jlFQPcC/bv31+uDVeu0w7zt1yJ4f+0FjnuttN/
YsORx1i55470nGzUdqBkp6dxTIvUTi5w9/RByXK10XnAPJkrs8CNXjtK61J1
SaVSqTQ/VZe0PqhvsaaYx5c6GOuJ2e9w1apVuHXrlvT9fl0NjDXeu3btQpky
ZaRv48yZM986S8ac4OulJkkvKHXYa9eu2YzOx3nwmDNL6ObNm9i9ezd69eqF
/Pnzy7lxcXGBr6+v9MJcsWIFvv/+e7vKGFIoFAqF4lWhuqRxpF+vSbshSJfe
I+wcxF6/HUWjZCaOQxJkzpoXvUcGx9Dz6OubvvqCZL1Q9xswYIDsc2wFvOZL
TZLXq/0D62PqynNm7Sn5Vjz/r2iOG489QfC+u5i45ARahn1mylOwjHgo0zg6
Sw564ZJV0LbHZMxa++lrZ4cr7ZOqSyqVSqX5qbqkdcH64cGDB4sXj5pXiRIl
pOchtS76995Gq6O2tm3bNundyLwc7vVYG2MkqN8dOHAA1apVE02yQ4cO4puk
x9MWweNPn+rjx4/FV8Cek4MGDULRokXlPcLXwLpv9mtiHfqVK1di7fupUCgU
CoU9QnVJ63P1vp/RbdAi5PErLXpXBg9vZM1VGEmTJnuhTUbvN2lyjpImTY6S
5epg6qrzMZ6b/SsnLz+N4gG1kDZsD8NrxJ988onRywyXLl2SdcV9VcmA2pi0
5AS2n/rL8HMRF3kcNx37TfJwpq/6GO16TUWhEpXDjmkGqfdO5+opWUPNO46U
nHXmgBs9Z6VlqLqkUqlUmp+qS1oH1AfHjBkDPz8/0SOZkUhPI3tDsuehubyD
1CappTF/mue0evXq2Lt3r/zc2uDamTx5smiwzOXhdXrWTNuqJhkbqDkyr5t9
Pk+dOiXnkN5W1nnz+LJunsear5O54kYcZ4VCoVAozAXVJa3HdQcfoPeoYOQv
GhhZI8w6bvoGxy86htIVG8Q4F3HVdjs6pkWjNgOx/sivMcah3kc/X2CNd5E2
XXq5Jh4cHCzXYK0N7qk4dqlSpeDknBYVa7TGzOBP7Koemv1AqTuuPfALZq3/
HJ0HLpDabmqTzM1xdnFHzvwl0aD1AIxbeAQbDj8yfM5K81F1SaVSqTQ/VZe0
LFiXPW3aNPHbUY/MmzcvJkyYID475kRboh6YWtpXX32F7t27w9PTU+q6e/fu
LT+zRu00fZ/MjaEmynVFDXbp0qWSx2PP9c/MJ2JOD1/HhQsX5LxWqVJFMr15
bqm9BgQEYOTIkThz5oxVM30UCoVCoTAHVJe0PNm/cMCEzShcqqr0h2Q9cPUG
ncXXyPuoe207+SdGzdmH/EXKx6zndojuoXSQc5Y1Z0F53tjG5HMu3/0jWnUZ
i4zevrJ3admypVxztUbdB69JcyyOyZoez0zZ8G6XcVi24wfxIhp9Tt6UrJVn
djg15gWbrqDXiFUIqNocGTyzhGd7p3NDtpyFULNxdwybsQtr9t83fM7Kt6Pq
kkqlUml+qi5pGfC4zZ8/X64HM8+GfSSHDx8ufRapV1lan+P+j/0lmdlCrYxz
YL/EUaNGSW9HS4D1z0ePHkXz5s3h5eWFFClSSF/GlStXmtUTagvg8aWu/ODB
A3z++edYsGAB6tatK6+buTnc79OPQI/o4cOHpXelQqFQKBS2DtUlLUd67IZO
24kSUlOdQfx1FWu1xbjFx8TnGF2f2/zRU+kbmSlr7sicm1jzbxzCtcrkyVOi
Us02WBx6Pdbx2X9y07EnGD3vIEoG1gubg4vkLvbo0UNqPixRz8L9Lp+bY2TP
nh2pUqUSva5l17HymkPP/WP4eTEX+Vq2nHyG9YceYlHINQyYsEmyfDwz+cpr
pgbtnS2v/Iz3MVtnx1nN9rY3qi6pVCqV5qfqkubFL7/8Itko5cqVi+xF2K9f
P+nlw9oVa9cws66YtdNTp06NzHEpUKCA9J48d+6ceBvfFvfu3cOWLVvQqFEj
qWvmWmI2eM2aNeWaeN++fSVfPKGCe27qrtSB6YNlflGzZs2QOXNm0SjZa56e
UfpXmalDv6VCoVAoFLYI1SXNz60nnmH0nP0oXbER0qX3FA9d2SpNMHreAfHZ
xddXce3B+3i3y1g4ObvG9EvGUs/t4ZUVXQcujDfTetup/2HV3p/E28eelk5O
znIduX379tIT3Bz13U+ePMHBgwflOXlt3tHRScaq8M67os2F98P82PBzYyny
+G899Ydor/SEDpu+EzWbdJfXniqNk2TnZPTOId5Knoelod+L99LoeStfTtUl
lUql0vxUXdI8oB9uw4YNqFy5svQe9Pb2Rrdu3UT7497MyJ6K1M3o7fvyyy+l
PyL7PVIvY91x6dKl0adPH2zfvl1yXl7F00hfJH2f9Ai2aNFCno+Z1VxD7LW4
adMm0SF5fbxhw4bIli0b1qxZY9c13K8KvkZqvb/++qv4Ujdv3oygoCDZ7/OY
c22wlr9du3ZyH49TQvKRKhQKhcK+obqk+Uj9j30iA6u3lFptaovMxh4u9bz3
5P6XPQf1rflbrqJS7XaSvR2lt6RDVJ2STJIkKcpUaoi5G7546fPS27dkxw3p
j8h+iNQOeS21cOHCklO4evVq2cuwj83LwP0PH8v9XqdOneQ5mLOdJo0jcuYr
gS4fLMDikOsI3nMX9Vv1kx6MLTqNwrrDDw0/T5YmjzXr8jccfYQVu29j9NwD
aNj6A/jmKoI0jmnhyN6iXllRImxtdPpgPhaGnW97rm1P6FRdUqlUKs1P1SXf
DqzJDg0NFW8g91/s50jN6cSJE6JVvspezlrgnpHz5b5x7dq1aNq0qfgb06RJ
I3oZv6ZmxlwX5k23bdsWPXv2RNeuXaU2m5naxYsXF42NmibXDLW2ggULiv/y
yJEjsl7o0aTWRi2We1r6NKlP2kL+ozXBY8BjwXVw8+ZN7Nq1S+qYeIzpW6WW
Sw8BvZWsdWcme2LQbhUKhUJhu1Bd8u3JXo7MZK5cJ0j6DKZ2Soui/tUwaPI2
BO/7r2hUr/N81KhGzNojfsOomdxRv47wU7q5Z0THfrPi9UxGUPTJ40+xfNct
DJm2A9Xqd4JX5hyyN2TdD/e1uXLlgr+/P2rUqCF53qz/ILkuuP/lfXwMe9nw
d1KnTg3PsOeoWq8DhkwNxfKdP8oYrHPmeDw2Rf2rw8fXD4OnhBh+vqzK8/9K
xs/GY0+wat9dTFxyXDK8c4edW3ooqVO6uWdCkbD18l6vKZi1/jPxXRo+b2Uk
VZdUKpVK81N1yTcDPXH79u1DgwYNpFaZ/QTpHWQvQdbz2pIeGR2mnj7mgVNX
HTx4sPRHZF44NUr2hmQPIO4tyZQpU8r31C7psWzdujVmzJghPczps6QnlH3T
o3v/2H+Rfkwen3HjxhmS/WgL4HGhz5Svn8eLtU0ffPABihQpIu+9iJp/ngP2
Jb169apNryGFQqFQJEyoLvnmpO42c80l1GjcLWxvnQ2p0zijQLEK6Dt2HVbu
uY2t1CPPv1mt7sYjj9Gu11TpURilt2T0XpNhTJo0GcpWbop5m79+9bmbePqW
7bqJMfMOSv14QNjz+OYpBpf07rIXJE33hilSpAy7zwM58haTMVt1Hiu/y9pl
5lDzOaPro9TlOg+YL30XK9d6D/O3XDH83BlFas6bjv0m/tlpK8/jvZ6T4Ve8
otT6p07jhPSunpJ91DLs8xpz2tmj1Og5J3aqLqlUKpXmp+qSr4fo2S7U8KhN
7tmzR3pLWiPT0JyI0MvY+5J6KntFUjejXnnp0iWcPHlSsqUvX76MH374AXfv
3pX+iNQ0WRtO7Sy+OmTex+dgbjVrepjTndjBY8J1Qi2X7y96a5lHRL03oh6e
+i/9qewLylwd+i4VCoVCobA0VJd8A579F/M2fon6rfoiY5ac0j+Q3sZew5aL
xrf1xB+v5F2Ml+f/xewNXyCgWouoPsnY6rrD6JkpO7oPXfZGY3Gu1A6pl7HO
mprZqg9/kjrsWes+w8RlpzA5jPyaP2N+Cx/Dx/J3+Lsve72sZ6afktk/9HZu
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
7V2XTMIb/1Jc/PUHfVGbTzyheWsvcoZ3sZKh3MsNndLFrQCVDalHPYYtpMgd
n3HfpeLrFgqFVic+Y2etOkNV6rTl3kj0SFau2ZrClx3nXK04E7WK6JKCjAjo
LmfPnqXq1atTcHAwnThxQuklCQSpDrzvkYPz8uVLevDgAR08eJD1efjHoT8K
2TnItoB/3JYtW/h7tDUJgUCQMfD8+XPavHkze9A6OjqSr68va44ff/wx/f77
79x3rQ/4Hv0z3Kp3Gd34uz35S46aGUP5vYtS5ixZteaok+Zk4/574Phoix8f
2ufMqNNUolx1ypTJUO5Q0uOPe/7W3Sdyra/08UlPxHxpjUbdyMnVkwZMiOb7
KKXXJExfFF3SMNEHBc/dbSefsndct6ELqGSFmpyXg/2cfM4eFFS2GnXqN4MW
bfogRf3lQqHQNojzfv66S/zZijoIPdMVqjRi3+2tJ342e+9UdElBRgX0GfRK
enl5sTYDTy2BwF4AjfLvv/9mn0nMb546dYrGjBnD89243kOnKFiwILVo0YKi
o6Ppzp077IEgEAjSN3DOw1u5Tp063C9doEABGjBgAF27do2/ZkiPVCNBl1T3
6+lmP6t1sVx2lMc9Z/V5KlG+upZGqHE83uq40BTrteibkP9gweNjDhszTpgJ
VyXJudF//B3inyesdltasesr1jSVPj7pifC8m7hwPxUJrEilg+twf5fSaxKm
L4ouaR73X/0v647YO8E1rv/YlVSxSmNydPbg3BzMdhYtUYladRtPc6LPi0eu
UJjOiM/TiM0fct3j5unD+9X4XB07dzdtPvYkYd/PAo8Z0SUFGRn379+nzp07
833Z2rVr6Z9//lF6SQJBmgMaJd77yKvHHPfFixcpPDycQkJCuIcS13/o9/Xr
1+f8C3iyQtcXCATpB5jJRo9048aN2WPW3d2dunfvzuc7eqjN3XdI7JdUvdPc
VHp0spy58thNvyT2+1t0HkUOKoektbKevtJiJUNo+vITZj/2+sMPqWXXsazz
Jn08w8e/WIkQmhxxyORMlFA/d134jdr3nkKO+dypdbfxtOXEfxRfkzD9UHRJ
y4mssN2XXlPM6ecUtftrGjp1I1Wu05ZzeaFRop+yUNEy1LjdEJoaeZS2n5E+
cKHQVon9UHgyIEvOw8uPe6EDy1SlEdO30sbDP7JXQ3L2TEWXFGRkoC9k7969
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
2JZ1dOiSKpW2Jql/jrv3CPvsl4zY+jEFV2+uodWqkvZNvtUniwSU55lvpdcr
tJzw5Bq/YB/5xf8Oy4bUo/nrLiu+JqFtUHRJ+yKuBdB0Ys6+oNV779Comdup
RoMu5OZZkLJnz8V5xr5+Jaley36c+73lxH8UX7PQvog8+e5D5pNf0bLcHwld
Ev7I0Xu+Ye+B9JI1L7qkQEB079497mfx8vKiDRs22NRMnUAgSATOTXj0/fLL
L/TJJ59wv2T9+vXZiwGelJiRrVy5Mk2ZMoUuX77MeqZAkFZADz7el8iwge8A
dPOaNWvSzp076aeffmI90tYz1liXNKFJqlRv57jttF9y2c4vKKxOez1z3Ik6
5XsqFfkWKUnj5u1WfL3C5BFzmpjZdHRyozY9JtK2k08VX5NQeYouab+EvgOf
hx3nfmV/hwkL46h+y/6U38ef+9Ny53Gi/L7FqHrDLjRqZgznf9t6j5ow/XLT
0Z+4H9I/KJj9I/E+7Nh3OkXFfkW73/+DDlxLH3qkmqJLCgQJvS27du2ismXL
8mwoMlEFAoFtA+ctPGGfP39OX375JftOtmzZkudlke3t6upK5cuXZ53l1KlT
nK8jEKQGoDXiPYj3GrLUoJFDH9+0aRPnNSHfydb1SDVQ+yXNctHfO2nPedyr
dt3m+05DOdxqehcKpFGzdii+XmEyeeNfWrr9JgVXbcL3e2Pn7hKNQSi6pJCJ
awGyjHeef0kbjvzAGVnNOo7g3klk5iDf26NAYapcszUNmrSWVsfd4/lwpdct
TP/EHtngyespoHQV3iPG+6x1t/EUuf1T9khFj6/Sa0wORZcUCBKAvI3x48ez
ljF16lTWOgQCQfoA+tQwv40MkTt37nB+d+fOncnX15c1Ssx8lyxZkvO+Dxw4
wLO0AoE1gPfbpEmTKCAggPXIChUqUHR0NGfMwyckveiRaiTMcWv2Aar06m/2
nHuzctctql6/s9F+UrUuOVp0yXRNZGEMnryO8wPC6nag5TFfKL4mobIUXVKo
TdYor/xNsRde0aZjj2nWqrPUpsckKhJQgffw8Hnp6u5D5as0oj6jlvFniHjW
WofQ4JCnPnTqRqrVpAeVCa5LfsXLxf9Zm+q16Mt1ypzVF3i+Hr2uSq83Jdxx
5gWNnLmdSpavybo3stmQtx2x+UPu70/vurfokgJBAnDv+OGHH3K/JO4v9+7d
m+7uJwUCQYJGCT0I/ZHfffcd7du3j/r27fuujw3ZI8WKFaOuXbvSjh076NGj
R3KuWwmYU3769Cl988037K+IfBccY/SjI1cM19hvv/2Wfzfp3S8DuuPs2bM5
Mx7vK/y5ZMkS9gWBRp5e31Oce6Odc/OufzLBR1H1nn3n3iAHIaxeh6QZ3Kr3
tI6binz8StCYObGKr1eYMuKet1GbwTzP3W3oAu5HUXpNQuUouqTQFONYo/yN
rx0LN1ylLgNnU2CZqpQrrzP3Ujq5elKpCrWo66C5nP0N/0ql15xeCA0Y/akT
Fu6jmg27kaOzB6kcHHT3B99+Fqv3WDNnyUoubgUotGZr6jNqKS3Z8nG6uZbj
vQS/43Kh9dnP1MnFk+q26EsL1l/hft39V9O3Hqmm6JICQSJwn7x69WrWL7p0
6UK3bt1SekkCgSAFgDYErezly5c8T3vs2DH+bCtRogRrSU5OTlS4cGFq06YN
rV+/njUzzIcLzAP03y+++IKvm506daLAwEDOIYLPp4uLC2vAOMYgelbRj46v
4XvKlSvHPozQLaEfpxedEjp2REQEewTgPYR9LGQxff311+wrAF08PYPnuFUa
eluSfslErdKe/SUjYz6jsNptDd7/qP9esEgpGj9/r+LrFaaMuA9G/1OJctWp
aFAwhS87rviahMpRdEmhJUTPNfSvbSd/4cw09O8hS8sxnxt7Ajrmc6fipSpT
u15TOF8rvWhlac0tJ3/mfb4q8Z+97p4FKUuWrG+9Zt5L+vlrwl8lk0MmypY9
J+8z4XrevvdUnn/GTL7Sr1Gbey6+pqlLj1DFas0oT/x6sWZkLs2OPk87zr3g
95bSa7QmRZcUCJLiyZMnPOuJHA3ce+I+UyAQpH+oNcrffvuNM0jOnTtHEydO
5Llb5CWDPj4+1LhxY1q2bBnvS/zzzz9KL9vmAN0Nx2b+/PkUFhZGHh4eXENg
Xh7entDr0HeOLOoJEybQokWLaN68eTR69Gje76lTpw7P1EOjxM9As0RmdZMm
TTh37Mcff1T6JeoFZv8xnx0SEsJ5NkWKFOF8pc8//5yzmNK7HqlGQr/kWy1S
s77Xqv/teY576bab7Blm6v7Hr1hZzkVQer3ClBPzfz2GLiQXNy9q2HogrT34
veJrEipD0SWFySXmbJFHsv3MM85PGzhxDYVUb0HOrvk5NyePkyvPfjfvNIpm
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
okeQ9teN7F2++9nE7zlw4IDF5ytml2bNmhVfU3tQzxGLzcrg3nLiP1SjUVee
6dDXI6mrT1r++lHDDQ/fovj7wVKKLikQpAzImsB9v4+PD2sAkrMgEAhsAegZ
xN4Jegnv3btHsbGx7IWDrJxMmTLR5MmTOffbEkyYMMEq9Z92/VWzRo0Uv947
d+7wtRi9oSdPnkzx49krjOmShup/d89C7IcP7ylr1afINoa3fkrvP+D1OGZO
bIrWsnTbTQqt2TL++RxMPj90qMWbbqRKzf6uX9LE6y+D3BuZ41aUuC9v3X08
OeZzo/a9p9L2M88UX5PQOhRdUig0gzf+ZZ0u9sJv1GvkUnJx9+LsRniCG8Oy
Zct06g+Vgfw7g7Wl+vPxra6nXTto16Dg999/n6xzFnomfJGQT7Nm/7dGj8m4
ebvZh1Pf8xvzy07O68+cJQtF7f5a+feBBRRdUiBIGTTzYJs2bcpebwKBQGBL
QD8hsm3Q092rVy8qWLAgbd++3ewMbjW6du1qlfpPu47CHnpKgX3radOm8Xw6
Ztllljt5MDTHbaz+dXBwIN8ipThrM/bcqxTXpph77TJgNmXKnCXF9x/wqWrS
fhj3KCRnLej96D82ihyd3Ew+f5as2alFlzG068LvqVKzQ5csWqKSydcvuTfK
E31DyG+vUKUReRcMoPHz9tDB6/8qvi5hyim6pFBoPpHp3RZ5Lp75eYbbVN05
atRonV7BJDWklme5zn6lvr1KrQwZfd+bXGA2qXXr1lSifA32n9F3DJABBG8P
Y8//nnYdY4XXjxxvpX//llB0SYEg5UA/0pgxY3g2Ehm5+LdAIBDYGpDTjczB
unXrWjzDDTRs2NAq9Z92/WVpDqIhxMTEUGBgYHxdO4p+/vlnqzymvcG4Lmm4
/sWMFnIkW3efQCt33WJdJrm16Zr996l2015Wu//wCyhPkxcfTNZakOkTWqPl
25kr488P/Qne/il57caI3JvimOM28fpFl7QNQl8fNGE1nxc1GnSmqNivFF+T
MOUUXVIoNJ+bjjyiWk16cE/hsWPHTJ4DHTt21Pgs185TVGnUjtp1itachwEf
Gn31Kf6dXMDfffjw4ZTfy49Gz96p8/onLtqfZPbD0PPrrNVKrx/zHkq/B8yl
6JICQcqBvZ/r169zzw/8zfbv36/0kgQCgUAHR44coYoVK1Lfvn2TNbMSEhJi
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
Y9hC9oRs0WUMteg8mjr2nU4DJ66hmVGn+XvRZ7Hn4muL9vxxD4R8mKBy1Uy+
/wzp/obq/5y58nK25eZjTxSp2ZPkcRs555A3vmij+EvaOvdf+y+NmR1LhYqW
pophTfjcUHpNQtMUXVIotIzQ2zy9i3B98fz5c5PnAWYLixYtqvWZrUr0LEni
U639Ga7Py1pzrzGpv7Wzi4vZXkZ6z9mDB6l8+fK8H4o6JznHB3VLtbodjO45
mvv6HRwy07TIY4r/zpND0SUFgrTB119/zfsp6E1HTuz//vc/pZckEAhsHFOn
TqWVK1fSt99+m6yfX/HWP1y7DtPVXVS0Zs0ak4+XoEsmv/7Tfv4NGzYk63Xp
A66p4eHhvP+D141edYHlsKYuabAGv/I3z1wjv2brqaes86HHEn+PvfAb1+gp
eXw8Bnoa0dto7vvfVP2fOXMWqlavAy2P+UKx2agkuqSR868sz3GLLpkeuOPc
r9Sy61jK4+RGHfqGU8zp54qvSWicoksKhZZx4Yar/LnUqFEj+uCDD8w6FzD/
kjVLFr174brU9V5P3Jd86xljYO65W7duyT5fUWfOnj2bXN3cqeewRbTv8l/J
Oj5dB801sGdqLhOzLIeHW5apY0sUXVIgSBvgnnn79u2czd28eXOrzi4KBAKB
PuC6g55EvXWMVv0D7ckUkuiSyaj/NOnj68O+Fk+fPrXKa7179y61b9+egoOD
6fjx41Z5THtEWuiSaUHkhXceMIucXDzMev8bIzyegqs2pQXrr9C+q8m777AG
TfZLvj3/Eua4RZdMD4TGjT7J8pUbkHfhIJqwIE7xNQmNU3RJodAyxl54RU07
DKf8+QvwfrS5czJr167V+bxO4gOtd59R92vaP6MmZopu3bqV7PMV3knt2rWj
IoEVaOrSo8k6NtijzZEzj67GqrP3aPz1o05Jz5okKLqkQJB2ePHiBc9hurq6
8lz3r7+mUmEjEAgEb4F+S5N7zCrMVJcw+ViBRvwlTdV/SXQUlQPXHY0bN6ZL
ly5Z5XXu3LmTNdh+/fqZNZMu0I+MoktC79lw+Efq1H8mubgVMPn+N1T/Z82a
nSrXak3z11022+Mytci5NyUqmTz/RJdMX0T/cP/x0eThVYRqNOpGUbu/VnxN
QsMUXVIotIz4PB45czv5FA6ivn37WjQDtH3bdsqeIwcl5uSZqGeT7NMZ33M0
Z07IGDZt2kRFihShhm0GcXZ2co4NPtcT6mLtGlpbczX++sfN26P47zmlFF1S
IEg7YH8Ifen16tWjUqVKsSeFQCAQpCbgIaFds+mrf7Jny2Zy9jnRX9Ly+k+f
TonsnvPnz6f4NWKPZ/jw4VSgQAGuM8UnI/nIKLqk+l5o09GfaNCE1VSoaBmj
73999X/uPM5Ur2U/ioz5lPZeUVaT5PuXqNNvc2+Mn39lZI473XHTscdUr0U/
csrnQb1GLlUkV0loHkWXFAot57pD31P1hl1Yx4uNjbXovICO2aFDB97TVqn3
DzWyFXX3xTU/H3W/5pDJIUUZ3MCPP/5IvXr14hzuEdO30v5r/ybruIyfv1er
RjZeTxt6/e75CyXb39JWKLqkQJC2+Oeff9j7rFChQtSzZ0+6c+eO0ksSCAQZ
GNAas2fPrpGVbbj+MTVTjX5ES+s/za8l9J9l5ewv8JdffjErw8cUjh49SpUq
VaIWLVrQxx9/nOLHs2dkJF2SeeNfijn7nMKXHadq9TpSrtxOJuv/zFmyUrGS
oTRwfDStPfg9xV2xjZxk5HEXf5vHbez8k9yb9McDH/yP36MBpaswZ648rfia
hPopuqRQaDmh2w2ZtI59n9Ezef/+fYvPD9SNmI0ZMGAAlStXLv5euiCVKVOG
unbtSgsXLqQTJ07QqpUrKb+Xl8H5bhdXFzp58mSKz9XNmzezxlqrSQ+K3nc3
2cdl6fabOnqjSrM2URneQ9V+jdAmscel9O86uRRdUiBIe6j3WNzd3VmjtMZ9
uUAgEBgC9kFUGrqFofrHVJ2IOlBn39aQRvJu5kSV5DnRL25NwB8D9QrybiIj
I+V6mkJkOF3yLTGDjV6CcfN2U4NW/cm7cCBlyZrt3fs/S5as5O7lR1Vqt6V+
o5dTxNZPOJNEqYwbfdT2lzR0/skcd/rknotvqMvAOeTk4klN2g9L9lygMHUp
uqRQmDyuP/yQajbuTl5eXuwzmZIcbGP4+++/6caNGxQVFUWdO3emZs2a0dy5
c+nChQv0xx9/pPjxb9++zX7mBXyL8Xz6/mv/TfYxQY1RJKCC0R5JY3NIKq19
Vv/AivxZovTvOjkUXVIgSHugf+nIkSMUEhJC1atXt8oco0AgEBiCo6Nmj5hh
fvfdd0YfB3PXhvst9T++ZjZ35syZ6ffff7fqa8M8UIkSJah169b06aefWvWx
7REZVZdUc8/F1+w7GRnzGc1d8z5NjjjEc1TTV5ykiK0fs3bJeuQH/1N8rdqc
iTnuEiEmzz/O494kumR65Mo931CVOm3J1cOHhk3blKL7XWHqUHRJoTB5RM/k
2Lm7ya9YWfYXv379euqcSKkI7H3PmzeP3NzcOcvHGv2JqEdy5Mytd/4hsV9S
vcdvqJZXvdujxLqU/l0nh6JLCgTK4PXr15x9gx4fZOH89NNPSi9JIBBkQJw5
c0Zvj6O++ue3334z+lhNmzbVqX+S1E8mGFo51KqvDVmIHTt25H7QjRs3sk+G
IGXI6Lqk9j3Svst/sXdketB/MMet9pc0dv6VFX/JdEu8D0fP3kkF/UtzBvyi
zTcUX5MwKUWXFAqTz53nX1Lr7hMon7MrTZgwId1pTYcOHaKKFStSiXLVaebK
M3TgmnX2MBdsuEqePv669XqSz/fEfD6VIZ1SlZAtuWTLx4r/ri2l6JICgXK4
desW9/jgnnrbtm0mMycEAoHAEiDzxtPTU0u70M0dBl2cnU1eg/r06aN/P9eA
1qntkRMeHm6116be23Fzc6Nhw4bRo0ePrPbY9gx70iXTGzmPu2SIyfOvbEh9
6ZdMx0S/bssuYymPkxt16BtOMWdfKL4mYSJFlxQKk0/MLUfGfE4h1ZuTj48P
rV+/nueu0wO++uornt928/Ci/mNXWn1eGnukExftp6YdRpBf8fLk4OCQ5LNe
J5/PgH6Jf1eo0kjx37WlFF1SIFAOyIyFHokZxJYtW0peg0AgsArg2bNkyRLK
o/HZrm/2Q3M2JH/+/HTlyhWjjzt16lS99Y+uTqKrfeL5r127ZrXXCO9zXDvr
1KnDnkGyr2MdiC5pu+R+Scxxmzj/kHuzYOM1xdcrTB5x345+13KhDcincAma
sDBO8TUJEym6pFCYMsZd/YfGz9tDRQLKc2bh8ePHU+eEsiKQ0zhmzBjKl8+Z
mnYcQRuP/pjqx2n3+3/QvLWXqH2faewbqW8vUncG6m0fZXwdt3LXLcV/15ZQ
dEmBQFkgs2HkyJHk6upKs2bNopcvXyq9JIFAkE6Bz+yIiAgqVqyY7r6qid5G
R0dHzjj89ttvDT4+crr01T/aGqe+fV03dzfei7EGLl++TA0aNOAsRMxvS9aN
9SC6pO0ycY7b+PnH/ZKiS6Zrxl35mwaMW0keXn6cE7Fq123F1yRMoOiSQmHK
Cc2tx7CF5O7pQy1atKAPP/wwdU4qK+DNmze0ePFiKlCgAFWu2Zq9qK01v20J
R82MoZy58pKOl4sBjbJZxxGK/54toeiSAoGy+L//+z/uUapbty6VLl2afSsE
AoHAFNAfCA3x8OHDNGPGDAoLC6NMmTIZnPHUzu7VrF+wL4LMQhcXF34s7Avr
A3oUDe/R6mqdmv8eNXKkVV73nTt3qFu3brzm6dOn07Nnz6zyuIIEiC5pu+Q5
7rd53MbOP8m9yRjcdOQx1W3elxzzeVCfUUs5s0npNQlFlxQKrcUtJ/9DzTuP
IkdnV+rVqxfnXNsaMH+E7HDs9weWrkLTIo9xv6dSx2z+hiuUNWsOMpg1qfH/
js4e6cI7W03RJQUC5QFfjWXLllHBggX5unz37l2llyQQCGwMpuoPfVqg3n1U
VdIeKzwGrj9Xr17lHkTsBy9fvlxvbvb333+frOfPli0b/2xK8fjxYxo+fDjl
y5eP+vfvT/fv3+e9HYH1ILqk7VK7X9LQ+Vc2pJ7okhmAyITHPXDxUpUpsEwY
ZywovSah6JJCobUIz4rVcfeoVpMe5OjoRL1792ZfdFsBZnGgSQYGBpKvXxCN
nLGd9l76U/Hj1rHfdINek5o53vj/eesvK75e81+X6JICgS3ghx9+oJ49e3I+
d1RUlMwlCgSCJDCn/tDXy6hSGemtiv9albAqvB+MLGv0a4eGhpKvry9rlfp8
JdDbbenzT5kyJcWvH9dIeF44OztT27Zt6ZNPPrHaXLggEaJL2i5nRCX2Sxo7
/8RfMuNw96XX1HnALHJy8UwzTzOhcYouKRRaj/uv/UtRsV9R9YZdKK+jEzVt
2pQuXbqkuGc45obmzp3L2bTehQJoyJQNtOvC74ofL3D7mWeUKXMWrq+T1vS6
PZSd+s9UfL3/3955QFV1bV345yUxTR9o6IgF7BUVBLGgYjfYYleCHXtsRMVu
FAURY++iiFhottgrYn2JMcb0GDVFn70LIjp/987D0L20u2+Z3xjfCCJ6FxgO
58y991qaylySEN1AXH/FeUxXV1d4eHjIOQ6EEJKCJvcfqfOKf7LBtB+XskdS
vG1nZ5dmjrVYD9myZQucnZ3lGsn48eNx5cqVNHWcPXsWb775psavX726ExIS
EvL0uYvXFOfMxb2K6EN08uRJmaWS/Ie5pO6aZh53Nt9/Yr/knDUnlddL88dF
W36Au2dHWFjb45NJoXp1Ls8QZS5Jaf4qrmlLon5Gi48GyTPdYqbhokWLlPTp
EWdwTp06ha5du8LMzAxlK7lgzMxNOpNJpuhct3UmP/8z3u87122lvFZNZS5J
iO7w+PFj2S/N0tISo0aNwtWrV1WXRAjRETS5/0g/Kzu73FD899ChQxleR2ST
u3fvRqNGjeS9gVi7PnjwoNxPmUJQUJBGry/2Nv7yyy+5/pwfPXqEdevWyXmN
ohbRV1JklKlrIfkLc0nd9e9c0u213/9iv6SY56y6Xpo/imd2Me+gpGNV1K7v
heDQM8prMmaZS1Ka/4p9k+v2/Bf9Rn4u9yeKTLB9+/by/lNbZwj/+OMPzJgx
Q57bLvJvU9Rv2hWzVx3XibPb6R0xbX3a80km/5xRSn2PYGVTSnmtmspckhDd
4sKFC/I6LPaNh4WFKd/HTgjRDTS5/8jODL3oXlq8ePFM+9mKnrfffPMN+vXr
BwsLC5QuXRpjx45N87HDhw3L9vXFnzl//nyuPldx3RN7Inv27CnXaUTv3c8+
+0zu3eQ+yYKFuaTu+mq/5Gu+/6uLuTc8x21Qbth/B227j0IRMwv57BZ+4I7y
moxV5pKUFoyi36SY0z1zRRzqNu0CU7Ni8j5V3IuKed0Fdf9348YNLF++HHXq
1EHhwoXlmaCm7fpjceRPSmfcZOeanVezvLd/dX/w0jfeLCQzX9X1aiJzSUJ0
C9EvTewPqlSpkswnRQ81QgjR5P5D5BPps8v0eyTT/z0ODg64fv16htcT1yLR
X2ft2rVwcXFBkSJF4OTkhDlz5sg1ZXHWJWx9GGrUqJHm9cU9nZ+fHx48eJDj
z1H8nd9++63sI+no6Ih33nlHzrgR+zPv37/PdRotwFxSdxW5ZNnKtV/7/c+5
N4aneF4XPUNruDZDCYcqGBcYo7wmY5W5JKUFq8gC1+2+jlGfbUAlp/ooXOTf
cn1azGHYv39/ru4v0yPuN8XsxLlz58Ld3R2mpqawsLKHS702KFXWCQ7lamDC
3B3KvxbZ+fbb72Xcr5DJWuXGw/eV16qJzCUJ0T1u374tv//Mzc3lHiHxPE4I
MW4y3S+Z2V5Fk3Tvz+xj0+UYDRs2zHSGjLhvE70hf/zxR0ydOhVlypSR+WSt
WrUwbdo0fPfdd3L9WszJFj1xf/jhh1ydsRavER8fjyFDhqBcuXJ4//33ZY9L
cYZc3IuKPj9iLzkpeJhL6q5i7k15cY77Nd//zCUN0+j4pxgwZiGsbEujcSsf
2XdSdU3GKHNJSrXg6efy/PSqbb9jqP9KlK/qhsKFi+CDDz6Q6+EDBw5EREQE
Ll++rPEMRJFnHj9+HAEBAWjZsqW8vxT3tOaWtmjeYaA8sy1myvQaFgRzK3s0
bdsfS6N/Vf+1yMLCRcxS/fxPe8+fei/C+r23lNeqicwlCdE9RBZw7NgxeHp6
onr16nIeDiHEuEn7Mzrr+4/0PecyfGxmey5f/t7ChQuzfG2xT1H0ehS9HUVu
Jc5oi32Rtra2aNy4MSZPnix7AN25c0fjz0fM24mOjpb3GqJ/pDivLfJIsSdz
3rx5si+luN8cMGCAPEseHBwse/CSgoW5pO76z9yb7L//xTluzuM2TFfv+BOe
Xn1hWswK/UbNw5ajT5TXZGwyl6RUe4q94uI6J659/nO2wbNNX7k2895778ke
lDY2NrIfZP369dGhQwf4+vpiwoQJci195MiRsh9Q8+bN5Xq66JEm9vyI+9fC
RUxRqUZ99B4ejHnrv0bEgXuvzmyviL0Ej1beMDO3xoBPFyPyWGKeP49J877I
1zPhoqY33ngz0/v59PsUxNl41f+OmshckhDdRPR3E8/mYi2nT58+mfaAI4QY
D5n2jczk/iP1fkiTNB+bPp9Mq8j+Xpf7iTVpsd4s9kkuWbIETZs2lWvXIk8U
M25KlCgh17HF+7t164bhw4fLWV4TJ07EoEGD0KlTJ7k3U8xaFLPAxRltcW8p
3hZ7Ijdt2oRLly7JOkQWKty3b5+833R1dcWePXu09NU2XphL6q4yl6zs+trv
f+6XNFxjTyW/fL7dKfcOVXKqh+mLDyivydhkLkmp9hX5ZNSxRJkfitxQ5Hyd
ek9EDbdmMLe0Q6G330GhQoXw7rvvyntSobi/fPvtt/HWW2/JHNKhnBMaf9gL
g8YvR0jYWazbe0NmdmK2WOrXEv0YxwfFokwlF1RzboyZy47kqfaAl39erCfa
liiHEVPD8qXf4+yV8Wnv8TPsSfjb994vovzfTlOZSxKiu4gZDz4+PrC2tsai
RYu0No+MEKJ7aHL/keXZzkw//n+9KP+XQYm3RW9bTRB54ZMnT2TPCdEPUvw5
sUYt9j2KfFLcG4p7wdT3h+Jt8T7xe2J9W+STog9lbGys3Bt59+5deY0T+8VT
I854z549W+7NHDx4sNxDSQoO5pK6qzjH/fd+yey//51cm3HujQG7Oe4xuvtO
h9kHVvDqNgJrdvypvCZjkrkkpWqVGWX8U2w6/ECeuw794hqWx/6GeeHnZIY4
Ye52mSuKtbw5a07Knhertv8hc8gNB+/K/Zfps8j0bjr8EJ37ToJpMUu06zkG
a3dfy3W9VWo2TPNzunipihg5Lfy1NWRns3YD0t7rZ9hz8PfvOVSoqfzfS1OZ
SxKiu4hn/23btslnffEMf+TIEdUlEUIU0bJlK7i5uaFFyxZyL+KwYcPkDBpx
/nrRosUICQmR+d20adPl7GzRO0esaWSWXWSVa3h5eeW4LnGdEtmh6IMr5uSI
89k//fSTnJ144MABmTuKXhSi/6Q4By76jF+9ehW3bt2Sey/F3vD0WWR6RG4p
Pmexr3LlypW56mFJNIO5pO46dcGeNPO4s+rr4MRz3Abvws3fw71RB1hal8Tw
yWvz9HxLcyZzSUp1T5FVin2I4qy02FcpFD15Y44/k/vMc/N3zg8/D1ePtrCy
dcCIaetztc9xxtJDWeaGxUtXkrN9RJ05+TvnrDmNN98qlMV9vcmr/4r7+xYd
Bir/t9FU5pKE6DbiPKM4B2llZYUxY8bg2rVrqksihOgJIu9btWoVzIoWTXNf
lFlOKd4n9jSKjDE/Xlec+Rb5ocgdhWI+jnjf6zLIzBB/bsuWLfKMeIsWLWTf
clIwMJfUXTOc4073/JHyfp7jNnzFs7Z4Ti7hWAUuDdogeO1/lNdkLDKXpNQ4
FBnnsMmhcn9jnUbt5dnvnP4dlWt6/PPzOot+SuIces9BMxG258Zr/77AVcfl
XvkM9/Amae/nU94eFxij/OuoqcwlCdF9xDnJdu3ayVkT4eHhcn8SIYRoyo4d
OzJdUzXJpNfkoUOHVJebKWI/5rhx42QfTH9/f7k3k+Q/zCV115RcMqvnj5Sc
0ql2UwStZi5p6IYfuI023UfC1MwC3QZMk+cTVddkDDKXpNR4DNt3E607D0eR
l9fZHgNnIOLQPY3/7PRF+1+zpzFtRvlWoXdQ0605vAcHIHDVyVfzasQ87TEz
N6F+064vP6bQy5/7WfRqMkn79737XhF5Hl3111BTmUsSovuIfUZr165FpUqV
5KwxcRaSEEJygljXSL9Gm9KLMnW2ERAQoLrUTBH7LL/66iu0bt0aZcuWlTNy
crP3kmQPc0ndVfaXTNkvme75I7VyvyTPcRu84tzi7FXH5b93Sceqsp+a6pqM
QeaSlBqP4jobsPyonH9TqqwTJgRv1/jPVqxeL9P9jOnzyOx6Lf3L5F+vPj51
f/isfv6ntmXHwcq/fjmRuSQh+oHoxSZm25qbm2PmzJly7xAhhGhKr169Xnv/
I+zevbvqUrNErNGsWLFC5pJifvf58+dVl2RwMJfUXaeI/pKVXV/7LFKDuaTR
KGY/9B+94OWzXGl4tu6FxZE/Kq/J0GUuSalxKXpV9h35uezn69mmL5ZE/fza
PyPON/yTHf7Tc+XVrEmTVO83SfcxWf58z+T3TP7eW2CSfu/lW29jxbbLyr92
OZG5JCH6gdgXFBcXh8aNG8PJyUnOkSCEEE0Re641uf9xd3dXXWq2XL9+HYMG
DZLnuQMDA/Hw4UPVJRkUzCV1V/GcU76Ka4bnj7S/NkH12k3YX9KIXL39D3h6
9YFpMSv0H/05IuOeKK/JkGUuSanxuXL7FTRq7SOvswPGLERkfEK2H1+hqnuG
vQCazqBM8+sszjllzDzT2qXfZOVfs5zKXJIQ/UHMjhAzd0uUKIG+ffvKGbWE
EKIJX3/9tUb3PxUrVlRdaraINZqDBw/Cw8MDLi4u2LVrl+qSDArmkrqr7C9Z
JeN+yZReUynfx+Jc75w1J5XXS7Vj7IlkTAzZ8fL/DTdUrtEAny0+qLwmQ5a5
JKXGp5jFPWHuNpStXBtVanrIOdtZfez6fTfhUL6GRvnj/6W53zJJlTmapPt4
k4z9W1Kd7U59H1+morPc46n6a5ZTmUsSol9cuXIFPj4+sLa2xuLFi5GYmKi6
JEKIHiDmZ2ly/1O+fHnVpb4Wcd0LCgqCnZ0dBg4ciEuXLqkuyWBgLqm7/p1L
umW5jyJFuV+S57iNSjEfodvLZ7qixazQpttIrPniL+U1GarMJSk1TsV1tmu/
KXLPpJg5lt11VvSlHBsYjVLlqqfd45jp/sfXv++fs9/p9kmm+/v+bWqOFbGX
lH+tciNzSUL0CzGLe+vWrXKfkDjTffToUdUlEUL0gJ07d2p0/yOuLfrAxYsX
ZV5ma2uLZcuWISkpSXVJBgFzSd11qugvmWG/ZNq5nib/x7k3xuqiTd+hTqP2
sgfaJ1PWyf09qmsyRJlLUmq8Ltx4AXUadoCVTSmNrrMyn5wdhZJlqmZ7Pjvj
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
pXl13Z7/ouVHg2Ba1BI+QwOx6fBD5TWplrkkIcZLYmIigoKCYGdnh4EDB+LS
pUuqSyKEEK0i1mhOnjyJZs2aoVKlSoiOjlZdklKYS1Jq3IpZ3OODYlGmkguq
OTdGwLKjymvSJZlLUkrzqji7PX3xAVSu0eDltdYZkz/fpbwm1TKXJMS4uXjx
Irp37w5bW1ssX74cSUlJqksihBCtIq57ixcvhoODA7y9vfH999+rLkkZzCUp
pWLvTuc+E+Venvbefli7+7/Ka9IVmUtSSvPDyLgE9BoWCHNLOzTvMBDLt/6m
vCaVMpckxLgR/dWioqJQs2ZNuV8oPj5edUmEEKJ1/vrrL/Tr1w+WlpYICQmR
87qNEeaSlFLh/A3fwKVBG1jZOWDk9A2IPZWsvCZdkLkkpTS/XB57EQ1b9EAx
CxsMHLcMUfFPldekSuaShJAHDx5g/PjxsLCwkP+9efOm6pIIIUSrPH/+HLt3
74a7u7t0//79qktSAnNJSqlQzGYYOnEN7EpVgHvjjpi3/mvlNemCzCUppfml
6Jvx6ewoOFSoiWquTTFrRZzymlTJXJIQIvqrnT17Fh9++CHKli2LTZs2yfcR
QogxkZCQgJkzZ8LGxgbDhg3DH3/8obokrcNcklKaYti+G2jdeRhMzSzgPTgA
Gw8/UF6TaplLUkrzU3Fd7djLX/bN6PDxWKzbfV15TSpkLkkIETx79gwrVqyQ
uWTXrl1x/vx51SURQojW+emnn9C5c2fY29tj9erV8tpoTDCXpJSmKGYzzFh6
GFVrNYRD+ZqYGLJTeU2qZS5JKc1XTz+X+9Fd6n0I6+JlMOqzCKPsm8FckhCS
wvXr1zFo0CB5nlvM6X706JHqkgghRKuInrsbN25EtWrV0KpVK5w6dUp1SVqF
uSSlNLVRxxLR+5O5MLeyR9N2A7As5qLymlTKXJJSmt+KvhlDJqyCXYnycPfs
iHnh55TXpG2ZSxJCUhBntw8cOIAGDRqgdu3astcaIYQYG/fu3YOfnx/Mzc0x
adIk3L59W3VJWoO5JKU0vStiL8GjpTeKmVvDd+wSmVWqrkmVzCUppQVh2J4b
aNVpCIoYad8M5pKEkNQkJiYiMDAQdnZ2cu/k5cuXVZdECCFaRazRnDlzBi1b
tkSFChUQGRlpND13mUtSStMrZjOMC4xBmYrOqO7iiYDlxjubgbkkpbQg/Ltv
xiFUMdK+GcwlCSHp+fXXX9GtWzeZTYqek0lJSapLIoQQrSKue0uXLoWjoyO6
d++OCxcuqC5JKzCXpJRm5qbDD9C5z4S/ZzN4G+9sBuaSlNKCMm3fjP5YFvOr
8pq0JXNJQkh6RH81sT+oRo0aaN68OY4fP666JEII0TrXrl2Dr6+v7LkbHByM
x48fqy6pwGEuSSnNVDGbIfwcatf3gnVxR6OdzcBcklJakKb0zTAzt8aATxcj
0kj6ZjCXJIRkxv379zFu3Dj5PO7v74+bN2+qLokQQrTK8+fPsW/fPtSrVw+u
rq7Ys2eP6pIKHOaSlNKsFLMZhonZDCXLGe1sBuaSlNKCVPTNGB8UK/tmVHNu
jJnLjiivSRsylySEZIbopfbVV1+hdevWKFeuHDZv3mw0/dUIISSFhIQEzJo1
C7a2thg8eDCuXLmiuqQChbkkpTQ71+29jlYdU2YzzDK62QzMJSmlBe2mww/R
ue8kmBazRLuefli7+5rymgpa5pKEkKx49uwZli9fjrJly8p+k99++63qkggh
ROv88ssv6Nq1q+y5u3LlSoPuuctcklKanWI2w2dLDqFKzYZwrFALk4xsNgNz
SUqpNpwffh6uHm1hZeeAEdPC5T5K1TUVpMwlCSHZIa4BAwcOlOe558yZg0eP
HqkuiRBCtIroubtlyxY4OTmhRYsWBt1zl7kkpfR1RsYnoNfwYJhb2qNZe18s
j/1NeU3akrkkpVQbyr4Zk0JRvFRF1GnUHiFhZ5XXVJAylySEZIc4u71//37U
r1/faPqrEUJIeoyl5y5zSUqpJoossmGLnihmboOB45YiKv6p8pq0IXNJSqm2
DNt3E607D5d9M3oMnIGIQ/eU11RQMpckhLwO0V9t9uzZRtNfjRBC0iPWaL78
8kuD77nLXJJSqoniTOHYwGh5lrt67SaYtSJOeU3akLkkpVRbir4ZAcuPyvk3
pco6YULwduU1FZTMJQkhmmBM/dUIISQzUvfcFdfD8+fPqy4p32EuSSnVVDHz
pmMvf5gWtUSHj8di3e7rymsqaJlLUkq1adSxRPQdMQ8W1iXh2aYvlkT9rLym
gpC5JCFEE9L3Vztx4oTqkgghROtcv34dgwYNkue5AwMD8fDhQ9Ul5SvMJSml
Gnv6Oeat/xou9T6ETfGyGD1jo9zfo7yuApS5JKVU267cegWNWvvAtJgVBoxZ
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
     "], {{0, 840}, {1318, 0}}, {
     0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{514.1369791666668, Automatic},
   ImageSizeRaw->{1318, 840},
   PlotRange->{{0, 1318}, {0, 840}}], ";"}]], "Input",
 CellChangeTimes->{
  3.773243714354022*^9, {3.7733193201849422`*^9, 
   3.77331933433648*^9}},ExpressionUUID->"1e85eac4-e0bb-46be-ab31-\
3a8c192992e5"],

Cell["\<\
We use the exact same coordinate system for this packing as we use for \
V3E6L0N2T1_1.  There is a self tangency, so we should be expecting that we \
will only have one free variable.  We can use the coordinates for the centers \
of V3E6L0N2T1_1.  Now, the only place where the second parameter appears for \
V3E6L0N2T1_1 is in the lattice vectors.  However, because of the self \
tangency, one of the vectors must have a length one; we choose w2 in this \
case: \
\>", "Text",
 CellChangeTimes->{{3.772744066885077*^9, 3.7727441252462997`*^9}, {
  3.773243673715596*^9, 3.773243750927606*^9}, {3.7732438801505527`*^9, 
  3.773243983490486*^9}, {3.77331903721662*^9, 
  3.773319043757473*^9}},ExpressionUUID->"c0ddfa42-d956-44db-9858-\
9823a51888b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "/", 
            SqrtBox["2"]}], " ", ")"}], "*", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], " ", ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], ")"}], "^", "2"}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "/", 
            SqrtBox["2"]}], " ", ")"}], "*", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], " ", ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], ")"}], "^", "2"}]}], 
    "]"}], "\[Equal]", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.77270885485063*^9, 3.772708884956217*^9}, {
  3.772709141396102*^9, 3.772709141602522*^9}},
 CellLabel->
  "In[2307]:=",ExpressionUUID->"8990d626-8c4c-43ea-9f85-22f3ed4df147"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Beta]"}], "]"}]}]], "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.772708890458774*^9, 3.772709142515814*^9, 
  3.77280159413056*^9, 3.772812492362192*^9, 3.772884353218361*^9, 
  3.772906763287613*^9, 3.7730610396236267`*^9, 3.773076699132497*^9},
 CellLabel->
  "Out[2307]=",ExpressionUUID->"16ba8fbd-0cae-4f25-bd17-d9370093adef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}]}]], "\[Equal]", "1"}], ",", 
   "\[Beta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.77270915154817*^9, 3.7727091704177837`*^9}},
 CellLabel->
  "In[2308]:=",ExpressionUUID->"efda53e1-713a-4afe-bcc9-4515728bc683"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["\[Pi]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["\[Pi]", "2"], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.772709171043347*^9, 3.772801594198069*^9, 
  3.772812492413327*^9, 3.772884353264995*^9, 3.772906763345141*^9, 
  3.77306103968988*^9, 3.7730766992103252`*^9},
 CellLabel->
  "Out[2308]=",ExpressionUUID->"c9876941-d9fa-41f9-a744-67ea31c6dd7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}]}]], "\[Equal]", "1"}], ",", 
    "\[Beta]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.772709178828987*^9, 3.7727092005585423`*^9}},
 CellLabel->
  "In[2309]:=",ExpressionUUID->"8f52bfd3-0cbf-4977-bad6-317b55c5c0af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"0.5`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.5707963267948966`"}], "+", 
          RowBox[{"6.283185307179586`", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"0.5`", " ", 
        RowBox[{"(", 
         RowBox[{"1.5707963267948966`", "\[VeryThinSpace]", "+", 
          RowBox[{"6.283185307179586`", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.772709201554076*^9, 3.772801594250341*^9, 
  3.772812492463335*^9, 3.7728843533139477`*^9, 3.7729067634127083`*^9, 
  3.773061039761022*^9, 3.773076699277019*^9},
 CellLabel->
  "Out[2309]=",ExpressionUUID->"f99d6674-9d89-4265-aefd-95345d933db5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        FractionBox["\[Pi]", "2"], ")"}]}]}], "}"}], " ", "or", " ", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", "\[Rule]", 
      FractionBox["\[Pi]", "4"]}]}]}], ")"}], "}"}]], "Text",
 CellChangeTimes->{{3.772709241253199*^9, 
  3.772709282811335*^9}},ExpressionUUID->"d890a2d1-e312-46ae-ba9f-\
bcf237c38cab"],

Cell["\<\
So, we substitute in for \[Beta].  This makes sense, because with such a self \
tangency we have an isosceles triangle with side lengths 1, (1/Sqrt[2]), \
(1/Sqrt[2]). \
\>", "Text",
 CellChangeTimes->{{3.772744357906852*^9, 3.7727443696871843`*^9}, {
  3.773318930266514*^9, 
  3.7733189931068974`*^9}},ExpressionUUID->"8fc30110-4b8a-49fb-8283-\
3955e53446d7"],

Cell["\<\
Notice that the length of the vector along the diagonal from vector 1 to \
vector 2 must be larger than 1 (the diameter of the big circle) otherwise the \
two big circles overlap \
\>", "Text",
 CellChangeTimes->{{3.771776248815022*^9, 3.771776324880169*^9}, {
  3.773318901009056*^9, 
  3.773318902616544*^9}},ExpressionUUID->"60e0570f-80be-4704-bed0-\
69fd9f796488"],

Cell[BoxData[
 RowBox[{"blah", ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"latticeVectors", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{"latticeVectors", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7717694365679197`*^9, 3.7717694768920517`*^9}, {
  3.771777130741983*^9, 3.771777136802883*^9}, {3.771777187870593*^9, 
  3.771777213275752*^9}},
 CellLabel->
  "In[2303]:=",ExpressionUUID->"3a3696cb-7764-42ed-9c30-5c9e16f9b4d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Alpha]\[Beta]Relation", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"blah", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"blah", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], 
   "]"}]}], "\[IndentingNewLine]", "\[Alpha]\[Beta]Relation"}], "Input",
 CellChangeTimes->{{3.7717696946662493`*^9, 3.771769705866753*^9}, 
   3.7717697394676247`*^9, {3.771776162218391*^9, 3.7717761663109713`*^9}, {
   3.7717771446702747`*^9, 3.7717771470358963`*^9}, {3.771777192470764*^9, 
   3.771777229523878*^9}},
 CellLabel->
  "In[2304]:=",ExpressionUUID->"75579c7d-ca27-480a-aed1-1dc96106d9d8"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.7717772303322563`*^9, 3.7726414737300034`*^9, {3.77264159761933*^9, 
   3.772641600041189*^9}, 3.772801593810178*^9, 3.7728124921351*^9, 
   3.772884352883912*^9, 3.77290676315069*^9, 3.7730610079236*^9, 
   3.7730766986288767`*^9},
 CellLabel->
  "Out[2305]=",ExpressionUUID->"c3523e51-1d20-45b1-8be9-20e9827a8c2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"\[Alpha]\[Beta]Relation", "==", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7717840321881933`*^9, 3.771784048959098*^9}, {
  3.7717840907689867`*^9, 3.771784133424247*^9}, {3.771784172163089*^9, 
  3.77178417830483*^9}, {3.771784364774362*^9, 3.771784373371187*^9}, {
  3.772641497010992*^9, 3.7726415629090643`*^9}, {3.77264160888651*^9, 
  3.7726416447597647`*^9}},
 CellLabel->
  "In[2306]:=",ExpressionUUID->"72566495-c866-4345-8ac5-926824238d84"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQnWD1ZJIW22X750Uyk87a3rdPTs52KxC9Yq+taLi/
Ve+evd2tU8HM8lfsw8/svvhR5Z79ipZWr7PKV+zb96fNVlO4Z1/x5+tZTaMr
9t2GATvOCN6zX5X7ZGvh3Sv28+PWqHWm3bV/f06NqcDxqn3UvZtKHUx37Xt4
1x28Pfuq/XXOv+fEV9yxFyr5Hut44ar99uQvK7YW37HPWBhuti3gmv2cnnf+
Dp9v25/N4z3sEXXN/qR5ZdKal7ftzSRP7BSKv2YfmX3F+/GT2/YsEy1s83Ov
2f+fw+vZfu22vQWTuup2iev2/Kcytztr37avS84s3Fpz3f6k5/TNTsdv2Tf2
fFD53X3DnvfH6ge/tt+0j2EOMOqbesPecrHZ57R1N+2PreXSjJh1wz5z2sM9
s1fetJ+uWr1my4ob9jkcp286zgbKT8uc8if4pn29qbrHv/cIc6y2hrj8BZq7
ysx4QZrQLftdD8o/9BjesDeYW2Nzxu2W/Uyr/FNaf6/bt526I+IIdAfMXa+n
T1p4+cIt+9V8X5oVi6/bhzj5zph79Za9tZN/bkTedXulXXulfz2+Zf+wuCPr
T/x1+zDtNcxO/bftPy54cmPHFkQ4rVEQurodGG7zt5YytzEhwr1K56qAJM9d
e+mqjSJ3zK/aP7nWz/5Y4K69d27MPQHjq/Zb/Ri67eXv2vvdd/29TeWq/dP9
74raT921T+JZlFlcecU+cuUBa00FRLzD0kUiNJ2ciN9R97Hjnv2c7Z8EmXZf
tvc7xigdvveefbXgq9fz2y7bL/mc+Pk0MF3B0hkAkTo9qw==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39}]},
      RowBox[{
        RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
             RowBox[{
               TagBox["\[Alpha]", HoldForm], "+", 
               TagBox["\[Beta]", HoldForm]}], "]"}], "2"]}], "\[Equal]", 
        "1"}]],
     Annotation[#, 
      2 Sin[HoldForm[$CellContext`\[Alpha]] + 
          HoldForm[$CellContext`\[Beta]]]^2 == 1, "Tooltip"]& ]}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0.2972513613212069, 0.2972513613212069},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->NCache[{{
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}, {
      ArcSin[1 - 2^Rational[-1, 2]], 
      Rational[1, 2] (Pi - 2 
       ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
          Rational[-1, 2]])}}, {{0.2972513613212069, 0.7853981633974483}, {
    0.2972513613212069, 1.2735449654736897`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.772641531901774*^9, 3.772641563676512*^9}, {
   3.7726416051610413`*^9, 3.772641646082399*^9}, 3.7728015940620327`*^9, 
   3.772812492309009*^9, 3.772884353105253*^9, 3.772906763232438*^9, 
   3.7730610395046883`*^9, 3.773076698993992*^9},
 CellLabel->
  "Out[2306]=",ExpressionUUID->"abc38c5c-cbbf-48ec-a50c-d2c1b325ae62"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circle Centers and Radii", "Section",
 CellChangeTimes->{{3.5801358843541727`*^9, 3.5801358938578777`*^9}, {
   3.580135983361384*^9, 3.580136022519301*^9}, {3.5801360744318657`*^9, 
   3.580136129319181*^9}, {3.5801361649266577`*^9, 3.580136172638129*^9}, 
   3.580137288315072*^9, {3.738968272803437*^9, 
   3.738968275929782*^9}},ExpressionUUID->"58eac1c0-3dea-4423-bd3e-\
40f227e6c6e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centers", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"-", "\[Alpha]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "/", 
            RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "4"], "]"}], ")"}]}], ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", "\[Alpha]"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"-", "\[Alpha]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "/", 
            RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"Cos", "[", 
            FractionBox["\[Pi]", "4"], "]"}], ")"}]}], ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["\[Pi]", "4"], "+", "\[Alpha]"}], "]"}]}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7721221520584707`*^9, 3.772122208130066*^9}, {
   3.772318816380787*^9, 3.772319089826538*^9}, {3.772319674816237*^9, 
   3.772319675308375*^9}, 3.772385692618927*^9, {3.7723857588810797`*^9, 
   3.772385769826887*^9}, 3.772386542601409*^9, {3.772386588204664*^9, 
   3.772386608598695*^9}, {3.772389901535639*^9, 3.772389919700321*^9}, {
   3.772389951210327*^9, 3.772389959943302*^9}, {3.772709353085837*^9, 
   3.772709359170508*^9}},
 CellLabel->
  "In[2310]:=",ExpressionUUID->"583b7c4c-5ac3-402f-8a72-fd2354787739"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
       SqrtBox["2"]], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", "\[Alpha]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
        SqrtBox["2"]]}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Pi]", "4"], "+", "\[Alpha]"}], "]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.77231783725896*^9, 3.7723190964800367`*^9, 3.772319684155751*^9, 
   3.772373270600903*^9, 3.7723857177067842`*^9, 3.7723866113393087`*^9, 
   3.772386644102399*^9, 3.772387113485589*^9, 3.7723899239748583`*^9, {
   3.77238995558237*^9, 3.772389961449662*^9}, 3.772390121880117*^9, 
   3.772578749918878*^9, 3.772641360186895*^9, 3.77270860683916*^9, 
   3.772709378110259*^9, 3.7727094132906113`*^9, 3.77274438268012*^9, 
   3.77280159431068*^9, 3.77281249251639*^9, 3.772884353368726*^9, 
   3.772906763479961*^9, 3.7730610398404493`*^9, 3.773076699344027*^9},
 CellLabel->
  "Out[2310]=",ExpressionUUID->"15eb84bf-d5ea-401c-bd95-dec946113fb3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lattice Vectors", "Section",
 CellChangeTimes->{{3.5801372743016376`*^9, 3.5801373048748693`*^9}, {
  3.580137407171616*^9, 
  3.5801374162247047`*^9}},ExpressionUUID->"dd1d0949-4425-489a-9138-\
ef893592d4c8"],

Cell["We are working this flat torus", "Text",
 CellChangeTimes->{{3.582369864772891*^9, 3.5823699271444187`*^9}, {
  3.582369973496118*^9, 3.5823699970297337`*^9}, {3.738969423090049*^9, 
  3.738969436681583*^9}, {3.7715975872130003`*^9, 3.771597588982992*^9}, {
  3.771603132939183*^9, 
  3.77160313547442*^9}},ExpressionUUID->"200ae999-c74e-4e08-bfe2-\
f7fa1b43f45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"latticeVectors", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
        RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "/", 
            SqrtBox["2"]}], " ", ")"}], "*", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "4"], "]"}]}], " ", ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "+", 
          FractionBox["\[Pi]", "4"]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", "/", 
            SqrtBox["2"]}], " ", ")"}], "*", 
          RowBox[{"Cos", "[", 
           FractionBox["\[Pi]", "4"], "]"}]}], " ", ")"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", 
          FractionBox["\[Pi]", "4"]}], "]"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.580137534026297*^9, 3.5801375508003473`*^9}, {
   3.580137940862308*^9, 3.580138090818322*^9}, {3.581161269242415*^9, 
   3.581161270832081*^9}, {3.581179001836388*^9, 3.581179057408264*^9}, {
   3.581179108668387*^9, 3.581179132207106*^9}, {3.5811806969625072`*^9, 
   3.5811807093372307`*^9}, {3.581242519554166*^9, 3.581242520215888*^9}, {
   3.58124931263903*^9, 3.581249315383133*^9}, {3.58185644108707*^9, 
   3.581856445859899*^9}, 3.5818565961548*^9, 3.581949060452406*^9, {
   3.581949331181172*^9, 3.581949357082802*^9}, 3.582122138075748*^9, {
   3.73896944218652*^9, 3.7389694501137342`*^9}, {3.771597561577282*^9, 
   3.7715975818952227`*^9}, {3.7716031594864607`*^9, 3.771603216092555*^9}, {
   3.771604868269343*^9, 3.771604872292728*^9}, {3.771614674809121*^9, 
   3.771614677310281*^9}, {3.771615121197836*^9, 3.771615123985476*^9}, {
   3.771617255311338*^9, 3.771617259388358*^9}, {3.772033618527232*^9, 
   3.772033648132484*^9}, {3.772118364703985*^9, 3.7721183827086573`*^9}, {
   3.772121899641304*^9, 3.772121913734003*^9}, {3.772319105082589*^9, 
   3.772319115179603*^9}, {3.772319706381551*^9, 3.772319707623681*^9}, {
   3.7723870411848927`*^9, 3.772387103494478*^9}, {3.77239002245874*^9, 
   3.772390114011405*^9}, {3.772709365885763*^9, 3.7727093728565693`*^9}},
 CellLabel->
  "In[2311]:=",ExpressionUUID->"599d2b49-d9bb-4d65-8681-bcc6fa3e614e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Edges", "Section",
 CellChangeTimes->{{3.581161568527853*^9, 
  3.581161585574769*^9}},ExpressionUUID->"8c1dc234-14dc-4eeb-9527-\
a7c0cd7c55bc"],

Cell["\<\
Here we store the edges a list {i,j,m,n} where center[[i]] is connected to \
center[[j]] + m*latticeVectors[[1]] + n*latticeVectors[2]]
center[[i]] is *always* in the fundamental domain ****the last two numbers \
are winding numbers****\[LineSeparator]\t\
\>", "Text",
 CellChangeTimes->{{3.581161595486527*^9, 3.5811616304139853`*^9}, {
   3.581161665677293*^9, 3.5811617412920313`*^9}, 3.581162242261799*^9, {
   3.581247308234243*^9, 3.581247324583816*^9}, {3.5817831634296637`*^9, 
   3.581783166961875*^9}, {3.738969798091196*^9, 3.738969813400868*^9}, {
   3.771706689824682*^9, 3.771706708949882*^9}, {3.771770398255272*^9, 
   3.77177041972334*^9}},ExpressionUUID->"e7a21d8e-f617-4378-a5da-\
9dc2d5a1e93e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edges", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.581161747323979*^9, 3.581161777837888*^9}, {
   3.581179208843933*^9, 3.58117924274809*^9}, 3.581181365997052*^9, {
   3.581249342236608*^9, 3.5812493456365433`*^9}, 3.5818566103947773`*^9, 
   3.581949096185699*^9, 3.582122155172645*^9, {3.7389695169453783`*^9, 
   3.738969553568454*^9}, 3.772034134720971*^9, {3.7723902817380953`*^9, 
   3.772390312556127*^9}, {3.7727093955015173`*^9, 3.772709402687738*^9}},
 CellLabel->
  "In[2312]:=",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],

Cell[CellGroupData[{

Cell["\<\
Check the edge lengths are all 2rs= Sqrt[2]-1 or \
rs+rb=Sqrt[2]rb=Sqrt[2]/2=1/Sqrt[2]\
\>", "Subsection",
 CellChangeTimes->{{3.5811792593456697`*^9, 3.581179272400176*^9}, {
  3.738969559839985*^9, 3.738969575322688*^9}, {3.771598081340612*^9, 
  3.771598085444192*^9}, {3.771604075139793*^9, 3.77160408016324*^9}, {
  3.771617272380292*^9, 
  3.771617292132626*^9}},ExpressionUUID->"13c39ee2-5a3a-466d-965d-\
7a6d5f6b780b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "edges", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P1", ":=", " ", 
     RowBox[{
      RowBox[{"centers", "[", 
       RowBox[{"[", 
        RowBox[{"edges", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"P2", ":=", " ", 
     RowBox[{"centers", "[", 
      RowBox[{"[", 
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Edge \>\"", ",", "i", ",", "\"\<: Length is \>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "\[Alpha]", "\[LessEqual]", " ", 
            RowBox[{"Pi", "/", "2"}]}], ",", 
           RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
            RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.581179295446331*^9, 3.581179352609571*^9}, {
   3.581179384265609*^9, 3.5811794135767803`*^9}, {3.5811794673296432`*^9, 
   3.581179567921268*^9}, {3.58118010572506*^9, 3.5811801497103157`*^9}, {
   3.581180260610394*^9, 3.581180261131735*^9}, {3.5811803102623568`*^9, 
   3.581180349154674*^9}, {3.5811804523957653`*^9, 3.581180454488806*^9}, {
   3.581180488851935*^9, 3.5811805057442503`*^9}, {3.581180549545892*^9, 
   3.581180573366247*^9}, {3.5811811710286903`*^9, 3.581181171490512*^9}, {
   3.5811813056653357`*^9, 3.581181353392084*^9}, 3.581242444414118*^9, 
   3.581242610726717*^9, {3.581949105825959*^9, 3.5819491081768417`*^9}, {
   3.581949361163632*^9, 3.581949361955078*^9}, {3.58212215863743*^9, 
   3.582122164868064*^9}, {3.738969584524962*^9, 3.738969584955559*^9}, {
   3.738969666208755*^9, 3.738969673635594*^9}, {3.7715977979175987`*^9, 
   3.771597830642771*^9}, {3.771597980732808*^9, 3.771597986444655*^9}, {
   3.771598046811739*^9, 3.771598052074088*^9}, {3.771598191968363*^9, 
   3.771598218647225*^9}, 3.7716032382556562`*^9, {3.771603296654491*^9, 
   3.771603298043535*^9}, {3.7716033527504587`*^9, 3.771603358182477*^9}, {
   3.771603418205394*^9, 3.77160345686306*^9}, {3.771603537270556*^9, 
   3.771603559998033*^9}, {3.771604884658742*^9, 3.7716048887173233`*^9}, {
   3.772118918756332*^9, 3.772118933427979*^9}, {3.772121926000918*^9, 
   3.772121947560111*^9}, {3.7723191519046307`*^9, 3.772319189491704*^9}, {
   3.772373242761643*^9, 3.772373258672859*^9}, {3.772387136101551*^9, 
   3.7723871788805943`*^9}, 3.772578776731409*^9},
 CellLabel->
  "In[2313]:=",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 1, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.7723903241937447`*^9, {
   3.7725787560717154`*^9, 3.7725787934304953`*^9}, 3.772641372870385*^9, 
   3.772708617182927*^9, 3.772709419415333*^9, 3.772744392343253*^9, 
   3.7728015943943577`*^9, 3.772812492601836*^9, 3.772884353767005*^9, 
   3.772906763555518*^9, 3.773061040070333*^9, 3.77307669965862*^9},
 CellLabel->
  "During evaluation of \
In[2313]:=",ExpressionUUID->"a2e934a0-a3cf-4f24-80d2-cbea35f604cd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Edge ", 2, ": Length is ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.7723903241937447`*^9, {
   3.7725787560717154`*^9, 3.7725787934304953`*^9}, 3.772641372870385*^9, 
   3.772708617182927*^9, 3.772709419415333*^9, 3.772744392343253*^9, 
   3.7728015943943577`*^9, 3.772812492601836*^9, 3.772884353767005*^9, 
   3.772906763555518*^9, 3.773061040070333*^9, 3.773076699672762*^9},
 CellLabel->
  "During evaluation of \
In[2313]:=",ExpressionUUID->"da5e9efc-ccee-41f3-b4f6-dd9c9c170ced"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 3, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.7723903241937447`*^9, {
   3.7725787560717154`*^9, 3.7725787934304953`*^9}, 3.772641372870385*^9, 
   3.772708617182927*^9, 3.772709419415333*^9, 3.772744392343253*^9, 
   3.7728015943943577`*^9, 3.772812492601836*^9, 3.772884353767005*^9, 
   3.772906763555518*^9, 3.773061040070333*^9, 3.77307669968462*^9},
 CellLabel->
  "During evaluation of \
In[2313]:=",ExpressionUUID->"84207c00-4b70-4d9c-a28b-4a382ca03e0c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 4, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.7723903241937447`*^9, {
   3.7725787560717154`*^9, 3.7725787934304953`*^9}, 3.772641372870385*^9, 
   3.772708617182927*^9, 3.772709419415333*^9, 3.772744392343253*^9, 
   3.7728015943943577`*^9, 3.772812492601836*^9, 3.772884353767005*^9, 
   3.772906763555518*^9, 3.773061040070333*^9, 3.7730766996939697`*^9},
 CellLabel->
  "During evaluation of \
In[2313]:=",ExpressionUUID->"868b4885-5a4c-4083-ac3a-70fb0920ca1f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 5, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.7723903241937447`*^9, {
   3.7725787560717154`*^9, 3.7725787934304953`*^9}, 3.772641372870385*^9, 
   3.772708617182927*^9, 3.772709419415333*^9, 3.772744392343253*^9, 
   3.7728015943943577`*^9, 3.772812492601836*^9, 3.772884353767005*^9, 
   3.772906763555518*^9, 3.773061040070333*^9, 3.773076699701413*^9},
 CellLabel->
  "During evaluation of \
In[2313]:=",ExpressionUUID->"3423d843-8b15-4b62-8045-b7e563c7878c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 6, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.7723903241937447`*^9, {
   3.7725787560717154`*^9, 3.7725787934304953`*^9}, 3.772641372870385*^9, 
   3.772708617182927*^9, 3.772709419415333*^9, 3.772744392343253*^9, 
   3.7728015943943577`*^9, 3.772812492601836*^9, 3.772884353767005*^9, 
   3.772906763555518*^9, 3.773061040070333*^9, 3.773076699709709*^9},
 CellLabel->
  "During evaluation of \
In[2313]:=",ExpressionUUID->"58a149bc-1789-4ee6-a3c0-5f9b208da0e3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 7, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.7723903241937447`*^9, {
   3.7725787560717154`*^9, 3.7725787934304953`*^9}, 3.772641372870385*^9, 
   3.772708617182927*^9, 3.772709419415333*^9, 3.772744392343253*^9, 
   3.7728015943943577`*^9, 3.772812492601836*^9, 3.772884353767005*^9, 
   3.772906763555518*^9, 3.773061040070333*^9, 3.7730766997171*^9},
 CellLabel->
  "During evaluation of \
In[2313]:=",ExpressionUUID->"b4605c41-dcab-4402-8db3-606f165f06ec"]
}, Open  ]]
}, Open  ]],

Cell["Yes!", "Text",
 CellChangeTimes->{{3.738969710949356*^9, 
  3.738969711596074*^9}},ExpressionUUID->"44713034-9149-4e18-aea8-\
b2757e3281a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packing Visualization", "Section",
 CellChangeTimes->{{3.5811614691633863`*^9, 3.581161498320479*^9}, {
  3.5812608794354057`*^9, 
  3.5812608803693533`*^9}},ExpressionUUID->"84c54b26-f298-4444-9ec8-\
58440b22b9ee"],

Cell["\<\
Here we visualize the packing and the fundamental domain to help determine \
the value of the parameters for which this is a packing graph.\
\>", "Text",
 CellChangeTimes->{{3.581161529243552*^9, 3.58116155007941*^9}, {
  3.581431617395529*^9, 
  3.581431638872754*^9}},ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-\
bdaf155f4274"],

Cell[TextData[{
 "To avoid duplication, we take half of the normal range: the normal range \
that gives duplication is ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"ArcSin", "[", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      SqrtBox["2"]]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"2", " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"Pi", "/", "4"}]}]}]],
  CellChangeTimes->{{3.581180824186262*^9, 3.5811808987974043`*^9}, 
    3.5812426341496763`*^9, {3.5812428812130423`*^9, 
    3.5812429341543503`*^9}, {3.581242984843346*^9, 3.5812430741219807`*^9}, {
    3.5812431287383547`*^9, 3.581243135743741*^9}, {3.5812473656144733`*^9, 
    3.5812473732061653`*^9}, {3.5812474374292707`*^9, 3.581247473907415*^9}, {
    3.581247505756896*^9, 3.5812475150029573`*^9}, {3.5812475479941683`*^9, 
    3.581247552706957*^9}, {3.5812475932850027`*^9, 3.581247600929019*^9}, {
    3.5812478520379763`*^9, 3.5812478573165827`*^9}, {3.581248067842428*^9, 
    3.5812480862360897`*^9}, {3.581248222177985*^9, 3.581248233458312*^9}, {
    3.581248384125928*^9, 3.581248402652212*^9}, {3.581248625800804*^9, 
    3.581248690334828*^9}, {3.581248833096355*^9, 3.5812488441877327`*^9}, {
    3.5812493253259697`*^9, 3.58124932808727*^9}, {3.581249362565637*^9, 
    3.581249381904962*^9}, {3.5812535181081867`*^9, 3.581253545706283*^9}, {
    3.5812536017645884`*^9, 3.581253629665406*^9}, {3.581253666648903*^9, 
    3.581253771795062*^9}, {3.581253892391712*^9, 3.5812538938364058`*^9}, {
    3.581254011947888*^9, 3.581254015235166*^9}, {3.5812542188329983`*^9, 
    3.581254261150659*^9}, {3.581254332240678*^9, 3.581254367846857*^9}, {
    3.581254500545721*^9, 3.5812547422051477`*^9}, {3.581254930572299*^9, 
    3.581254996760075*^9}, {3.581255074308731*^9, 3.581255166665844*^9}, {
    3.581255256680236*^9, 3.581255330983355*^9}, {3.581255397943749*^9, 
    3.5812554139734983`*^9}, {3.581256003564808*^9, 3.581256005175725*^9}, {
    3.5812561759913483`*^9, 3.581256295933*^9}, {3.58125638872497*^9, 
    3.581256414849011*^9}, {3.581256501384528*^9, 3.581256505097643*^9}, 
    3.581256537795217*^9, {3.581256626052237*^9, 3.5812566747215357`*^9}, {
    3.5812568590378523`*^9, 3.581256907194375*^9}, {3.581256959105625*^9, 
    3.581256979201212*^9}, {3.5812570178650227`*^9, 3.581257061806126*^9}, {
    3.5812571535181637`*^9, 3.5812571856360693`*^9}, {3.581257217869177*^9, 
    3.58125728617*^9}, {3.5812575986228857`*^9, 3.581257652067379*^9}, {
    3.581257705164557*^9, 3.581257726570807*^9}, {3.581257905889045*^9, 
    3.581257915671493*^9}, {3.5812579582253933`*^9, 3.581258016285577*^9}, {
    3.58125804725069*^9, 3.58125807827873*^9}, {3.5812582272199917`*^9, 
    3.581258503027114*^9}, {3.5812585494944353`*^9, 3.5812585568532867`*^9}, {
    3.5812586202609997`*^9, 3.581258620388369*^9}, {3.5812586663638973`*^9, 
    3.581258677585264*^9}, {3.581258724524333*^9, 3.581258730408498*^9}, {
    3.581258844723407*^9, 3.58125887310649*^9}, {3.581258924841276*^9, 
    3.581258961174138*^9}, {3.581258992857445*^9, 3.581259029903624*^9}, {
    3.581259074647087*^9, 3.5812591072668657`*^9}, {3.5812591426372213`*^9, 
    3.5812591450507383`*^9}, {3.581259181396778*^9, 3.581259181513996*^9}, {
    3.581259219837489*^9, 3.581259271592852*^9}, {3.581259448526546*^9, 
    3.581259481007943*^9}, {3.5812595477160797`*^9, 3.581259589490211*^9}, {
    3.5812596518096657`*^9, 3.5812596891404*^9}, {3.581259761045887*^9, 
    3.581259768693335*^9}, {3.581259809900445*^9, 3.5812598264496927`*^9}, {
    3.581259885568445*^9, 3.581259889639741*^9}, {3.5812599261246634`*^9, 
    3.581259926659635*^9}, {3.58126013800604*^9, 3.581260146929427*^9}, {
    3.5812601829290037`*^9, 3.581260292192834*^9}, {3.581260947643346*^9, 
    3.5812609596106462`*^9}, {3.581263566266234*^9, 3.581263573232663*^9}, {
    3.581332503624165*^9, 3.581332522801099*^9}, {3.581332557339148*^9, 
    3.581332572749958*^9}, {3.581332612431754*^9, 3.581332773568388*^9}, {
    3.5813328219613037`*^9, 3.581332980532728*^9}, {3.581333642221835*^9, 
    3.5813336496906977`*^9}, {3.581431425701377*^9, 3.581431484315411*^9}, {
    3.5816099744511147`*^9, 3.581609996432809*^9}, {3.5816100888174334`*^9, 
    3.581610089070348*^9}, {3.581610121856133*^9, 3.5816101219752083`*^9}, {
    3.5816101556235123`*^9, 3.581610155958583*^9}, {3.58161019999949*^9, 
    3.581610200326291*^9}, {3.58167385380202*^9, 3.5816738664729223`*^9}, {
    3.581673953056587*^9, 3.581673955198401*^9}, {3.581674136386159*^9, 
    3.58167413978489*^9}, {3.5816878802857723`*^9, 3.581687882282056*^9}, {
    3.581855466920761*^9, 3.581855642518496*^9}, 3.581855703984426*^9, {
    3.581855786596148*^9, 3.581855866184493*^9}, {3.581856641947521*^9, 
    3.581856656111063*^9}, {3.581856935157813*^9, 3.5818569445569887`*^9}, {
    3.581857006027275*^9, 3.58185703022123*^9}, {3.581857123808751*^9, 
    3.581857197094022*^9}, {3.581857274157933*^9, 3.58185731779801*^9}, {
    3.5819426776944942`*^9, 3.5819426803027163`*^9}, {3.581942844823635*^9, 
    3.581942847239024*^9}, {3.581944353890791*^9, 3.581944355752987*^9}, {
    3.58194917007652*^9, 3.581949190497978*^9}, {3.581949371385427*^9, 
    3.581949379305963*^9}, {3.58194946090628*^9, 3.5819495163196363`*^9}, {
    3.581949573938567*^9, 3.581949599944652*^9}, {3.581949729382389*^9, 
    3.581949777920323*^9}, {3.581949911516973*^9, 3.5819499136354733`*^9}, {
    3.582114084861143*^9, 3.582114107567999*^9}, {3.5821141736269503`*^9, 
    3.582114195015759*^9}, {3.582114226871348*^9, 3.582114230291051*^9}, {
    3.582122206520812*^9, 3.5821222903393497`*^9}, {3.582737411012321*^9, 
    3.582737427519579*^9}, 3.582737460319375*^9, {3.738969834417027*^9, 
    3.73896985266467*^9}, {3.738969939336814*^9, 3.738969945694798*^9}, {
    3.738970010391162*^9, 3.7389701517352753`*^9}, 3.738970262597353*^9, {
    3.7716147588094*^9, 3.771614770182129*^9}, {3.771615143165704*^9, 
    3.77161518979923*^9}, {3.771615236734894*^9, 3.7716153995456247`*^9}, {
    3.771615483489748*^9, 3.771615507641163*^9}, 3.7716155427082357`*^9, {
    3.771617311210657*^9, 3.771617350296811*^9}, {3.771621482253394*^9, 
    3.771621494135892*^9}, {3.771621537619253*^9, 3.771621571702239*^9}, {
    3.771621614008807*^9, 3.771621721740313*^9}, {3.771628016346718*^9, 
    3.7716280192162523`*^9}, {3.772387226246956*^9, 3.772387255972007*^9}, {
    3.7723873338589067`*^9, 3.772387338095673*^9}, {3.772534361453011*^9, 
    3.772534363707884*^9}, {3.772534513107504*^9, 3.772534566996526*^9}, {
    3.772579334115931*^9, 3.772579363156193*^9}, {3.7725793979224453`*^9, 
    3.772579408035801*^9}, {3.77257944686138*^9, 3.772579451074888*^9}, 
    3.772580982161825*^9, 3.7725810351315823`*^9, 3.772581099355389*^9, {
    3.7725811418464947`*^9, 3.7725811657916594`*^9}, 3.7725813063778067`*^9, {
    3.7725813364967012`*^9, 3.772581339364278*^9}, {3.772581373087685*^9, 
    3.772581378518997*^9}, {3.772581433338784*^9, 3.772581465250394*^9}, {
    3.772581542774721*^9, 3.7725815464130383`*^9}, 3.7725815772500143`*^9, {
    3.7725817104257193`*^9, 3.772581728871365*^9}, {3.772581822643485*^9, 
    3.7725818271150846`*^9}, {3.77258188841269*^9, 3.77258191267566*^9}, {
    3.772581948176424*^9, 3.7725819616574163`*^9}, 3.7726288976914597`*^9, {
    3.772628931557729*^9, 3.772628934382156*^9}, 3.7726290224238653`*^9, 
    3.772629098749159*^9, {3.7726291319397097`*^9, 3.772629153146674*^9}, 
    3.7726292649266148`*^9, 3.772630109908165*^9, {3.772630162106039*^9, 
    3.772630176868786*^9}, 3.7727094394494*^9, {3.772709506553403*^9, 
    3.772709508015574*^9}, {3.772744403307556*^9, 3.772744436046342*^9}},
  ExpressionUUID->"56f69a97-34c4-4109-9fde-69339d7dd865"]
}], "Text",
 CellChangeTimes->{{3.772812548964836*^9, 
  3.772812600657908*^9}},ExpressionUUID->"8d1ff94d-0bd8-41de-8403-\
c0ad2d7fe710"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"Pi", "/", "4"}]}], ")"}], "-", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}]}], ")"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.7728126327103*^9, 3.772812660653261*^9}},
 CellLabel->
  "In[2314]:=",ExpressionUUID->"468ab454-ad6e-4327-ad14-a4d9c3b54ede"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  RowBox[{"(", 
   RowBox[{"\[Pi]", "-", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ArcSin", "[", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "]"}], "+", 
       RowBox[{"ArcTan", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["2"]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}]}]]], "]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.772812654326733*^9, 3.772812661147468*^9}, 
   3.7728843538947763`*^9, 3.772906763662299*^9, 3.7730610401925364`*^9, 
   3.773076699799312*^9},
 CellLabel->
  "Out[2314]=",ExpressionUUID->"27ecda1c-074e-4240-b41c-38de341e6301"]
}, Open  ]],

Cell["Minus the original upper bound...", "Text",
 CellChangeTimes->{{3.7728126844421453`*^9, 3.772812691787438*^9}, {
  3.772884417946415*^9, 
  3.7728844229287167`*^9}},ExpressionUUID->"562b58d4-87af-47e5-83ce-\
c2a399a345cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
     RowBox[{"Pi", "/", "4"}]}], ")"}], "-", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ArcSin", "[", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             SqrtBox["2"]]}], "]"}], "+", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}], ")"}]}]}], ")"}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.772812696302946*^9, 3.772812718830187*^9}, {
  3.7728844315678577`*^9, 3.772884455837143*^9}},
 CellLabel->
  "In[2315]:=",ExpressionUUID->"2c987e23-793d-45b7-a25e-eb1e665576d3"],

Cell[BoxData[
 FractionBox["\[Pi]", "8"]], "Output",
 CellChangeTimes->{{3.77281271188995*^9, 3.7728127197069283`*^9}, 
   3.772884353954638*^9, 3.7728844574258327`*^9, 3.77290676372497*^9, 
   3.773061040262512*^9, 3.773076699878478*^9},
 CellLabel->
  "Out[2315]=",ExpressionUUID->"4d9716df-84a8-4797-99d0-c5b6613b6c48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"10", ",", 
                  RowBox[{"-", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}]}], 
        RowBox[{"(*", 
         RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", ".4", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     FractionBox["\[Pi]", "8"], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581180824186262*^9, 3.5811808987974043`*^9}, 
   3.5812426341496763`*^9, {3.5812428812130423`*^9, 3.5812429341543503`*^9}, {
   3.581242984843346*^9, 3.5812430741219807`*^9}, {3.5812431287383547`*^9, 
   3.581243135743741*^9}, {3.5812473656144733`*^9, 3.5812473732061653`*^9}, {
   3.5812474374292707`*^9, 3.581247473907415*^9}, {3.581247505756896*^9, 
   3.5812475150029573`*^9}, {3.5812475479941683`*^9, 3.581247552706957*^9}, {
   3.5812475932850027`*^9, 3.581247600929019*^9}, {3.5812478520379763`*^9, 
   3.5812478573165827`*^9}, {3.581248067842428*^9, 3.5812480862360897`*^9}, {
   3.581248222177985*^9, 3.581248233458312*^9}, {3.581248384125928*^9, 
   3.581248402652212*^9}, {3.581248625800804*^9, 3.581248690334828*^9}, {
   3.581248833096355*^9, 3.5812488441877327`*^9}, {3.5812493253259697`*^9, 
   3.58124932808727*^9}, {3.581249362565637*^9, 3.581249381904962*^9}, {
   3.5812535181081867`*^9, 3.581253545706283*^9}, {3.5812536017645884`*^9, 
   3.581253629665406*^9}, {3.581253666648903*^9, 3.581253771795062*^9}, {
   3.581253892391712*^9, 3.5812538938364058`*^9}, {3.581254011947888*^9, 
   3.581254015235166*^9}, {3.5812542188329983`*^9, 3.581254261150659*^9}, {
   3.581254332240678*^9, 3.581254367846857*^9}, {3.581254500545721*^9, 
   3.5812547422051477`*^9}, {3.581254930572299*^9, 3.581254996760075*^9}, {
   3.581255074308731*^9, 3.581255166665844*^9}, {3.581255256680236*^9, 
   3.581255330983355*^9}, {3.581255397943749*^9, 3.5812554139734983`*^9}, {
   3.581256003564808*^9, 3.581256005175725*^9}, {3.5812561759913483`*^9, 
   3.581256295933*^9}, {3.58125638872497*^9, 3.581256414849011*^9}, {
   3.581256501384528*^9, 3.581256505097643*^9}, 3.581256537795217*^9, {
   3.581256626052237*^9, 3.5812566747215357`*^9}, {3.5812568590378523`*^9, 
   3.581256907194375*^9}, {3.581256959105625*^9, 3.581256979201212*^9}, {
   3.5812570178650227`*^9, 3.581257061806126*^9}, {3.5812571535181637`*^9, 
   3.5812571856360693`*^9}, {3.581257217869177*^9, 3.58125728617*^9}, {
   3.5812575986228857`*^9, 3.581257652067379*^9}, {3.581257705164557*^9, 
   3.581257726570807*^9}, {3.581257905889045*^9, 3.581257915671493*^9}, {
   3.5812579582253933`*^9, 3.581258016285577*^9}, {3.58125804725069*^9, 
   3.58125807827873*^9}, {3.5812582272199917`*^9, 3.581258503027114*^9}, {
   3.5812585494944353`*^9, 3.5812585568532867`*^9}, {3.5812586202609997`*^9, 
   3.581258620388369*^9}, {3.5812586663638973`*^9, 3.581258677585264*^9}, {
   3.581258724524333*^9, 3.581258730408498*^9}, {3.581258844723407*^9, 
   3.58125887310649*^9}, {3.581258924841276*^9, 3.581258961174138*^9}, {
   3.581258992857445*^9, 3.581259029903624*^9}, {3.581259074647087*^9, 
   3.5812591072668657`*^9}, {3.5812591426372213`*^9, 
   3.5812591450507383`*^9}, {3.581259181396778*^9, 3.581259181513996*^9}, {
   3.581259219837489*^9, 3.581259271592852*^9}, {3.581259448526546*^9, 
   3.581259481007943*^9}, {3.5812595477160797`*^9, 3.581259589490211*^9}, {
   3.5812596518096657`*^9, 3.5812596891404*^9}, {3.581259761045887*^9, 
   3.581259768693335*^9}, {3.581259809900445*^9, 3.5812598264496927`*^9}, {
   3.581259885568445*^9, 3.581259889639741*^9}, {3.5812599261246634`*^9, 
   3.581259926659635*^9}, {3.58126013800604*^9, 3.581260146929427*^9}, {
   3.5812601829290037`*^9, 3.581260292192834*^9}, {3.581260947643346*^9, 
   3.5812609596106462`*^9}, {3.581263566266234*^9, 3.581263573232663*^9}, {
   3.581332503624165*^9, 3.581332522801099*^9}, {3.581332557339148*^9, 
   3.581332572749958*^9}, {3.581332612431754*^9, 3.581332773568388*^9}, {
   3.5813328219613037`*^9, 3.581332980532728*^9}, {3.581333642221835*^9, 
   3.5813336496906977`*^9}, {3.581431425701377*^9, 3.581431484315411*^9}, {
   3.5816099744511147`*^9, 3.581609996432809*^9}, {3.5816100888174334`*^9, 
   3.581610089070348*^9}, {3.581610121856133*^9, 3.5816101219752083`*^9}, {
   3.5816101556235123`*^9, 3.581610155958583*^9}, {3.58161019999949*^9, 
   3.581610200326291*^9}, {3.58167385380202*^9, 3.5816738664729223`*^9}, {
   3.581673953056587*^9, 3.581673955198401*^9}, {3.581674136386159*^9, 
   3.58167413978489*^9}, {3.5816878802857723`*^9, 3.581687882282056*^9}, {
   3.581855466920761*^9, 3.581855642518496*^9}, 3.581855703984426*^9, {
   3.581855786596148*^9, 3.581855866184493*^9}, {3.581856641947521*^9, 
   3.581856656111063*^9}, {3.581856935157813*^9, 3.5818569445569887`*^9}, {
   3.581857006027275*^9, 3.58185703022123*^9}, {3.581857123808751*^9, 
   3.581857197094022*^9}, {3.581857274157933*^9, 3.58185731779801*^9}, {
   3.5819426776944942`*^9, 3.5819426803027163`*^9}, {3.581942844823635*^9, 
   3.581942847239024*^9}, {3.581944353890791*^9, 3.581944355752987*^9}, {
   3.58194917007652*^9, 3.581949190497978*^9}, {3.581949371385427*^9, 
   3.581949379305963*^9}, {3.58194946090628*^9, 3.5819495163196363`*^9}, {
   3.581949573938567*^9, 3.581949599944652*^9}, {3.581949729382389*^9, 
   3.581949777920323*^9}, {3.581949911516973*^9, 3.5819499136354733`*^9}, {
   3.582114084861143*^9, 3.582114107567999*^9}, {3.5821141736269503`*^9, 
   3.582114195015759*^9}, {3.582114226871348*^9, 3.582114230291051*^9}, {
   3.582122206520812*^9, 3.5821222903393497`*^9}, {3.582737411012321*^9, 
   3.582737427519579*^9}, 3.582737460319375*^9, {3.738969834417027*^9, 
   3.73896985266467*^9}, {3.738969939336814*^9, 3.738969945694798*^9}, {
   3.738970010391162*^9, 3.7389701517352753`*^9}, 3.738970262597353*^9, {
   3.7716147588094*^9, 3.771614770182129*^9}, {3.771615143165704*^9, 
   3.77161518979923*^9}, {3.771615236734894*^9, 3.7716153995456247`*^9}, {
   3.771615483489748*^9, 3.771615507641163*^9}, 3.7716155427082357`*^9, {
   3.771617311210657*^9, 3.771617350296811*^9}, {3.771621482253394*^9, 
   3.771621494135892*^9}, {3.771621537619253*^9, 3.771621571702239*^9}, {
   3.771621614008807*^9, 3.771621721740313*^9}, {3.771628016346718*^9, 
   3.7716280192162523`*^9}, {3.772387226246956*^9, 3.772387255972007*^9}, {
   3.7723873338589067`*^9, 3.772387338095673*^9}, {3.772534361453011*^9, 
   3.772534363707884*^9}, {3.772534513107504*^9, 3.772534566996526*^9}, {
   3.772579334115931*^9, 3.772579363156193*^9}, {3.7725793979224453`*^9, 
   3.772579408035801*^9}, {3.77257944686138*^9, 3.772579451074888*^9}, 
   3.772580982161825*^9, 3.7725810351315823`*^9, 3.772581099355389*^9, {
   3.7725811418464947`*^9, 3.7725811657916594`*^9}, 3.7725813063778067`*^9, {
   3.7725813364967012`*^9, 3.772581339364278*^9}, {3.772581373087685*^9, 
   3.772581378518997*^9}, {3.772581433338784*^9, 3.772581465250394*^9}, {
   3.772581542774721*^9, 3.7725815464130383`*^9}, 3.7725815772500143`*^9, {
   3.7725817104257193`*^9, 3.772581728871365*^9}, {3.772581822643485*^9, 
   3.7725818271150846`*^9}, {3.77258188841269*^9, 3.77258191267566*^9}, {
   3.772581948176424*^9, 3.7725819616574163`*^9}, 3.7726288976914597`*^9, {
   3.772628931557729*^9, 3.772628934382156*^9}, 3.7726290224238653`*^9, 
   3.772629098749159*^9, {3.7726291319397097`*^9, 3.772629153146674*^9}, 
   3.7726292649266148`*^9, 3.772630109908165*^9, {3.772630162106039*^9, 
   3.772630176868786*^9}, 3.7727094394494*^9, {3.772709506553403*^9, 
   3.772709508015574*^9}, {3.772744403307556*^9, 3.772744436046342*^9}, 
   3.7728126690116787`*^9, {3.772812729310862*^9, 3.772812744043042*^9}, {
   3.7728844848308353`*^9, 3.772884487550488*^9}, {3.7728845456656427`*^9, 
   3.7728845672348127`*^9}},
 CellLabel->
  "In[2316]:=",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.39269908169872414`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 0.4, "\[Alpha]"}, Rational[1, 8] Pi, 
      Rational[-1, 4] Pi + 
      Rational[1, 2] (Pi - 2 
        ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
           Rational[-1, 2]])}}, Typeset`size$$ = {540., {266., 274.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$996668$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0.4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$996668$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{0, 10}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{10, -10}, {0, 0}]]}}], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`a$$, 0.4, "\[Alpha]"}, 
         Rational[1, 8] Pi, Rational[-1, 4] Pi + 
         Rational[1, 2] (Pi - 2 
           ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
              Rational[-1, 2]])}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{606., {328., 337.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771615331679254*^9, 3.771615344891724*^9}, {
   3.7716153780347137`*^9, 3.771615400090403*^9}, {3.771615509177734*^9, 
   3.771615543418737*^9}, {3.7716172995828247`*^9, 3.7716173506796227`*^9}, {
   3.7716214831682243`*^9, 3.771621494971486*^9}, {3.7716215390442142`*^9, 
   3.771621572221779*^9}, {3.771621614400532*^9, 3.771621722100748*^9}, 
   3.7716227504023237`*^9, 3.771624325348137*^9, 3.771628019700643*^9, 
   3.771767582590262*^9, 3.772033128921585*^9, {3.772119030659277*^9, 
   3.77211903397023*^9}, 3.7723872573440638`*^9, 3.7723873391824837`*^9, 
   3.772390381839407*^9, 3.772534370128274*^9, {3.772534516915655*^9, 
   3.772534567544977*^9}, 3.772578806924123*^9, 3.772579365562359*^9, 
   3.772579409151984*^9, 3.772579451678898*^9, 3.772580987049975*^9, 
   3.772581040190885*^9, 3.772581101187921*^9, {3.7725811434436893`*^9, 
   3.7725811666972027`*^9}, 3.7725813405203238`*^9, 3.772581381631014*^9, {
   3.7725814389821043`*^9, 3.772581466290483*^9}, 3.77258173003124*^9, 
   3.7725818290911703`*^9, 3.7725819142216873`*^9, {3.772581949549876*^9, 
   3.772581962710828*^9}, 3.772628898909534*^9, 3.772628979540456*^9, 
   3.772629024221631*^9, 3.7726291000552263`*^9, 3.772629156936007*^9, 
   3.772629266028595*^9, 3.772630111520813*^9, 3.7726301791147738`*^9, 
   3.77264137963971*^9, 3.772708625311634*^9, 3.772709443198152*^9, 
   3.772709509767021*^9, {3.772744397729409*^9, 3.772744436992996*^9}, 
   3.77280159476114*^9, 3.772812492703123*^9, {3.772812733950852*^9, 
   3.772812744429224*^9}, 3.772884354002009*^9, 3.772884514410185*^9, {
   3.772884563790612*^9, 3.772884568074823*^9}, 3.77290676379121*^9, 
   3.773061040334002*^9, 3.773076699944272*^9},
 CellLabel->
  "Out[2316]=",ExpressionUUID->"5c158ac4-89a7-46ae-91f6-6571fbcf3a7d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locally Maximally Dense", "Section",
 CellChangeTimes->{{3.581260403324943*^9, 
  3.581260416970201*^9}},ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-\
4479b3290d12"],

Cell["\<\
We have to determine for which values of \[Alpha] and \[Beta] the packing is \
locally maximally dense. To be locally maximally dense (Following Connelly, \
Rigid Circle and Sphere Packings, Page 51, Theorem 6.1)
\t1. The packing graph is rigid as a bar framework
\t2. Have a proper stress that is non-zero on every member\
\>", "Text",
 CellChangeTimes->{{3.581260429083231*^9, 3.5812604817289133`*^9}, {
   3.58126058732162*^9, 3.581260703477894*^9}, 3.581268014437296*^9, {
   3.5814318394491863`*^9, 
   3.5814318439886436`*^9}},ExpressionUUID->"587b476a-42fe-4314-b5c2-\
430cf24c7bba"],

Cell[CellGroupData[{

Cell["Rigid as bar framework", "Subsection",
 CellChangeTimes->{{3.581260714629937*^9, 
  3.5812607219085903`*^9}},ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-\
64a93ed30112"],

Cell["\<\
To be rigid as a bar framework we need to establish a rigid ordering of the \
circles. The numbering of the circles in the picture above is a rigid \
ordering of the packing disks -- See Lemma 6.2 in the Connelly paper on Rigid \
Sphere and Circle Packings. Note: The first is held fixed. \
\>", "Text",
 CellChangeTimes->{{3.581260731787973*^9, 3.5812607589713097`*^9}, {
   3.5812608183726873`*^9, 3.581260869033848*^9}, {3.5812610404711943`*^9, 
   3.581261082093595*^9}, {3.581261148357283*^9, 3.581261161924177*^9}, {
   3.581261657149426*^9, 3.5812617281290483`*^9}, {3.581431878214656*^9, 
   3.581431907148754*^9}, {3.581855928252591*^9, 3.581855931761685*^9}, {
   3.58185743689495*^9, 3.58185744076795*^9}, 3.582737698397448*^9, {
   3.7389702310916567`*^9, 
   3.7389702492335567`*^9}},ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-\
8abc959f8dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proper Stress", "Subsection",
 CellChangeTimes->{{3.5812611912691*^9, 
  3.5812611942035923`*^9}},ExpressionUUID->"31f2c795-42a7-4371-8bcc-\
f26ae4f35c51"],

Cell[TextData[{
 "Assign a scalar to each edge of the packing and collect those scalars in a \
vector called \[Omega]. We need to solve the linear algebra problem where the \
sum of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "i"], " "}], TraditionalForm]],ExpressionUUID->
  "265e01f6-c0c7-45d6-8073-68c578121df4"],
 "times the vector from vertex j is zero. "
}], "Text",
 CellChangeTimes->{{3.581261204171701*^9, 3.5812613230015697`*^9}, {
   3.581263036291751*^9, 3.581263094625066*^9}, {3.581268035307197*^9, 
   3.581268049563353*^9}, {3.581268089331314*^9, 3.581268099474876*^9}, {
   3.581857691357902*^9, 3.581857713432221*^9}, {3.581952177554405*^9, 
   3.581952182271495*^9}, 
   3.582227123258224*^9},ExpressionUUID->"dad468d2-f604-44ad-83e4-\
8184a0b76de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"10", ",", 
                  RowBox[{"-", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\"\<\[Omega]\>\"", ",", "i"}], "]"}], ",", "Large", 
               ",", "Red"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", 
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"Label", " ", "Edges", " ", "With", " ", "Stresses"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
       " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", ".3", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     FractionBox["\[Pi]", "8"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7716156219304457`*^9, 3.7716156657824917`*^9}, {
   3.7716173605794477`*^9, 3.7716173832972507`*^9}, 3.771621836404307*^9, {
   3.771621868006282*^9, 3.771621889572094*^9}, {3.771628026520009*^9, 
   3.7716280285750093`*^9}, {3.772641860029701*^9, 3.772641870502056*^9}, {
   3.772709555869144*^9, 3.77270955927955*^9}, {3.772744447273937*^9, 
   3.772744447373604*^9}, {3.772812779454253*^9, 3.772812785900955*^9}},
 CellLabel->
  "In[2318]:=",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 0.3, "\[Alpha]"}, 
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 8] Pi}}, Typeset`size$$ = {
    540., {266., 274.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$996696$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0.3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$996696$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{0, 10}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{10, -10}, {0, 0}]]}}, 
          Table[
           Text[
            Style[
             Subscript["\[Omega]", $CellContext`i], Large, Red], 
            ReplaceAll[(1/2) (Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]] + 
              Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 2]] + 
              Part[$CellContext`edges, $CellContext`i, 3] 
               Part[$CellContext`latticeVectors, 1] + 
              Part[$CellContext`edges, $CellContext`i, 4] 
               Part[$CellContext`latticeVectors, 
                 2]), {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b}]], {$CellContext`i, 1, 
            Length[$CellContext`edges]}]], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`a$$, 0.3, "\[Alpha]"}, 
         ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 8] Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{606., {328., 337.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771615655908786*^9, 3.771615666273397*^9}, {
   3.771617374972508*^9, 3.7716173837753553`*^9}, 3.771621837663521*^9, {
   3.77162186934744*^9, 3.7716218908703737`*^9}, 3.771622750542183*^9, 
   3.771624325486567*^9, 3.771628029048644*^9, 3.771767582724186*^9, 
   3.772033129720821*^9, 3.772641872563179*^9, 3.7727095638153343`*^9, 
   3.772744448352702*^9, 3.772801595011816*^9, 3.772812492828933*^9, {
   3.77281278297161*^9, 3.772812786565954*^9}, 3.772884354117289*^9, 
   3.7729067639279127`*^9, 3.773061040525834*^9, 3.773076700162105*^9},
 CellLabel->
  "Out[2318]=",ExpressionUUID->"d588a07a-0c33-4b7e-8563-e6655c1505e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equations", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"Start", " ", "with", " ", "the", " ", "zero", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Omega]", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "a", " ", "vector", " ", "of", " ", 
    SubscriptBox["\[Omega]", "i"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "centers", "]"}]}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"(*", 
    RowBox[{"i", " ", "is", " ", "the", " ", "center", " ", "number"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
     RowBox[{"j", "++"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"j", " ", "is", " ", "the", " ", "edge", " ", "number"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "starting", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "ending", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"centers", "[", 
               RowBox[{"[", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], 
             "+", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"stresses", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "equations", "]"}], "\[Equal]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], ",", "w"}], "]"}], "]"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.5812631262417994`*^9, 3.5812631393932133`*^9}, {
   3.5812632927362833`*^9, 3.581263433806449*^9}, {3.5812635111903543`*^9, 
   3.581263539604899*^9}, {3.581263643734518*^9, 3.581263818173723*^9}, {
   3.581263893704818*^9, 3.581263906457028*^9}, {3.581263976775078*^9, 
   3.581264003472631*^9}, {3.58126411114087*^9, 3.5812641340833797`*^9}, {
   3.58126426449689*^9, 3.581264271542542*^9}, {3.581264376993701*^9, 
   3.5812643859040203`*^9}, {3.581265058156464*^9, 3.581265086954626*^9}, {
   3.581265130320315*^9, 3.581265189671144*^9}, 3.581265270566058*^9, {
   3.581265302363521*^9, 3.581265302850205*^9}, {3.5812653512370853`*^9, 
   3.5812653665051527`*^9}, {3.581265742732229*^9, 3.581265792107946*^9}, {
   3.581266490644244*^9, 3.5812665010853853`*^9}, {3.5812665623037663`*^9, 
   3.581266614361026*^9}, 3.5812666979728537`*^9, {3.581266853790249*^9, 
   3.581266950054287*^9}, {3.581267109579549*^9, 3.581267113595233*^9}, {
   3.581856054653139*^9, 3.581856144183853*^9}},
 CellLabel->
  "In[2319]:=",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   2322,260,25397637502896749269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.5812665015830107`*^9, {3.581266609340005*^9, 3.581266614687846*^9}, 
   3.581266699745332*^9, 3.581266951219722*^9, 3.581267114727116*^9, 
   3.581332364749836*^9, 3.581413745882251*^9, 3.581604814094523*^9, 
   3.581629093700818*^9, 3.581687794839203*^9, 3.58185614520014*^9, 
   3.5818576472565737`*^9, {3.5819422597185307`*^9, 3.581942262451277*^9}, 
   3.581950540664604*^9, 3.582114208599042*^9, 3.582114271275325*^9, 
   3.582122349679476*^9, 3.58221834006551*^9, 3.58222709515487*^9, 
   3.582297408729498*^9, 3.5823643731907873`*^9, 3.582367880131062*^9, 
   3.58236979732628*^9, 3.582561955606606*^9, 3.5827371302077837`*^9, 
   3.7389703520699177`*^9, 3.739634270638833*^9, 3.771615696337091*^9, 
   3.7716173921268387`*^9, 3.7716227511245317`*^9, 3.7716243260625772`*^9, 
   3.771767583554688*^9, 3.772033130466276*^9, 3.772641886480448*^9, 
   3.772709574433378*^9, 3.7727097280027637`*^9, 3.772801595280796*^9, 
   3.772812493058435*^9, 3.772884354336087*^9, 3.7729067642159653`*^9, 
   3.77306104083169*^9, 3.773076700461508*^9},
 CellLabel->
  "During evaluation of \
In[2319]:=",ExpressionUUID->"8d58854d-f235-4285-a15a-f540d93d58ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "3"], "\[Rule]", 
    RowBox[{
     SubscriptBox["\[Omega]", "1"], " ", 
     RowBox[{"Tan", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "4"], "\[Rule]", 
    RowBox[{
     RowBox[{"Sec", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
     SubscriptBox["\[Omega]", "1"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "5"], "\[Rule]", 
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
     SubscriptBox["\[Omega]", "7"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "6"], "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
     RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
     SubscriptBox["\[Omega]", "7"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7396342706707497`*^9, 3.771615696582738*^9, 
  3.771617392249407*^9, 3.77162275126501*^9, 3.771624326199301*^9, 
  3.771767583702835*^9, 3.772033130626051*^9, 3.772641886575986*^9, 
  3.772709574495117*^9, 3.772709728037438*^9, 3.7728015953019953`*^9, 
  3.772812493088016*^9, 3.77288435438701*^9, 3.7729067642790737`*^9, 
  3.773061040864951*^9, 3.77307670050723*^9},
 CellLabel->
  "Out[2322]=",ExpressionUUID->"141229df-5b32-4ad8-8bed-e6e62ed665c1"]
}, Open  ]],

Cell[TextData[{
 "Notice that stress ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "d00378a1-360b-470a-acfd-f7c34275f61d"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "7"], TraditionalForm]],ExpressionUUID->
  "ded1b559-9489-4613-879a-6f2b08bd7e3b"],
 " is free."
}], "Text",
 CellChangeTimes->{{3.581942469138938*^9, 3.581942568260255*^9}, {
  3.5821224210891247`*^9, 3.5821224318252153`*^9}, {3.582218353349749*^9, 
  3.5822183541981173`*^9}, {3.738970364574954*^9, 3.738970375318268*^9}, {
  3.7716160907649403`*^9, 3.771616090925685*^9}, {3.771617427017519*^9, 
  3.771617427180217*^9}, {3.772641909063875*^9, 3.772641938396626*^9}, {
  3.772709592046405*^9, 
  3.772709592086254*^9}},ExpressionUUID->"dab345d4-317d-4689-8b7d-\
c5f918423d0f"],

Cell[BoxData[
 RowBox[{"yuck", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"equations", " ", "/.", " ", "stresses"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"check", " ", "the", " ", "solutions"}], ",", " ", 
    RowBox[{
    "Should", " ", "output", " ", "all", " ", "zeros", " ", "but", " ", "I", 
     " ", 
     RowBox[{"don", "'"}], "t", " ", "think", " ", "Mathematica", " ", "can", 
     " ", "simplify", " ", "it"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.581266970558997*^9, 3.5812670086486597`*^9}, {
  3.5812670428585978`*^9, 3.581267107111579*^9}, {3.58126782408628*^9, 
  3.581267830337071*^9}, {3.771615712767864*^9, 3.7716157178887*^9}, {
  3.771624832402663*^9, 3.77162484486832*^9}, {3.771625069500388*^9, 
  3.771625108040539*^9}, {3.771625188009901*^9, 3.771625188461938*^9}, {
  3.771627084687838*^9, 3.771627086697544*^9}, {3.771627137607338*^9, 
  3.7716271381130447`*^9}, {3.7716273773006067`*^9, 3.7716273909517603`*^9}},
 CellLabel->
  "In[2323]:=",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"yuck", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", 
      RowBox[{"5", 
       RowBox[{"Pi", "/", "6"}]}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716270898778353`*^9, 3.771627100106181*^9}, {
   3.7716271494801493`*^9, 3.7716271956636047`*^9}, {3.771627309304491*^9, 
   3.7716273644223213`*^9}, {3.771627430852413*^9, 3.7716274393317947`*^9}, {
   3.771627554739901*^9, 3.771627593479425*^9}, 3.77270973707008*^9},
 CellLabel->
  "In[2324]:=",ExpressionUUID->"079eff23-d452-4b8a-b102-2477f53b339f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716275766061087`*^9, 3.771627594127445*^9}, 
   3.77176758953078*^9, 3.7720331360704327`*^9, 3.772641951212068*^9, 
   3.772709604790792*^9, 3.772709738482601*^9, 3.7728015956943617`*^9, 
   3.772812493248406*^9, 3.772884354518509*^9, 3.772906764411083*^9, 
   3.773061041020995*^9, 3.773076700735895*^9},
 CellLabel->
  "Out[2324]=",ExpressionUUID->"79c2deb3-e1e7-4c5a-8268-4a88d47c60e3"]
}, Open  ]],

Cell[TextData[{
 "For every \[Alpha] and \[Beta] in the feasible region (for all ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Pi", "/", "2"}], "+", 
   RowBox[{
    RowBox[{"ArcCos", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["2"]}], ")"}]}], "]"}], "/", "2"}]}]],
  CellChangeTimes->{{3.7716156219304457`*^9, 3.7716156657824917`*^9}},
  ExpressionUUID->"2107963a-7f83-4b5b-9090-f753d1929ed7"],
 "< \[Alpha] <  Pi and  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Pi", "/", "2"}], "+", 
   RowBox[{
    RowBox[{"ArcCos", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["2"]}], ")"}]}], "]"}], "/", "2"}]}]],
  CellChangeTimes->{{3.7716156219304457`*^9, 3.7716156657824917`*^9}},
  ExpressionUUID->"827a9022-0584-4bbe-85bd-221724aab6ee"],
 "<  \[Beta] < Pi and \[Alpha] >\[Beta])  we need to make sure that all ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "i"], TraditionalForm]],ExpressionUUID->
  "10cf7191-6958-4bcf-93cb-249699ff2410"],
 " are positive for some choice of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "d06cd927-2c2d-41d3-9627-05a98287611d"],
 ". Try ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "ff47c5d5-bf0b-4beb-bd6d-ffcf7771104d"],
 "=1"
}], "Text",
 CellChangeTimes->{{3.581266725140904*^9, 3.581266842113933*^9}, {
   3.5818577319119787`*^9, 3.5818577338321953`*^9}, 3.581952268981967*^9, {
   3.581952336107086*^9, 3.58195234311259*^9}, 3.582114556723754*^9, {
   3.5822227622246532`*^9, 3.582222768464707*^9}, {3.771615826526231*^9, 
   3.771615834426858*^9}, {3.771616112060115*^9, 3.7716161124787617`*^9}, {
   3.771617433188672*^9, 3.771617439317309*^9}, {3.771625855792712*^9, 
   3.771625858714633*^9}, {3.771627494307497*^9, 
   3.771627509762381*^9}},ExpressionUUID->"90c67218-1cc8-4bea-99d5-\
fd5ddfdb51dd"],

Cell[BoxData[
 RowBox[{"guts", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "i"], "/.", "stresses"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "first", " ", "list", " ", "all", " ", "of", " ", "the", " ", 
          "right", " ", "hand", " ", "sides", " ", "of", " ", "all", " ", 
          "the", " ", "stresses"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "\[Rule]", ".1"}], ",", 
        RowBox[{
         SubscriptBox["\[Omega]", "7"], "\[Rule]", ".1"}]}], "}"}]}]}], "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.7716167421291027`*^9, 3.7716167736440973`*^9}, {
  3.771624666657902*^9, 3.77162466689053*^9}, {3.7727096192788*^9, 
  3.772709633387484*^9}, {3.772709683400099*^9, 3.7727096861331987`*^9}, {
  3.7727097974494057`*^9, 3.7727098309960012`*^9}},
 CellLabel->
  "In[2325]:=",ExpressionUUID->"b861794b-5dc4-4f62-a8af-a6aa1633b81c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"guts", ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     FractionBox["\[Pi]", "8"], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
      RowBox[{"\[Alpha]", ">", "\[Beta]"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771616758899276*^9, 3.771616778140399*^9}, {
   3.771624700169651*^9, 3.771624723760776*^9}, {3.77162586895288*^9, 
   3.7716258722505913`*^9}, {3.772642009000579*^9, 3.7726420309088078`*^9}, {
   3.77270964962389*^9, 3.7727096640067167`*^9}, 3.77281280857091*^9, {
   3.772884597499366*^9, 3.772884601477448*^9}},
 CellLabel->
  "In[2326]:=",ExpressionUUID->"e19a6967-7441-4af8-aa7e-13ca11c722cc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN0XlIkwEYBvCvSZ5oE6nE25aU4jVwxjSdzKjFZmGHlIbHSk3LlkfOtHmR
JKR5zIYofdPmVTMNO8REZlPDmFImBtO5GdIKMwmcYWpYQez5Xnh4+P33wOst
FJ1KpREEEfM3/zr6QULcpreWQ/w/D6ncI38fvF65aPxBcU/eFbGRATsLihqn
fODljabZTl9Ydm428QwTXnI6n/4kCq4O788xpcD8936rlmWwSCrOlMjhGisf
XeUwrPn6RZ1kgC2K7No0xKzZreHWt5q94fgMl7ehUTCdV01PT4E/SXdPCkth
ZwdxqZqE+Wx2YL8Kbpqix4r18GeX49cmtmFZfXx5hdec2UJxmZ0tB/azt6lh
JMMO9I471iXwyoiisLwFDukovJT8GpatpY3YLMCmtWduvB06s7Mu7vkW6wUL
tmOfqiLhA4IVkToJ9rBsaasthh2z+6ZX5XCmLfnr1TCsp8sbYgzwyXHC7wYx
b/bcsjjksic8yRlnqSLgweibTGUiPPac81AogTUf0+x7SXg5VfH9zRCcyxgY
5ergn3VBstO/4ftZg7ogN73ZwRud7q0RMPNF1tn8RPjEPI+2VwKnv7z9SEDC
zVszYzFDMCub0PbNwRrZXWP3Fizx9c/IcTXgX8qZd5sU9wSUhFa4wQvMDxaN
7jA3rIAc8oSt+KPT1vvhuqsXIuX+8OOVne0HA2D19V67PopNeTTtaCAcJ+nK
XQqGXe+ZulgsOIRO7lJRLKg/ls8LhYtlTdEJhyj7ySh9KRte91o6YhsGOyqk
SinF3E5jQUc4nOBbawg6DOcp2UcHKK4KWOzmRsDtvVVOExT/AUU/MsY=
       "]]},
     Annotation[#, "Charting`Private`Tag$996757#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV02s0lAkcBvDZmQpJjU1q3Uqyxea2YZfSY01HZCQqxOa2kVplRaZlibZO
tYioCZ1miKTI7DtjZowKuXQTUmvPvnN5X6VmO7O2Y0u20mXf/fA/z/l9e54P
f/uk9IhkNovFCmXu/+Sdi42ctiexTO8vrKpSwa5CbJe9lATvVrnjSKUKr4+N
6ScYF6tvtXMZt2R9L9A7kNjkqp46KlRhET+3ctiRRPPl0/LsChXG31arLzqR
IMw+C91aooIwWh23xYPEl2c0jywLVTDM37bzij+JoROKE02pKpSsVu6bTCTh
aba+3dhThZD7zi9nFZL4Y3r6Ho+jQnqFYHeemMTd/R+CBx62odTIUXusi4Tt
jm9qZTVt6H/2Z3c8TeKVRSbiMtrAyTWt72epMR74aGvW2jbUrjb+6ay9Gg8E
N66Rc9oQs8vqjre/GhZGuzMNlBLcoBLuzkQ1sg39yYIrSjyqWDCQVKDGmlMT
w+cPKrForqCgW6TGnRlsLWezEiE+Pq7KTjViM8bIiaVKVA9zwwWUGim+efeT
pxR4ahW8995HNdhSm2uZNxUQlsccOrJEg31dC9a0nVEgSVBoOhsaaJ4kdOxN
U8DZzKTUIUGDY9kGpwE/BeZyG44aH9QgKmyMX/6pAs976nIO1WjQxNmeb/pE
Ds+GnB0JNzRIneET0KKQQ/gqpcdkVAPrHsvAumI5Jl/JbII+0UJXMhweEy/H
nu8s/wpfokXwJYnlNi85+B/Df+1cq0VOjXds2hw5lvOfp3fHazGY29y3cbQV
drNq6svytVh2vDE5RdkK8wzpw5diLQ7kZHGii1qxe7boTXuXFlO/JZjHJ7SC
4opPhdJaiJQs3+NftyLsNst5P0uHsKlno1VmrdCMCzxTF+uQKiuK6H0qwwBu
e3X66fD2sXXZPx0yXOX96NEUp8P97h4T89My9LXifFKeDhEWJk999srQ/3uK
mUSkw+vAQ5K4dTKMJ9f9ffO6Ds5Dfg6HbWXIdFD1Bmh1WG47b3ndv1JMnXQT
bn6vA4c/aH1nUIrTe65q3WwoOEaxY0YbpXB/e9G21o9CwcK+GqMCKTzke7Zm
x1HgvXCPdIqWYqMuiL0wj4LbLxsCXVZJsVNx+BJfREGyOLUzxFSKs+9G+kKv
Uyjsl8nW6Ql4ZbBIqYZCy8iGUyu6CfQLi/TN7ygo38zQup8lkOe0ctc+axr2
kvyJmQICwqaRoWnGpfVFuh3ZBFpcDnofsaHBsQoa7NlPYNTjAafSloa8YbC9
MItAgO8B0fXFND6umtP1PoOAUUjvQ+NlND6ULsqdSiNwMu3bteKVNPoqXxCG
JAKXn8+8sMKFBvX5YYsNjLt/kJhKGf8c3JFzKZHAZBab7HWlMZ7+RURqAoHI
vMZMgzsNse/YSv12AtYnJhu9vGjEnKs8+TiagCdXNK+TsbC+yjWAMb98fXaQ
N9NnCEO1UQTyhdW82K9otChzrBMjmf4if6rAh4bV3Xqa3kzg9RLDutm+NMxf
3K4CY/O6iqYKxluOlkWJI5h9F/UHGlbTqLYzoeLCCcQ6ldFua2hwZaqGjk0E
spp8AlWMmefNtGNc7DLWHOBHg45l8/LDCFyQFM+/x7iDXW1JbSTwH+74X8k=

       "]]},
     Annotation[#, "Charting`Private`Tag$996757#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7Tw3Ouy34k37WTNBYKf9tIhbcSGGCP4r4cj0tQ4I
fq/19qIviQi+9wWtz2yNCH7+5PKs2vkIfj+76p2OAwj+6RfPD8XfR/CZq7mX
nGa4BecvtOaoma2I4EdlSp00c0DwBTx6BdITEfyHk0XPJjUg+BJ85Q2H5iH4
3paWetv3I/izLgoElt9D8J9Keead+Y/gT5sU1dSqcBvOTypv5OayR/C1eDn7
lRMQfD6BZe0c9Qj+u8OLq5oWIPgmy6pSEg4i+NO+ph3mfIDgf/m6WcaD8Q6c
n5ss9jpQAcH3+R+4Yb8dgq/u8y7/UDyCL8e2YMmEOgRfsHDT5c/zEfwsrnk/
dx1A8O8JzJ/iex/B9z/BoFXKcBfOv/2m3CRDHsE/a3/CdL8tgr/budJwdRyC
f3SL/aKkWgT/9LU03vXzEPw3qYvfHtuL4Bcr7zzidAfB/zZRf1rwXwR/au7u
O/oy9+B8g1/LZRfaIviGW3NDy+IQfL+7HkzitQh++raWlT7zEPzZf64e9d2L
4JsWMtzcdBvBPz2t+9maPwh+raZOZpH0fTh/Yk6M3XwdBH/p+h7hM7YIPgD6
Ib5N
       "]]},
     Annotation[#, "Charting`Private`Tag$996757#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
zaolbqg2W9hK+vc/ZA3xEQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$996757#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], None},
  AxesOrigin->NCache[{Rational[1, 8] Pi, 0}, {0.39269908169872414`, 0}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[1, 8] Pi, Rational[-1, 4] Pi + 
      Rational[1, 2] (Pi - 2 
        ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
           Rational[-1, 2]])}, {0., 0.1271978088566714}}, {{
    0.39269908169872414`, 0.4881468020762414}, {0., 0.1271978088566714}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.771616782954821*^9, 3.771624201559512*^9, 3.771624565405014*^9, {
   3.771624650515085*^9, 3.771624730466136*^9}, 3.771625877064026*^9, 
   3.771767594623402*^9, 3.7720331418534107`*^9, 3.772642035997921*^9, {
   3.772709671806025*^9, 3.772709690035881*^9}, 3.772709767271247*^9, {
   3.772709806810557*^9, 3.772709835022232*^9}, 3.7728015961214647`*^9, 
   3.772812493455288*^9, 3.772812811260293*^9, 3.77288435476232*^9, 
   3.772884602951474*^9, 3.772906764564928*^9, 3.773061041212187*^9, 
   3.77307670094256*^9},
 CellLabel->
  "Out[2326]=",ExpressionUUID->"d2312497-3d59-42ed-9f6c-e2726ae409ae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moduli Space Of Locally Maximally Dense Packings", "Section",
 CellChangeTimes->{{3.581268199842701*^9, 3.5812682055518713`*^9}, {
  3.581268252471168*^9, 
  3.581268267583231*^9}},ExpressionUUID->"1367c9d9-3697-4765-9fd2-\
49fbdfafea09"],

Cell["\<\
Determine the Torus Angle and Ratio for the packings that are locally \
maximally dense. \
\>", "Text",
 CellChangeTimes->{{3.5812682787135897`*^9, 3.581268350581593*^9}, {
   3.581333395348236*^9, 3.581333608702343*^9}, {3.5813336764078617`*^9, 
   3.581333687180387*^9}, {3.581333851570097*^9, 3.581333902825006*^9}, {
   3.5814180211148233`*^9, 3.581418038876515*^9}, 
   3.581943351425103*^9},ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-\
5dfd369c5feb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusAngleFromVectors", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"VectorAngle", "[", 
     RowBox[{
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Alpha]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       FractionBox["\[Pi]", "8"], "<", "\[Alpha]", "<", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
        RowBox[{"Pi", "/", "4"}]}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.58133303742656*^9, 3.581333043881184*^9}, {
   3.5813331557765102`*^9, 3.58133317227901*^9}, {3.581333205989634*^9, 
   3.581333234053957*^9}, {3.581333325533258*^9, 3.5813333760116377`*^9}, {
   3.581606424512455*^9, 3.5816064282642384`*^9}, {3.582114890721849*^9, 
   3.5821148908686647`*^9}, {3.582214278216044*^9, 3.582214279067687*^9}, {
   3.5837630857623653`*^9, 3.583763115245988*^9}, {3.771616195483326*^9, 
   3.7716162056791077`*^9}, {3.771625759558325*^9, 3.7716257619713907`*^9}, {
   3.772642114601429*^9, 3.77264219693111*^9}, {3.77264258428588*^9, 
   3.772642584878736*^9}, {3.772709864478696*^9, 3.772709875854732*^9}, 
   3.772812828446261*^9, 3.772884638595879*^9},
 CellLabel->
  "In[2327]:=",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],

Cell[BoxData[
 RowBox[{
  FractionBox["\[Pi]", "4"], "+", "\[Alpha]"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOJ132Z3b97wynHD82/3Oja+ctz89orilk2vHM/57d4Q
s/mV44PJYYE1QFpfVS4MRCvNak4H0UvcVjReOfDKsSjB5SSI3nXv9NafQJrl
s7yw6sFXjh3CEzvLD71y9H9RdLUeSH/7dzCjDUjbCfh9lz4MtM/sAJcMkD63
TM/59JFXjmHVq/pBdEFlp+BZIP391KPY8KOvHD3uOTDOL3vtyP/QbI5zxWvH
q77/p+yVfOO47+fnqpNA+q/B1sSzQDp4kV4/iJbU2adyDkgHSWulCUu9cXQQ
W8s/FUgvznhbtE/6jeOlZMfFILrso3n9fSAtLtPqziPzxjH69/qZgkB64t/M
IyD67bHIDSZA+s+sqisg+u7PyQvtgfQtTY1vXUDanXnB7ElAGgDfqKt6
  "],
 CellLabel->
  "Out[2327]=",ExpressionUUID->"05ebaaa3-f564-4d5e-95ff-b6437c7c742f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusRatio", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "/", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Alpha]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       FractionBox["\[Pi]", "8"], "<", "\[Alpha]", "<", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
        RowBox[{"Pi", "/", "4"}]}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581333928283676*^9, 3.5813339332161627`*^9}, {
   3.581334020790724*^9, 3.581334024038533*^9}, {3.5814137912868853`*^9, 
   3.581413793610195*^9}, {3.581413914891388*^9, 3.581413969106378*^9}, {
   3.581414006658498*^9, 3.5814140098857813`*^9}, {3.581417178533601*^9, 
   3.581417182493422*^9}, {3.581418120652129*^9, 3.58141812244401*^9}, {
   3.5821149063355827`*^9, 3.5821149065242977`*^9}, {3.582214283944845*^9, 
   3.582214285342742*^9}, {3.583763127000839*^9, 3.5837631367212667`*^9}, 
   3.590836445225319*^9, 3.590836673722036*^9, 3.771616430596385*^9, {
   3.771625658093115*^9, 3.7716256605829687`*^9}, {3.772642498121307*^9, 
   3.772642504102042*^9}, {3.77264259307479*^9, 3.7726425935953617`*^9}, 
   3.7727098940090218`*^9, 3.77271001711409*^9, {3.772801631403598*^9, 
   3.772801634657251*^9}, 3.772812831864152*^9, {3.7728846156242123`*^9, 
   3.772884622067152*^9}},
 CellLabel->
  "In[2328]:=",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],

Cell[BoxData[
 RowBox[{
  SqrtBox["2"], " ", 
  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGCwBuKT4WmujOtfOT5ZXOsFotvmVviD6LkLrO8wAWmZ4LOf
QXTSnuJAZiAtNeV3ZRyQrvVlCo0H0jZpNidAtNjZ/ZztQJrhQ585y4ZXjic/
Z1SyA2mD5EDTcCCdLJHcDaKPxR0U7ADSfBsV94Joj9/HsnuANFurQfZqIC3M
M19vM5A28ft7r2PjK8dbX/4qbtn0ynGXO/vGmM2vHKdNDYqoAdJZ3PvSQfSX
49sarxx45Xhi5YqTINr31tetP4H0uojD0r+AdIlyuAWInmSoL6x68JVjR9Sd
zvJDrxxVPgpdrwfSs25eyWoD0ge+RrmcPvLKkUPvZD+InsOxRvAskD71hyUu
/OgrxzPLwxjnl712nL6jZ45zxWvHQ5fEp+6VfON45lDTtJNA+t6aE4lngbRU
i10/iJ7Ev0j8HJBmuWGUJiz1xtG3ZTf/VCAd8MBy5j7pN46/nGuXgOic5QKN
94G0qaTjBBA95XS7O4/MG8eO1Ok+IJrFduNMQSCt/sLzKIh2cYneYAKklxQe
vQKiW3ZOXWgPUleh9a0LSLOtWTR7EpAGAKli8gw=
  "],
 CellLabel->
  "Out[2328]=",ExpressionUUID->"a9f88929-b59b-429f-8194-5d310abe2f33"]
}, Open  ]],

Cell["\<\
Now plot the region of the moduli space that is covered by \
(r,theta)=(torusRatio,torusAngle). The right boundary is in the region, the \
others are not.\
\>", "Text",
 CellChangeTimes->{{3.5814140902111692`*^9, 3.581414154771768*^9}, {
   3.581417869513275*^9, 3.5814179087877693`*^9}, 3.5819442751664667`*^9, 
   3.581952458180634*^9, {3.58195324790655*^9, 3.581953260663254*^9}, 
   3.582222917826333*^9, {3.582740615417358*^9, 
   3.582740626390436*^9}},ExpressionUUID->"7fea073f-4678-488f-94be-\
79aeb56d8b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".5", ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"(", 
          RowBox[{"torusRatio", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"(", 
          RowBox[{"torusRatio", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        FractionBox["\[Pi]", "8"], ",", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox["2"]}], 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
         RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Least", " ", "dense", " ", "globally", " ", "maximally", " ", "dense", 
      " ", "point"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Point", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"torusRatio", "*", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
            "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{"(", 
             RowBox[{"torusRatio", "*", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
            "]"}]}], "}"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", "2.4907302"}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", "2.4907302"}]}], "}"}]}], "]"}]}], 
      "}"}], "\[IndentingNewLine]", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.581415831271719*^9, 3.581415978032723*^9}, {
   3.58141612812768*^9, 3.581416251087431*^9}, {3.5814163536961203`*^9, 
   3.581416442716133*^9}, {3.581416480954212*^9, 3.581416483177804*^9}, {
   3.5814165146738863`*^9, 3.581416565902112*^9}, {3.581416608288938*^9, 
   3.5814166596471777`*^9}, {3.5814168167885647`*^9, 3.581417153958934*^9}, {
   3.581417202245771*^9, 3.581417213509737*^9}, {3.581417400105816*^9, 
   3.581417408207815*^9}, {3.58141746709744*^9, 3.5814175008866453`*^9}, {
   3.581417557569965*^9, 3.581417612638392*^9}, {3.581417671918985*^9, 
   3.581417831941291*^9}, {3.581417963968446*^9, 3.581417981960126*^9}, {
   3.5814180770100727`*^9, 3.581418078736156*^9}, {3.581418154813571*^9, 
   3.581418198197053*^9}, {3.581418231380889*^9, 3.581418233404674*^9}, {
   3.5814228339713078`*^9, 3.581422878811762*^9}, {3.581422916120751*^9, 
   3.581422920863715*^9}, {3.581423093095364*^9, 3.5814231218921137`*^9}, {
   3.5814325481543407`*^9, 3.581432568807173*^9}, {3.58143260450275*^9, 
   3.581432634829975*^9}, {3.581606579957893*^9, 3.581606608420135*^9}, {
   3.581606987915503*^9, 3.581606998825101*^9}, {3.5816074940013037`*^9, 
   3.581607502096019*^9}, {3.5816089617270803`*^9, 3.581608961944695*^9}, {
   3.581610590770281*^9, 3.5816106180632963`*^9}, {3.581610681115829*^9, 
   3.581610701075707*^9}, {3.581610737934224*^9, 3.581610756661036*^9}, {
   3.581610842392229*^9, 3.581610866051654*^9}, {3.581610899571859*^9, 
   3.581610901443101*^9}, {3.581628476144258*^9, 3.581628557405979*^9}, {
   3.5816288727085114`*^9, 3.5816289082821913`*^9}, {3.581629178822418*^9, 
   3.581629182837798*^9}, {3.581629414916697*^9, 3.581629440685017*^9}, {
   3.581629482704157*^9, 3.581629535764595*^9}, {3.581673461804196*^9, 
   3.581673549905184*^9}, {3.581673641406663*^9, 3.5816736439745283`*^9}, {
   3.5816736910543633`*^9, 3.581673692799611*^9}, {3.581673723190359*^9, 
   3.5816738188450117`*^9}, {3.581687950683776*^9, 3.5816879567545223`*^9}, {
   3.581688016649939*^9, 3.5816880272652283`*^9}, {3.5819443936836443`*^9, 
   3.5819445342161207`*^9}, {3.581950949672516*^9, 3.581950957971415*^9}, {
   3.581950988486538*^9, 3.581950995522575*^9}, {3.5819531797520447`*^9, 
   3.5819532355691442`*^9}, {3.58221429143818*^9, 3.582214323641893*^9}, {
   3.5822143838841248`*^9, 3.582214397599576*^9}, {3.5822144308149233`*^9, 
   3.582214468851671*^9}, {3.582214521826295*^9, 3.582214548417429*^9}, {
   3.582214625108366*^9, 3.582214653749571*^9}, {3.582214715107759*^9, 
   3.582214723919776*^9}, {3.582214962155978*^9, 3.582214985349832*^9}, {
   3.5822151321151953`*^9, 3.582215160198626*^9}, {3.582215328952002*^9, 
   3.5822153367977*^9}, {3.5822154632111673`*^9, 3.582215466952477*^9}, {
   3.582215958667633*^9, 3.582215958826397*^9}, {3.582216169371503*^9, 
   3.582216225367741*^9}, {3.582216696200515*^9, 3.582216709707431*^9}, {
   3.5822866723292437`*^9, 3.5822866925090446`*^9}, {3.582286752029377*^9, 
   3.582286752908947*^9}, {3.582287158898551*^9, 3.5822871632335443`*^9}, {
   3.582287337500922*^9, 3.582287358257596*^9}, {3.582301692611936*^9, 
   3.582301712401127*^9}, {3.582301784817443*^9, 3.582301789917963*^9}, {
   3.582302650469707*^9, 3.582302655265546*^9}, {3.5823027058646097`*^9, 
   3.5823027249979687`*^9}, {3.5823029530486193`*^9, 3.582303020216475*^9}, {
   3.582303064333783*^9, 3.58230307483996*^9}, {3.5823031290716467`*^9, 
   3.582303135836779*^9}, {3.583353031333394*^9, 3.583353124551704*^9}, 
   3.5837631490547533`*^9, {3.583763272239708*^9, 3.583763274307045*^9}, {
   3.5837634289930067`*^9, 3.583763431208726*^9}, {3.7716164575815573`*^9, 
   3.771616478135851*^9}, {3.7716166852611103`*^9, 3.771616698019866*^9}, {
   3.7716170003808947`*^9, 3.771617001546206*^9}, {3.771617152902998*^9, 
   3.771617154084714*^9}, {3.771625225156486*^9, 3.771625253346716*^9}, {
   3.7716256656214123`*^9, 3.771625668004211*^9}, {3.771626607610469*^9, 
   3.7716266619078503`*^9}, {3.772642409773946*^9, 3.772642441850366*^9}, {
   3.772642514483388*^9, 3.772642546113887*^9}, {3.7726426012065477`*^9, 
   3.772642636302199*^9}, {3.772709932208503*^9, 3.772709942783052*^9}, {
   3.7728128612444677`*^9, 3.7728128687049723`*^9}, {3.772884658801547*^9, 
   3.772884662356523*^9}},
 CellLabel->
  "In[2329]:=",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}], LineBox[{{0, -1}, {0, 2}}], 
   LineBox[{{-1.1, 0}, {1.1, 0}}], 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{-0.5, Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
        2}}, {{-0.5, 0.8660254037844386}, {-0.5, 2}}]]}, 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{0.5, Rational[1, 2] 3^Rational[1, 2]}, {0.5, 2}}, {{0.5, 
       0.8660254037844386}, {0.5, 2}}]]}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
GPygGL1SlJPz2ZOBr0LLoAL0/wECr/SJ
       "]]},
     Annotation[#, "Charting`Private`Tag$996847#1"]& ]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{1.1149272727353767`, 0.1509091103362454}]}}]], "Output",
 CellChangeTimes->{{3.7716266149462214`*^9, 3.771626632038991*^9}, 
   3.77162666291777*^9, 3.771767601712225*^9, 3.772033150296051*^9, 
   3.772642641017743*^9, 3.772709947444066*^9, 3.772710025089353*^9, 
   3.772801596358616*^9, 3.772801640018241*^9, 3.772812493617976*^9, 
   3.772812871288396*^9, 3.772884355083844*^9, 3.772884672018655*^9, 
   3.772906764739811*^9, 3.7730610414641037`*^9, 3.7730767012249947`*^9},
 CellLabel->
  "Out[2329]=",ExpressionUUID->"83099c47-fe8d-4558-8f5f-ce6348c74ccf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Density Of Packings ", "Section",
 CellChangeTimes->{{3.5814349606441174`*^9, 3.581434966706005*^9}, {
  3.581443652345149*^9, 
  3.58144365457318*^9}},ExpressionUUID->"0778b274-df47-40d0-990e-\
9f18ab4dee0d"],

Cell["\<\
Here we analyze the density of the locally maximally dense packings and \
explore the density.\
\>", "Text",
 CellChangeTimes->{{3.5814349743941193`*^9, 
  3.5814350022015533`*^9}},ExpressionUUID->"e2b21120-6780-408f-b4b4-\
7bd65fa10119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusDensity", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "^", "2"}]}], "+", 
       RowBox[{"2", "*", "Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}], ")"}], "^",
          "2"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}], ")"}]}], " ", 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Alpha]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       FractionBox["\[Pi]", "8"], "<", "\[Alpha]", "<", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
        RowBox[{"Pi", "/", "4"}]}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581435007166294*^9, 3.581435026699298*^9}, {
   3.5814350629183598`*^9, 3.581435137463068*^9}, {3.581441446598172*^9, 
   3.5814414948170977`*^9}, {3.5814421896974163`*^9, 3.5814422295017653`*^9}, 
   3.581442694940857*^9, {3.581604837617858*^9, 3.581604867599731*^9}, {
   3.581607908671111*^9, 3.581607909369944*^9}, {3.581944549930921*^9, 
   3.5819445543944483`*^9}, {3.582114922893406*^9, 3.582114923036167*^9}, {
   3.5822165846144447`*^9, 3.582216585540084*^9}, {3.582303334411914*^9, 
   3.582303334736128*^9}, {3.583763359343549*^9, 3.583763364560102*^9}, 
   3.771617083708983*^9, {3.771617193070365*^9, 3.771617222420538*^9}, {
   3.771626748724434*^9, 3.771626750958971*^9}, 3.7729065612460957`*^9},
 CellLabel->
  "In[2330]:=",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "7"}], "+", 
      RowBox[{"4", " ", 
       SqrtBox["2"]}]}], ")"}], " ", "\[Pi]", " ", 
    RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], "+", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.581435174638554*^9, 3.5814360377394533`*^9, 3.5814414525442343`*^9, {
   3.581442212853862*^9, 3.5814422309332247`*^9}, 3.5814426963111486`*^9, {
   3.581604816468317*^9, 3.581604842276881*^9}, 3.581604949571162*^9, 
   3.581607510569717*^9, 3.5816079104502077`*^9, 3.58160937151543*^9, 
   3.581687886583846*^9, {3.581944542797326*^9, 3.581944555361349*^9}, 
   3.5819510064190474`*^9, 3.5819532664168997`*^9, 3.582114219746011*^9, 
   3.5821149243109617`*^9, {3.582216584034459*^9, 3.582216587666834*^9}, 
   3.5822232014315166`*^9, 3.582286936524232*^9, 3.582302582175164*^9, 
   3.582303335778859*^9, 3.582740217258*^9, {3.583763341462748*^9, 
   3.5837633660660152`*^9}, 3.590759438761785*^9, 3.590835632743123*^9, 
   3.590836699525751*^9, 3.590924442373547*^9, 3.5916176659788513`*^9, 
   3.591634628349544*^9, 3.591648115760672*^9, 3.591954372553525*^9, 
   3.592837678747449*^9, 3.592838271356739*^9, 3.592841358448024*^9, 
   3.59312459321947*^9, 3.686070283738555*^9, 3.686931689066928*^9, 
   3.771591849711658*^9, 3.7716170854992456`*^9, 3.7716242092109537`*^9, 
   3.7716245711148777`*^9, 3.771626377492437*^9, 3.7716267524561453`*^9, 
   3.7717676033879337`*^9, 3.772033152050788*^9, 3.772801597365238*^9, 
   3.772812494146434*^9, 3.772906764916903*^9, 3.7730610416645184`*^9, 
   3.7730767014194*^9},
 CellLabel->
  "Out[2330]=",ExpressionUUID->"f9cc0309-c470-48f4-a6fd-082d768c257f"]
}, Open  ]],

Cell["Plot the density over the parameter space", "Text",
 CellChangeTimes->{{3.581609262745317*^9, 
  3.581609279281209*^9}},ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-\
e5f2bb2c8c0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"torusDensity", ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     FractionBox["\[Pi]", "8"], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
      RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581607973838263*^9, 3.581608022458598*^9}, {
   3.5816080842911158`*^9, 3.58160808861963*^9}, {3.58160813949725*^9, 
   3.581608146824136*^9}, {3.5816089073150682`*^9, 3.581608922003821*^9}, {
   3.581608970988791*^9, 3.5816089717227383`*^9}, {3.581944701349125*^9, 
   3.58194471749083*^9}, {3.581944751737221*^9, 3.581944787874208*^9}, {
   3.581951021398402*^9, 3.581951033668231*^9}, {3.58221660360467*^9, 
   3.582216617749133*^9}, {3.5822869554826403`*^9, 3.582286956658009*^9}, {
   3.5827407405041*^9, 3.582740763790533*^9}, {3.590837063823267*^9, 
   3.590837065433181*^9}, 3.771626404677743*^9, {3.772906587756241*^9, 
   3.772906592383685*^9}},
 CellLabel->
  "In[2331]:=",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$997017#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], None},
  AxesOrigin->
   NCache[{Rational[1, 8] Pi, 0.8739112579475647}, {0.39269908169872414`, 
    0.8739112579475647}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[1, 8] Pi, Rational[-1, 4] Pi + 
      Rational[1, 2] (Pi - 2 
        ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
           Rational[-1, 2]])}, {0.8739112579475647, 0.883310537699896}}, {{
    0.39269908169872414`, 0.4881468020762414}, {0.8739112579475647, 
    0.883310537699896}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.581609096455961*^9, 3.5816289197193604`*^9, 3.58168788679126*^9, 
   3.5819447901637697`*^9, 3.581951034908289*^9, 3.5819533173554783`*^9, 
   3.5821142198997307`*^9, 3.582114951275977*^9, 3.582216621867839*^9, 
   3.582223201755753*^9, {3.582286941086684*^9, 3.582286957215057*^9}, 
   3.582302582262513*^9, 3.582303339581299*^9, 3.58274021742274*^9, 
   3.582740765531266*^9, 3.583763378488957*^9, 3.590759438998534*^9, 
   3.590835632984823*^9, 3.590837068452118*^9, 3.590924442561226*^9, 
   3.591617761635764*^9, 3.5928382714151497`*^9, 3.5928413586413317`*^9, 
   3.593124593379208*^9, 3.686070283937107*^9, 3.68693168944556*^9, 
   3.771591849854644*^9, 3.771624209995349*^9, 3.771624571238709*^9, 
   3.771626405392148*^9, 3.771626756886554*^9, 3.771767603492222*^9, 
   3.77203315252115*^9, 3.772801597794767*^9, 3.772812494503685*^9, 
   3.772906764959721*^9, 3.773061041813242*^9, 3.773076701575693*^9},
 CellLabel->
  "Out[2331]=",ExpressionUUID->"47951a61-6ba7-4381-b143-90bb5a89f8d2"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.581609094038151*^9, 3.581609094069778*^9}},
 CellLabel->
  "In[2332]:=",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],

Cell["\<\
Color the moduli space region with color depending on the density. Red shade \
is close to 1 and Blue shade is close to .5\
\>", "Text",
 CellChangeTimes->{{3.5816092922408857`*^9, 3.5816093140005407`*^9}, {
  3.581609621573914*^9, 3.5816096454884663`*^9}, {3.581953354061882*^9, 
  3.5819533586268*^9}, {3.582222943743129*^9, 
  3.582222944008811*^9}},ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-\
8ad9c9b01e0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"(", 
        RowBox[{"torusRatio", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], "]"}], 
      ",", 
      RowBox[{"Im", "[", 
       RowBox[{"(", 
        RowBox[{"torusRatio", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      FractionBox["\[Pi]", "8"], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"Pi", "/", "4"}]}]}], "}"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Hue", "[", "torusDensity", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", "->", "#3"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "#4"}]}], "}"}]}], " ", "&"}], 
      ")"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"BoundaryStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], ",", 
    RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.5814415563651342`*^9, 3.58144157581666*^9}, {
   3.58144166381931*^9, 3.581441756142213*^9}, {3.581441806320602*^9, 
   3.581441878069029*^9}, {3.581441915668941*^9, 3.581441925996266*^9}, 
   3.581441969683961*^9, {3.581442240718355*^9, 3.581442258158124*^9}, {
   3.581442377548176*^9, 3.581442417514968*^9}, {3.58144247190583*^9, 
   3.5814424734743013`*^9}, {3.581442751557214*^9, 3.5814427571400003`*^9}, {
   3.5814434590030537`*^9, 3.581443460904909*^9}, {3.581609502983444*^9, 
   3.581609548034075*^9}, {3.581609898970262*^9, 3.581609928408107*^9}, 
   3.581673696967795*^9, {3.581944806767089*^9, 3.58194488275401*^9}, {
   3.5819533247323313`*^9, 3.581953341447814*^9}, {3.58221665186229*^9, 
   3.582216657188343*^9}, {3.582216731483777*^9, 3.582216751511827*^9}, {
   3.582216898707114*^9, 3.5822169242483463`*^9}, {3.5822229328956413`*^9, 
   3.582222933118864*^9}, {3.58228697958738*^9, 3.582286980702338*^9}, {
   3.5822870338872538`*^9, 3.582287078033432*^9}, {3.582303381723358*^9, 
   3.582303382080562*^9}, {3.583763394256619*^9, 3.583763397797147*^9}, 
   3.771626448096888*^9, 3.772906612833417*^9, 3.772906652744297*^9},
 CellLabel->
  "In[2333]:=",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
F6l6/J7mwwArDL1XgvX/B7Yc9Ik=
   "], {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1], LineBox[{1, 130, 106, 154, 86, 150, 126, 156, 70, 146, 122, 155, 
       102, 152, 128, 58, 142, 118, 98, 151, 127, 82, 148, 124, 104, 51, 137, 
       113, 93, 77, 147, 123, 103, 65, 144, 120, 100, 84, 2, 131, 107, 87, 71,
        59, 143, 119, 99, 83, 52, 138, 114, 94, 78, 66, 3, 132, 108, 88, 72, 
       60, 53, 139, 115, 95, 79, 67, 4, 133, 109, 89, 73, 61, 54, 140, 116, 
       96, 80, 68, 5, 134, 110, 90, 74, 62, 55, 6, 135, 111, 91, 75, 63, 56, 
       7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
       25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
        43, 44, 45, 46, 47, 48, 49, 136, 112, 92, 76, 64, 57, 141, 117, 97, 
       81, 69, 145, 121, 101, 85, 149, 125, 105, 153, 129, 157, 50},
       VertexColors->Automatic]},
     Annotation[#, "Charting`Private`Tag$997072#1"]& ]},
   VertexColors->{
     Hue[0.8739112579475647], 
     Hue[0.8739148517110834], 
     Hue[0.8739268677338212], 
     Hue[0.873945714424351], 
     Hue[0.8739713423533887], 
     Hue[0.8740071491608083], 
     Hue[0.8740480843667514], 
     Hue[0.8741006439251631], 
     Hue[0.874160541711151], 
     Hue[0.874223826240578], 
     Hue[0.8743005374741607], 
     Hue[0.8743797495374921], 
     Hue[0.8744645279171294], 
     Hue[0.8745644951074361], 
     Hue[0.8746652688107848], 
     Hue[0.8747826814253095], 
     Hue[0.8749062267443262], 
     Hue[0.8750288432562908], 
     Hue[0.8751699095134493], 
     Hue[0.8753091646926748], 
     Hue[0.8754683336745278], 
     Hue[0.8756329850262693], 
     Hue[0.8757940812171581], 
     Hue[0.8759769211520213], 
     Hue[0.8761553194419621], 
     Hue[0.8763374270907167], 
     Hue[0.8765430701342439], 
     Hue[0.8767425706644856], 
     Hue[0.876967081116159], 
     Hue[0.8771958894521267], 
     Hue[0.8774168105897499], 
     Hue[0.8776645873970779], 
     Hue[0.8779035906448851], 
     Hue[0.8781451190375003], 
     Hue[0.878415311583798], 
     Hue[0.878675026695223], 
     Hue[0.8789648944737848], 
     Hue[0.879243392146804], 
     Hue[0.879523778527985], 
     Hue[0.879836150653014], 
     Hue[0.8801354344007056], 
     Hue[0.8804682126329092], 
     Hue[0.8808034944038057], 
     Hue[0.8811239225926256], 
     Hue[0.8814797382844399], 
     Hue[0.8818198043065776], 
     Hue[0.8821605817151598], 
     Hue[0.8825386040302955], 
     Hue[0.8828991485486527], 
     Hue[0.8833105380864881], 
     Hue[0.8739121563864619], 
     Hue[0.8739198037387577], 
     Hue[0.8739353703442542], 
     Hue[0.8739576433252797], 
     Hue[0.87398820414745], 
     Hue[0.8740267093678077], 
     Hue[0.8831036669086514], 
     Hue[0.873911482557165], 
     Hue[0.8739170637327213], 
     Hue[0.8739308888605267], 
     Hue[0.8739514576157604], 
     Hue[0.8739795128592887], 
     Hue[0.8740167024265889], 
     Hue[0.8830011137710218], 
     Hue[0.873913279436942], 
     Hue[0.873923071736299], 
     Hue[0.8739403121951372], 
     Hue[0.8739642715663534], 
     Hue[0.8832068082503112], 
     Hue[0.8739113140999571], 
     Hue[0.8739158917242432], 
     Hue[0.8739288207531393], 
     Hue[0.8739485307060947], 
     Hue[0.8739753625098935], 
     Hue[0.8740118690856228], 
     Hue[0.882950057688411], 
     Hue[0.8739126617589222], 
     Hue[0.8739213717380926], 
     Hue[0.8739377837231275], 
     Hue[0.8739609021284944], 
     Hue[0.8831551640358626], 
     Hue[0.8739117633192819], 
     Hue[0.8739183677372776], 
     Hue[0.8739140094208612], 
     Hue[0.8832585995883625], 
     Hue[0.8739112719856627], 
     Hue[0.8739153552182926], 
     Hue[0.8739278298575417], 
     Hue[0.8739471087368298], 
     Hue[0.8739733361576923], 
     Hue[0.8740094949463626], 
     Hue[0.8829245847529171], 
     Hue[0.8739123950345161], 
     Hue[0.8739205712386315], 
     Hue[0.8739365626471355], 
     Hue[0.8739592588976688], 
     Hue[0.8831293970886208], 
     Hue[0.8739116089001016], 
     Hue[0.8739176992354388], 
     Hue[0.8739136303906404], 
     Hue[0.8832326855266097], 
     Hue[0.873911384290455], 
     Hue[0.8739129565597173], 
     Hue[0.8739119458147268], 
     Hue[0.8832845504401323], 
     Hue[0.8739112614570891], 
     Hue[0.8739150993398507], 
     Hue[0.8739273451992055], 
     Hue[0.8739464081235039], 
     Hue[0.8739723351870732], 
     Hue[0.8740083185093928], 
     Hue[0.8829118620596609], 
     Hue[0.873912272200947], 
     Hue[0.8739201833637544], 
     Hue[0.8739359628990666], 
     Hue[0.8739584476541833], 
     Hue[0.8831165274030103], 
     Hue[0.8739115422191042], 
     Hue[0.8739173773591966], 
     Hue[0.8739134514042289], 
     Hue[0.8832197422905633], 
     Hue[0.8739113456856801], 
     Hue[0.8739128056497687], 
     Hue[0.8739118510574695], 
     Hue[0.8832715704152098], 
     Hue[0.8739112895332849], 
     Hue[0.87391168260016], 
     Hue[0.8739114299142827], 
     Hue[0.8832975396637011], 
     Hue[0.8739112588249459], 
     Hue[0.8739149744942583], 
     Hue[0.8739271055673953], 
     Hue[0.8739460604096573], 
     Hue[0.8739718377531166], 
     Hue[0.8740077329490549], 
     Hue[0.8829055041564107], 
     Hue[0.8739122134163193], 
     Hue[0.8739199925200218], 
     Hue[0.8739356657225048], 
     Hue[0.8739580446254105], 
     Hue[0.8831100960069599], 
     Hue[0.8739115115107524], 
     Hue[0.8739172195147388], 
     Hue[0.8739133645431952], 
     Hue[0.8832132741209988], 
     Hue[0.8739113290154371], 
     Hue[0.8739127328269582], 
     Hue[0.8739118063109924], 
     Hue[0.8832650838520625], 
     Hue[0.8739112798820923], 
     Hue[0.8739116448727481], 
     Hue[0.873911406224987], 
     Hue[0.8832910439020499], 
     Hue[0.8739112658439949], 
     Hue[0.8739113641106858], 
     Hue[0.8739113009392397], 
     Hue[0.8833040377251563]}],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3658348704848487, 1.1942619952310387`},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0.3658348704848487, 0.5000000000000001}, {1.1942619952310387`, 
   1.2071067811865475`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.581609384437285*^9, {3.581609504822774*^9, 3.581609549260466*^9}, {
   3.581609900266757*^9, 3.581609929014892*^9}, 3.581673699423524*^9, 
   3.581687887039155*^9, {3.5819448706496763`*^9, 3.581944883675671*^9}, 
   3.581953345308755*^9, 3.5821142202221193`*^9, 3.582216660165596*^9, {
   3.582216735008424*^9, 3.582216752562191*^9}, {3.582216900522902*^9, 
   3.582216925413727*^9}, 3.582222934929668*^9, 3.582223202402267*^9, 
   3.582286981851467*^9, {3.582287036288845*^9, 3.582287079211164*^9}, 
   3.582302583044299*^9, 3.58230334630746*^9, 3.582303382805304*^9, 
   3.582740217957407*^9, {3.5837633852906523`*^9, 3.5837633996885767`*^9}, 
   3.5907594396778*^9, 3.590835633320829*^9, 3.590924442886402*^9, 
   3.5916177675330877`*^9, 3.59283827170261*^9, 3.592841358957922*^9, 
   3.5931245937263193`*^9, 3.6860702842285557`*^9, 3.686931690535644*^9, 
   3.7715918500836573`*^9, 3.771624210867381*^9, 3.7716245714190683`*^9, 
   3.7716264502796497`*^9, 3.771626760470799*^9, 3.771767603654272*^9, 
   3.772033152785941*^9, 3.772801597957817*^9, 3.772812494847186*^9, 
   3.772906765006776*^9, 3.773061041931295*^9, 3.773076701734103*^9},
 CellLabel->
  "Out[2333]=",ExpressionUUID->"f34a60ce-a544-4beb-857f-2eadee91bf41"]
}, Open  ]],

Cell["\<\
Now find the minimum  and maximum density with in the region.\
\>", "Text",
 CellChangeTimes->{{3.5816743195141582`*^9, 3.581674339375255*^9}, {
  3.581944995026071*^9, 3.581944995378251*^9}, {3.5819533802020197`*^9, 
  3.581953383961735*^9}, {3.771626465765153*^9, 3.7716264659772577`*^9}, {
  3.7716266883958263`*^9, 3.771626712352277*^9}, {3.772906678631371*^9, 
  3.772906700231173*^9}},ExpressionUUID->"2fd82056-65c0-4b36-af8f-\
270e781cc6c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"torusDensity", ",", 
     RowBox[{
      RowBox[{
       FractionBox["\[Pi]", "8"], "<", " ", "\[Alpha]"}], " ", "&&", " ", 
      RowBox[{"\[Alpha]", " ", "<", " ", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
        RowBox[{"Pi", "/", "4"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      FractionBox["\[Pi]", "8"], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"Pi", "/", "4"}]}]}], "}"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "18"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581609382124021*^9, 3.5816093821731052`*^9}, {
  3.581674342761096*^9, 3.581674366016737*^9}, {3.581674410493896*^9, 
  3.581674416321011*^9}, {3.5816745142249126`*^9, 3.5816745887031527`*^9}, {
  3.581674797332777*^9, 3.581674801987938*^9}, {3.5816749471944838`*^9, 
  3.581674948858513*^9}, {3.581944908530826*^9, 3.58194498132018*^9}, {
  3.581945027577073*^9, 3.581945027991763*^9}, {3.581945303251691*^9, 
  3.581945309353141*^9}, {3.581945340371601*^9, 3.581945372512339*^9}, {
  3.581945409818782*^9, 3.581945414450327*^9}, {3.581953389988534*^9, 
  3.581953448617591*^9}, {3.582216775133053*^9, 3.582216836170295*^9}, {
  3.7716264793393393`*^9, 3.771626489876069*^9}, {3.7716265205913677`*^9, 
  3.77162655779049*^9}, {3.772906720359591*^9, 3.7729067428712797`*^9}},
 CellLabel->
  "In[2334]:=",ExpressionUUID->"f0795534-1999-46a5-8f81-df354a425f40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8739112579475650701175200707375437109016487962530025696574`40.", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Alpha]", "\[Rule]", 
     "0.3926990816987241548078304229099378605246461749218882276219`40."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7729067652609577`*^9, 3.773061042274324*^9, 
  3.773076702078165*^9},
 CellLabel->
  "Out[2334]=",ExpressionUUID->"2a90a65b-26ba-4ddb-87df-c2f7ecdf5345"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"torusDensity", ",", 
     RowBox[{
      RowBox[{
       FractionBox["\[Pi]", "8"], "<", " ", "\[Alpha]"}], " ", "&&", " ", 
      RowBox[{"\[Alpha]", " ", "<", " ", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
        RowBox[{"Pi", "/", "4"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      FractionBox["\[Pi]", "8"], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"Pi", "/", "4"}]}]}], "}"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "18"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581609382124021*^9, 3.5816093821731052`*^9}, {
  3.581674342761096*^9, 3.581674366016737*^9}, {3.581674410493896*^9, 
  3.581674416321011*^9}, {3.5816745142249126`*^9, 3.5816745887031527`*^9}, {
  3.581674797332777*^9, 3.581674801987938*^9}, {3.5816749471944838`*^9, 
  3.581674948858513*^9}, {3.581944908530826*^9, 3.58194498132018*^9}, {
  3.581945027577073*^9, 3.581945027991763*^9}, {3.581945303251691*^9, 
  3.581945309353141*^9}, {3.581945340371601*^9, 3.581945372512339*^9}, {
  3.581945409818782*^9, 3.581945414450327*^9}, {3.581953389988534*^9, 
  3.581953448617591*^9}, {3.582216775133053*^9, 3.582216836170295*^9}, {
  3.7716264793393393`*^9, 3.771626489876069*^9}, {3.7716265205913677`*^9, 
  3.77162655779049*^9}, {3.772906720359591*^9, 3.77290675792507*^9}},
 CellLabel->
  "In[2335]:=",ExpressionUUID->"ccdc302b-9a9e-481d-9e67-9020c6268fce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8833105380864884017305093406063602400100304479690249054064`40.", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Alpha]", "\[Rule]", 
     "0.4881468020762415036628378026915331457068338423222794583328`40."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.772906765539585*^9, 3.773061042630506*^9, 
  3.7730767024484987`*^9},
 CellLabel->
  "Out[2335]=",ExpressionUUID->"3ca28d62-ae26-4916-a3eb-b585e874f4c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 775},
WindowMargins->{{0, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.5,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 1093, 15, 146, "Title",ExpressionUUID->"3bc0b118-19e5-4ef3-836d-0d9f018f7019"],
Cell[1675, 39, 1005, 16, 53, "Text",ExpressionUUID->"baec14af-3b99-4417-84bc-478b4d896230"],
Cell[2683, 57, 249195, 4092, 514, "Input",ExpressionUUID->"1e85eac4-e0bb-46be-ab31-3a8c192992e5"],
Cell[251881, 4151, 760, 13, 157, "Text",ExpressionUUID->"c0ddfa42-d956-44db-9858-9823a51888b3"],
Cell[CellGroupData[{
Cell[252666, 4168, 1083, 32, 56, "Input",ExpressionUUID->"8990d626-8c4c-43ea-9f85-22f3ed4df147"],
Cell[253752, 4202, 444, 10, 52, "Output",ExpressionUUID->"16ba8fbd-0cae-4f25-bd17-d9370093adef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254233, 4217, 381, 11, 56, "Input",ExpressionUUID->"efda53e1-713a-4afe-bcc9-4515728bc683"],
Cell[254617, 4230, 1327, 38, 68, "Output",ExpressionUUID->"c9876941-d9fa-41f9-a744-67ea31c6dd7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255981, 4273, 417, 12, 56, "Input",ExpressionUUID->"8f52bfd3-0cbf-4977-bad6-317b55c5c0af"],
Cell[256401, 4287, 1277, 34, 84, "Output",ExpressionUUID->"f99d6674-9d89-4265-aefd-95345d933db5"]
}, Open  ]],
Cell[257693, 4324, 484, 15, 73, "Text",ExpressionUUID->"d890a2d1-e312-46ae-ba9f-bcf237c38cab"],
Cell[258180, 4341, 371, 8, 88, "Text",ExpressionUUID->"8fc30110-4b8a-49fb-8283-3955e53446d7"],
Cell[258554, 4351, 378, 8, 88, "Text",ExpressionUUID->"60e0570f-80be-4704-bed0-69fd9f796488"],
Cell[258935, 4361, 502, 12, 46, "Input",ExpressionUUID->"3a3696cb-7764-42ed-9c30-5c9e16f9b4d0"],
Cell[CellGroupData[{
Cell[259462, 4377, 701, 16, 78, "Input",ExpressionUUID->"75579c7d-ca27-480a-aed1-1dc96106d9d8"],
Cell[260166, 4395, 484, 11, 52, "Output",ExpressionUUID->"c3523e51-1d20-45b1-8be9-20e9827a8c2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260687, 4411, 1348, 39, 101, "Input",ExpressionUUID->"72566495-c866-4345-8ac5-926824238d84"],
Cell[262038, 4452, 2880, 64, 562, "Output",ExpressionUUID->"abc38c5c-cbbf-48ec-a50c-d2c1b325ae62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264955, 4521, 396, 6, 101, "Section",ExpressionUUID->"58eac1c0-3dea-4423-bd3e-40f227e6c6e5"],
Cell[CellGroupData[{
Cell[265376, 4531, 2387, 67, 159, "Input",ExpressionUUID->"583b7c4c-5ac3-402f-8a72-fd2354787739"],
Cell[267766, 4600, 1511, 41, 76, "Output",ExpressionUUID->"15eb84bf-d5ea-401c-bd95-dec946113fb3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269326, 4647, 215, 4, 101, "Section",ExpressionUUID->"dd1d0949-4425-489a-9138-ef893592d4c8"],
Cell[269544, 4653, 370, 6, 53, "Text",ExpressionUUID->"200ae999-c74e-4e08-bfe2-f7fa1b43f45d"],
Cell[269917, 4661, 2609, 57, 138, "Input",ExpressionUUID->"599d2b49-d9bb-4d65-8681-bcc6fa3e614e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272563, 4723, 150, 3, 101, "Section",ExpressionUUID->"8c1dc234-14dc-4eeb-9527-a7c0cd7c55bc"],
Cell[272716, 4728, 724, 12, 122, "Text",ExpressionUUID->"e7a21d8e-f617-4378-a5da-9dc2d5a1e93e"],
Cell[273443, 4742, 1213, 27, 46, "Input",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],
Cell[CellGroupData[{
Cell[274681, 4773, 436, 9, 81, "Subsection",ExpressionUUID->"13c39ee2-5a3a-466d-965d-7a6d5f6b780b"],
Cell[CellGroupData[{
Cell[275142, 4786, 3982, 87, 264, "Input",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],
Cell[CellGroupData[{
Cell[279149, 4877, 1352, 24, 59, "Print",ExpressionUUID->"a2e934a0-a3cf-4f24-80d2-cbea35f604cd"],
Cell[280504, 4903, 1301, 22, 36, "Print",ExpressionUUID->"da5e9efc-ccee-41f3-b4f6-dd9c9c170ced"],
Cell[281808, 4927, 1352, 24, 59, "Print",ExpressionUUID->"84207c00-4b70-4d9c-a28b-4a382ca03e0c"],
Cell[283163, 4953, 1355, 24, 59, "Print",ExpressionUUID->"868b4885-5a4c-4083-ac3a-70fb0920ca1f"],
Cell[284521, 4979, 1353, 24, 59, "Print",ExpressionUUID->"3423d843-8b15-4b62-8045-b7e563c7878c"],
Cell[285877, 5005, 1353, 24, 59, "Print",ExpressionUUID->"58a149bc-1789-4ee6-a3c0-5f9b208da0e3"],
Cell[287233, 5031, 1351, 24, 59, "Print",ExpressionUUID->"b4605c41-dcab-4402-8db3-606f165f06ec"]
}, Open  ]]
}, Open  ]],
Cell[288611, 5059, 146, 3, 53, "Text",ExpressionUUID->"44713034-9149-4e18-aea8-b2757e3281a2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[288806, 5068, 221, 4, 101, "Section",ExpressionUUID->"84c54b26-f298-4444-9ec8-58440b22b9ee"],
Cell[289030, 5074, 337, 7, 88, "Text",ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-bdaf155f4274"],
Cell[289370, 5083, 8185, 127, 109, "Text",ExpressionUUID->"8d1ff94d-0bd8-41de-8403-c0ad2d7fe710"],
Cell[CellGroupData[{
Cell[297580, 5214, 931, 29, 101, "Input",ExpressionUUID->"468ab454-ad6e-4327-ad14-a4d9c3b54ede"],
Cell[298514, 5245, 837, 26, 97, "Output",ExpressionUUID->"27ecda1c-074e-4240-b41c-38de341e6301"]
}, Open  ]],
Cell[299366, 5274, 228, 4, 53, "Text",ExpressionUUID->"562b58d4-87af-47e5-83ce-c2a399a345cc"],
Cell[CellGroupData[{
Cell[299619, 5282, 1445, 47, 101, "Input",ExpressionUUID->"2c987e23-793d-45b7-a25e-eb1e665576d3"],
Cell[301067, 5331, 322, 6, 65, "Output",ExpressionUUID->"4d9716df-84a8-4797-99d0-c5b6613b6c48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301426, 5342, 18889, 391, 799, "Input",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],
Cell[320318, 5735, 7417, 156, 693, "Output",ExpressionUUID->"5c158ac4-89a7-46ae-91f6-6571fbcf3a7d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327784, 5897, 168, 3, 101, "Section",ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-4479b3290d12"],
Cell[327955, 5902, 600, 11, 157, "Text",ExpressionUUID->"587b476a-42fe-4314-b5c2-430cf24c7bba"],
Cell[CellGroupData[{
Cell[328580, 5917, 172, 3, 81, "Subsection",ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-64a93ed30112"],
Cell[328755, 5922, 864, 14, 122, "Text",ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-8abc959f8dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329656, 5941, 161, 3, 81, "Subsection",ExpressionUUID->"31f2c795-42a7-4371-8bcc-f26ae4f35c51"],
Cell[329820, 5946, 799, 17, 89, "Text",ExpressionUUID->"dad468d2-f604-44ad-83e4-8184a0b76de7"],
Cell[CellGroupData[{
Cell[330644, 5967, 13684, 335, 927, "Input",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],
Cell[344331, 6304, 6753, 149, 693, "Output",ExpressionUUID->"d588a07a-0c33-4b7e-8563-e6655c1505e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351121, 6458, 6967, 174, 481, "Input",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],
Cell[358091, 6634, 1384, 24, 34, "Message",ExpressionUUID->"8d58854d-f235-4285-a15a-f540d93d58ee"],
Cell[359478, 6660, 1441, 37, 68, "Output",ExpressionUUID->"141229df-5b32-4ad8-8bed-e6e62ed665c1"]
}, Open  ]],
Cell[360934, 6700, 818, 20, 54, "Text",ExpressionUUID->"dab345d4-317d-4689-8b7d-c5f918423d0f"],
Cell[361755, 6722, 1061, 20, 78, "Input",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],
Cell[CellGroupData[{
Cell[362841, 6746, 614, 13, 46, "Input",ExpressionUUID->"079eff23-d452-4b8a-b102-2477f53b339f"],
Cell[363458, 6761, 655, 15, 52, "Output",ExpressionUUID->"79c2deb3-e1e7-4c5a-8268-4a88d47c60e3"]
}, Open  ]],
Cell[364128, 6779, 1996, 52, 98, "Text",ExpressionUUID->"90c67218-1cc8-4bea-99d5-fd5ddfdb51dd"],
Cell[366127, 6833, 1259, 31, 109, "Input",ExpressionUUID->"b861794b-5dc4-4f62-a8af-a6aa1633b81c"],
Cell[CellGroupData[{
Cell[367411, 6868, 1378, 36, 148, "Input",ExpressionUUID->"e19a6967-7441-4af8-aa7e-13ca11c722cc"],
Cell[368792, 6906, 8615, 168, 339, "Output",ExpressionUUID->"d2312497-3d59-42ed-9f6c-e2726ae409ae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377468, 7081, 244, 4, 101, "Section",ExpressionUUID->"1367c9d9-3697-4765-9fd2-49fbdfafea09"],
Cell[377715, 7087, 464, 9, 53, "Text",ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-5dfd369c5feb"],
Cell[CellGroupData[{
Cell[378204, 7100, 1911, 45, 148, "Input",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],
Cell[380118, 7147, 632, 13, 64, "Output",ExpressionUUID->"05ebaaa3-f564-4d5e-95ff-b6437c7c742f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380787, 7165, 2324, 55, 180, "Input",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],
Cell[383114, 7222, 816, 17, 52, "Output",ExpressionUUID->"a9f88929-b59b-429f-8194-5d310abe2f33"]
}, Open  ]],
Cell[383945, 7242, 526, 10, 88, "Text",ExpressionUUID->"7fea073f-4678-488f-94be-79aeb56d8b30"],
Cell[CellGroupData[{
Cell[384496, 7256, 8478, 183, 550, "Input",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],
Cell[392977, 7441, 4250, 72, 674, "Output",ExpressionUUID->"83099c47-fe8d-4558-8f5f-ce6348c74ccf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[397276, 7519, 215, 4, 101, "Section",ExpressionUUID->"0778b274-df47-40d0-990e-9f18ab4dee0d"],
Cell[397494, 7525, 248, 6, 53, "Text",ExpressionUUID->"e2b21120-6780-408f-b4b4-7bd65fa10119"],
Cell[CellGroupData[{
Cell[397767, 7535, 2540, 65, 211, "Input",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],
Cell[400310, 7602, 1843, 36, 82, "Output",ExpressionUUID->"f9cc0309-c470-48f4-a6fd-082d768c257f"]
}, Open  ]],
Cell[402168, 7641, 183, 3, 53, "Text",ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-e5f2bb2c8c0b"],
Cell[CellGroupData[{
Cell[402376, 7648, 1503, 35, 101, "Input",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],
Cell[403882, 7685, 5826, 115, 334, "Output",ExpressionUUID->"47951a61-6ba7-4381-b143-90bb5a89f8d2"]
}, Open  ]],
Cell[409723, 7803, 176, 3, 46, "Input",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],
Cell[409902, 7808, 420, 8, 53, "Text",ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-8ad9c9b01e0d"],
Cell[CellGroupData[{
Cell[410347, 7820, 3003, 70, 227, "Input",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],
Cell[413353, 7892, 10852, 262, 98, "Output",ExpressionUUID->"f34a60ce-a544-4beb-857f-2eadee91bf41"]
}, Open  ]],
Cell[424220, 8157, 458, 8, 53, "Text",ExpressionUUID->"2fd82056-65c0-4b36-af8f-270e781cc6c8"],
Cell[CellGroupData[{
Cell[424703, 8169, 2510, 62, 246, "Input",ExpressionUUID->"f0795534-1999-46a5-8f81-df354a425f40"],
Cell[427216, 8233, 455, 12, 52, "Output",ExpressionUUID->"2a90a65b-26ba-4ddb-87df-c2f7ecdf5345"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427708, 8250, 2507, 62, 246, "Input",ExpressionUUID->"ccdc302b-9a9e-481d-9e67-9020c6268fce"],
Cell[430218, 8314, 455, 12, 52, "Output",ExpressionUUID->"3ca28d62-ae26-4916-a3eb-b585e874f4c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

