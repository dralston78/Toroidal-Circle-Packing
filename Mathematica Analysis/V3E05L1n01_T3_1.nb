(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    406160,       8883]
NotebookOptionsPosition[    395182,       8706]
NotebookOutlinePosition[    395633,       8724]
CellTagsIndexPosition[    395590,       8721]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analysis of Packing V3E05L1N01T3_1 ", "Title",
 CellChangeTimes->{{3.580135852891836*^9, 3.580135862589938*^9}, 
   3.580137141312297*^9, 3.581161087909637*^9, 3.5818563558208227`*^9, {
   3.5819486698826113`*^9, 3.5819486708477287`*^9}, {3.58195172547116*^9, 
   3.581951738572076*^9}, {3.5821220906444807`*^9, 3.58212209551359*^9}, {
   3.603189474778634*^9, 3.603189487631043*^9}, {3.603208780082828*^9, 
   3.603208780234962*^9}, {3.604159900860963*^9, 3.604159903777851*^9}, {
   3.607700600015931*^9, 3.607700600356484*^9}, {3.6465858884999866`*^9, 
   3.646585900513159*^9}, {3.646755644997344*^9, 3.646755645131776*^9}, {
   3.647265088709795*^9, 3.647265088860635*^9}, {3.6473560363001137`*^9, 
   3.647356067794221*^9}, {3.7083389526131077`*^9, 3.7083389608763103`*^9}, {
   3.709640641361698*^9, 3.709640647919407*^9}, {3.73896733808869*^9, 
   3.738967346324815*^9}, {3.7727359175323153`*^9, 
   3.772735920822274*^9}},ExpressionUUID->"3bc0b118-19e5-4ef3-836d-\
0d9f018f7019"],

Cell["\<\
Three Vertices, Five Edges, 1 Loop,Combinatorial Number 01, Face Pattern 3, \
Type 1\
\>", "Text",
 CellChangeTimes->{{3.580137445604217*^9, 3.5801375254067383`*^9}, {
   3.581856358992407*^9, 3.581856384416295*^9}, {3.5819517426040287`*^9, 
   3.581951767642358*^9}, {3.582122103025394*^9, 3.582122111216773*^9}, {
   3.603189492504524*^9, 3.603189498647831*^9}, {3.604159907960268*^9, 
   3.604159912193075*^9}, {3.646585904328833*^9, 3.6465859252879257`*^9}, {
   3.646755662934144*^9, 3.646755663058913*^9}, {3.6472650912123737`*^9, 
   3.647265091300403*^9}, {3.647356044921232*^9, 3.647356058120769*^9}, {
   3.708338967340601*^9, 3.708338985260412*^9}, {3.7096406554076014`*^9, 
   3.709640670631276*^9}, 3.709979002564518*^9, {3.738967376997569*^9, 
   3.7389673972246437`*^9}, {3.772735925193128*^9, 
   3.7727359320906067`*^9}},ExpressionUUID->"baec14af-3b99-4417-84bc-\
478b4d896230"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
ICyqClSLT2S+At77neCPkXWd9PsnZ0/BWFE9xkdd52x80nW+iyv160wm9+Pr
BLJvP4IFGy9CSFgsxDdsz2wnvLeZCBz2nP0cmrXtB2VCIgNW11n6iNmv27L1
67TsD+sQh20/vtb5sPsvfAud+01mtVRHTvPsHpTwP4yq65KEfFi72DbH76Tu
+bAq45Ou812mpEnzJuTXf091HYIx6x37TGTnSW7+H4Jwh2M3f4MZy48zW3GT
1n0CV9eJ/LC277at17fJpL29zlE32o+vpR8W4ycXb7nCesDWTmgLe899xX2f
E8bAqLoO6xJLv39y12A94+ucjU/9JnwXx3xY+fU/N3oMfSTLdt5k/Xyq1UmE
HSc/5r7dhJ9z/zHzxSUkdmW24tR1zwWsrlPOh5XY67SuS6xQu0Hr+Dr0AbRN
HgWlypSD8anp3Pc3YRwMq+tU6xLbrsF8+k2YyF7n4zA/rMr6KzB6xrZcjXPw
4vfQe1gqFC8VDAPGLmU14XlvO+G/WOrsZELJoLIsvhN/D1Rdx+x14nty0fdd
HEerqR9W1v5ve66VrsP4ydT15yG4bDTUb9oZDlz4N/f9TRgHo+s6k+R7IrVz
eycfVn580nW+i80PK7/+Csc4t/7Tk3f+gjXpr0BM5XjWP3Jz1jvct53wT1jP
d/N6XqdBOwiLqGytix2ouk6uP6xcLVIt7XUmmTg+8XOt4uv2nPsCmrUfAGVC
ImDa0qN2r2HfiR0nP8rhYyvbrb9bXjty47/cj5EWHH7hZxgzczuMMjPGgR3s
J/YBWrzlKve5egvj6roUJ/YUk666LlTIh1UZH/tF8d5PcuC92+KtVxm4trOf
W69Z/6ZEmvC+LY7vt/4/5p9pwt9F78OfwntkP6cwPsaI8NhH9v0mHNdfWz5s
7uPiMq/+BIMnrGI1Q7sPmmWo7xnhP2Rdfwgpc3ezdald9zGs3g7+PVB13Yrd
txXXb6H+qab161i/CfW6xFroOoyfnLnyBAQFl4dGrXqb15cf7V6fv+F5aNV5
OLTsNNT8cxijZWfbcwG9rp3eBuMOChcpZuYpOwoVLprzsxgDa/7wnqu3MLSu
k3z/pDHtJr11nZPxjWqvW7rjBlSp2QjirDSGuBqW51XMz5G4Wjk/zWAtS/Ye
0Weq1Gps+1styWs5n6sifd1uDNfGR83DYx9NSTusuv5qZa9DTt59DBsP/YNt
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
7Mm1wLC6Thxfp7L963XKmwgWx9cpjE+6znex1DlRXn8FvGGvE9h56hNo0DyZ
2Yrn+EnNUCL3CPbcWvVbQ3hUFeajcefzgavrlOqcSOvXad9vQul65UzX7T77
OTRt0w+CzbrO07yGdQdfU9ULwvZjbVG99j3qUfQ7TFp4EMbM3sXqwGNuwOGr
2tcrTTDrX1m7l+T3Xac+9cp5J66n58r5Jxt/l0Pxp4Nh6MQ17L7OnTkYV9el
uLT9usXXhcU4Hd+odYkJ54j9sGrfP2/qumM3f4NZK09CEMt17MHqHfHeTwR/
sq49hLGzdojiLx+59flA13Wy8dE66DpLPqy6vlCrX4c+txnLspn/FbXdoWv/
8WgeWAdHqU+3+HlkhZqa73PUEIs2X4bkATOgSq0mLBa0aLESbJuqxzeHnkPm
Mn2nZd3S2Li6qrYfU85+z7r+0CvnnTTGx9n5p679TFC8RJD5+7/TLX1mWF3n
oh92faZe9jryw/ozinWJJc+95YcVwLrN6IctHRzO7nF57yeCL1irGntH4TUy
MrYmrEq/7/b/Eai6jtU5sftOy/dC1L6PmEnW78bqXCjpuvuPYcepj6F+sy4Q
GhYL8zc87/E8sEZKkadKyo4v/r1Q4WJu24HUwJ5nU5ccNuuJhmDKK9f3wbL9
1es2Zz3MtajDjmM+Vby0gyaS7n+sI4V2b2+cd4PGr2T1bJztfzmUelyhX96d
+EDD6jqFOifS7dc9H1ZlfNJ1vovVD6uw/grPva3rLL0ELlpz4fY99y/u+4rg
B9pshk3ewK5L3Z6dzvrPuft/BKyuE+oSyyHKk9KjLrGQdyUdX8kPy+JrF1ri
a1t2GpprvRVXo6Hs+NLtd6XfrKug37Vs+Yqq2y9QPqZarrSrwIEL/zav4Xkd
/JfS8TGnxVvnHeqvbgOmszhYjKvBGibRlWqbtVl5KFioiMP5J3ds5HJAMMd2
j/m+35U5GFfXpbi0/brXr1MZn3Sd7yLYyp2tP970wwpYaldNZPURR3tZVxLG
AW0R2E8H+72jr8lT30Sg6jrZ+Dq7ulWWegda1TmpLImvk0Oufh3akbZnfwC1
E9qyfPgl21/I9VyShOunk+3HWndabPv+C98y/eJs+8Xjo30T40ZzM+6qfS/J
2rek6BlLKAf6mTMu/wjbjj2AZTtvsfialNm7oM/w+SzXGW2W6JuWs2sq25JM
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
66KjLUoze50TPyxbU0wmu5gx3gh9L0ZM3cT6MtRp0A4iY2swnVegYCE2X/Ea
iX3JipcIYv7Quo2SWA9ajFV2py/Kgk0XmX3a4Z5a7Xrr8LvofZLjifHHevUX
9SZDJq1zafvlckMMq+vQDytjC/Ze/Tr5Oif29etI1/kqDn3EFNZ/I+o6JPPq
TzB4/CrWW7L7oFmG+u4Szjl192/YmPkWVK7REKIq1YI1B17VbayA1nWS66L0
moi/ax1fJ71Gicd/Im9e7vtFiUPX/sM03oxlx1hdvd7DUpluS+qZAu26j4EO
vcaztWbIxLUwfdlRpp2Oveh+X0Psg/vsmKVQuHBx1VxcReT8LHls8X2jpue+
p7IRGDN7l0vbP3HBAYfPGlrXSb5/csffO/1h5ccnXee7YP06tfVXeM2ouQnY
p3HjoX9AXM1GrK/1mvSXuc+JcJ1DV35i10emywfrq8sDW9c5r8Orbf0621pi
Evo+icbPa2BdJwdqMMxDxRp02Rrak/H8Rxs11i2WOy7uxPsJazXaEtsmj2Zz
5b3ftCBFrOtUtn98arrDZ42q6/D+QMku6xV7XVlpPqzj+KTrfBexH1Zu/RUw
qr0OQT/emJnbmR8vqdc4yL7l/r0z4X3wWrnmwGsQE1cXKlR9BjZmva3reAGt
6xzyYMX1MfJoaq+z6yMmqnlqZ697Ih/3/WIUMLcfbYCY4+BwjbXzn8j7IE2i
mlRPPlmQ1SDeffZz7tulFcwP68L2+5IfNqlHisP3T05j6WmvczZ+CQPqOtwf
mBOOdR2n5IC/T1tyxPL3nNeE51Osz3N+pmXZ3id5r/QzU2ReE39Oi/E3H31P
l/1k9cMqrL/C+m9kXYdx99uOPYDa9dtAWFQcLNn2Avc5Ec7JuPQD9B+1GJ4u
GQz9zD/R9qrneIGr6+7Z1m6T+L7N/h69S39t+sNWqp4gG8MvHh9zQXnvFyOB
9eV6DpljrT+RR9hXSvZVmd4SpcuEM32445R/1QboOWSuS9u/aPNlh88aVddZ
/LDSeofSbTR5Jx9WYXwj1q8bNG4Fq/tjIdr2MzTKht1rUfbvMT8vU07yOevP
SNvnQ0WfFT+X/p+5HH/MzB267Ce5+nVy67+RdR2CPodJCw+ymrYtOg7RvKYt
oS24xqLeiIitAXE1G7P1V+8xA1XXrZDmwyqs5ZrG10n7HkjGJV3nCK5h2EOi
ftPOUPzpMo7XXYX9iTVa4hu2Z7EymTI13HwdzDFW234Budhco+o6wQ/roOUk
djO98l4EP6za+EbUdckDZrhWS9LJ+qOopRXspq6cf56MjzpVj/3E+k24ML4R
65zYcf8x65PdoHkyszHPXaNtDypCWw5c+jeLPcdc+qET18Hpe/ra6pBA1XXo
h7V9v+3jZnXTdYrrm5A3QbpOiU2H32Ixp03b9IXYuHim8bDurrBP0YddtHhp
iIipwdY7zL1Yd/A1tgbynrsexMbVdbjGOt4n5JXNRTaqrrPWJVbIfRG+Nxt1
qkts7Q+rMr4hdd3AGcoaTe4cUVh/5NY/uf3vrJdLbscfNG6lLvvJ2h/WyfhG
q0ssh7hnfEPONU8JZY7f/hOW7rgBYZGVoUa9lrD79GdeGTdQdd2KvXcd6pzJ
5b9pWb9OLd4fX8Paurz3i6HJuU+ds/o0u+/B6xn6WLHHDvbJGDxhDcxYng1b
j7yve/wCL3C7sEck2iNNJtt1SXrtRTDvCmvVS/8Po+s6Z9rAO/mw8uMbMW8C
bQFyx19ujVF7TSnXXKn/hrPzz9Px9bPXKdQ5kYxveHtdDnvOfgnNOwxm2g5z
QnjPh3DE0gNugqUH3Cx94gvkCFRdZ6tfJx+PL3zHNc2Hla6DkvHzkq5zD7PO
wzxcLXNxjQbmG2McOcbJYc0S7MnRoec4R1uJJAYcfy8fU032/zS8rrOLE3S0
F+neH1ZlfCPWJWb2Opnjb5u76G8q64/c+idrr8uTx6Xzz9Px9dJ1LG/ChfF9
Rddl334ECzZeYDU54xsmsfs93nMibGDNYawLLxyf9PNfe23sQNd14ntI6xpk
/e6boEs/bfImKirUJRaPT/mwBII+FowhQ79RnxELoUnbfszeW7J0WXaOyNZT
dbgOm9j7x6fug3X7X7PTvkbVdZgPK/3+2W+byQv2OvXxjemHnSl7/O3PEXl/
qLP1T27/u3r+eTq+N+11cuP7iq5D7OxBBq27F6jsO/cVtOo8jOXuTVqY4dWx
A1XXOeRNmOT9ENr1h5XRdZLxKb4usMHaz/M3PA/9Ry+BhMSuLD/QlDev7PXQ
0U5is4eIz2P0xdZv2oXVRcE6plhHyai6ztIfVuU7ksO6TJ3yJspJ69c5Ymhd
J3P8rfnjzvIaFNY/+fe6fv55Mr7eeRPOxjd6PqwYIX4rPKoKVI9P9Lu8f18F
6wrOXXsWyoRGQoPEZDh4+Xuvjh+ouk5c50Q2/yvnb5rF11UV+sMKPgDHmnlk
rwtMsCYV9n7EHh6YD4FxlvZ+LCWbiIKNRAas8Vy3SUeWW4z3NIbUdeL4OpXt
X69T3oR9PR358Y2q65wdf3H9G6X1R2790+r8c2d83fywzF7nfHxfstchBy9+
B72GzmO1igekLIdTL/3NfU6BDtZKbdqmHwSbdZ1cDVG9CVxdp1TnRFq/Thtd
F8PyF5XXRdJ1gUn2rUcwY/kxqNuoA+Rj+b0Kvi/RtdbhNVV/mD1ov8NYa+zh
azxdl+LS9usWXxcW43R8I9Yllvph1Y6/89f0Pf9cGd8bfli18X1N12Efb7wv
jK5ch8X7bM56h/ucApmjt36DGcuymf8VtR36Ybw9h0DXdbLxwRrrOoyfDIuM
k/3/xX+j+nWBBdbmwxypshEVnV4H5a+1Et+Zk+uutY5F3rxQtFgJZp/CNYj3
fhBw1Q+7PlMve51v+mFT151nccC4VjFynncW/oY/GeLnTl4Tv95f4XNyf9dg
/LRt13TZT4p1iSXPfckPK5B59ScYPH4lu2/rMWi2oe7XAor7j5kvvH6zLhAa
FsvianjMI1B1HatzYvedlvchaKHrME8Jv2/Wa7HM/S2OT7oucMBctuFTNrL8
SrXzz+4cMclfj8Q6z3k8k+38e7JAIRg7aydkXX/IfX8gSnVOpNuvez6syvhG
1HWEa1j9sArrr/DcF3Ud1j/Cuo7YzyC6Yi0WS8t7ToGIpRdIBusF0rLTUG79
yANW1wl1ieUQ5UnlVtehn22e+X46/5MFJNdkxzhl8sMGDtgHswTrn6F+/sm9
5lJtfxX/mfj8w/UHazhjLSze+8Tih3W+/brXr1MZn3Sd7yL4YZXWXwFf88MK
HH7hZxgzczuLs0vqNY7F7vOeUyCBcdLbsz+A2gltmX9uyXZ+vXsDVdfJxtfZ
5XJZ8v1zW+dkz7kvILHds3a6TgmqXxcYbDV/9zG+zZXzz7l+k7fnSfWcmo+3
UKGirFYC9vTguV/QXufK9uuXNxHtdHzSdb6LnB9W7vvni/Y6BHXFtmMPoHb9
NhAWZdYV2/jpikAE/R5j5+xiMbi4lh17kZ+uJl2nYufIk7s6J1iHbOaKE6we
eNESpcHOXyan68gP6/ecuvs3JPVMcc3OZr3eWGwL0r6W9r87+mJN4rqrpjyq
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
Knd1He4LvF+Ob9yB5RQs2HSR+zZoya4znzJbPN6jzVlzhvt8CEJrjKrreGPJ
h5WJORfZR6jfBIGg5sEe4aj/0BZg4Tc49uLvrE+T7fkj9pNx0/Ya/p09f1EE
fsb6f+Ug+qzDe8Sv5YC1+bTczsMv/AxjZm5nNc6Seo1n8+a977XctlHTtzBb
ZiezTsdavbznpBXu6joEbXTTlh5hNZmbte3P4u54b4cW4HZNXZLFeh8nJg2E
rGsPuc+JILSGdJ086nWJTWSvIwIOFn927AHzw2IfsyXbr3OfkxYItsjK1Rsy
v/S6g69xn5OWeKLrkN2nP4embfpCcGgk63/Meztyi9gOiX3/MP+d95wIQg9I
18ljnw8rF1dOuo4IPDDuYdLCg1AyKBRadBzCYrF4zym3YH06zNHFuMkeg+fA
ST9bBz3VdWhDnrv2HMt5SfDxnhvIEfO5ivGyuG636ToSjt7yj/hJgpBCuk4e
rDVvzdGIx9wNIYejRc7zFtCwRQ/u8yQIr3L/Mew89Qk0SExmMagYc8h9TrkA
a7at3f8qxFSOhwpV68PmrHe4z0lrPNV1CPbIbdttlM/XeENbHcaO1qzXkvUM
w9hs3nMiCL0gXSfP2v2vWHMzxLkaltwNC6vS73OfJ0F4G2s/hpBwaNSyF2T4
cD5hxqUfoO/IRcxW1390ml/2WMiNrsM4Q6EnA/rf95z5gvv2eALGT46esY3F
hnbsPRGyb/tPbChBSCFdRxCEu2D9r+YdBrE6dljHl/d8PAHXu5XYEzWmOlSp
1US3mkm8yY2uQ9D/innVqImGTVoPp+/5lvY9dfdvls8eV9OSy4337LznRBB6
QrqOIAh3QXsH1kcJCYuFuo2SIP3819zn5C6oV5IHzmR6ZcikdT6nV1wlt7oO
rwsrdt/N0b+NYXv2B9y3yR0OXfkJhk5cw2yy3QfNousc4feQriMIwhPSL3zD
6vZhHPqomdu4z8cdsC4N5vOGRVSGmvVawe6zn3Ofk17kVtch6K/uNyqNaaO+
Ixb6jL/a0vP2NYiNqwcVqtSDTYff5j4ngtAb0nUEQXgCaiPspxsWFcdyizCf
gvecXCX9uW+gQ6/xTJOOmb2T+3z0RAtdZ9FHr5u10TNmjVRXt77cWpNx5QcW
N4l6tN/IRT6jRwkiN5CuIwjCUw5e/A56Dp0LT5uvm9jLAvuL8p6TM7Jf/AMW
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
vX8wBoxbmIOmL2eHX+PvO+/n3tKQryMIojrgfqbJ76ezdTmcyVpRL1ueYGzj
4jexfnZv9B0L2QW2MydUH+q+Dtcan69VW/M+q7Y2Jnx0cvPSehycD4ZeztFZ
AW07Daj0vAa2Dit4KT3HN1W+DsHc4pSFO1h/Za21Vx3Hx9m0S1NOc79e1g6u
/6JHdvP0L/frOp9/JcMmLKvycbDfsXq+VzMfqJppgXt9eT8nloZ8HUEQVQVr
5tZlfw8hYZ3B3ash20/POyZj4m0W1omtCy5an889JnOj7utYT2Kte6B2PqVB
UCut523j3ivQqk13cFX4QcKHeZWOQ8jXafao1Tx+dethxeC9v3Hz1zXu+4aO
H96hL6v/4X3NrB183icmpEFk92Fl+WEdzz/WV+H3VfUYCz86YXBvnfBvHaPf
4f58WBrydQRBVBXck/PurA0s/9W17zi2z453TBWB+cW4+dvZ3HCsIcCvecdk
TtR9Hf6917WXXfxvoW17ajwG9oXDGZ/4nHXsNZLl7iobh2o+rP7jV2fehC6w
V+/s5fvhuZov6L3/qx8f159x9hzva2YrpObeUv6upUNUzxGsfwqbc/LkuR4y
NrFajz1q2lqddTHivXyD313E/XmwNOTrCIKoCvvO/g0f7vwaGga/Bl4NgmH5
1s+5x2QUn5eyfsmh7Xo+yT0d4h+TGVH3dUs2nSrvLyHT2Geumbvq3Hu06jqf
+xuSMy9B4xbtwcOnkfIxCqoUh7AOa+j4plyHFcCeii1f6/4kZ2T4+PixeURX
g3NuicqDa7NTF+2Cjj1HgqdvY3B192X7H6vzmJ37vAviOglt3y5jx+V9/paG
fB1BEFUh49gdNlMb60uxps6a9pxnFtyH6YlZrP8D1gHgnnLeMZkLdV9XPitd
JyqPEzNyXvnPl9URr2HXGedUVdXzlPk6fccuO74p+teJwfqP95M/hedfqFXh
8Z1dPVgOF/fm8b5utgjOfsE9muPnbKnmNX0Evg2b676Oopwd9iTnfd6Whnwd
QRCVBWc4JKV9yXrB+QeFWmVf15T919n+f5wlhX6HdzzmQt3X4Zq51j52HXmO
MTPXl13ns481+v6tTL9Q5TgUar5O3/HNka9Dtn1aBG06Dijf5yU+voOjC6vn
xucHZ5ryvma2TnVnWazadgFq1nyxwvcoNZ55ll173udracjXEQRRWdjM1dgE
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
kEgks0syvs5b1edEppWvE+aIUZ8TqZJ16gHEL98Pzi6eEB7ZF9KP/so9JkI3
5OtI9qKioiKYNWsW21e3fPlyVj9BItm6pOPrAlVeTn39VW1tlvJ10mbLgR8h
svswcJR7wJQFO7jHQ+iGfB3JHvTo0SPIz8+HgIAAiIqKgmvXrvEOiUSyiKTj
68rydTKNPXUyjR7FVA8rbbB/XcLqPJC7+0Dz17pBWt4t7jER2pCvI9mDbt68
CWPHjmX96lJSUniHQyJZTJLxdeXzYcV762jehDWReugmvNF3HNRzcoOxs1O4
x0NoQ76OZOvCPia5ubng4+MD0dHRcPv2bd4hkUgWk2R83ZN1WKG/SVneTqaR
u6N1WOmz5/RfsPCj4+Du6c/6FW/+5Ab3mAhNyNeRbF03btyAQYMGgaenJ2Rm
ZvIOh0SyqKTl6wz1JZZR/zorYVvez9B78HQ2Xyx2yiru8RCakK8j2bLu378P
2dnZoFAoICYmBu7cucM7JBLJopKKr1Oo+TqNHnZPUd2EtbH3zCNYmnIaPHwa
QVCztqxvMe+YCBXk60i2Kqx3vXr1KvTo0QP8/Pzg0KFDvEMikSwuqfg6d9a/
TrsXMfUltk62H/kFYmLnQZ16chgydjHsO/c395iIMsjXkWxVJSUlkJqaCq6u
rhAbGwv37t3jHRKJZHFJxdep+hI/yc/JntLoeUJ9ia2LnDOPISntS/B5NUTp
IcIgOfNb7jERZZCvI9miMFf33XffQWRkJAQFBUFBQQHvkEgkLpKKr9O9Dqv5
OfU5sS4yjhXD2+OXQh0HOfR75z3IOfuYe0wE+TqSberu3buQnJzMehDHxcWx
mlgSyR4lFV+nPm9CXC8h1MhSvs66yDlbCqsy/sk8hG9ACKxMv8A9JoJ8Hcn2
hDNfL168CGFhYRASEgIXLlzgHRKJxE1S8XUKYd4Ey9HpmBFLvs4q2XnsLoyc
msxydj0HTmF9UHjHZO+QryPZmoqLiyExMRHkcjkkJCQwn0ci2auk4utUfU5U
MyZkIp9HfYmtD6yXWLv7W2gU0g48/RrD0i1nuMdk75CvI9mSHj9+DIWFhRAc
HAzh4eFw+fJl3iGRSFwlHV/XUGs/nXpfYhntr7NaduX/DuNnp7B+dl3eHANZ
Jx9wj8meIV9HsiUVFRVBfHw821e3fPlyVj9BItmzJOPrhHpYHX1OqH+ddbOv
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
UIqvc3Byz1L/qvF16Wuz73K+jmVChR5/goHjVuD9klZo1XkodkYlSY/JHGJf
x+SX58+fIzg4WNRK9O3bFy9evJAdEsMw2aAUXyfWYdV5OpVuzQTn61iFofCY
VCzd/huqeDeFvUslzF51SnpM5hD7OiY/UK6O+g5TTxN3d3ecPHlSdkgMw+SA
knydSl03oVL3r9Pvc1JKepys4qWtkc8wZPJ6vF/KGs3afYFtJ14YvB/NIQva
exMLg2Mxc/lxfLVgD0ZM2yzyfb2HL8AXowIxZNJ6jJ27E1MDD2Hu2tPCM1JO
UPZr1Bf7uuJLSkoK4uPjceHCBURFRYna1W3btmHNmjX49ttvERAQgNWrV2PL
li347rvvcOrUKfH7prpWmvdqiCdPnmDp0qWiB/GwYcNETSzDMMpFMb7OOft1
WLV4HZZlalHObsWuK6hR7xOUdSif5skOZ359S5rnW7TpJ4yasQVdv5iKpq16
i/tVqt4QrhVqwMnVA84uH8LRuRycXNzSPq8Elw+rokLluqhWuzk+atYZbbuP
Qv8070decN2+O+J5Zb9m9nXFC+oTfP36dbHnjXwb9Zbz8/MT+bVatWrB09MT
FStWhJubm9gbR/2E6Wve3t5o0qQJ2rVrh/79+2PevHnYvXs3/vvf/2Z6N/J6
dD7UqVMH1atXR2xsrORXyzBMbijG1+n3JVZl7WHHfU5YhSHK0Y2auQUlS5dF
wxbdhc8bN3enqJOt1aANHMt5wN7BSVzbOnXqJK6bkyZNwty5c0UOZNmyZViy
ZImYpzR9+nSMGjUKvXr1QvPmzfFh2jXUxs4JHmlesEX7/mIuLXnFXdHy6m/Z
1xUPaI8b5eTIj/Xs2RO1a9eGo6MjKleujFatWsHf3x/jxo3DrFmzsHDhQnGO
0rlK3m/27Nn46quv0K9fP+HryLPRY6tVq4YuXbpgxowZOHLkiPCLc+bMgZWV
FSZOnCjmwjIMo2wU4+uc1b5OpZen03z+7/d4HZZVOFq1+zpqN2on+p409O2B
chWqw9bWDs2aNcPIkSOxcuVKHDp0CL/88gsePHiA5ORkg39PlN94+vSpqB08
ffo0QkJChNeja2WlSh6wsnFAnUZ+Yt02MPSilJ7I7OuKNtRv5MyZM+K8atq0
Kezs7FCjRg306dMHCxYswK5du/DDDz+IXnPZ1TfQnrmkpCTcuXMHP/30E/bs
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
4osv8jx7ieplczr/3spym83cuzR16NBBzFtaunQpTp06ZdQ1juKPjIyEg4MT
ajVoi62Rz406PuzrlAF5OOoBR36sRo0aIh+cX+jc2LdvHwYOHKjze1Spcj4/
86KCQHsS6H0PnUc8Y4xh5KAUX2evnjfxlt57Sd5fx8qnqL7At8MgsR5E17y8
UrOmd47nX7rHM9xbMTu9++67or8X9W2lvfEFhda4aPaAjX15zA2KNur4sK9T
BpTfovXKMmXKCF+W39wu7cMLDg5GlSpVcj0Pc+wNqtKa3ah1/heEFy9eiJjo
NX399dcFeg6GYYxDKb5O0+dEpfW/Rvf/DPclZuVFgVt/gZNrZdSvXz9f81/T
83XZn3958nMG1rjo9p///Bf8/Pywe8/uAq3N0hyCdevW4b0PyqD7gBlGHR/2
dcqA1tdpf6ajo2OB9qPRXBKXcuXydP7pz+7R8XvZzPgpCJSDpPcvVBdL72eo
fwvDMOZFOb6uooH3lSqd/z+8v46Vm6gP8aRF+1GyZCkxNz0/kK/L6fzTvv4Z
zttlvXbqe0LPypVx9OjRfP+dkhekfYJ29g7wqt8aYUbMjWVfpwyoRoJ6m9Aa
bH771dH7FXpcfs8/zblr+L2K9nlN9a2U7z527JiYZ3bhwgUxq4VqtHPqmXz7
9m2xH7V8+fJ53tvKMIzpUIyvU9fDGsiFcP86Vl61OeIxPh/yjehDTOtB+UHk
63I4/7L1e1k+17qfgeejukfa555fqBa3adOmcHKrYlRdLPs6+ZBPpzpYGxsb
dOrUKd/1EvTeoKDnn6F1WEO56HLlyol+evXSvKePj4+Ywdend29R+33p4sVs
Y3vy5AkWLVok5masWbPG2EPFMEw+UZKv0/+fpH89ZV/Hyk3r9t9Fs7ZfwM3N
DefOncvX34K3Tt1E1vPPsMfL5lqpd3/9W7ru5RfK6VAO0trOFbNWnijwMWJf
Jx/Kd9H815IlS2Ly5Mn5fjzVbhtz/hl6X5Lb/1/t+xw+fDjb2KiW4+DBgyhR
ogTGjh1rzGFiGKYAKMnXZf0/pbtWwL6OlZtWhV9H9To+qFy5Mu7fv5+vvwUv
L68cz79s17ZyyIlkXhtVujkVyg3md58d9XqlPmOlythjxPTNBT5G7Ovk8/Tp
UyxZskTktNauXZvvx9PeNWPOv/RzOJd8Xg7nf07nCOUez58/L3q3dO3a1ZjD
xDBMAVCSrxP/b7LbwyTmw7KvY+WsZTt+h5t7TeGb8trfRE1Nr5o5nn+G168M
r4GpVDnk9tK+949//EP0LssPVGu4YcMGfFDCCv4jFxf4GLGvkw/tj6PZElSz
TT3f8ou3t7dR559a+vm6vJ7/ub1norlilDNv1qxZQQ8RwzAFRDG+Tr8eVuv/
kyZfx/WwrJy1bOtvcHStLPaw5ZdBAweK/Wsff/yxwfNPP+9h6HqpP9s4a45E
8zWab5Gvv9WkJOzcuRP/+34pdPGfgtCIJwXSwuBYOJarbNDX0bU4Ojpa7JFi
FZ6uXr2KYcOGwcXFRdQl5JfevXsbff5lejeVKmvtRQ7nP/U5zm1+C81noZx5
Qf4OGYYxDsX4Ou05YtmsDfA6LCs3Ldn2q/B1DRo0yPffAuWpqJcqqVGjRnla
m1JlXhtzWs/SzfPR/SlfR7Nl8wPtyQoLC8Pf//EvVKhcF627DCuQGvv2wr//
930Ry9/+9jedGD/44ANRy0ieg1V46tevH6pXry5qE6jndH6hmWDGnH85rt3m
sjZbunTpXOMjX0d99ajel2EY86IYX+fsrtnbm83eX16HZeWmZUb4Om22bduW
dT1KpX9+5t7L32CP47TH16lTR8wGzdffalKS8HVvv/3/UKKUDVw+rFYg2TqW
17qG68ZHfpN6j1WrVo1ViKJcFvXuLaivo3VOmgtW0PNP19/p1k1k9/9X/ThP
z8q5xse+jmHkoRRf5+Dknu1+EPX/pnc5X8fKRSJfV87DaF93/fr1TM+T3fwJ
lUpzXdS/9ulfQ/Wfh/It+UWdr/ufd/8PDX174qv5uwuk/mOWoZSVvXh9b7/9
tk681B/m22+/FT1vWYWnjRs3inlbBfV1tHeUZhgX9Pwz9L3c/v+qRXsVckPt
62hGGsMw5kUpvk6sw2aZa8P5Olb+tHT7f+FSvqrIhxV0hrr4u0hKEnvNDObr
DOXq9PagG7xvhg+k9be7d+/mO6bExETRK/a9D6xEj76CHiOum5DPn3/+ia++
+grOzs459gzJiZ9//hkeHh75Pv8yfaBe3UVu/3/V3+/WrVuusf36669wd3cX
+xkYhjEvSvJ1mf+DMv/36Pc5KSU9TpaytWLXFbhXrS/Wumj2ljEEBATo+R5V
luuf4fyGgftmfE6+qSAzowiaybRy5UqxBjtwwqoCHyP2dfKhWui5c+fC3t5e
rPkXlJCQELi6uub5/Mv6XsRAj+20rzs4OODLL78U9RldunRBmzZtRJ6O8m9z
583NNS6aTUHPQY9jGMa8KMbXOWe/DqsWr8OyclPQ3pv46ONOqFixopjTZAzU
i6JVq1YGr4dZ83SafIjujDHN9ZU8E62/FWQ+LEF1FpMmTUIZGyd8tWBPgY8R
+zr5UM8amodCPd7o/UNBef36teh/R2ueuZ1/Of1vpftpP65Pnz5i3Z/OOdqT
QD6N6okOHTqES79cyjEmOr+pppp6LlN9CMMw5kUxvk6/L7GBeYXc54SVmzYc
fAC/XuNEX7D9+/cb/fdBs54y53AaWpsylCPRE/WFqFWrlsjTFdTTEbdu3RJ9
Xu0cKyAw9GKBjxH7OvmQHzt+/LjwPoMGDTLqueicov43vr4t8fe//z2HHLJm
DVaVUQet37NOrZ27dhY4npcvX2Lz5s2ibpZykgzDmBfF+Drnipn/d3T/x2g+
//d7vA7LyllbT7zAsCkbxDVlzpw5JvkboX3u5MtUf8vm3MwmF/JOmmeiNTK6
bv/yyy9Gx5HeE8wTFat8hC2Rzwp8jNjXKQOqaS1fvrzol0h7J43lh9gfMHz4
cLEHgd5L5LT+kf33VHB1c8WDBw8KHAc9luaHFbTnMsMwxqEYX5dDPawmX8fr
sKycFXbmDeauPYMy1rbw8/PL98wJQ1D9xYEDB0SujGop/vWvf+nkPrRzzJQv
oV6zNOdp9OjRiDgWkWsP17xAzyFmbpa0QvN2/Yw6RuzrlMHNmzfRsWNH0Vfm
xx9/NMlz0p5SyguPGjUKzZs3F3UZ6prn3OYd07nbokULHDlyxKgYrly5IurR
yV9SjplhGPOiFF9HfU5y3P/xFtfDsvIm9YxYqhWknIipoPkQtCfq66+/FvvJ
27ZtK+Yk0fWzdevW6NWrF8aPHy/2O8XGxprEU6qhfU70c8Vs2GkFnw1LYl+n
DNQzYmmPHc39NSVUz33u3DmsXr1aeDzyjw0bNhT5XgcHe5QqVUqsAVNfG09P
T/j6+Ij3IbTvwBjonD969ChsbGxEf+v89mhkGMZ4lOLrbJ0q6O1Fz7pXiddh
WXlRyLEE9B0RIK6X8+fPN/nfDOXvaD7mxYsXERMTgzNnzoieE3/88UehXMfo
59E6Ls28davkjaDdcUYdH/Z1yoDOFTp/KL/7ySefiPlihQHleimHRn3yqPZ2
xYoV+OabbzBv3jwsXboU27dvF36OvKCx0PsP6t9CfpFmGTMMY36U4uvEfFj9
+YZ6+5Z4HZaVF4WdeY1v1p2FvWN5kU8zZq+QEqC1tfXr14s12DbdRiD8bIpR
x4d9nXK4c+cOPv/8c7Fe+t1338kOxyiofoPWk6tWrSrmTPAaLMPIQTG+zim7
uglNDT77OlZeFXzwHlp1HiryBuSJiiqUq6N+LbTvyT7tvc+8NaeNPjbs65SD
ejYcnac9e/Y0uueiTBISEkR+nPLk06ZNM6ovOMMwBUcxvs5Z0+dElSVfp54j
xn1OWHnTzqi/MH1ZBOwcXOHj44Pbt2/L/lMrENSLOCgoCKXL2MCnw0DsOJVk
9LFhX6cs4uLi0KFDBzFTrKjWj9Ka8g8//AAvLy9RO07zJhiGkYNyfJ27xstl
0/eV83Ws/Cj44H207TYK1tbWWLhwoVG942RA18qffvoJ9erVh5NbFZPk6kjs
65QF9TihnB31BaEa7nv37skOKd/QXDSqGaK/NeovVNT+1himOKEcX5eer9Pt
kanbH4zrYVn50a7Tr0TPEzd3L1FzcPbsWdl/bvmC9gXStbJEKWt08Z+CndHJ
Jjku7OuUB9XcDBw4UNSRLlq0SPQtLiqQL929e7foxUe5caobZxhGHorxdZnz
YfX31vG8CVbBRbWx/UYvhZW1rdifTnWsRQGaM7V161a4lHNFjbq+WLHrqsmO
Cfs65UH9QWhOF73/qF69Ok6cOCE7pDxBOWWqC6d6XlpHptpahmHkohhfl7EO
q+5vkp63U+nk7ngdlpVfhcekYnX4DTRp9TlsbMqKPmGm6OdQmNA1nnKLjRo1
Fu93JnwTbtJjwr5OmVA/u1WrVsHR0VH0m7t27ZrskHKE6iIozzhy5EiRZxw3
blyRrvtgmOKCsnxdTn2JVdy/jlUg0frl7KBoVKpWH+7u7tixY4di9/9QXNRr
7LPPPkPJ0jboOXAWtp98adLjwb5OmZBPor4nQ4YMEfvUyCc9evRIdljZQvWv
1FeZerS0b99e1G0zDCMfpfg6ey1fp9PD7i2um2AZr62RzzFyRigcXNxRv359
Ra5zqfMfdD23si6LZm2/wNp9d0x+LNjXKRfaV0c9rmmWiYODAxYvXmyS2bGm
hvYJ0JprlSpVRP3rsWPHZIfEMEwGSvF1tqJ/XdZexNyXmGUqbToaj8+HfgMb
Oye0adNG9PpXCuTpqE5i1qxZcHB0Rs0GbbBo838K5Tiwr1M2tE8gIiIC9erV
E7Nj161bpyhv9/LlS+zbt0+8P6L4Nm3aVKTqPBimuKMUX6fpS5yRn1O9pdPz
hPsSs4wV7bVbt/8uOnw2HlY29mLtiPIMsmdY0torzYCfOnWqqJOo7NUEM5Yf
K7TjwL5O+ajzYTVq1BBzjmnf3ePHj2WHJfopUj1P48aNxfyzwMBAESvDMMpB
Kb7O8Dqs7sfc54RlrMLPpIg6ivY9xsDazglNmjTBxo0bpe1jotwM5Q0HDRoE
BwcnVKvdHJMW7UfYmTeFdgzY1xUNqI6CZqzWrl0brq6uwvfTnGAZ0Hsfeu9B
fSC9vb1FT5OAgABFeE2GYXRRiq/TnjehXy+hrpHlfB3LFCJvt2bPLfQcNBvl
KlQTa0k0q5z8lbnWk+g6SXvkV69ejZYtW6KMtS0af/IZZiw/XqiejsS+ruhA
+bFdu3aJPiI0a6x79+7ic3P6KapxPXToEPr37y/8Jc1+Xbt2raibYBhGeSjF
19mr502IHJ2BGbHs61imVMwbbD7yCCNnhKB2w7ZiXZb8FdX3UU6ksOplaR9d
fHw8wsPDMWDAAHxYoaKYJdGt/3Qs2XLJLK+dfV3RQp3THTp0qHgPQrUKEyZM
QGRkZKGugdLPPXfuHGbMmCH20lEdR9++fXHw4EH89ddfhfZzGYYxDqX4Ok2f
E82MCZWez+O+xCxTa0d0EgI2nkfnvpNQrkINlC1bFl27dhV5NPJ3psrfkU+k
ugjabz5q1CjRf9aqrCOatuqNcXN3YnPEY7O9ZvZ1RQ86fyi/u2bNGrRr1054
rEaNGmH69Ok4efKkWLM1FVQXQX5u/vz56bnkMmXEHj+qzf39999N9nMYhikc
lOPrKmbZT6fdl1jF++tYhSSqp1i1+zrqNe+Kd/7+T9jYusDJyRmdOnXC7Nmz
xboX9dTPb26EPOGtW7dEbcby5csxePBg0RPCqqwDPmrSEQPGrxQei3KH5ny9
7OuKLpQn+/HHHzF37lw0b94c9vb2ooZh7NixWL9+vZhZQe8fKC+cV8gz0prq
999/j5CQEEycOBG+vr6iP3LFihVRsmRJsQ+VnpdhGOWjGF+nroc10OeE+9ex
ClM0R3b+uhixHuryYXUM+ioIrbsMQ6Wq9cX6rKenJzp06CD6ylH9X3BwsPB6
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
7dNIx7tRHu5N/epI/DTtGjdgOO4Pm4AHX47G4z79kNTKV+t+VdL9Xdrt6+YN
cS70e7MeD/Z1FsqtOKQ2qaVz/qFd07QLwNncH/v0CTB2aHruOTP/7ImXK76F
v78/bG1tERwcXPivgWGYXFGKrxPzYXX61qk0/ex4HZZlhKg/3edDF+C9Elb4
9PMJCDv9yqjn2x+ViGfduuvsNafcxWufJrg9dhYurNiHU2G/4viBm4jcdxUx
oT/g1yU707zeMKQ0qqm1L91T+LxHXwzGwcgnZjse7OsslGOHM849rfNv9sS8
P/7gXt36CdKi2aJuws3NDS1atMDt27cLL36GYfKEYnydU3Z1E5S/Uwm/x76O
lV+FnXmNBRtiUa6CF9wq1cKSLZeMfs5zIWcz1ls9M/eSpzSug6uzVuW4Xy5q
1y+4N/zr9N5gWn7wTYPq+CnoqNmOCfs6C2XLhozzTmt/3fHDeX885fXqVUFq
XS1fOGciHjx4gFGjRom+J4sXLy68+BmGyROK8XXOmj4nqiz5OvUcMe5zwsqf
Nh2OR7d+0/BBCSt0HTBDrMka+5x3R0/NyFtUy8xfPPhyFPaffJHrY0/uuYqX
fu1196ynXSvvjZpstmPCvs5CWTo/aw+T61fy/vgDe3T7odD5P+NrvH79GtHR
0fDw8ECDBg1w5Uo+npNhGJOjHF/nrvFy2uuvWmuznK9j5Ue7Tr/CvDWn4ejq
Cfeq9dP8zBXjnzfmDf5q46NzfaR8W8zW2Dw/x7UZKzL2rlfL3INONbXmOi7s
6yyU3dvSZ0tMHQ9MGy/6EuPF87w9lubGzpqoVd+dcf4HrxTfjo+Px7Rp08R8
senTp6fd/U0hvhCGYXJCOb4uPV+n0tlTp9LpUcz1sKz8aMPBB+jQaxzeL2mN
3sMDhCcz9jkpJ/cmcy0r/dqW1L616GOX1+egOgn9Xv6vm9TBvqhEsxwX9nUW
Spr3wu24NN3MuI1Lnz2RG6/SLhJHDwKf+mjl69LOf9or+n36HLGUlBTExsai
Zs2aQhcuXCjkF8MwTHYoxtdlzofV31vH8yZY+dfO6GTMXBEp6qyr1PwYQbvj
TPK8kfvjtHrVpfd6eDB4ZL6eg9Zis+xzStOh44/NcmzY1zHZkUq9UIiU18Dz
Z8CV34B9u4DObbLOpBg9GKmJLzMfm5CQgICAAJGzGzNmDF69eiXpVTCMZaMY
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
70usytrDjvucWLbW7L2Nxp98htLW9hg1c4vZf/6+qCS8aVgzsw5Wp89Jxj4k
/bWrN/r7ldT7mOpV06x3pXnBlMZ1zPY62NcxBqFewU+fpOfySIU87+vBgwcY
OXKk6HuyePHiQv1ZDGNJKMbXOat9nUovT6f5/N/v8TqspWr7yUSM/yZceLq6
H3+KTUcemT2G/Wm+7t7Q8XgwdCzuDxmDB0PGpmmM+DhTX6q/rvke3Z8+vz9E
fTtG63HpX7szZrrZXgf7OkYJ0MyJ6OhoeHh4iH7FV65ckR0SwxQLFOPrcqiH
5f51rNV74oSfs7J1wVcL9kiL4/j+m4j87kaarmfRCa2vi4/3XUu/777rGR9r
3X+f1m3a98w5n4J9HaMU4uPjMW3aNDFfbMaMGWIuBcMwxqEUX0d9TnLydFwP
a7naduIFRs/cgpJlbNGoZU9sOfZUekxFWezrGKWQkpKC2NhY1KxZE97e3rhw
4YLskBimyKMUX2frVEFnb51+LSyvw1qmwmNSsWLXVdSs94nobTJ1yWHpMRV1
sa9jlERCQgICAgJEzm7MmDFifZZhmIKjFF8n5sPq9K1TafrZ8TqsxWpr5DMM
nbweJUrZoFm7L0TuTnZMRV3s6xglQWuvly5dEnvsPD09ERMTIzskhinSKMbX
OWVXN0H5O5Xwe+zrLEuUq1u+/TdUqfmxmBk2Z/Up6TEVB7GvY5TGs2fPEBQU
BBsbGwwcOBCJiYmyQ2KYIotifJ2zps+JKku+Tj1HjPucWJJCjz/BwHEr8H5J
a7TqPFT0r5MdU3EQ+zpGaaSmpuLy5cto2bKlOAeptx3DMAVDOb7OXePltNdf
tdZmOV9nOQo/k4LA0AuoWKUeXMpXxYLgH6THVFzEvo5RIi9fvkRoaChsbW3R
s2dPPH1q/FwLhrFElOPr0vN1Kp09dSqdHsVcD2s5Cjn6GH2GBeCDElbw6zUO
u6JfSY+puIh9HaNU4uLi0KlTJzg7OyMsLEx2OAxTJFGMr8ucD6u/t47nTVia
ws68RsDGH+FasSZc3Wvi29AL0mMqTmJfxyiVpKQk7NmzB46OjvDz88PDhw9l
h8QwRQ7F+LqMdVh1f5P0vJ1KJ3fH67CWoU1H49F9wEy8V8IKXftNTfN5b6TH
VJzEvo5RMnfv3oW/vz/s7OwQHBwsOxyGKXIoy9fl1JdYxf3rLEC7Tr/CN2vP
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
ZvMJvxNk9P6joT6KsWsxr2MwLBvYMzFjxgza66Oioiimw7A94Izgb775BqpX
r05zgi9fvizL61oKr6P5sNrzXbXiWhaTh82EoY4t7p+jZ2+GFp1Hgl/V+sRL
DcZkMjh+lbmX84ceEfMgbtt3wo/TGm3ghGWZOv/YF20un5Zsu0551oze/7I+
gUavxbyOwbBs4H5/6dIlCAwMhKCgIMrTMWwPOEti3rx5xN9nzpxJ77scsBhe
566vb+K9NA0Ia+J16oa6Y/NWnYIew6KhdsOOpGmin9/pP371uaJ58+WHuk26
wOSP9sD2z+XRNcsphnqBmTn/U2L2mc0nnP+L8diM3n/M7+8yss6SeR2DYfnA
/FxMTAzt+ZGRkfDPP/+IdokhI/D9vHjxItXU1apVi/ph5YLF8DqPdJ0TTX3W
9L22oBl1TkxiF/+j2bZDp6yFBs37pGgxK+x04jL6jl+qJsytbCXoPWKhhuYd
m2GrXCNU7Ty/p/f8x+24YVa/MA6bmfc//pBxejfM6xgMywfmXq9cuZJWT3/h
wgXRLjFkxNOnT2Hq1KnUA7tw4ULSOpELlsPrKqTvZXp0f601XidlGw8+gtGz
NkOjVv1pFnzKDATDx6+Ph+QrWBiatB5AM2R3n/9H+LFZujmU8dSYIaaT+1Sk
xEPNHQetVqd5pt7/uG3XjVqHeR2DYR3AeWKrVq2ivT8iIoK0ixnWD1VvDGrV
1a9fn2aNyAnL4XUp8TrNXlFNnRBL7Yc1xjYd/BVGzYyHkPAeULR4aYPHrzdf
i3u/co/2rRICI5WvtfXkS+HHZam2+dhvkDtPXr09E6rzj1zb3L6Ft4/I1PuP
WsbGrMO8jsGwDmAM5+bNmxAWFgY+Pj5w/Phx0S4xZICptWwshtelzYfVri1K
v2/OeRPmNtQwq1GvNXGOPHnySR6/bh5W937J0m7UU7F2/8/Cj8kSbe7yE3p5
k/r5DKrbyuy+9Rw63+D1rzLUxjZmHeZ1DIb14PXr15CYmAhOTk7Qq1cviuEx
rBeoPX3s2DGaARsaGmoS7WmL4XWpeViVvoNCLU+m2oNtKQ+rbrvP/QMxG74E
T+/K4O4dQLpp5f1rQa5cufVwEIn7arEm1Lht2mGYLBq2tmY4K0RfzFP9+mvf
23waJyqLmLjS4PWv8nPE9I1GrcO8jsGwLmCern379uDp6UkzZBnWi4cPH8Kg
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
NFfMvkRpGDhhmXB/2NjkNuZ1+oH7FuYVU7TCFLrxKbXHV61aZVJfsFcPuSPm
Q82ttYXr+fn5Gzx+1f3Dhw+b1becinNnz5JG8bhx4832neLp06fUO4O1aKj9
Zqq+DBFALb6kpCRwdnaGLl26UK+srSCrvC7h6DPoNngOFLF3gC4DZhLPE71P
/X975wJX8/3/cWd+Ntv+I9ckXSRNCYm5hblMyD2iMcMwQyZ3uZvJNBu5hSSU
ayprM7mvKPPb2F/4j23G3OY+/JbLNr/3v/cn5VTndD3nfM73e16vx+P5KFTf
tzqd7+u8P++LIYk98oSCVydRjZquVK9xW1oTf0F6TAAYEvg6/eL7lre3d77n
jtnnj40bi3pyQ4tr0vfv30+ffvqpyJmNGz+OFi9eLHZcmmouw2+//ZZzv7yO
/z/n68qXL6+o2bRK1+HDh+mPP/4wybX4scY1p25ubsJPqnG+z6VLl4Snc3R0
pNjYWNnhGExF8XWxKX/RwrUp5OBcn1wbtKSwmHPS71HGYGPiTfIbMl2cMw8e
E2L2u24BKArwdfmL95xyn2EprX5PXT6P93UaescC50eWhoZSy5Yt6cUXX8y+
ftmyZal9+/YUHh5ukrlhPDOjoP8/v23bpo3RY4HkiHOCH374oahB415YNYpr
anmfDPu6Xr16id8/Nagovo53SfQaOEnsUx0S+Llq/Q7715B135Jj7QbkWt+L
VqjUvwLLBL4uf/Fzu5OTU8E5u4zvH/uvmzdvGuS6XLs9a/YsqlChop6aNo04
D+M9GMauXee5s4X5/8+fP9+ocUByxDnjxMREsVeiS5cuqu535p7jYcOGiZpZ
nrusBhXW13FPAe9PtbV/nTyadqDwhN+k35+MCZ83vzNyvtZ5szo9LLA84OsK
1oyZM3LsbMoz6+MZL7xQWvQKGqLuiO8p2XNFNKX0Xt/W1pYOHDhggP+lbj15
8oRqOdcq8P/Pj5/U1FSjxQHJE++EGzRokPA6nLtVs/jxvnfvXuFhfXx8VOFh
C+vreAYIz6mrVNWWAmZESL83GZvs/hC3N8g5g9DoNOkxAWAI4OsKFs+3qlKl
is4zyNwex9a2hshtlEQXLlwQe6DyeCc912/brp2YW2sMnUpLo9Kl/5Xv9fkt
5w7VNh8CyuwniIuLI3t7e/Lz87OI+smsM2cbGxtatWqV7HBKrML4upjkhzT9
M62ZvbtvSL83mQKe58LnzZyz8x04RZzPyo4JgJICX1eweA7CiBEjxNmjJvv8
Mffb5+/zzNZjx44V+1o8F0zf2auu62s0LxitHzc4OLjA6/PbHj16GOX6kDzx
Y5H7I3x9fUX+imcYWoK4R4TnO9epU0fUsXLfkJJVGF8XnnCRWnu/LXZsTV4Q
I/2+ZCriU/+hpZvTyM2jJTm5eNCiyH9LjwmAkgJfVzjx96FK1Sq5PI52fVlO
D9ali4/oWS2qODfIZ6vP+xR07+3KfX3eb2noeRdct8dzhgtz/WXLlhn02pB8
ac/r5RpLU/TomIu4TpZnMXIemndAK3nWdkG+jveDTZy/lSpXtaM3Ow4QOSzZ
9yVTsvnAffpgahhZVbKmLn3H0I7Dj6THBEBJgK8rnPh5ffz48fSCJne/gC7P
kwnvRf/iiy8KvXOS58TxNfL0Jmi096/qvz7PPzGkTp06ldmHW8D1+XHDHwup
R/x4P3v2rJjzo9b9WvmJX9McPXqU6tWrR61ataKffvpJdkjFVn6+Lv7ofyks
9mdq1LIL2di70JylidLvSaaGvwfLt/9IDZq8RXY164rZdrJjAqAkwNcVXnwm
xTsxNbn8lO68nSY7j8Z+i2cc5/ean/8tPj6eqlatmqc/Ifd5r77r165d26D3
n5z7NvRf383VzWSz9CDTiGcx8jwTzleNGTOm0K9N1CSuWeXfAd6ZNm/ePMXO
Yc7P12059IBGz4igipVtxN5Uzt3JvifJYGvG94H3xfL3oUOP4Rb7fQDqAL6u
aNqyZQtVqFBBv9/J8+dS9Fq5cuTv7y/mzfEeJu1ZspyjY78YHR0tPGOO/J+O
XGDe3oWc1wsICDDIPZj3WjRo0KBQ158yZUqJrweZj9i/8K5ZrhPlxyQ/Zi1R
/Lv5/fffU+PGjalp06Z0+vRp2SEVS/p8Xfy3/9DyrWfIvVEbsq9Vj4LDj0i/
H8kiK2/ZuFVXqi7ylnukxwRAcYGvK5p4DsKECROoTJkyemb06vdlVSpXFvO/
gqZOpaVLl4peO67dGT58uOg31PaFuXN1+fWiasM7H9gjlmTXGN/XeV5L5jzm
/K/P85hTUlIM+B2GZOvu3bsUEhIi8lRBQUFGn49ozuLXYIsWLVL090Kfr+M6
umHjQ8XOhR4DJoj5dbLvRzLJqjPkOS9vdn6Hthy4Lz0mAIoDfF3RxTOt+vbt
K75n+dW76fVhGZ/HdWvlypWjf2X4osyvocn3c3Xt7tJX78Y/N/Z2xdkxxb6V
51rwnszCXN+9rruYhQGpQ/x6gPNznp6e1KxZM1E/YMni1zgnT54UucuGDRuK
/J3SpMvX8ey2z6JOkEvdplSrTiNaHPWD9HuRObDmiwvk9ZYfWds60bRPd0qP
B4DiAF9XPPGZjE8XH3qh9Atafi7vGax4X6Nv/1apHDOHc+frNPpq+LQ9lqaU
zuvXdHQU+QWu2fvxxx8L7GXkWqLvvvuOQkNDRa14Ya/P+98h9Yj3q8yYMUPU
1fHPVqk1ZYYU1xquWLFC5OwCAwPFax8lSZev410LAz6YJ+a2+Q+fLXye7HuR
ObA96SEFZfi5KtUcyKudH0XtvSM9JgCKCnxd8fX98ePUvXt3cRapy69pdPmw
LM+mI/+leZbLy917kcWLL5YRP6fn19A3AyXz+qVfKC3mGw8Y8A7NnDmTli5d
RuvXr6etW7fSjh07xD5bnmPBM0q4Rq5b165UvryV3utrcuUT+exYjfvfLVXc
+5KUlERubm7Utm1b/GyfiXua+LVRu3btyN3dvVjzi2Qqt6/j2bsL16aQg3N9
cm3QksKwGzUHEQmXqX2XwVTF2p7Gz9ssPR4Aigp8XcnE35/+/fvTyy+//Myv
5X8WmzvPVtDHZ3kpPrcdPvx9atOmjd6z0YKuzzFWq2Yj9t26uNQmZ2dncd5a
tmzZAq+f9+81NGvWLNnffsiAytqzwPPquBcWei7Od69bt07soOAZ5UqqPcjt
63iXRK+Bk8iqUjWxa2HnUexF1SbmyCOateRrcRb7RsuutH73dekxAVAU4OtK
rvPnz9O4ceOezRPOx6PpqlHL4+9y9k2wr+J8IHtHvu8ePHgws/ZNk9t35ZO7
K+H18+QUM3Cv504XL16U/a2HDKTHjx+L/Xe8V4J7e9SwF9WQ4pzdzz//LHbG
8vPi/v37ZYdUaGn7Ou6NmLdiP1V3cCGPph0oPOE36fcgcyTy62vUufcoqlSl
Oo2evlZ6PAAUBfg6w4h7CLnHlXe1vsSzfHXlzTT5eKxc/5bln7i3gneu8x4K
Vlav6muvlcubV3vmyzQ6vmZxr6/LG7722mviPBdSjy5fviweZ3Z2drRp0ybZ
4Zil0tPTafPmzeL127vvvksPHjyQHVKhpO3r1u26Sh17jRA9nwEzIqTff8yV
HUeeZPjfA2LmiUdTb1r75SXpMQFQWODrDCf2XMnJyWJnRCNPz4zvZ5m8OTGt
HRI5fFiuvgf+M8805rq43Psp+UyIr/HKK6/kmZmX9bl5rlWM6+f8WpmULfuS
qB1X0jkUlL/4Z8k90Fwv6efnR3fu3JEdktnqwoUL1Lt3b0Xty83ydTHJD2n6
Z1+SdfWa1PTNHuI8Vvb9x5zZkHider4zUZxXD52wRHo8ABQW+DrDi1/Hcx8q
1yrxDqKKFSvlyonpPg/lXBifufL3ffCgQbR9e4zeGcM8N5j3AJQrX053bq6U
Hi9XwPXzfF6299MIHzls2DCc0alIfL7I/RG+vr7CqyQkJMgOyayV5YE5r8mz
jjhPb+7K9HX/pfCEi9Ta+22qauNIkxfESL/3mDvcXxIcfpjsnOpSXc83aVXc
eekxAVAY4OuMJ96bfuDAAXFuynvTuZ+O+1O5Lt3KykqcsVasWFHkSXg2VufO
PsKrbYyKoqtXrxb49a9fv05B04LE/ThPbk1TKk+uLbt/tqC+Dk3ec1iuF+d5
zHxeB6lH/Bjlnmh+TPJjVClnizJ16dIlGjhwIDk4ONC2bdtkh1Og2NcdOZ0u
Zu5W5pm7HfuLmcSy7z1KYOPeW9Rv2CwqX8maBo4KFnspZMcEQEHA15lGnF/j
+Qhcn8N1eAsWLKCPP/6YQhaGiL0TnN87fvw4paf/WaSvy/fldRHrRL6FvVee
HJ3eHJ72GazumXnMi2XKUMtWLenzzz8v1pxjyHzFubqzZ8+St7c3ubq60qFD
h2SHpAhxj8muXbuoZs2a1KNHD/G7bc56+Jjoy29+pkYtu5CNnQvNDk2Uft9R
CnEpf9OiyH+T0+ue4j65Ytv/SY8JgIKAr1OHeL4WzxT2f9tf5ARfeuklPV4u
P5/3HM4jenm1FLV0nHMsyV4yQyk1NZVWr15Na9asoTXha7Lf137LmPt91lzE
83bDwsLEDGJD7RW2FHEtAs874R4Knn9izrp99wHN/TRC7LT37vk+dtoXkei9
d2hgwAIxw7nvezMwwxmYPfB16hLXdfPc4WnTppG/vz+1bt1azJnlXN5r5V7L
nqH8fI6J5tlcu2oZftCN2rdvT0OGDBG7Bvbt21fgngpTivdnVLCyEmfYWVSw
qvDs/QrZf8d5Tyh/cY9PWlqa2I/l4eEhdodBhRfvnOBZJ7Vr16aOHTvSlStX
ZIekV+d++oXeaN6W7Gu5U3D4Een3HKURl/pU7FlzcW+GnWtAEcDXqVOcX+N6
eJ53t2nzJpHL++ijj8ReibGBY0VPx9jAQJo4cSLNnj2bFi9eTJs3bxE5sZs3
b8oOX6c4d5hjrovOfKMGHqUQ4nr/kJAQRe+zly2ub+W+dH7NtHz5ctnh6NWJ
EyfIqpI19eg/Xsyvk33PUSJcjzh8wlKRs+s5YALFHnkiPSYA9AFfZ3liz8f5
Bt4bxTVWSpG2r8s5qyUn8HX5i3/+/D3y9PSkZs2a0ZkzZ2SHpEjx7w/PNeJ8
OO+BMde9az/88APVdmuMPFMJiP/2H1q69TS5e74p9q+FRKRKjwkAfcDXQUpR
Hl+nh++++052qGatW7du0YwZM0Sujvt3+EwWKp6yvpdcx8B97+b4OumX8xfo
vYA5qAsrIVsO3adR09aIeXad+4wS8wBlxwSALuDrIKWId7VlzWDJvQdX+8/I
1+kX55iSkpJEjqlt27ZiBx5UfPH59bFjx0SNYosWLUR/sbnpj/vpFLPvnPR7
jdLhGScrYs5Rw2YdqYajK3288qD0mADQBXwdpBRl5ut0z2/RaO21ha/TL64J
49pKnle3cuVK2eGoQryfIzg4WOQ/uVbV3PKf6TyX+GfMXTMEWw/9hwLnRIne
4vbd3hN/lh0TALmBr4OUosBxgc/7eLVr7FBfVyjx3LXExEQxx5r312NviGHE
9Yrcm9CkSRNq3LgxnTx5UnZIOaS9HxaUkGNPxd4J3sNWzc6ZZi35Wn5MAOQC
vg5SikS+TueujJx7beHrdIt3hQwaNEjswIqOjpYdjqp07949WrJkicjZTZo0
yaz6i+HrDMu25HSatGA7Va5qR629sbsDmB/wdZBSFBg4tlCzleHr8iprrynv
rPPz86Pbt2/LDklV4rPXU6dOiXmRDRo0EDV35iL4OsMTnvAbterYn6xtatKU
T3ZIjwcAbeDrIKXoeT+s9p7bvO/D1+UU92jyDA7eNcdnsAkJCbJDUqV4ty7v
O8na38Hn3uYg+DrDs/3wQ5r+WQJVtXGkZm18xR5Z2TEBkAV8HaQU5fF1uvJ1
Gswlzi3eIRwVFSV2Xg0ePFj4D8jwytq326FDB9FvzH3H5iD4OuMQ8eUVeqvH
MKpsbUeBczZKjweALODrIKWI92Po3nOryeHtML/uubK8hre3N7m6utKhQ4dk
h6RqsYfesGGD2EExdOhQSk9Plx0SfJ2RiDn8mOYs3UPVajhToxY+FPn1Nekx
AcDA10FKUc65xLlydprnf0a+7rnu379PYWFh2WeDjx49kh2SqsU+mmcCdu/e
XeyO5f5j2YKvMx6Ru36nrn0/FHNPPpi6Sno8ADDwdZBSlOXr8sw6ybVbDPm6
THEtf1paGnl5eYm5ufC7phHn6LZt2ybOvQcMGCC8tUzB1xmPHUee0PywQ2Tn
UIfqv9GewndelB4TAPB1kFI0blzePWK6PB78S6bu3r1LISEhYvZGUFCQWc3e
ULsuXrxI/fr1o5o1a1J8fLzUWODrjMuG3Teo96CpZFXJmoYELqKdR59KjwlY
NvB1kFIUKOrrNLnOYbXPYzWor3smnpXL/tbT05OaNWtGZ86ckR2SRYnPu3fu
3EkODg7Uu3dvsZNCWizwdUYlNuUvWrg2hRxq1SM3j5binio7JmDZwNdBSlHu
+jpNrvNX5Ouei/fRz5w5U+TqFixYYHa7rSxBV65coSFDhog50Js2bZIWB3yd
8Ynac5v6j/iIyle0pgEj5lFcKnJ2QB7wdZBSlDNfhz1i+vTXX39RcnKymLXR
pk0bUccPmV5Ze9ucnJyoa9euYjevDMHXGZ+41L9p0YbvqZZrY6pdtwmFbjkl
PSZgucDXQUpRjr4JTd4aO+wRyxT7h7Fjx4pZGytXrpQdjkXr999/p9GjR1P1
6tUpPDxcSgzwdaYhev9dGvzhIpGz6zM4iOJS/pIeE7BM4OsgpWjcuHE6emA1
ufydZc8lzsoR8V4JHx8funbtmuyQLFqcO+WZgfxcyvOKL126ZPIY4OtMA5+9
hm46SXXqtyAnl4Yifyc7JmCZwNdBSlHO+jo9c04s/ByWa7p4pwTXdEVHR8sO
B8rQjRs3aPLkyWKG4JIlS0x+ffg607H54D0aMWmFyNl18w+kHYcfS48JWB7w
dZBSlNvXZXq7vPV2lurrHj58SHFxcWRvb09+fn50+/Zt2SFBGeL5MikpKeTu
7k6tW7emX375xaTXh68zHfFH/0vLtv0f1Wvcjuyd3Ck4/LD0mIDlAV8HKUU6
98NqtN9qLDZfx3sOfv31V/L19RVnsAkJCbJDgrTEHnvOnDmiP3n+/Pkm7U+G
rzMtWw49oIAZEWRVqRp59xpB25LTpccELAv4OkgpypOv02hwDvtMvJc0KipK
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
BRu195b0mADQ5v8BnuxIoQ==
     "], {{0, 994}, {630, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{255.43247505868533`, Automatic},
   ImageSizeRaw->{630, 994},
   PlotRange->{{0, 630}, {0, 994}}], ";"}]], "Input",
 CellChangeTimes->{{3.773320729836241*^9, 3.773320753109394*^9}, 
   3.7733208063447933`*^9},ExpressionUUID->"9f8ec43c-710d-496b-9db9-\
6f7bdd022df9"],

Cell["\<\
Note that (x2a,y2a) represents the center of smaller (with radius rs) circle  \
2, and (x3a, y3a) represents the center of smaller  (with radius rs) circle \
3.  \
\>", "Text",
 CellChangeTimes->{{3.770928755080145*^9, 3.7709288321109123`*^9}, {
   3.770929122141274*^9, 3.7709291998324957`*^9}, 
   3.772736644943077*^9},ExpressionUUID->"7ab0d526-7792-4c49-97dc-\
b092de2c732e"],

Cell["\<\
We use the property that the center of 2 is on the perpendicular bisector of \
w2 and the center of 3 is on the perpendicular bisector of w1+w2.  \
\>", "Text",
 CellChangeTimes->{{3.7732421211908493`*^9, 3.773242165862691*^9}, {
  3.773242213122177*^9, 
  3.773242225630495*^9}},ExpressionUUID->"32b21bb5-936d-4145-aa78-\
45b18d3ea241"],

Cell[BoxData[
 RowBox[{"y2a", ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"L", "/", "2"}], ")"}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x2a", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "/", "2"}], ")"}], "*", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.770918943574665*^9, 3.770919046274085*^9}, {
  3.770919342778243*^9, 3.770919344664239*^9}, {3.770919734601663*^9, 
  3.770919737056696*^9}},
 CellLabel->
  "In[1521]:=",ExpressionUUID->"95354242-f552-4272-9f18-bbb44d9f4705"],

Cell[BoxData[
 RowBox[{"y3a", ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"L", "/", "2"}], ")"}], "*", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Tan", "[", "\[Theta]", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x3a", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "/", "2"}], ")"}], "*", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "1"}], ")"}]}], 
      ")"}]}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.770919065403099*^9, 3.770919068482603*^9}, {
  3.770919346215055*^9, 3.770919348143961*^9}, {3.770919727158862*^9, 
  3.770919732652841*^9}, {3.7711529578506413`*^9, 3.771152970014887*^9}, {
  3.772306397162066*^9, 3.772306398697854*^9}},
 CellLabel->
  "In[1522]:=",ExpressionUUID->"9269f660-7fc1-4abd-9dac-2d2abec63530"],

Cell["\<\
Also, since we have a self tangency we need rb=1/2.  So, the following \
equations guarantee our edge lengths, as well as the tangency between the two \
small circles.  \
\>", "Text",
 CellChangeTimes->{{3.77324244171762*^9, 3.773242459082522*^9}, {
  3.773242551443274*^9, 
  3.773242619691023*^9}},ExpressionUUID->"d3b31a14-b6d6-4671-a096-\
0dfdc79958fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq6a", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x2a", "^", "2"}], "+", 
       RowBox[{"y2a", "^", "2"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "^", "2"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x3a", "-", "x2a"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y3a", "-", "y2a"}], ")"}], "^", "2"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}], "^", "2"}]}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x3a", "-", "1"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", "y3a", ")"}], "^", "2"}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "^", "2"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.770919076666415*^9, 3.770919214100864*^9}, {
   3.770919767074942*^9, 3.770919829802341*^9}, {3.7709199543536882`*^9, 
   3.7709199655783978`*^9}, 3.770920022724091*^9, {3.770920058202142*^9, 
   3.770920059245014*^9}, {3.770928572184523*^9, 3.7709285877278843`*^9}, {
   3.770928635542141*^9, 3.770928635752409*^9}, {3.772315016143654*^9, 
   3.772315052273446*^9}},
 CellLabel->
  "In[1523]:=",ExpressionUUID->"7454ebbc-f4d8-46ae-a126-726191df0a67"],

Cell[BoxData[
 RowBox[{"sol6a", ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{"eq6a", ",", 
     RowBox[{"{", 
      RowBox[{"x2a", ",", "x3a", ",", "L"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.770919224763422*^9, 3.7709192510528107`*^9}, {
  3.770919855594947*^9, 3.77091990422395*^9}, {3.7711534172151003`*^9, 
  3.771153417724615*^9}, {3.7723150725401297`*^9, 3.772315073990283*^9}},
 CellLabel->
  "In[1524]:=",ExpressionUUID->"ae14da91-4250-4420-8c59-c4fb8a923c36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "sol6a", "]"}]], "Input",
 CellChangeTimes->{{3.7709199233403063`*^9, 3.7709199246875772`*^9}, {
  3.772316422860773*^9, 3.772316427250807*^9}},
 CellLabel->
  "In[1525]:=",ExpressionUUID->"fdf582d1-2489-4b43-9fe7-31a21942cc6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"x3a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"L", "\[Rule]", 
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}], "-", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}]}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"x3a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "-", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"L", "\[Rule]", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}], "-", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"x3a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"L", "\[Rule]", 
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}], "+", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}]}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"x3a", "\[Rule]", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], 
              ")"}]}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{"L", "\[Rule]", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}], "+", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.770919926753374*^9, 3.7709200164715757`*^9, {3.770920054712921*^9, 
   3.7709200688323517`*^9}, {3.770928631363132*^9, 3.770928642426578*^9}, 
   3.771023592772242*^9, 3.771153216068008*^9, 3.771153448776389*^9, 
   3.7723064149625177`*^9, 3.772315088256137*^9, 3.772316445067259*^9, 
   3.7728142085819063`*^9, 3.772815058061949*^9, 3.772907157049953*^9},
 CellLabel->
  "Out[1525]=",ExpressionUUID->"582ba3e2-48fa-468f-9c76-60e521fd6a25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"sol6a", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771153269415224*^9, 3.7711533249452*^9}, 
   3.7723151588438663`*^9},
 CellLabel->
  "In[1526]:=",ExpressionUUID->"cc7715b1-f97f-4c10-80bc-d745a100020b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", "0.7071067811865475`"}], ",", 
     RowBox[{"x3a", "\[Rule]", "0.2928932188134526`"}], ",", 
     RowBox[{"L", "\[Rule]", 
      RowBox[{"-", "2.5809568279517847`*^-8"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", "0.7071067811865475`"}], ",", 
     RowBox[{"x3a", "\[Rule]", "0.2928932188134526`"}], ",", 
     RowBox[{"L", "\[Rule]", "2.5809568279517847`*^-8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", "0.2928932188134526`"}], ",", 
     RowBox[{"x3a", "\[Rule]", "0.7071067811865475`"}], ",", 
     RowBox[{"L", "\[Rule]", 
      RowBox[{"-", "1.2871885058111652`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2a", "\[Rule]", "0.2928932188134526`"}], ",", 
     RowBox[{"x3a", "\[Rule]", "0.7071067811865475`"}], ",", 
     RowBox[{"L", "\[Rule]", "1.2871885058111652`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.771153276362217*^9, {3.771153319034356*^9, 3.771153325970634*^9}, 
   3.771153453102721*^9, 3.772306425269205*^9, 3.772315160172909*^9, 
   3.772814208954677*^9, 3.7728150583334303`*^9, 3.772907157676648*^9},
 CellLabel->
  "Out[1526]=",ExpressionUUID->"00d9e288-aedc-4ecb-8889-1fd0472dc5be"]
}, Open  ]],

Cell["\<\
We know that there is a solution on the rectangle, i.e. when \[Theta] = Pi/2.\
\
\>", "Text",
 CellChangeTimes->{{3.773242628373337*^9, 3.773242630315894*^9}, {
  3.7732432951896152`*^9, 3.773243317367951*^9}, {3.773243351485056*^9, 
  3.773243356330838*^9}},ExpressionUUID->"1c29e45d-2ea8-4350-a0e2-\
9fe0e9dc017e"],

Cell["\<\
Indicates the last solution is the correct corresponding to the circle \
centers since both are positive.  \
\>", "Text",
 CellChangeTimes->{{3.771153367832342*^9, 
  3.771153392890285*^9}},ExpressionUUID->"077e0f9a-e713-4a51-8f67-\
23bed9211da1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"(", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}], "+", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]], ")"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7723151945711803`*^9, 3.772315240056538*^9}},
 CellLabel->
  "In[1527]:=",ExpressionUUID->"2214014a-0769-4fdc-82c1-fd45b1c1d5c0"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}], "+", 
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"4", " ", 
       SqrtBox["2"]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"4", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.772315214160883*^9, 3.772814209066267*^9, 
  3.772815058415523*^9, 3.772907157763213*^9},
 CellLabel->
  "Out[1527]=",ExpressionUUID->"6d9091d8-33da-46cc-99b9-3c834541bd97"]
}, Open  ]],

Cell["Now we substitute in for this value of L.  ", "Text",
 CellChangeTimes->{{3.773242238252103*^9, 3.7732422479181557`*^9}, {
  3.773243452921809*^9, 
  3.773243457232554*^9}},ExpressionUUID->"1ad60719-164f-45af-9858-\
67b1049356f1"],

Cell[BoxData[
 RowBox[{"yep2", ":=", 
  RowBox[{"{", 
   RowBox[{"x2a", "\[Rule]", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          RowBox[{"4", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}]}], 
      ")"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7722941407170467`*^9, 3.772294177925975*^9}, 
   3.772316499395357*^9},
 CellLabel->
  "In[1528]:=",ExpressionUUID->"23fe3bc2-70ed-4b1d-bfa2-417ac8383931"],

Cell[BoxData[
 RowBox[{"yep3", ":=", 
  RowBox[{"{", 
   RowBox[{"x3a", "\[Rule]", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          RowBox[{"4", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}]}], 
      ")"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.772294201391314*^9, 3.772294203927359*^9}, {
   3.7722942657276363`*^9, 3.772294274791147*^9}, 3.7723165185493937`*^9},
 CellLabel->
  "In[1529]:=",ExpressionUUID->"4fe7ebdc-4b26-47d0-b091-21147768fa2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"y2a", "/.", "yep2"}], "]"}]], "Input",
 CellChangeTimes->{{3.772294155128158*^9, 3.772294198687394*^9}, {
   3.772294281497655*^9, 3.772294284665905*^9}, 3.7722943260898314`*^9},
 CellLabel->
  "In[1530]:=",ExpressionUUID->"974db4db-484a-4709-8359-faf884eafbed"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"L", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "-", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
         ")"}], " ", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.772294328659061*^9, 3.7723165255810537`*^9, 
  3.772814211202754*^9, 3.772815060022665*^9, 3.772907159663361*^9},
 CellLabel->
  "Out[1530]=",ExpressionUUID->"1797b8e8-625c-49d8-9067-6cfd87f923b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"y3a", "/.", "yep3"}], "]"}]], "Input",
 CellChangeTimes->{{3.772294344503705*^9, 3.772294347149798*^9}},
 CellLabel->
  "In[1531]:=",ExpressionUUID->"4933355e-e555-4dc5-ab81-4dd4301a60bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "L", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "L"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
       ")"}], " ", 
      RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]]]}], ")"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.772294348424098*^9, 3.772316529856276*^9, 
  3.772814212665859*^9, 3.772815061398596*^9, 3.7729071609803543`*^9},
 CellLabel->
  "Out[1531]=",ExpressionUUID->"a909a484-7c70-44d5-aaad-3b2da623bd01"]
}, Open  ]],

Cell["Thus, now we have our circle centers.  ", "Text",
 CellChangeTimes->{{3.7732434697049427`*^9, 
  3.7732434800908527`*^9}},ExpressionUUID->"810f3cc2-47a6-42e0-a3fa-\
67269d6ebc66"],

Cell[CellGroupData[{

Cell["Circle Centers and Radii", "Section",
 CellChangeTimes->{{3.5801358843541727`*^9, 3.5801358938578777`*^9}, {
   3.580135983361384*^9, 3.580136022519301*^9}, {3.5801360744318657`*^9, 
   3.580136129319181*^9}, {3.5801361649266577`*^9, 3.580136172638129*^9}, 
   3.580137288315072*^9, {3.738968272803437*^9, 
   3.738968275929782*^9}},ExpressionUUID->"58eac1c0-3dea-4423-bd3e-\
40f227e6c6e5"],

Cell["\<\
KEY
\[Beta] = \[Theta]
\[Alpha] = L\
\>", "Text",
 CellChangeTimes->{{3.7723069811176453`*^9, 3.772306999319512*^9}, {
  3.773242081166589*^9, 
  3.773242088077858*^9}},ExpressionUUID->"81d2ae2a-5dc9-4270-a265-\
1d233444296e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"centers", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], 
                ")"}]}]}]]}]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox[
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]], 
             ")"}], " ", 
            RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}], "+", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]], 
                  ")"}], "-", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    SqrtBox["2"]}], "+", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
                ")"}], " ", 
               RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}], " ", 
               RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}]}], ")"}]}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], 
                ")"}]}]}]]}]}], ")"}]}], ",", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "5"}], "+", 
                   RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]], 
           ")"}], " ", 
          RowBox[{"Sin", "[", "\[Beta]", "]"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    SqrtBox["2"]}], "+", 
                   SqrtBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]], 
                 ")"}]}], "+", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}], "+", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
              ")"}], " ", 
             RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.580136177308535*^9, 3.580136179171814*^9}, {
   3.580136503069532*^9, 3.5801365242670403`*^9}, {3.5801366092985077`*^9, 
   3.5801366187932167`*^9}, {3.580136774719491*^9, 3.580136834214714*^9}, {
   3.581161189563879*^9, 3.5811611910179033`*^9}, {3.581162246230188*^9, 
   3.581162252420905*^9}, {3.5811807277212677`*^9, 3.581180728369059*^9}, {
   3.581249304247542*^9, 3.581249309950296*^9}, {3.581856430167595*^9, 
   3.581856435324327*^9}, 3.581856579444117*^9, 3.581949050188841*^9, 
   3.5821221276386747`*^9, {3.603189551629287*^9, 3.603189565643222*^9}, {
   3.603189609482428*^9, 3.603189613652946*^9}, {3.603189654579599*^9, 
   3.6031896669609737`*^9}, {3.6031897190835533`*^9, 3.603189750743*^9}, {
   3.60318982076628*^9, 3.603189864251156*^9}, {3.603189957383436*^9, 
   3.603190014106585*^9}, {3.603190354461308*^9, 3.603190379460342*^9}, {
   3.603190446796294*^9, 3.603190471082831*^9}, {3.603200136461424*^9, 
   3.603200145356838*^9}, {3.6032005524535427`*^9, 3.6032005583856363`*^9}, {
   3.603200610604084*^9, 3.6032006170171556`*^9}, {3.603208864215802*^9, 
   3.603208871415516*^9}, {3.603208907883963*^9, 3.6032089230664883`*^9}, {
   3.603209737765788*^9, 3.60320975335511*^9}, {3.603209799325831*^9, 
   3.603209818266766*^9}, {3.6032098728099117`*^9, 3.6032098944195213`*^9}, {
   3.603209931632629*^9, 3.603209962125792*^9}, {3.60321001694599*^9, 
   3.603210027245778*^9}, {3.603396922774719*^9, 3.6033969253858356`*^9}, {
   3.6041600565318604`*^9, 3.604160063466571*^9}, {3.604160129468203*^9, 
   3.604160137516892*^9}, {3.604160410525029*^9, 3.604160459437255*^9}, {
   3.607702577464778*^9, 3.6077026859072313`*^9}, 3.607702718438018*^9, {
   3.607702766704297*^9, 3.607702771123233*^9}, {3.607702834349827*^9, 
   3.6077028704958897`*^9}, {3.607702905106476*^9, 3.6077029340880127`*^9}, {
   3.607721314063161*^9, 3.607721331170704*^9}, {3.607722031413314*^9, 
   3.607722055343772*^9}, {3.607723019202793*^9, 3.6077230193706284`*^9}, {
   3.607723088833664*^9, 3.6077230930652037`*^9}, {3.607784137394079*^9, 
   3.607784138297284*^9}, {3.607784172536047*^9, 3.607784172808009*^9}, {
   3.607784207071515*^9, 3.6077842073342943`*^9}, {3.64658685271181*^9, 
   3.646586901304575*^9}, 3.646589213022106*^9, {3.647265327583839*^9, 
   3.647265377526716*^9}, {3.6472654478218307`*^9, 3.647265449933269*^9}, {
   3.647265600839241*^9, 3.64726560406954*^9}, {3.647265654927711*^9, 
   3.6472656552034407`*^9}, {3.647337189780779*^9, 3.6473371922980137`*^9}, {
   3.647358754940711*^9, 3.6473587802026157`*^9}, {3.647358815060773*^9, 
   3.64735891891053*^9}, {3.647359323051045*^9, 3.647359323266325*^9}, {
   3.647359490142714*^9, 3.6473594903490458`*^9}, {3.708339128276898*^9, 
   3.708339146748768*^9}, {3.7083392046218233`*^9, 3.70833929546239*^9}, {
   3.70833936380539*^9, 3.708339366708869*^9}, {3.7083395305425997`*^9, 
   3.708339542692808*^9}, {3.709911219850903*^9, 3.709911310528606*^9}, {
   3.709911376635076*^9, 3.7099114017832193`*^9}, {3.7099364229736023`*^9, 
   3.709936479710487*^9}, {3.709936521319626*^9, 3.7099365413560467`*^9}, {
   3.70993658303992*^9, 3.709936720300333*^9}, {3.709936845411962*^9, 
   3.709936851785589*^9}, {3.709937394994767*^9, 3.7099373977707977`*^9}, {
   3.709985555814768*^9, 3.709985557252273*^9}, {3.7099966850636806`*^9, 
   3.70999668531816*^9}, {3.7389680487355833`*^9, 3.7389680751162853`*^9}, {
   3.738968139577276*^9, 3.738968177908936*^9}, {3.73896821544709*^9, 
   3.7389682177506027`*^9}, {3.7396342045450773`*^9, 3.739634210032503*^9}, {
   3.771591731498231*^9, 3.771591733191414*^9}, {3.771591798885579*^9, 
   3.771591811660029*^9}, {3.771593244657754*^9, 3.7715932519509783`*^9}, {
   3.7715969956827793`*^9, 3.771597030737811*^9}, 3.771603014909193*^9, {
   3.7716030729844017`*^9, 3.7716031029867992`*^9}, {3.771604858510186*^9, 
   3.771604862970064*^9}, {3.7716151081096287`*^9, 3.7716151143637543`*^9}, {
   3.7716172447750607`*^9, 3.7716172498684483`*^9}, {3.772294523925496*^9, 
   3.77229458582777*^9}, {3.7723070051785793`*^9, 3.772307091602577*^9}, {
   3.772315247325098*^9, 3.772315303485181*^9}, {3.772316555096798*^9, 
   3.772316640310319*^9}, {3.7723169577204247`*^9, 3.7723169889305067`*^9}, {
   3.772317055506927*^9, 3.772317109563788*^9}, {3.772317140273909*^9, 
   3.772317199765696*^9}, 3.772317681348922*^9, 3.772372565843933*^9},
 CellLabel->
  "In[1532]:=",ExpressionUUID->"56b426ba-7978-4852-a10a-3cd4eae9172c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}]}], 
       ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
       ")"}], " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}]}], 
       ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Beta]", "]"}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"-", "5"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
       ")"}], " ", 
      RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.738968228490417*^9, 3.738969457891824*^9, 3.7389697815496817`*^9, 
   3.739634211347806*^9, {3.771597007519848*^9, 3.771597031089299*^9}, 
   3.771597147887142*^9, 3.771603109748917*^9, 3.771603230209684*^9, {
   3.771604864621407*^9, 3.7716048751801767`*^9}, 3.771615116703053*^9, 
   3.7716172501637497`*^9, 3.771622749389048*^9, 3.7716243239861727`*^9, 
   3.771767582189125*^9, 3.7722926337777576`*^9, 3.7722945887215633`*^9, 
   3.772307095636915*^9, 3.772307207022818*^9, 3.7723153076346283`*^9, {
   3.7723166472544613`*^9, 3.7723166533707047`*^9}, 3.772317214554055*^9, 
   3.772317686426589*^9, 3.7723180242064657`*^9, 3.772371984241755*^9, 
   3.7723725710158854`*^9, 3.7723832622915707`*^9, 3.772707636162115*^9, 
   3.772707740709098*^9, 3.77273622395129*^9, 3.772814214048757*^9, 
   3.772815062521637*^9, 3.772907162156226*^9},
 CellLabel->
  "Out[1532]=",ExpressionUUID->"602bf1f3-0ddf-4efb-ab57-60bb32c04113"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lattice Vectors", "Section",
 CellChangeTimes->{{3.5801372743016376`*^9, 3.5801373048748693`*^9}, {
  3.580137407171616*^9, 
  3.5801374162247047`*^9}},ExpressionUUID->"dd1d0949-4425-489a-9138-\
ef893592d4c8"],

Cell["We are working this flat torus", "Text",
 CellChangeTimes->{{3.582369864772891*^9, 3.5823699271444187`*^9}, {
  3.582369973496118*^9, 3.5823699970297337`*^9}, {3.738969423090049*^9, 
  3.738969436681583*^9}, {3.7715975872130003`*^9, 3.771597588982992*^9}, {
  3.771603132939183*^9, 
  3.77160313547442*^9}},ExpressionUUID->"200ae999-c74e-4e08-bfe2-\
f7fa1b43f45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"latticeVectors", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"{", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "5"}], "+", 
                   RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]], 
           ")"}], "*", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "5"}], "+", 
                   RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]], 
           ")"}], "*", 
          RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.580137534026297*^9, 3.5801375508003473`*^9}, {
   3.580137940862308*^9, 3.580138090818322*^9}, {3.581161269242415*^9, 
   3.581161270832081*^9}, {3.581179001836388*^9, 3.581179057408264*^9}, {
   3.581179108668387*^9, 3.581179132207106*^9}, {3.5811806969625072`*^9, 
   3.5811807093372307`*^9}, {3.581242519554166*^9, 3.581242520215888*^9}, {
   3.58124931263903*^9, 3.581249315383133*^9}, {3.58185644108707*^9, 
   3.581856445859899*^9}, 3.5818565961548*^9, 3.581949060452406*^9, {
   3.581949331181172*^9, 3.581949357082802*^9}, 3.582122138075748*^9, {
   3.73896944218652*^9, 3.7389694501137342`*^9}, {3.771597561577282*^9, 
   3.7715975818952227`*^9}, {3.7716031594864607`*^9, 3.771603216092555*^9}, {
   3.771604868269343*^9, 3.771604872292728*^9}, {3.771614674809121*^9, 
   3.771614677310281*^9}, {3.771615121197836*^9, 3.771615123985476*^9}, {
   3.771617255311338*^9, 3.771617259388358*^9}, {3.772294601274811*^9, 
   3.772294628401805*^9}, {3.7723070996948433`*^9, 3.772307109639984*^9}, {
   3.772315315429967*^9, 3.7723153286257133`*^9}, 3.772318028951169*^9},
 CellLabel->
  "In[1533]:=",ExpressionUUID->"599d2b49-d9bb-4d65-8681-bcc6fa3e614e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Edges", "Section",
 CellChangeTimes->{{3.581161568527853*^9, 
  3.581161585574769*^9}},ExpressionUUID->"8c1dc234-14dc-4eeb-9527-\
a7c0cd7c55bc"],

Cell["\<\
Here we store the edges a list {i,j,m,n} where center[[i]] is connected to \
center[[j]] + m*latticeVectors[[1]] + n*latticeVectors[2]]
center[[i]] is *always* in the fundamental domain ****the last two numbers \
are winding numbers****\[LineSeparator]\t\
\>", "Text",
 CellChangeTimes->{{3.581161595486527*^9, 3.5811616304139853`*^9}, {
   3.581161665677293*^9, 3.5811617412920313`*^9}, 3.581162242261799*^9, {
   3.581247308234243*^9, 3.581247324583816*^9}, {3.5817831634296637`*^9, 
   3.581783166961875*^9}, {3.738969798091196*^9, 3.738969813400868*^9}, {
   3.771706689824682*^9, 3.771706708949882*^9}, {3.771770398255272*^9, 
   3.77177041972334*^9}},ExpressionUUID->"e7a21d8e-f617-4378-a5da-\
9dc2d5a1e93e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edges", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.581161747323979*^9, 3.581161777837888*^9}, {
   3.581179208843933*^9, 3.58117924274809*^9}, 3.581181365997052*^9, {
   3.581249342236608*^9, 3.5812493456365433`*^9}, 3.5818566103947773`*^9, 
   3.581949096185699*^9, 3.582122155172645*^9, {3.7389695169453783`*^9, 
   3.738969553568454*^9}, 3.772294983371907*^9},
 CellLabel->
  "In[1534]:=",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],

Cell[CellGroupData[{

Cell["\<\
Check the edge lengths are all 2rs= Sqrt[2]-1 or \
rs+rb=Sqrt[2]rb=Sqrt[2]/2=1/Sqrt[2]\
\>", "Subsection",
 CellChangeTimes->{{3.5811792593456697`*^9, 3.581179272400176*^9}, {
  3.738969559839985*^9, 3.738969575322688*^9}, {3.771598081340612*^9, 
  3.771598085444192*^9}, {3.771604075139793*^9, 3.77160408016324*^9}, {
  3.771617272380292*^9, 
  3.771617292132626*^9}},ExpressionUUID->"13c39ee2-5a3a-466d-965d-\
7a6d5f6b780b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "edges", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P1", ":=", " ", 
     RowBox[{
      RowBox[{"centers", "[", 
       RowBox[{"[", 
        RowBox[{"edges", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"P2", ":=", " ", 
     RowBox[{"centers", "[", 
      RowBox[{"[", 
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Edge \>\"", ",", "i", ",", "\"\<: Length is \>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Pi", "/", "3"}], "\[LessEqual]", "\[Beta]", 
           "\[LessEqual]", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.581179295446331*^9, 3.581179352609571*^9}, {
   3.581179384265609*^9, 3.5811794135767803`*^9}, {3.5811794673296432`*^9, 
   3.581179567921268*^9}, {3.58118010572506*^9, 3.5811801497103157`*^9}, {
   3.581180260610394*^9, 3.581180261131735*^9}, {3.5811803102623568`*^9, 
   3.581180349154674*^9}, {3.5811804523957653`*^9, 3.581180454488806*^9}, {
   3.581180488851935*^9, 3.5811805057442503`*^9}, {3.581180549545892*^9, 
   3.581180573366247*^9}, {3.5811811710286903`*^9, 3.581181171490512*^9}, {
   3.5811813056653357`*^9, 3.581181353392084*^9}, 3.581242444414118*^9, 
   3.581242610726717*^9, {3.581949105825959*^9, 3.5819491081768417`*^9}, {
   3.581949361163632*^9, 3.581949361955078*^9}, {3.58212215863743*^9, 
   3.582122164868064*^9}, {3.738969584524962*^9, 3.738969584955559*^9}, {
   3.738969666208755*^9, 3.738969673635594*^9}, {3.7715977979175987`*^9, 
   3.771597830642771*^9}, {3.771597980732808*^9, 3.771597986444655*^9}, {
   3.771598046811739*^9, 3.771598052074088*^9}, {3.771598191968363*^9, 
   3.771598218647225*^9}, 3.7716032382556562`*^9, {3.771603296654491*^9, 
   3.771603298043535*^9}, {3.7716033527504587`*^9, 3.771603358182477*^9}, {
   3.771603418205394*^9, 3.77160345686306*^9}, {3.771603537270556*^9, 
   3.771603559998033*^9}, {3.771604884658742*^9, 3.7716048887173233`*^9}, {
   3.772307142142218*^9, 3.772307198056303*^9}, 3.7723153412588663`*^9, {
   3.772372891717185*^9, 3.772372922278751*^9}, {3.7723729583475513`*^9, 
   3.772373042968347*^9}, {3.7723730915859528`*^9, 3.772373134523531*^9}},
 CellLabel->
  "In[1535]:=",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 1, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.772373135040049*^9, 3.7723832752100267`*^9, 
  3.772707645953988*^9, 3.7727077568826103`*^9, 3.772736233857654*^9, 
  3.7728142145499496`*^9, 3.772815062640771*^9, 3.772907162288493*^9},
 CellLabel->
  "During evaluation of \
In[1535]:=",ExpressionUUID->"360cbb60-8645-452d-a2e0-c8de62922ef2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["Edge ", 2, ": Length is ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{3.772373135040049*^9, 3.7723832752100267`*^9, 
  3.772707645953988*^9, 3.7727077568826103`*^9, 3.772736233857654*^9, 
  3.7728142145499496`*^9, 3.772815062640771*^9, 3.772907162298984*^9},
 CellLabel->
  "During evaluation of \
In[1535]:=",ExpressionUUID->"60414972-1e7e-4280-b0a2-0f2360e44737"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   SqrtBox[
    RowBox[{"3", "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]}]]}],
  SequenceForm[
  "Edge ", 3, ": Length is ", (3 - 2 2^Rational[1, 2])^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.772373135040049*^9, 3.7723832752100267`*^9, 
  3.772707645953988*^9, 3.7727077568826103`*^9, 3.772736233857654*^9, 
  3.7728142145499496`*^9, 3.772815062640771*^9, 3.7729071623632507`*^9},
 CellLabel->
  "During evaluation of \
In[1535]:=",ExpressionUUID->"d848dc79-9f51-4c5f-abde-afecbaa7a9bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 4, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.772373135040049*^9, 3.7723832752100267`*^9, 
  3.772707645953988*^9, 3.7727077568826103`*^9, 3.772736233857654*^9, 
  3.7728142145499496`*^9, 3.772815062640771*^9, 3.772907162368848*^9},
 CellLabel->
  "During evaluation of \
In[1535]:=",ExpressionUUID->"0577377c-7683-417d-8bce-bee8e57132d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 5, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.772373135040049*^9, 3.7723832752100267`*^9, 
  3.772707645953988*^9, 3.7727077568826103`*^9, 3.772736233857654*^9, 
  3.7728142145499496`*^9, 3.772815062640771*^9, 3.772907162374814*^9},
 CellLabel->
  "During evaluation of \
In[1535]:=",ExpressionUUID->"fb713724-6b3e-4318-8397-d0b843223edf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 6, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.772373135040049*^9, 3.7723832752100267`*^9, 
  3.772707645953988*^9, 3.7727077568826103`*^9, 3.772736233857654*^9, 
  3.7728142145499496`*^9, 3.772815062640771*^9, 3.772907162380381*^9},
 CellLabel->
  "During evaluation of \
In[1535]:=",ExpressionUUID->"5a181059-33db-4992-86db-7640ace89208"]
}, Open  ]]
}, Open  ]],

Cell["Yes!", "Text",
 CellChangeTimes->{{3.738969710949356*^9, 
  3.738969711596074*^9}},ExpressionUUID->"44713034-9149-4e18-aea8-\
b2757e3281a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packing Visualization", "Section",
 CellChangeTimes->{{3.5811614691633863`*^9, 3.581161498320479*^9}, {
  3.5812608794354057`*^9, 
  3.5812608803693533`*^9}},ExpressionUUID->"84c54b26-f298-4444-9ec8-\
58440b22b9ee"],

Cell["\<\
Here we visualize the packing and the fundamental domain to help determine \
the value of the parameters for which this is a packing graph.\
\>", "Text",
 CellChangeTimes->{{3.581161529243552*^9, 3.58116155007941*^9}, {
  3.581431617395529*^9, 
  3.581431638872754*^9}},ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-\
bdaf155f4274"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"10", ",", 
                  RowBox[{"-", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}]}], 
        RowBox[{"(*", 
         RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", " ", "\[Rule]", " ", "False"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.581180824186262*^9, 3.5811808987974043`*^9}, 
   3.5812426341496763`*^9, {3.5812428812130423`*^9, 3.5812429341543503`*^9}, {
   3.581242984843346*^9, 3.5812430741219807`*^9}, {3.5812431287383547`*^9, 
   3.581243135743741*^9}, {3.5812473656144733`*^9, 3.5812473732061653`*^9}, {
   3.5812474374292707`*^9, 3.581247473907415*^9}, {3.581247505756896*^9, 
   3.5812475150029573`*^9}, {3.5812475479941683`*^9, 3.581247552706957*^9}, {
   3.5812475932850027`*^9, 3.581247600929019*^9}, {3.5812478520379763`*^9, 
   3.5812478573165827`*^9}, {3.581248067842428*^9, 3.5812480862360897`*^9}, {
   3.581248222177985*^9, 3.581248233458312*^9}, {3.581248384125928*^9, 
   3.581248402652212*^9}, {3.581248625800804*^9, 3.581248690334828*^9}, {
   3.581248833096355*^9, 3.5812488441877327`*^9}, {3.5812493253259697`*^9, 
   3.58124932808727*^9}, {3.581249362565637*^9, 3.581249381904962*^9}, {
   3.5812535181081867`*^9, 3.581253545706283*^9}, {3.5812536017645884`*^9, 
   3.581253629665406*^9}, {3.581253666648903*^9, 3.581253771795062*^9}, {
   3.581253892391712*^9, 3.5812538938364058`*^9}, {3.581254011947888*^9, 
   3.581254015235166*^9}, {3.5812542188329983`*^9, 3.581254261150659*^9}, {
   3.581254332240678*^9, 3.581254367846857*^9}, {3.581254500545721*^9, 
   3.5812547422051477`*^9}, {3.581254930572299*^9, 3.581254996760075*^9}, {
   3.581255074308731*^9, 3.581255166665844*^9}, {3.581255256680236*^9, 
   3.581255330983355*^9}, {3.581255397943749*^9, 3.5812554139734983`*^9}, {
   3.581256003564808*^9, 3.581256005175725*^9}, {3.5812561759913483`*^9, 
   3.581256295933*^9}, {3.58125638872497*^9, 3.581256414849011*^9}, {
   3.581256501384528*^9, 3.581256505097643*^9}, 3.581256537795217*^9, {
   3.581256626052237*^9, 3.5812566747215357`*^9}, {3.5812568590378523`*^9, 
   3.581256907194375*^9}, {3.581256959105625*^9, 3.581256979201212*^9}, {
   3.5812570178650227`*^9, 3.581257061806126*^9}, {3.5812571535181637`*^9, 
   3.5812571856360693`*^9}, {3.581257217869177*^9, 3.58125728617*^9}, {
   3.5812575986228857`*^9, 3.581257652067379*^9}, {3.581257705164557*^9, 
   3.581257726570807*^9}, {3.581257905889045*^9, 3.581257915671493*^9}, {
   3.5812579582253933`*^9, 3.581258016285577*^9}, {3.58125804725069*^9, 
   3.58125807827873*^9}, {3.5812582272199917`*^9, 3.581258503027114*^9}, {
   3.5812585494944353`*^9, 3.5812585568532867`*^9}, {3.5812586202609997`*^9, 
   3.581258620388369*^9}, {3.5812586663638973`*^9, 3.581258677585264*^9}, {
   3.581258724524333*^9, 3.581258730408498*^9}, {3.581258844723407*^9, 
   3.58125887310649*^9}, {3.581258924841276*^9, 3.581258961174138*^9}, {
   3.581258992857445*^9, 3.581259029903624*^9}, {3.581259074647087*^9, 
   3.5812591072668657`*^9}, {3.5812591426372213`*^9, 
   3.5812591450507383`*^9}, {3.581259181396778*^9, 3.581259181513996*^9}, {
   3.581259219837489*^9, 3.581259271592852*^9}, {3.581259448526546*^9, 
   3.581259481007943*^9}, {3.5812595477160797`*^9, 3.581259589490211*^9}, {
   3.5812596518096657`*^9, 3.5812596891404*^9}, {3.581259761045887*^9, 
   3.581259768693335*^9}, {3.581259809900445*^9, 3.5812598264496927`*^9}, {
   3.581259885568445*^9, 3.581259889639741*^9}, {3.5812599261246634`*^9, 
   3.581259926659635*^9}, {3.58126013800604*^9, 3.581260146929427*^9}, {
   3.5812601829290037`*^9, 3.581260292192834*^9}, {3.581260947643346*^9, 
   3.5812609596106462`*^9}, {3.581263566266234*^9, 3.581263573232663*^9}, {
   3.581332503624165*^9, 3.581332522801099*^9}, {3.581332557339148*^9, 
   3.581332572749958*^9}, {3.581332612431754*^9, 3.581332773568388*^9}, {
   3.5813328219613037`*^9, 3.581332980532728*^9}, {3.581333642221835*^9, 
   3.5813336496906977`*^9}, {3.581431425701377*^9, 3.581431484315411*^9}, {
   3.5816099744511147`*^9, 3.581609996432809*^9}, {3.5816100888174334`*^9, 
   3.581610089070348*^9}, {3.581610121856133*^9, 3.5816101219752083`*^9}, {
   3.5816101556235123`*^9, 3.581610155958583*^9}, {3.58161019999949*^9, 
   3.581610200326291*^9}, {3.58167385380202*^9, 3.5816738664729223`*^9}, {
   3.581673953056587*^9, 3.581673955198401*^9}, {3.581674136386159*^9, 
   3.58167413978489*^9}, {3.5816878802857723`*^9, 3.581687882282056*^9}, {
   3.581855466920761*^9, 3.581855642518496*^9}, 3.581855703984426*^9, {
   3.581855786596148*^9, 3.581855866184493*^9}, {3.581856641947521*^9, 
   3.581856656111063*^9}, {3.581856935157813*^9, 3.5818569445569887`*^9}, {
   3.581857006027275*^9, 3.58185703022123*^9}, {3.581857123808751*^9, 
   3.581857197094022*^9}, {3.581857274157933*^9, 3.58185731779801*^9}, {
   3.5819426776944942`*^9, 3.5819426803027163`*^9}, {3.581942844823635*^9, 
   3.581942847239024*^9}, {3.581944353890791*^9, 3.581944355752987*^9}, {
   3.58194917007652*^9, 3.581949190497978*^9}, {3.581949371385427*^9, 
   3.581949379305963*^9}, {3.58194946090628*^9, 3.5819495163196363`*^9}, {
   3.581949573938567*^9, 3.581949599944652*^9}, {3.581949729382389*^9, 
   3.581949777920323*^9}, {3.581949911516973*^9, 3.5819499136354733`*^9}, {
   3.582114084861143*^9, 3.582114107567999*^9}, {3.5821141736269503`*^9, 
   3.582114195015759*^9}, {3.582114226871348*^9, 3.582114230291051*^9}, {
   3.582122206520812*^9, 3.5821222903393497`*^9}, {3.582737411012321*^9, 
   3.582737427519579*^9}, 3.582737460319375*^9, {3.738969834417027*^9, 
   3.73896985266467*^9}, {3.738969939336814*^9, 3.738969945694798*^9}, {
   3.738970010391162*^9, 3.7389701517352753`*^9}, 3.738970262597353*^9, {
   3.7716147588094*^9, 3.771614770182129*^9}, {3.771615143165704*^9, 
   3.77161518979923*^9}, {3.771615236734894*^9, 3.7716153995456247`*^9}, {
   3.771615483489748*^9, 3.771615507641163*^9}, 3.7716155427082357`*^9, {
   3.771617311210657*^9, 3.771617350296811*^9}, {3.771621482253394*^9, 
   3.771621494135892*^9}, {3.771621537619253*^9, 3.771621571702239*^9}, {
   3.771621614008807*^9, 3.771621721740313*^9}, {3.771628016346718*^9, 
   3.7716280192162523`*^9}, {3.7723072642258472`*^9, 3.772307301955344*^9}, {
   3.7723073411513987`*^9, 3.772307342524802*^9}, {3.772315686631568*^9, 
   3.772315698883131*^9}, 3.772383382131242*^9},
 CellLabel->
  "In[1536]:=",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = Rational[1, 2] Pi, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`b$$], Rational[1, 2] Pi, "\[Beta]"}, 
      Rational[1, 2] (Pi - 2 
       ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
          Rational[-1, 2]]), Rational[1, 2] Pi}}, Typeset`size$$ = {
    540., {266., 274.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$433700$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = Rational[1, 2] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$433700$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a, \
$CellContext`\[Beta] -> $CellContext`b$$}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a, $CellContext`\[Beta] -> $CellContext`b$$}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a, $CellContext`\[Beta] -> $CellContext`b$$}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{0, 10}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{10, -10}, {0, 0}]]}}], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`b$$, Rational[1, 2] Pi, "\[Beta]"}, 
         Rational[1, 2] (Pi - 2 
          ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
             Rational[-1, 2]]), Rational[1, 2] Pi, AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{606., {321., 329.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771615331679254*^9, 3.771615344891724*^9}, {
   3.7716153780347137`*^9, 3.771615400090403*^9}, {3.771615509177734*^9, 
   3.771615543418737*^9}, {3.7716172995828247`*^9, 3.7716173506796227`*^9}, {
   3.7716214831682243`*^9, 3.771621494971486*^9}, {3.7716215390442142`*^9, 
   3.771621572221779*^9}, {3.771621614400532*^9, 3.771621722100748*^9}, 
   3.7716227504023237`*^9, 3.771624325348137*^9, 3.771628019700643*^9, 
   3.771767582590262*^9, 3.772292634159144*^9, 3.772307302959386*^9, 
   3.772307343090469*^9, 3.772315701729*^9, 3.772317606040985*^9, 
   3.772383239083726*^9, 3.772383287112486*^9, 3.7723833847505283`*^9, 
   3.772707657868333*^9, 3.7727077617577877`*^9, 3.772736240348085*^9, 
   3.772814214680852*^9, 3.772815062807529*^9, 3.772907162433331*^9},
 CellLabel->
  "Out[1536]=",ExpressionUUID->"df916eae-bdc8-41fb-b4f0-e3d0c973d08c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locally Maximally Dense", "Section",
 CellChangeTimes->{{3.581260403324943*^9, 
  3.581260416970201*^9}},ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-\
4479b3290d12"],

Cell["\<\
We have to determine for which values of \[Alpha] and \[Beta] the packing is \
locally maximally dense. To be locally maximally dense (Following Connelly, \
Rigid Circle and Sphere Packings, Page 51, Theorem 6.1)
\t1. The packing graph is rigid as a bar framework
\t2. Have a proper stress that is non-zero on every member\
\>", "Text",
 CellChangeTimes->{{3.581260429083231*^9, 3.5812604817289133`*^9}, {
   3.58126058732162*^9, 3.581260703477894*^9}, 3.581268014437296*^9, {
   3.5814318394491863`*^9, 
   3.5814318439886436`*^9}},ExpressionUUID->"587b476a-42fe-4314-b5c2-\
430cf24c7bba"],

Cell[CellGroupData[{

Cell["Rigid as bar framework", "Subsection",
 CellChangeTimes->{{3.581260714629937*^9, 
  3.5812607219085903`*^9}},ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-\
64a93ed30112"],

Cell["\<\
To be rigid as a bar framework we need to establish a rigid ordering of the \
circles. The numbering of the circles in the picture above is a rigid \
ordering of the packing disks -- See Lemma 6.2 in the Connelly paper on Rigid \
Sphere and Circle Packings. Note: The first is held fixed. \
\>", "Text",
 CellChangeTimes->{{3.581260731787973*^9, 3.5812607589713097`*^9}, {
   3.5812608183726873`*^9, 3.581260869033848*^9}, {3.5812610404711943`*^9, 
   3.581261082093595*^9}, {3.581261148357283*^9, 3.581261161924177*^9}, {
   3.581261657149426*^9, 3.5812617281290483`*^9}, {3.581431878214656*^9, 
   3.581431907148754*^9}, {3.581855928252591*^9, 3.581855931761685*^9}, {
   3.58185743689495*^9, 3.58185744076795*^9}, 3.582737698397448*^9, {
   3.7389702310916567`*^9, 
   3.7389702492335567`*^9}},ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-\
8abc959f8dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proper Stress", "Subsection",
 CellChangeTimes->{{3.5812611912691*^9, 
  3.5812611942035923`*^9}},ExpressionUUID->"31f2c795-42a7-4371-8bcc-\
f26ae4f35c51"],

Cell[TextData[{
 "Assign a scalar to each edge of the packing and collect those scalars in a \
vector called \[Omega]. We need to solve the linear algebra problem where the \
sum of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "i"], " "}], TraditionalForm]],ExpressionUUID->
  "265e01f6-c0c7-45d6-8073-68c578121df4"],
 "times the vector from vertex j is zero. "
}], "Text",
 CellChangeTimes->{{3.581261204171701*^9, 3.5812613230015697`*^9}, {
   3.581263036291751*^9, 3.581263094625066*^9}, {3.581268035307197*^9, 
   3.581268049563353*^9}, {3.581268089331314*^9, 3.581268099474876*^9}, {
   3.581857691357902*^9, 3.581857713432221*^9}, {3.581952177554405*^9, 
   3.581952182271495*^9}, 
   3.582227123258224*^9},ExpressionUUID->"dad468d2-f604-44ad-83e4-\
8184a0b76de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"10", ",", 
                  RowBox[{"-", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\"\<\[Omega]\>\"", ",", "i"}], "]"}], ",", "Large", 
               ",", "Red"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", 
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"Label", " ", "Edges", " ", "With", " ", "Stresses"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
       " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", " ", "\[Rule]", " ", "False"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7716156219304457`*^9, 3.7716156657824917`*^9}, {
   3.7716173605794477`*^9, 3.7716173832972507`*^9}, 3.771621836404307*^9, {
   3.771621868006282*^9, 3.771621889572094*^9}, {3.771628026520009*^9, 
   3.7716280285750093`*^9}, {3.772383421358515*^9, 3.772383425480397*^9}},
 CellLabel->
  "In[1537]:=",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = Rational[1, 2] Pi, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`b$$], Rational[1, 2] Pi, "\[Beta]"}, 
      Rational[1, 2] (Pi - 2 
       ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
          Rational[-1, 2]]), Rational[1, 2] Pi}}, Typeset`size$$ = {
    540., {266., 274.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$433725$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = Rational[1, 2] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$433725$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a, \
$CellContext`\[Beta] -> $CellContext`b$$}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a, $CellContext`\[Beta] -> $CellContext`b$$}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a, $CellContext`\[Beta] -> $CellContext`b$$}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{0, 10}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{10, -10}, {0, 0}]]}}, 
          Table[
           Text[
            Style[
             Subscript["\[Omega]", $CellContext`i], Large, Red], 
            ReplaceAll[(1/2) (Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]] + 
              Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 2]] + 
              Part[$CellContext`edges, $CellContext`i, 3] 
               Part[$CellContext`latticeVectors, 1] + 
              Part[$CellContext`edges, $CellContext`i, 4] 
               Part[$CellContext`latticeVectors, 
                 2]), {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}]], {$CellContext`i, 1, 
            Length[$CellContext`edges]}]], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`b$$, Rational[1, 2] Pi, "\[Beta]"}, 
         Rational[1, 2] (Pi - 2 
          ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
             Rational[-1, 2]]), Rational[1, 2] Pi, AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{606., {321., 329.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771615655908786*^9, 3.771615666273397*^9}, {
   3.771617374972508*^9, 3.7716173837753553`*^9}, 3.771621837663521*^9, {
   3.77162186934744*^9, 3.7716218908703737`*^9}, 3.771622750542183*^9, 
   3.771624325486567*^9, 3.771628029048644*^9, 3.771767582724186*^9, 
   3.772292634294381*^9, 3.772383428530035*^9, 3.7727077679088917`*^9, 
   3.7728142149571857`*^9, 3.772815062906049*^9, 3.772907162527513*^9},
 CellLabel->
  "Out[1537]=",ExpressionUUID->"40e29f2e-811a-4915-901c-f8c808e8befe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equations", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"Start", " ", "with", " ", "the", " ", "zero", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Omega]", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "a", " ", "vector", " ", "of", " ", 
    SubscriptBox["\[Omega]", "i"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "centers", "]"}]}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"(*", 
    RowBox[{"i", " ", "is", " ", "the", " ", "center", " ", "number"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
     RowBox[{"j", "++"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"j", " ", "is", " ", "the", " ", "edge", " ", "number"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "starting", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "ending", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"centers", "[", 
               RowBox[{"[", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], 
             "+", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"stresses", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "equations", "]"}], "\[Equal]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], ",", "w"}], "]"}], "]"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.5812631262417994`*^9, 3.5812631393932133`*^9}, {
   3.5812632927362833`*^9, 3.581263433806449*^9}, {3.5812635111903543`*^9, 
   3.581263539604899*^9}, {3.581263643734518*^9, 3.581263818173723*^9}, {
   3.581263893704818*^9, 3.581263906457028*^9}, {3.581263976775078*^9, 
   3.581264003472631*^9}, {3.58126411114087*^9, 3.5812641340833797`*^9}, {
   3.58126426449689*^9, 3.581264271542542*^9}, {3.581264376993701*^9, 
   3.5812643859040203`*^9}, {3.581265058156464*^9, 3.581265086954626*^9}, {
   3.581265130320315*^9, 3.581265189671144*^9}, 3.581265270566058*^9, {
   3.581265302363521*^9, 3.581265302850205*^9}, {3.5812653512370853`*^9, 
   3.5812653665051527`*^9}, {3.581265742732229*^9, 3.581265792107946*^9}, {
   3.581266490644244*^9, 3.5812665010853853`*^9}, {3.5812665623037663`*^9, 
   3.581266614361026*^9}, 3.5812666979728537`*^9, {3.581266853790249*^9, 
   3.581266950054287*^9}, {3.581267109579549*^9, 3.581267113595233*^9}, {
   3.581856054653139*^9, 3.581856144183853*^9}},
 CellLabel->
  "In[1538]:=",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   1541,207,25397637502896749269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.5812665015830107`*^9, {3.581266609340005*^9, 3.581266614687846*^9}, 
   3.581266699745332*^9, 3.581266951219722*^9, 3.581267114727116*^9, 
   3.581332364749836*^9, 3.581413745882251*^9, 3.581604814094523*^9, 
   3.581629093700818*^9, 3.581687794839203*^9, 3.58185614520014*^9, 
   3.5818576472565737`*^9, {3.5819422597185307`*^9, 3.581942262451277*^9}, 
   3.581950540664604*^9, 3.582114208599042*^9, 3.582114271275325*^9, 
   3.582122349679476*^9, 3.58221834006551*^9, 3.58222709515487*^9, 
   3.582297408729498*^9, 3.5823643731907873`*^9, 3.582367880131062*^9, 
   3.58236979732628*^9, 3.582561955606606*^9, 3.5827371302077837`*^9, 
   3.7389703520699177`*^9, 3.739634270638833*^9, 3.771615696337091*^9, 
   3.7716173921268387`*^9, 3.7716227511245317`*^9, 3.7716243260625772`*^9, 
   3.771767583554688*^9, 3.772292635059071*^9, 3.772383442741848*^9, 
   3.77270777561585*^9, 3.772814218019412*^9, 3.772815065869845*^9, 
   3.772907165471224*^9},
 CellLabel->
  "During evaluation of \
In[1538]:=",ExpressionUUID->"1d2f1a60-7e4d-4a94-8c1d-b0a4bafc4dab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Beta]", "]"}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], "+", 
           RowBox[{
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}]}]]}]}], ")"}], 
         " ", 
         SubscriptBox["\[Omega]", "3"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
        ")"}]}], ")"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "4"], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}]}]]}]}], ")"}], 
         " ", 
         SubscriptBox["\[Omega]", "3"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
        ")"}]}], ")"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "5"], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}], "+", 
           RowBox[{
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}]}]]}]}], ")"}], 
         " ", 
         SubscriptBox["\[Omega]", "3"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
        ")"}]}], ")"}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "6"], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Beta]", "]"}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Beta]", "]"}], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], "+", 
           RowBox[{
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "5"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "5"}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}]}]]}]}], ")"}], 
         " ", 
         SubscriptBox["\[Omega]", "3"]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Beta]"}], "]"}]}]]]}], ")"}]}]}]]}], 
        ")"}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7396342706707497`*^9, 3.771615696582738*^9, 
  3.771617392249407*^9, 3.77162275126501*^9, 3.771624326199301*^9, 
  3.771767583702835*^9, 3.772292635192638*^9, 3.772383443721725*^9, 
  3.772707776569787*^9, 3.772814218887911*^9, 3.772815066734207*^9, 
  3.77290716641313*^9},
 CellLabel->
  "Out[1541]=",ExpressionUUID->"266c4c9f-5291-4222-9507-70644008b85b"]
}, Open  ]],

Cell[TextData[{
 "Notice that stress ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "d00378a1-360b-470a-acfd-f7c34275f61d"],
 " is free."
}], "Text",
 CellChangeTimes->{{3.581942469138938*^9, 3.581942568260255*^9}, {
  3.5821224210891247`*^9, 3.5821224318252153`*^9}, {3.582218353349749*^9, 
  3.5822183541981173`*^9}, {3.738970364574954*^9, 3.738970375318268*^9}, {
  3.7716160907649403`*^9, 3.771616090925685*^9}, {3.771617427017519*^9, 
  3.771617427180217*^9}},ExpressionUUID->"dab345d4-317d-4689-8b7d-\
c5f918423d0f"],

Cell[BoxData[
 RowBox[{"yuck", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"equations", " ", "/.", " ", "stresses"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"check", " ", "the", " ", "solutions"}], ",", " ", 
    RowBox[{
    "Should", " ", "output", " ", "all", " ", "zeros", " ", "but", " ", "I", 
     " ", 
     RowBox[{"don", "'"}], "t", " ", "think", " ", "Mathematica", " ", "can", 
     " ", "simplify", " ", "it"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.581266970558997*^9, 3.5812670086486597`*^9}, {
  3.5812670428585978`*^9, 3.581267107111579*^9}, {3.58126782408628*^9, 
  3.581267830337071*^9}, {3.771615712767864*^9, 3.7716157178887*^9}, {
  3.771624832402663*^9, 3.77162484486832*^9}, {3.771625069500388*^9, 
  3.771625108040539*^9}, {3.771625188009901*^9, 3.771625188461938*^9}, {
  3.771627084687838*^9, 3.771627086697544*^9}, {3.771627137607338*^9, 
  3.7716271381130447`*^9}, {3.7716273773006067`*^9, 3.7716273909517603`*^9}},
 CellLabel->
  "In[1542]:=",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"yuck", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "3"], "\[Rule]", " ", "1"}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", 
       RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716270898778353`*^9, 3.771627100106181*^9}, {
  3.7716271494801493`*^9, 3.7716271956636047`*^9}, {3.771627309304491*^9, 
  3.7716273644223213`*^9}, {3.771627430852413*^9, 3.7716274393317947`*^9}, {
  3.771627554739901*^9, 3.771627593479425*^9}, {3.772383495770031*^9, 
  3.772383503851788*^9}},
 CellLabel->
  "In[1543]:=",ExpressionUUID->"079eff23-d452-4b8a-b102-2477f53b339f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716275766061087`*^9, 3.771627594127445*^9}, 
   3.77176758953078*^9, 3.772292641062665*^9, 3.772383506704927*^9, 
   3.77270778207425*^9, 3.772814219156062*^9, 3.772815067073338*^9, 
   3.77290716658184*^9},
 CellLabel->
  "Out[1543]=",ExpressionUUID->"232b0647-e9ae-4eef-8a9f-c50ce42666b9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"guts", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "i"], "/.", "stresses"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "first", " ", "list", " ", "all", " ", "of", " ", "the", " ", 
          "right", " ", "hand", " ", "sides", " ", "of", " ", "all", " ", 
          "the", " ", "stresses"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], "/.", 
      RowBox[{
       SubscriptBox["\[Omega]", "3"], "\[Rule]", "1"}]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7716167421291027`*^9, 3.7716167736440973`*^9}, {
  3.771624666657902*^9, 3.77162466689053*^9}, {3.7727392153137083`*^9, 
  3.772739215393301*^9}},
 CellLabel->
  "In[1544]:=",ExpressionUUID->"601094d1-5f09-41a1-a4c2-b934a0a6ca3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"guts", ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
      RowBox[{"\[Alpha]", ">", "\[Beta]"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771616758899276*^9, 3.771616778140399*^9}, {
   3.771624700169651*^9, 3.771624723760776*^9}, {3.77162586895288*^9, 
   3.7716258722505913`*^9}, {3.772739225008906*^9, 3.772739247824945*^9}, 
   3.7727396326222687`*^9, {3.772814783663823*^9, 3.7728147924292994`*^9}, 
   3.7728150344307756`*^9},
 CellLabel->
  "In[1545]:=",ExpressionUUID->"10c904a2-b9e6-464f-ad17-2b2796a34730"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxNxwss1AEAx/FLu5iGJiGs898SdSvV0Vmp82h0UnItSpHrZHlc3hdpc9NJ
lpTS6+a1rpJ2EuXiItWUu+0YR7XmMYfqmLqbZ4es2tr9/r/tu98+xKkkzmkT
CoVy4G//XrdEr0uOnmZR/m+ewWd3kbwi7qnGnQs79Wy11pHMrvJM4/NgSQjL
Mz4WDq/kNPES4VbfrLdhmbAhzy6ZdQOuqA27lfwEfpaassftHUxnDuQN98HW
mjH/r1NwTGFg5bjFjNFEt1AocIWDFiI+B7HggQ2XVMQxuJ/J8fJNgQOGDa7f
L8MORZMN1+7DEbRCuVAOU+sFkem9sOOgt+jnD7hMJyHqqLNGF5iciBTQYM38
CysRE5ZMR0WXhMJd+aMe9AQ4jrJSaH4R5p/PjZsohfu/iJW2DfBLdVFNuwpe
VPW4Z3+Da6RNbueWYMVVfWuG/ZzRIWbL++a3wb5nZIkKNlyulJfe5cGxq6L9
67JhsX6If+gm7KWu3zEphf3uuQj622AZd+ywchC+bXXw8dIsrAkrEsotfxl9
p4I2l+kGN3aEjub4wHt/9yYVRMC7PjBy1qbD5ekM6uQVOGG9aGPHQ/hBU0ab
vgXep/UbEX+Ew+25lYE6uHuzc6+3qcHo4J0OnVUkKwJsFNZm8OuTZs1akqXF
ekmJOZw/8yZtwgLe3cJdXWoDNyqPW5iugT0+HTFNJXmTjr0QaAvbE9tHpuzg
KZHJ8/2O8NniRamM5PGy2UeEEzwkGxfPkdypVedK1sFBM6oLljT4/bJ2QRbJ
zQ6v4kOcYaZrQ4yc5HpGbZQLAW/xqT56neTqYAlngeQ/oRhFVA==
       "]]},
     Annotation[#, "Charting`Private`Tag$433776#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVznk4lAkcB3BppbKiIueDaWmKjo3C7uJLtiyJKJTtIB06RNHkaLd5NFKR
ZCUkR6xqU8kxMiodcqeMo4OxM2PmDatI874zb2zPvvvH7/k+nz++z/fH2hXp
v0ddTU1tA3P/59hXm3tRIQqs/RD8MC6xFV/sIjxfMWZHfMq5dK4VM/bfkawI
VaCxWfiyPKMVpl3fzxtj/NRb7CG/1grP66ujI8IUiHLUOrTuWSuKfbH6wF4F
rM7nXhme3oagQv/asEMKaPQ89q7itaHeLe5JYKwCp6tKOSG8dtBJBlHIUOAO
X23GstIOFNwNvBT1F9OPvX/uufcrlB894rL4qQJLkmJ83zt1wsZBlCTtU6CK
jNwQ4CTEPMmwu/yzApabt1YZLerC7lSPwhFtEo2DYQfPmnWD1cnlctgk8hYa
BuVo98BrMvi1F0isThfc2DbUA9Gi0+2srSR+d9eb1O7sRb+Dv6PbERKVZZZC
09LXWCel2e/PkEhfWlPHin4D47SJ6gvXSFT8sLI+YMNbBJunCrgCEiKq3lld
/x00KjjbY7pJzOc+uOg4/A4mA068jx9IXDByyd9U3YerY8WsexoUvp39Wm8i
sh9n1bdt55hTqFgVWO1vL4LkS5UOz4HCd866o3X/iFCs2BGS6Ufh5vNIK7ey
AbxKlq2yOUihuCnlmd2ev7FfTYs7+xSFY9HuenM1xYiIT9w/mkdBeo6QloeI
0f82t2VBNYVqk30VKRVi1AjTbje1Uyh6X1RoME2CqfauFQkEBeMbRrXhmyW4
XVa7+PhXZl9TVxBWKEHz+fH6Y4ZK6KQu1Oocl8B35vS+LyuVyKg8XtLrLIVb
OP9Qs6cST0J3xSlOSZHfIsjLDlOixdQ10axDir26Ie73EpRwP9GTkz13ELnj
4oiNfyhxS2VUY+w/CEdhhf1EmRIJE0tt12YNYk2OFae/QQkf/9JMdvcg+KHD
m1oGlHgqiq/bqS9Dlo7Pja+UEn0L9S1Pb5RBEpjGFcxRwXE04YD4jAyXC8yV
sYtVcLX2+2TTIMP9F36yk64qsDPoJ220DD//2x15NliFoJ0v38yyleOnRruT
RjEqTI0vZe/YJ0d+jJ3GRIoKjXVe9ocvy3HQkrfkxZ8q2Fr5pFe3yFFSe6xh
/KEKLl1zXD9QcvwytGYwt0eFRx9LtpSwCAQZhhZ6jKlwkqtatNyHQOcyi24n
TRrRfUK5FoeA94/GHdcZc4w0bAWMm9fpNc+bSSNbUrQ9/DiBRztnPhhi/C7A
ZFNDLIGyi+PFmbNpZJXr1MQnEEgmH0ePatNYYaYdJuEScH4YOj9PjwZ/+OX6
rBQC91t+1dbUp7HEMibJNZXAqt4AzaOMySle/ghj6zHPSY8FNEJbRg+7pBEw
ZNkOfjagMSu594wsncBnnnrlehMadc4WRdZZBA5fnCrjM7avudQpZDxylSpl
mTL/NcVK4i8TEPNHcpWMRSPJBa3ZBDqGhInFZjS0Btoyw68Q8CLbT8wxp7GS
f/exTh6B59OaOHGMf7s6rZ3P+IFx3QFfCxrJ3WPcb/IJOLCrdwsYd7qlWt9i
XGF3d4cVi4YBnVXpV0BguevNLemM587SNVUxvuld7D/JeAtXGZZfSOA/G7CA
Bw==
       "]]},
     Annotation[#, "Charting`Private`Tag$433776#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
XJJSGPB/4G+ZJw==
       "]]},
     Annotation[#, "Charting`Private`Tag$433776#3"]& ], 
    TagBox[
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/f6f9saChC/2DGDwwT58QdDO5BwEf79j5cGwCgT/
Z6t4gf0kBH/++rCpBasQ/A1FhXYahxB8bfO7rY9uI/hCD186P/2M4Kf0uC94
xfsVzle82NBQpo7ge/2Ouu5lj+DfVWs7oxiJ4N8xD7JwLETw3R79VH/egeBL
9X3a2r8IwY+S79nVsAvBZ91UFltyBcGXvmfT8u4tgj/3/WLFjazf4PxOppjY
MnkE/+GvLfwt5gj+4i9xCVMCEfwL7U9MtLMR/EwG7gauZgQ/t6op880cBP/O
zVknxbYi+Nsv9a09fgbB/3Pmsn71MwR/7ZqdGuX/EPwTvR/2l0p8h/P9OZhv
/zJE8B0ztuWc8ETw553cNWdGMoKfJpDgvLEawZ/14UFuwGQE3+LSJrNPaxB8
p5mqZXeOIPjbEl8Gn7yH4E/j91vx7xuC/zCsr2EX3w84f/p8+e8VGgj+jrOB
T+odEHyXv1fyO6MQfOtjxvWSJQj+vBJj1k/dCH62Sovm2aUI/pKdpUc+7EXw
PV44PZ51FcEPl0hc4P4ewb+oq3DFhv0nnG+7N1F4jgiCv9JncdBvRQQfAC9+
INk=
       "]]},
     Annotation[#, "Charting`Private`Tag$433776#4"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Beta]", HoldForm], TraditionalForm], None},
  AxesOrigin->
   NCache[{Rational[1, 2] (Pi - 2 
      ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
         Rational[-1, 2]]), 0}, {1.2735449654736897`, 0}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[1, 2] (Pi - 2 
       ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
          Rational[-1, 2]]), Rational[1, 2] Pi}, {0., 1.}}, {{
    1.2735449654736897`, 1.5707963267948966`}, {0., 1.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.772815042849893*^9, 3.772815073634736*^9}, 
   3.7729071715184937`*^9},
 CellLabel->
  "Out[1545]=",ExpressionUUID->"6a04694c-4722-4394-ae8c-988d7334902c"]
}, Open  ]],

Cell["Stresses are positive, lets gooooooooooooooo", "Text",
 CellChangeTimes->{{3.7728150781671*^9, 
  3.7728150888592453`*^9}},ExpressionUUID->"b28d66d7-6ed9-4ea5-a16c-\
e112e7b35f67"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moduli Space Of Locally Maximally Dense Packings", "Section",
 CellChangeTimes->{{3.581268199842701*^9, 3.5812682055518713`*^9}, {
  3.581268252471168*^9, 
  3.581268267583231*^9}},ExpressionUUID->"1367c9d9-3697-4765-9fd2-\
49fbdfafea09"],

Cell["\<\
Determine the Torus Angle and Ratio for the packings that are locally \
maximally dense. \
\>", "Text",
 CellChangeTimes->{{3.5812682787135897`*^9, 3.581268350581593*^9}, {
   3.581333395348236*^9, 3.581333608702343*^9}, {3.5813336764078617`*^9, 
   3.581333687180387*^9}, {3.581333851570097*^9, 3.581333902825006*^9}, {
   3.5814180211148233`*^9, 3.581418038876515*^9}, 
   3.581943351425103*^9},ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-\
5dfd369c5feb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusAngleFromVectors", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"VectorAngle", "[", 
     RowBox[{
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Beta]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "\[LessEqual]", 
       "\[Beta]", "\[LessEqual]", 
       RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.58133303742656*^9, 3.581333043881184*^9}, {
  3.5813331557765102`*^9, 3.58133317227901*^9}, {3.581333205989634*^9, 
  3.581333234053957*^9}, {3.581333325533258*^9, 3.5813333760116377`*^9}, {
  3.581606424512455*^9, 3.5816064282642384`*^9}, {3.582114890721849*^9, 
  3.5821148908686647`*^9}, {3.582214278216044*^9, 3.582214279067687*^9}, {
  3.5837630857623653`*^9, 3.583763115245988*^9}, {3.771616195483326*^9, 
  3.7716162056791077`*^9}, {3.771625759558325*^9, 3.7716257619713907`*^9}, {
  3.7723835563081503`*^9, 3.772383598209445*^9}, {3.772383633558559*^9, 
  3.772383642829235*^9}},
 CellLabel->
  "In[1546]:=",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],

Cell[BoxData[
 RowBox[{"ArcCos", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"Conjugate", "[", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}]]}]], "]"}], " ", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}], 
   SqrtBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}], "+", 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox["2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", "\[Beta]", "]"}], "2"]}]}]], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Beta]", "]"}], "2"]}]}]]}], ")"}]}]}], 
     "]"}]]], "]"}]], "Output",
 CellChangeTimes->{
  3.5823033248738623`*^9, 3.582740215715782*^9, 3.583353102654016*^9, 
   3.5836983098533697`*^9, 3.583763082705551*^9, 3.583763120942039*^9, 
   3.583763260112565*^9, 3.590759437258623*^9, 3.590760010136773*^9, 
   3.5908356303709383`*^9, 3.590924440998415*^9, 3.591617612533634*^9, 
   3.591634603590858*^9, 3.591648070062373*^9, 3.5919543624394827`*^9, 
   3.5919545180066757`*^9, 3.592837657457862*^9, 3.5928382693275557`*^9, 
   3.592841356296074*^9, 3.593124591087276*^9, 3.686070282027134*^9, 
   3.686931681714973*^9, 3.771591847978251*^9, 3.771616215624236*^9, 
   3.77162420566223*^9, 3.771624569457315*^9, 3.771625765942883*^9, 
   3.771767601315835*^9, 3.772292654401245*^9, {3.772383625474153*^9, 
   3.772383640031701*^9}, 3.772383690876052*^9, 3.7727077289623137`*^9, 
   3.7727078344197607`*^9, 3.772814264672089*^9, 3.772815118359001*^9, 
   3.7729072170913897`*^9},
 CellLabel->
  "Out[1546]=",ExpressionUUID->"a3e6fea7-23ea-459e-9e33-12eaa6be6c24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusRatio", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "/", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Beta]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "\[LessEqual]", 
       "\[Beta]", "\[LessEqual]", 
       RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581333928283676*^9, 3.5813339332161627`*^9}, {
   3.581334020790724*^9, 3.581334024038533*^9}, {3.5814137912868853`*^9, 
   3.581413793610195*^9}, {3.581413914891388*^9, 3.581413969106378*^9}, {
   3.581414006658498*^9, 3.5814140098857813`*^9}, {3.581417178533601*^9, 
   3.581417182493422*^9}, {3.581418120652129*^9, 3.58141812244401*^9}, {
   3.5821149063355827`*^9, 3.5821149065242977`*^9}, {3.582214283944845*^9, 
   3.582214285342742*^9}, {3.583763127000839*^9, 3.5837631367212667`*^9}, 
   3.590836445225319*^9, 3.590836673722036*^9, 3.771616430596385*^9, {
   3.771625658093115*^9, 3.7716256605829687`*^9}, 3.772383735106063*^9},
 CellLabel->
  "In[1547]:=",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],

Cell[BoxData[
 SqrtBox[
  RowBox[{"Abs", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}], "+", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox["2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Csc", "[", "\[Beta]", "]"}], "2"]}]}]], "-", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"Csc", "[", "\[Beta]", "]"}], "2"]}]}]]}], ")"}]}]}], 
   "]"}]]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVxU0og2EcAPBtlk1E21vGuCxcZ/MRRXhCtBptYlqaWEZzcCCmaBEzESUf
pQ1xQIT5asmYsdmLOUhhtIOcnu1Am4Ov8n8Ov36i5g5lC5PBYGQDWqUrZ25j
9LbSLyObrIZqsnWp4IUFp9b4wuTm405FFCyc/unVwP1yVm0jXKgr9JITfacx
IzDjfSKPvYMRHW7r5cASrSJXBWuTtGNkj+aMZ4bjbSIHufLH0z4ORw9L2jdg
Km5RvAfnVP0FzDaM/JE/0f4uRkcVHFvDHkazM8r6Plgfe9JKjlweDtw7MfKu
r9Fkuf/z4Aveqj9P+Ya70lT55ClpJpVxhpFZ/TLa48Io/YP/YITnn+71Jtj5
qS67vsCIK6YnyRbuJs8HX/2yNSo3RjerdczF7iCas49bSg1B5LoTzDiSQ+jG
NThLw4FNb5MPFg4VTZKnEpYFtzD7MUtHCUNoXep3UykhtMNbKC6BZUG7MQAb
gpk9/NQQGkhMeCU/p3X6i+F/mu/VRA==
  "],
 CellLabel->
  "Out[1547]=",ExpressionUUID->"09fd7610-0768-4e16-a7a9-3ab1a452c7a8"]
}, Open  ]],

Cell["\<\
Now plot the region of the moduli space that is covered by \
(r,theta)=(torusRatio,torusAngle). The right boundary is in the region, the \
others are not.\
\>", "Text",
 CellChangeTimes->{{3.5814140902111692`*^9, 3.581414154771768*^9}, {
   3.581417869513275*^9, 3.5814179087877693`*^9}, 3.5819442751664667`*^9, 
   3.581952458180634*^9, {3.58195324790655*^9, 3.581953260663254*^9}, 
   3.582222917826333*^9, {3.582740615417358*^9, 
   3.582740626390436*^9}},ExpressionUUID->"7fea073f-4678-488f-94be-\
79aeb56d8b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".5", ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"(", 
          RowBox[{"torusRatio", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"(", 
          RowBox[{"torusRatio", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Least", " ", "dense", " ", "globally", " ", "maximally", " ", "dense", 
      " ", "point"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Point", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"torusRatio", "*", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
            "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{"(", 
             RowBox[{"torusRatio", "*", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
            "]"}]}], "}"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", "2.4907302"}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", "2.4907302"}]}], "}"}]}], "]"}]}], 
      "}"}], "\[IndentingNewLine]", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.581415831271719*^9, 3.581415978032723*^9}, {
   3.58141612812768*^9, 3.581416251087431*^9}, {3.5814163536961203`*^9, 
   3.581416442716133*^9}, {3.581416480954212*^9, 3.581416483177804*^9}, {
   3.5814165146738863`*^9, 3.581416565902112*^9}, {3.581416608288938*^9, 
   3.5814166596471777`*^9}, {3.5814168167885647`*^9, 3.581417153958934*^9}, {
   3.581417202245771*^9, 3.581417213509737*^9}, {3.581417400105816*^9, 
   3.581417408207815*^9}, {3.58141746709744*^9, 3.5814175008866453`*^9}, {
   3.581417557569965*^9, 3.581417612638392*^9}, {3.581417671918985*^9, 
   3.581417831941291*^9}, {3.581417963968446*^9, 3.581417981960126*^9}, {
   3.5814180770100727`*^9, 3.581418078736156*^9}, {3.581418154813571*^9, 
   3.581418198197053*^9}, {3.581418231380889*^9, 3.581418233404674*^9}, {
   3.5814228339713078`*^9, 3.581422878811762*^9}, {3.581422916120751*^9, 
   3.581422920863715*^9}, {3.581423093095364*^9, 3.5814231218921137`*^9}, {
   3.5814325481543407`*^9, 3.581432568807173*^9}, {3.58143260450275*^9, 
   3.581432634829975*^9}, {3.581606579957893*^9, 3.581606608420135*^9}, {
   3.581606987915503*^9, 3.581606998825101*^9}, {3.5816074940013037`*^9, 
   3.581607502096019*^9}, {3.5816089617270803`*^9, 3.581608961944695*^9}, {
   3.581610590770281*^9, 3.5816106180632963`*^9}, {3.581610681115829*^9, 
   3.581610701075707*^9}, {3.581610737934224*^9, 3.581610756661036*^9}, {
   3.581610842392229*^9, 3.581610866051654*^9}, {3.581610899571859*^9, 
   3.581610901443101*^9}, {3.581628476144258*^9, 3.581628557405979*^9}, {
   3.5816288727085114`*^9, 3.5816289082821913`*^9}, {3.581629178822418*^9, 
   3.581629182837798*^9}, {3.581629414916697*^9, 3.581629440685017*^9}, {
   3.581629482704157*^9, 3.581629535764595*^9}, {3.581673461804196*^9, 
   3.581673549905184*^9}, {3.581673641406663*^9, 3.5816736439745283`*^9}, {
   3.5816736910543633`*^9, 3.581673692799611*^9}, {3.581673723190359*^9, 
   3.5816738188450117`*^9}, {3.581687950683776*^9, 3.5816879567545223`*^9}, {
   3.581688016649939*^9, 3.5816880272652283`*^9}, {3.5819443936836443`*^9, 
   3.5819445342161207`*^9}, {3.581950949672516*^9, 3.581950957971415*^9}, {
   3.581950988486538*^9, 3.581950995522575*^9}, {3.5819531797520447`*^9, 
   3.5819532355691442`*^9}, {3.58221429143818*^9, 3.582214323641893*^9}, {
   3.5822143838841248`*^9, 3.582214397599576*^9}, {3.5822144308149233`*^9, 
   3.582214468851671*^9}, {3.582214521826295*^9, 3.582214548417429*^9}, {
   3.582214625108366*^9, 3.582214653749571*^9}, {3.582214715107759*^9, 
   3.582214723919776*^9}, {3.582214962155978*^9, 3.582214985349832*^9}, {
   3.5822151321151953`*^9, 3.582215160198626*^9}, {3.582215328952002*^9, 
   3.5822153367977*^9}, {3.5822154632111673`*^9, 3.582215466952477*^9}, {
   3.582215958667633*^9, 3.582215958826397*^9}, {3.582216169371503*^9, 
   3.582216225367741*^9}, {3.582216696200515*^9, 3.582216709707431*^9}, {
   3.5822866723292437`*^9, 3.5822866925090446`*^9}, {3.582286752029377*^9, 
   3.582286752908947*^9}, {3.582287158898551*^9, 3.5822871632335443`*^9}, {
   3.582287337500922*^9, 3.582287358257596*^9}, {3.582301692611936*^9, 
   3.582301712401127*^9}, {3.582301784817443*^9, 3.582301789917963*^9}, {
   3.582302650469707*^9, 3.582302655265546*^9}, {3.5823027058646097`*^9, 
   3.5823027249979687`*^9}, {3.5823029530486193`*^9, 3.582303020216475*^9}, {
   3.582303064333783*^9, 3.58230307483996*^9}, {3.5823031290716467`*^9, 
   3.582303135836779*^9}, {3.583353031333394*^9, 3.583353124551704*^9}, 
   3.5837631490547533`*^9, {3.583763272239708*^9, 3.583763274307045*^9}, {
   3.5837634289930067`*^9, 3.583763431208726*^9}, {3.7716164575815573`*^9, 
   3.771616478135851*^9}, {3.7716166852611103`*^9, 3.771616698019866*^9}, {
   3.7716170003808947`*^9, 3.771617001546206*^9}, {3.771617152902998*^9, 
   3.771617154084714*^9}, {3.771625225156486*^9, 3.771625253346716*^9}, {
   3.7716256656214123`*^9, 3.771625668004211*^9}, {3.771626607610469*^9, 
   3.7716266619078503`*^9}, {3.7727078210683613`*^9, 3.7727078304458838`*^9}, 
   3.77281451852429*^9},
 CellLabel->
  "In[1548]:=",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}], LineBox[{{0, -1}, {0, 2}}], 
   LineBox[{{-1.1, 0}, {1.1, 0}}], 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{-0.5, Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
        2}}, {{-0.5, 0.8660254037844386}, {-0.5, 2}}]]}, 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{0.5, Rational[1, 2] 3^Rational[1, 2]}, {0.5, 2}}, {{0.5, 
       0.8660254037844386}, {0.5, 2}}]]}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$438057#1"]& ]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-1.43391222204217, 1.218632178304939}]}}]], "Output",
 CellChangeTimes->{{3.7716266149462214`*^9, 3.771626632038991*^9}, 
   3.77162666291777*^9, 3.771767601712225*^9, 3.772292654962428*^9, 
   3.772383747514575*^9, 3.772707850198339*^9, 3.772814265587261*^9, 
   3.772814520710576*^9, 3.7728151205641747`*^9, 3.772907219690159*^9},
 CellLabel->
  "Out[1548]=",ExpressionUUID->"9a788bda-b7ae-4605-88f3-5b4791ff8008"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Density Of Packings ", "Section",
 CellChangeTimes->{{3.5814349606441174`*^9, 3.581434966706005*^9}, {
  3.581443652345149*^9, 
  3.58144365457318*^9}},ExpressionUUID->"0778b274-df47-40d0-990e-\
9f18ab4dee0d"],

Cell["\<\
Here we analyze the density of the locally maximally dense packings and \
explore the density.\
\>", "Text",
 CellChangeTimes->{{3.5814349743941193`*^9, 
  3.5814350022015533`*^9}},ExpressionUUID->"e2b21120-6780-408f-b4b4-\
7bd65fa10119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusDensity", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "^", "2"}]}], "+", 
       RowBox[{"2", "*", "Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}], ")"}], "^",
          "2"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}], ")"}]}], " ", 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Beta]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "\[LessEqual]", 
       "\[Beta]", "\[LessEqual]", 
       RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581435007166294*^9, 3.581435026699298*^9}, {
   3.5814350629183598`*^9, 3.581435137463068*^9}, {3.581441446598172*^9, 
   3.5814414948170977`*^9}, {3.5814421896974163`*^9, 3.5814422295017653`*^9}, 
   3.581442694940857*^9, {3.581604837617858*^9, 3.581604867599731*^9}, {
   3.581607908671111*^9, 3.581607909369944*^9}, {3.581944549930921*^9, 
   3.5819445543944483`*^9}, {3.582114922893406*^9, 3.582114923036167*^9}, {
   3.5822165846144447`*^9, 3.582216585540084*^9}, {3.582303334411914*^9, 
   3.582303334736128*^9}, {3.583763359343549*^9, 3.583763364560102*^9}, 
   3.771617083708983*^9, {3.771617193070365*^9, 3.771617222420538*^9}, {
   3.771626748724434*^9, 3.771626750958971*^9}, 3.772906965439026*^9},
 CellLabel->
  "In[1549]:=",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"7", "-", 
      RowBox[{"4", " ", 
       SqrtBox["2"]}]}], ")"}], " ", "\[Pi]"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"4", " ", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"]}], "+", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Csc", "[", "\[Beta]", "]"}], "2"]}]}]], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Beta]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"Csc", "[", "\[Beta]", "]"}], "2"]}]}]]}], ")"}]}]}], 
        "]"}], "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Conjugate", "[", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Beta]"}], "]"}]}], ")"}]}]]}]], "]"}], 
         "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Beta]", "]"}], "2"]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.581435174638554*^9, 3.5814360377394533`*^9, 3.5814414525442343`*^9, {
   3.581442212853862*^9, 3.5814422309332247`*^9}, 3.5814426963111486`*^9, {
   3.581604816468317*^9, 3.581604842276881*^9}, 3.581604949571162*^9, 
   3.581607510569717*^9, 3.5816079104502077`*^9, 3.58160937151543*^9, 
   3.581687886583846*^9, {3.581944542797326*^9, 3.581944555361349*^9}, 
   3.5819510064190474`*^9, 3.5819532664168997`*^9, 3.582114219746011*^9, 
   3.5821149243109617`*^9, {3.582216584034459*^9, 3.582216587666834*^9}, 
   3.5822232014315166`*^9, 3.582286936524232*^9, 3.582302582175164*^9, 
   3.582303335778859*^9, 3.582740217258*^9, {3.583763341462748*^9, 
   3.5837633660660152`*^9}, 3.590759438761785*^9, 3.590835632743123*^9, 
   3.590836699525751*^9, 3.590924442373547*^9, 3.5916176659788513`*^9, 
   3.591634628349544*^9, 3.591648115760672*^9, 3.591954372553525*^9, 
   3.592837678747449*^9, 3.592838271356739*^9, 3.592841358448024*^9, 
   3.59312459321947*^9, 3.686070283738555*^9, 3.686931689066928*^9, 
   3.771591849711658*^9, 3.7716170854992456`*^9, 3.7716242092109537`*^9, 
   3.7716245711148777`*^9, 3.771626377492437*^9, 3.7716267524561453`*^9, 
   3.7717676033879337`*^9, 3.7722926574398518`*^9, 3.772814306836739*^9, 
   3.772815159320011*^9, 3.772907250834399*^9},
 CellLabel->
  "Out[1549]=",ExpressionUUID->"0377bfbc-a9c9-45fe-9a4e-6df54f758a09"]
}, Open  ]],

Cell["Plot the density over the parameter space", "Text",
 CellChangeTimes->{{3.581609262745317*^9, 
  3.581609279281209*^9}},ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-\
e5f2bb2c8c0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"torusDensity", ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581607973838263*^9, 3.581608022458598*^9}, {
   3.5816080842911158`*^9, 3.58160808861963*^9}, {3.58160813949725*^9, 
   3.581608146824136*^9}, {3.5816089073150682`*^9, 3.581608922003821*^9}, {
   3.581608970988791*^9, 3.5816089717227383`*^9}, {3.581944701349125*^9, 
   3.58194471749083*^9}, {3.581944751737221*^9, 3.581944787874208*^9}, {
   3.581951021398402*^9, 3.581951033668231*^9}, {3.58221660360467*^9, 
   3.582216617749133*^9}, {3.5822869554826403`*^9, 3.582286956658009*^9}, {
   3.5827407405041*^9, 3.582740763790533*^9}, {3.590837063823267*^9, 
   3.590837065433181*^9}, 3.771626404677743*^9, {3.7729070296333313`*^9, 
   3.772907033419303*^9}},
 CellLabel->
  "In[1550]:=",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0Xk01VsbB3BEvAhJhQaOBqRuCmniOVHqSBnSIFEyZCyENNwy3lQi1Rup
cFOmRAghQ8oUkQZDcZIp/Y4izrB/Efc5fzxrr8/aa333Xt+HcfSEjauYiIjI
PRzhOTKlk+d7hAuVGsEBSluH4beeD+stumqxtUae6TDM9Mj5utqJC80bf37Z
hV74XldxBG1U6Hr5oskwsNINTvo4c2GeWc+dCeYwpFqCgacbFzZsqHg8aDQM
+1NsSpy9ucBs2Hmy3nAYKrecfrEvmAsWA5nPS3SGgY6c7wvXufBdepvLYcVh
SM7d93/fLC4En9qa/e8EB574+xlrVXPBbzRGZcUgB3QMuyN7P3NhRW2RbXUL
BxS/fjcdGMf30k22pJZxwCV6ewo1iwdikozptDQOMFpDQoI0ecD/eX9xx3UO
mE8cbDcHHsjFPGLJhnKge/k/TQw7HkiO1bcGHedAl6HN+i1+PMjy39hS7cAB
s15a81sUDyJq1K6RXRxQjRkrjL2PXmDZHGzEgYNq0aUhpTz4Y2Cqmv4XByTy
gxwCPvBA0Nz5ZK0aBxawN0f8/MGDKDa/NFmBA/dGUhl5EnwwUC9TvzqDA5fE
DjkEqfGhYKb5nWEeBV9/P5WPMOSDj6xxe+F3ClK5jkduWvNB2V/HdkY3BW8v
9uvrePFB3NRuhlIrBR4iMiHS4Xxw3lEQ415Lgc+ZMI/hu3yw3pwiu6+Mgq7O
xIZ5hXzYk7kzLCCPguJ3MY/rmvhgeCDBRDeDgsmm96vPDvLBhBHOuJ1EwePs
Eq1TU3xIjq07MOcWBfVXRysDlQXg0E0mdl6lwFJqxuffawRQkrjhskYkBVvc
i7zrWQKwYp29Pvw3BUkNpXcTnAVQK7ot6FIQBW4KR0zzzgogq2OqU9qXgsTR
Hh+rGwI4vrpjiawnBevf5a8byxZAqO0u4DpTYHJ7WVDXKwFk7pjdmOZIQZHT
9z0NbAE8NOieYW1HwS353RlTfAF4KTzSeWaLfe2LCSmVI9CmpzkRZ0VBfLKa
IFiLwNSZr/GnLCh49sa6/wKTQLzVWW0xFgVb/3w4cekgAbM1VwMyt1GwqVbv
gkoAAQf/1W/rTPD/AXoSY1cI5LWcf3SSSYFD8Ss/u2gC+kFKez3RC3/vZVeh
Xeq1JJzQdy4EF8deJdAt8SZ4NzrhcrnHqlgCL8RFc7TRcSnbm92vEyjaKWL1
FSiIaLKP/5JAIOBxpt9etNfSCO03Dwn8WbdnubUxBVXUSPGqNLy/+PoXC62U
Z28Wg+6uGag2QVcY6TlbphOorZEM0kcr7u+925pBwG5AoKaMLr3EVGh7RID4
nA7rMaJAamSSz84jwPlyOTQQ7VDoHgn5BHRzHUVPoPPPfpiTgp6w+vCPO/qQ
VLauUwEBv6YH9+3RuQx7z76nBJq+dSwyQe+zLen+VkzAeGaIhgL6QUngq9Fy
AjMCDrs82UyB489Rb8sKAlTx8cIstMoS77k56JCuAZmH6Jjoo25elQQsrss0
3EYHH7aUGqwisNxILyIcvUtC2+LzSwIF6kN/9qP5Vl3vaxoIPDWPnRJHP4nc
f27pa3RR6OT0Juyv9N3ScHSU76fp3+ieJQ2BzEYCuUkV836hX/ML55c1EXif
ZBXZjU6+G2v/pIWAilacazF6x5BJX+JHAoKmdWtPoKWcDG+JthEIc+s574mu
79RhuaNlQvtaXdGsRqVcg3YCayT4lw+hzXMGz7ztIODdZ84yR1sEXFac2YX+
k8FfjrYSebfFr5fAqeDeOQMbKVA4XcttR8d7PdD5in77qzTduI+AiXMFqxtt
3Zc6S7Yf+zX4nfARbVMb2Jk2QGDfpmvhtWjbaBW/riECda9WXspE71d2Stk+
QmCHYt/eAHS2km5gOjpcJs/HDy02e5olOUqgWVr8ynF0zv/ujdeiO6fXt7mj
Z050mJmNETgjzs5xQBd1W/3YysP9ZMp57EDLflKrfoD+wtbu3IY+2vbzljif
wK28ht2maLmWaOYrtOi8eHNjtGtV/Q1TQqBmrXuEPloplbnRZILAggy2iAba
M1le/j5adITZoIauusPuE50k4HlKM34R2vvmuasv0AWGoaYq6JeRz3qYUwR8
B9zYCmh/d92LIEpD/R3+QlF0vcu0fTJ65F6i0fQGChY7NetOo1k3qp3/oF/b
eX+qEKOhY1tSFY3W2Jmxylichh9WEc/H0K2r1D9slqRh02HJ8gG0xUbV5nR0
7t91Uv3oejOlekUpGoyr3ex70RWHpZ4PoSsyTeZ+QWfHjabelKbhnOeJzx1o
rSTq3jS6YI2WYzs6Nas/3lOGhjl05beP6MSXHVeYsjT0BUXLv0df5FWdHJ5F
g1hJQt4btJhYmc9+ORqsZVheTejzcoXHqtGTmzt0GtEBmpn2CfI0hK2+8aIe
fdQuznTrbBr+/XEGXqHZrleMctE32hi6L9F2/pGGqoo0GIana1ajra6c1hlF
wwJLnSq0UbnTnLtKNDRx5SKfo5812M+SnEuDSuaj7DK0ftteSX90nLTm51L0
ihHWxPZ5NNg2lliUoNMmTHn56JFlrbHP0Awp45FF82nwWFrXWYxWZqztG0ef
FLcMK0LfXLWy21GZBvHenp5CtPzG5e0NaCd7azOhZ+5RbUxWoeGYavOyp+jQ
w0o10qo05Bz6lFyAnvSSqwxEi+nXqAs9HiFWsHMBDRN31hnmo4/HTWYXoXu0
y5vy0NQ9fhpjIeZv1/AQ2jVrNCUabTHuKit0TxGVKEDHrIwqeoI+9LL/5tFF
NGiNRR0Tur2FHfMGvcrUXU1om66OqPWLaShfvJydi24eeheWilaPqE4V2pzX
dE5OjYYkfyNfoWtE64JOo1O/3zIVmin3wrcf/WCoeZHQz1XLPC3VaVh7YmAq
B22oWehSiuae+zQodL5eruMyBubNzvko9F/MzAPX0FMrjzQKnWmRajOBHm8e
rRP6P/VcDnA=
       "]]},
     Annotation[#, "Charting`Private`Tag$445825#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Beta]", HoldForm], TraditionalForm], None},
  AxesOrigin->
   NCache[{Rational[1, 2] (Pi - 2 
      ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
         Rational[-1, 2]]), 0.8195413498965237}, {1.2735449654736897`, 
    0.8195413498965237}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[1, 2] (Pi - 2 
       ArcTan[(-1 + 2^Rational[1, 2]) (-1 + 2 2^Rational[1, 2])^
          Rational[-1, 2]]), Rational[1, 2] Pi}, {0.8195413498965237, 
     0.8833105349341038}}, {{1.2735449654736897`, 1.5707963267948966`}, {
    0.8195413498965237, 0.8833105349341038}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.581609096455961*^9, 3.5816289197193604`*^9, 3.58168788679126*^9, 
   3.5819447901637697`*^9, 3.581951034908289*^9, 3.5819533173554783`*^9, 
   3.5821142198997307`*^9, 3.582114951275977*^9, 3.582216621867839*^9, 
   3.582223201755753*^9, {3.582286941086684*^9, 3.582286957215057*^9}, 
   3.582302582262513*^9, 3.582303339581299*^9, 3.58274021742274*^9, 
   3.582740765531266*^9, 3.583763378488957*^9, 3.590759438998534*^9, 
   3.590835632984823*^9, 3.590837068452118*^9, 3.590924442561226*^9, 
   3.591617761635764*^9, 3.5928382714151497`*^9, 3.5928413586413317`*^9, 
   3.593124593379208*^9, 3.686070283937107*^9, 3.68693168944556*^9, 
   3.771591849854644*^9, 3.771624209995349*^9, 3.771624571238709*^9, 
   3.771626405392148*^9, 3.771626756886554*^9, 3.771767603492222*^9, 
   3.772292657989079*^9, 3.772814307245874*^9, 3.772815159799543*^9, 
   3.77290725093336*^9},
 CellLabel->
  "Out[1550]=",ExpressionUUID->"6a5482c8-7a21-4dca-ab6b-22f755502038"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.581609094038151*^9, 3.581609094069778*^9}},
 CellLabel->
  "In[1551]:=",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],

Cell["\<\
Color the moduli space region with color depending on the density. Red shade \
is close to 1 and Blue shade is close to .5\
\>", "Text",
 CellChangeTimes->{{3.5816092922408857`*^9, 3.5816093140005407`*^9}, {
  3.581609621573914*^9, 3.5816096454884663`*^9}, {3.581953354061882*^9, 
  3.5819533586268*^9}, {3.582222943743129*^9, 
  3.582222944008811*^9}},ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-\
8ad9c9b01e0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"(", 
        RowBox[{"torusRatio", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], "]"}], 
      ",", 
      RowBox[{"Im", "[", 
       RowBox[{"(", 
        RowBox[{"torusRatio", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
      RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Hue", "[", "torusDensity", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", "->", "#3"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "#4"}]}], "}"}]}], " ", "&"}], 
      ")"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"BoundaryStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], ",", 
    RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.5814415563651342`*^9, 3.58144157581666*^9}, {
   3.58144166381931*^9, 3.581441756142213*^9}, {3.581441806320602*^9, 
   3.581441878069029*^9}, {3.581441915668941*^9, 3.581441925996266*^9}, 
   3.581441969683961*^9, {3.581442240718355*^9, 3.581442258158124*^9}, {
   3.581442377548176*^9, 3.581442417514968*^9}, {3.58144247190583*^9, 
   3.5814424734743013`*^9}, {3.581442751557214*^9, 3.5814427571400003`*^9}, {
   3.5814434590030537`*^9, 3.581443460904909*^9}, {3.581609502983444*^9, 
   3.581609548034075*^9}, {3.581609898970262*^9, 3.581609928408107*^9}, 
   3.581673696967795*^9, {3.581944806767089*^9, 3.58194488275401*^9}, {
   3.5819533247323313`*^9, 3.581953341447814*^9}, {3.58221665186229*^9, 
   3.582216657188343*^9}, {3.582216731483777*^9, 3.582216751511827*^9}, {
   3.582216898707114*^9, 3.5822169242483463`*^9}, {3.5822229328956413`*^9, 
   3.582222933118864*^9}, {3.58228697958738*^9, 3.582286980702338*^9}, {
   3.5822870338872538`*^9, 3.582287078033432*^9}, {3.582303381723358*^9, 
   3.582303382080562*^9}, {3.583763394256619*^9, 3.583763397797147*^9}, 
   3.771626448096888*^9, 3.7729070560875673`*^9},
 CellLabel->
  "In[1552]:=",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", SqrtBox[\\\"2\\\"]}], \
\\\"+\\\", \\\"ComplexInfinity\\\", \\\"+\\\", \\\"ComplexInfinity\\\"}]\\) \
encountered.\"",2,1552,208,25397637502896749269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.772907251062821*^9},
 CellLabel->
  "During evaluation of \
In[1552]:=",ExpressionUUID->"b7c05723-7f73-4c45-b8bf-926de07bb4b1"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", SqrtBox[\\\"2\\\"]}], \
\\\"+\\\", \\\"ComplexInfinity\\\", \\\"+\\\", \\\"ComplexInfinity\\\"}]\\) \
encountered.\"",2,1552,209,25397637502896749269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.772907251144021*^9},
 CellLabel->
  "During evaluation of \
In[1552]:=",ExpressionUUID->"f4ab1f78-c931-49b3-8ae9-d4b5bdf996d2"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", SqrtBox[\\\"2\\\"]}], \
\\\"+\\\", \\\"ComplexInfinity\\\", \\\"+\\\", \\\"ComplexInfinity\\\"}]\\) \
encountered.\"",2,1552,210,25397637502896749269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.772907251162303*^9},
 CellLabel->
  "During evaluation of \
In[1552]:=",ExpressionUUID->"3d49ca06-c777-40b5-a362-9f0041958a41"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1552,211,25397637502896749269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7729072511804533`*^9},
 CellLabel->
  "During evaluation of \
In[1552]:=",ExpressionUUID->"38fd9501-8477-4da4-8e98-ee3c4ed892d0"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
Fpy2Hj/ZS+pv+79pyZf64KGiSLYhqadXI6QwKhg+F9/skeYzXbRLTekUFp27
RvnfD/dE3vt0kQBUK6j/rE343eL+njKOCwpchPvMCecEjnaGul9D8t3Uiv2E
nbPjqyK4h/BZ9LcYfn7CKauirWbPY5ze2mVKOCA3LXqGaYVHP9WN8/dnIWnH
ja0OThgPirt7lPCmWrUTjro7sZd6PsnXc7yE3XRcO1CbnsaeJv8HSjVZFRPi
6RhsL2sUJvnnyugFMD+lYJPzg9hCkn+u+NkET6GH8NZcy1gg+XGKlV/OXYlB
AceGPUPya6hQHC7ZGQn/cNmNxSQPnqhvucdUEI7mcjdv5e9/USnj42wSxGr3
M04TvUSf6VjzPjZ+15w0+Z2f/6NMu2aL+xARk3Y9Q/T5V2RyFLNDIbA20HCe
sFyibevjTHcEKbt38u9PSbPgPU2hLJx5mmHDI/U1qgua9Qd9waN35Bvw79f4
H6+fbg1GYXdOnRThmQ27T81u/BWe/0uK4+e/O7nRyzYqAOWNm+R3EfZtVrZX
K3WFRNs/zvz8n6uXbjKYv4bXu6jP/PvgJfOj5yalI0iPtvHk58cY5Q0Xi1zE
1190TPn5pxTaHqngnED5a7V8fv6mepGqd93PolqgUYOfv6rq8bkIrj7cvY36
+Xpfs9YEm1k7HOJl7eS//52juOgXpjFcg6WL+PXULRFt6g7HUJr5vRKfTRNH
bB11VVDkzp3h8/8Bxn4LTA==
   "], {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1], LineBox[{1, 130, 106, 86, 70, 58, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
       11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
        29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 131, 
       107, 87, 71, 59, 52, 45, 132, 108, 88, 72, 60, 53, 137, 113, 93, 77, 
       65, 46, 133, 109, 89, 73, 61, 54, 138, 114, 94, 78, 66, 47, 134, 110, 
       90, 74, 62, 55, 139, 115, 95, 79, 67, 48, 135, 111, 91, 75, 63, 142, 
       118, 98, 82, 56, 140, 116, 96, 80, 68, 144, 120, 100, 84, 49, 136, 112,
        92, 76, 146, 122, 102, 64, 143, 119, 99, 83, 148, 124, 104, 57, 141, 
       117, 97, 150, 126, 81, 147, 123, 103, 152, 128, 69, 145, 121, 154, 101,
        151, 127, 156, 85, 149, 125, 155, 105, 153, 129, 157, 50},
       VertexColors->Automatic]},
     Annotation[#, "Charting`Private`Tag$445866#1"]& ]},
   VertexColors->{
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate], 
     Hue[Indeterminate]}],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.1942619952310385`},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 0.36583487048484864`}, {1.1942619952310385`, 
   1.2871885058111652`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.581609384437285*^9, {3.581609504822774*^9, 3.581609549260466*^9}, {
   3.581609900266757*^9, 3.581609929014892*^9}, 3.581673699423524*^9, 
   3.581687887039155*^9, {3.5819448706496763`*^9, 3.581944883675671*^9}, 
   3.581953345308755*^9, 3.5821142202221193`*^9, 3.582216660165596*^9, {
   3.582216735008424*^9, 3.582216752562191*^9}, {3.582216900522902*^9, 
   3.582216925413727*^9}, 3.582222934929668*^9, 3.582223202402267*^9, 
   3.582286981851467*^9, {3.582287036288845*^9, 3.582287079211164*^9}, 
   3.582302583044299*^9, 3.58230334630746*^9, 3.582303382805304*^9, 
   3.582740217957407*^9, {3.5837633852906523`*^9, 3.5837633996885767`*^9}, 
   3.5907594396778*^9, 3.590835633320829*^9, 3.590924442886402*^9, 
   3.5916177675330877`*^9, 3.59283827170261*^9, 3.592841358957922*^9, 
   3.5931245937263193`*^9, 3.6860702842285557`*^9, 3.686931690535644*^9, 
   3.7715918500836573`*^9, 3.771624210867381*^9, 3.7716245714190683`*^9, 
   3.7716264502796497`*^9, 3.771626760470799*^9, 3.771767603654272*^9, 
   3.772292658590404*^9, 3.772814307669145*^9, 3.772815160212861*^9, 
   3.772907251199019*^9},
 CellLabel->
  "Out[1552]=",ExpressionUUID->"2dce6580-151c-43d6-a2f8-5ba43486cd24"]
}, Open  ]],

Cell["Now find the minimum and maximum density with in the region.", "Text",
 CellChangeTimes->{{3.5816743195141582`*^9, 3.581674339375255*^9}, {
  3.581944995026071*^9, 3.581944995378251*^9}, {3.5819533802020197`*^9, 
  3.581953383961735*^9}, {3.771626465765153*^9, 3.7716264659772577`*^9}, {
  3.7716266883958263`*^9, 3.771626712352277*^9}, {3.772907065512493*^9, 
  3.772907075181108*^9}},ExpressionUUID->"2fd82056-65c0-4b36-af8f-\
270e781cc6c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"torusDensity", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "<", " ", "\[Beta]"}],
       " ", "&&", " ", 
      RowBox[{"\[Beta]", " ", "<", " ", 
       RowBox[{"Pi", "/", "2"}]}]}]}], " ", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
      RowBox[{"Pi", "/", "2"}]}], "}"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "18"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581609382124021*^9, 3.5816093821731052`*^9}, {
  3.581674342761096*^9, 3.581674366016737*^9}, {3.581674410493896*^9, 
  3.581674416321011*^9}, {3.5816745142249126`*^9, 3.5816745887031527`*^9}, {
  3.581674797332777*^9, 3.581674801987938*^9}, {3.5816749471944838`*^9, 
  3.581674948858513*^9}, {3.581944908530826*^9, 3.58194498132018*^9}, {
  3.581945027577073*^9, 3.581945027991763*^9}, {3.581945303251691*^9, 
  3.581945309353141*^9}, {3.581945340371601*^9, 3.581945372512339*^9}, {
  3.581945409818782*^9, 3.581945414450327*^9}, {3.581953389988534*^9, 
  3.581953448617591*^9}, {3.582216775133053*^9, 3.582216836170295*^9}, {
  3.7716264793393393`*^9, 3.771626489876069*^9}, {3.7716265205913677`*^9, 
  3.77162655779049*^9}, {3.772907089252668*^9, 3.7729071216743383`*^9}},
 CellLabel->
  "In[1553]:=",ExpressionUUID->"f0795534-1999-46a5-8f81-df354a425f40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8195413498965238636536951994699096727628120053605318088673`40.", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Beta]", "\[Rule]", 
     "1.5707963267948966192313216916397514420985846996875529104875`40."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5816744232568808`*^9, {3.581674536574274*^9, 3.5816745894295063`*^9}, 
   3.581674803121306*^9, 3.581674950033958*^9, {3.581945007400581*^9, 
   3.581945033758835*^9}, {3.581945348539166*^9, 3.581945373387185*^9}, 
   3.581945415519532*^9, 3.581953452017894*^9, 3.58211422094731*^9, {
   3.582216813038019*^9, 3.582216837621441*^9}, 3.582223202553293*^9, 
   3.582302583294647*^9, 3.5823033564563637`*^9, 3.582740218243164*^9, {
   3.5837634028949757`*^9, 3.583763405110656*^9}, 3.590759440057639*^9, 
   3.590835633698936*^9, 3.5909244431994123`*^9, 3.5916177742883673`*^9, 
   3.592838271885895*^9, 3.592841359036316*^9, 3.593124593937619*^9, 
   3.686070284381843*^9, 3.686931690701151*^9, 3.771591850232512*^9, 
   3.77162421185378*^9, 3.771624571735642*^9, {3.771626537593149*^9, 
   3.771626558294682*^9}, 3.771626763814251*^9, 3.771767603805765*^9, 
   3.772292659011427*^9, 3.7728143078785048`*^9, 3.772815160443796*^9, 
   3.772907251612914*^9},
 CellLabel->
  "Out[1553]=",ExpressionUUID->"5fa2724e-eb82-4a19-bc88-67bd59759be4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"torusDensity", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "<", " ", "\[Beta]"}],
       " ", "&&", " ", 
      RowBox[{"\[Beta]", " ", "<", " ", 
       RowBox[{"Pi", "/", "2"}]}]}]}], " ", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], ",", 
      RowBox[{"Pi", "/", "2"}]}], "}"}], "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "18"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581609382124021*^9, 3.5816093821731052`*^9}, {
  3.581674342761096*^9, 3.581674366016737*^9}, {3.581674410493896*^9, 
  3.581674416321011*^9}, {3.5816745142249126`*^9, 3.5816745887031527`*^9}, {
  3.581674797332777*^9, 3.581674801987938*^9}, {3.5816749471944838`*^9, 
  3.581674948858513*^9}, {3.581944908530826*^9, 3.58194498132018*^9}, {
  3.581945027577073*^9, 3.581945027991763*^9}, {3.581945303251691*^9, 
  3.581945309353141*^9}, {3.581945340371601*^9, 3.581945372512339*^9}, {
  3.581945409818782*^9, 3.581945414450327*^9}, {3.581953389988534*^9, 
  3.581953448617591*^9}, {3.582216775133053*^9, 3.582216836170295*^9}, {
  3.7716264793393393`*^9, 3.771626489876069*^9}, {3.7716265205913677`*^9, 
  3.77162655779049*^9}, {3.772907089252668*^9, 3.772907144824389*^9}},
 CellLabel->
  "In[1554]:=",ExpressionUUID->"8480a40d-2b6e-4169-a173-e5130b690fba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8833105380864884017305093406063602400100304479690249054064`40.", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Beta]", "\[Rule]", 
     "1.2735449654736898132784986485114088667561261921660559135766`40."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.772907251947411*^9},
 CellLabel->
  "Out[1554]=",ExpressionUUID->"86b5f2d0-3a7b-41eb-bf27-c3a21f78494e"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.772907258571739*^9},ExpressionUUID->"22d248fe-0dd8-4015-8b3a-\
67cc15e43aa3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 775},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.5,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 994, 14, 146, "Title",ExpressionUUID->"3bc0b118-19e5-4ef3-836d-0d9f018f7019"],
Cell[1576, 38, 905, 15, 53, "Text",ExpressionUUID->"baec14af-3b99-4417-84bc-478b4d896230"],
Cell[2484, 55, 147601, 2425, 627, "Input",ExpressionUUID->"9f8ec43c-710d-496b-9db9-6f7bdd022df9"],
Cell[150088, 2482, 389, 8, 88, "Text",ExpressionUUID->"7ab0d526-7792-4c49-97dc-b092de2c732e"],
Cell[150480, 2492, 347, 7, 88, "Text",ExpressionUUID->"32b21bb5-936d-4145-aa78-45b18d3ea241"],
Cell[150830, 2501, 769, 23, 46, "Input",ExpressionUUID->"95354242-f552-4272-9f18-bbb44d9f4705"],
Cell[151602, 2526, 934, 26, 46, "Input",ExpressionUUID->"9269f660-7fc1-4abd-9dac-2d2abec63530"],
Cell[152539, 2554, 367, 8, 88, "Text",ExpressionUUID->"d3b31a14-b6d6-4671-a096-0dfdc79958fe"],
Cell[152909, 2564, 1554, 45, 78, "Input",ExpressionUUID->"7454ebbc-f4d8-46ae-a126-726191df0a67"],
Cell[154466, 2611, 518, 12, 46, "Input",ExpressionUUID->"ae14da91-4250-4420-8c59-c4fb8a923c36"],
Cell[CellGroupData[{
Cell[155009, 2627, 268, 5, 46, "Input",ExpressionUUID->"fdf582d1-2489-4b43-9fe7-31a21942cc6f"],
Cell[155280, 2634, 25789, 742, 1997, "Output",ExpressionUUID->"582ba3e2-48fa-468f-9c76-60e521fd6a25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181106, 3381, 347, 9, 46, "Input",ExpressionUUID->"cc7715b1-f97f-4c10-80bc-d745a100020b"],
Cell[181456, 3392, 1317, 31, 90, "Output",ExpressionUUID->"00d9e288-aedc-4ecb-8889-1fd0472dc5be"]
}, Open  ]],
Cell[182788, 3426, 326, 7, 53, "Text",ExpressionUUID->"1c29e45d-2ea8-4350-a0e2-9fe0e9dc017e"],
Cell[183117, 3435, 257, 6, 53, "Text",ExpressionUUID->"077e0f9a-e713-4a51-8f67-23bed9211da1"],
Cell[CellGroupData[{
Cell[183399, 3445, 1261, 41, 128, "Input",ExpressionUUID->"2214014a-0769-4fdc-82c1-fd45b1c1d5c0"],
Cell[184663, 3488, 1175, 39, 105, "Output",ExpressionUUID->"6d9091d8-33da-46cc-99b9-3c834541bd97"]
}, Open  ]],
Cell[185853, 3530, 236, 4, 53, "Text",ExpressionUUID->"1ad60719-164f-45af-9858-67b1049356f1"],
Cell[186092, 3536, 2664, 79, 339, "Input",ExpressionUUID->"23fe3bc2-70ed-4b1d-bfa2-417ac8383931"],
Cell[188759, 3617, 2712, 79, 339, "Input",ExpressionUUID->"4fe7ebdc-4b26-47d0-b091-21147768fa2e"],
Cell[CellGroupData[{
Cell[191496, 3700, 314, 6, 46, "Input",ExpressionUUID->"974db4db-484a-4709-8359-faf884eafbed"],
Cell[191813, 3708, 2500, 72, 208, "Output",ExpressionUUID->"1797b8e8-625c-49d8-9067-6cfd87f923b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194350, 3785, 240, 5, 46, "Input",ExpressionUUID->"4933355e-e555-4dc5-ab81-4dd4301a60bc"],
Cell[194593, 3792, 2390, 71, 208, "Output",ExpressionUUID->"a909a484-7c70-44d5-aaad-3b2da623bd01"]
}, Open  ]],
Cell[196998, 3866, 185, 3, 53, "Text",ExpressionUUID->"810f3cc2-47a6-42e0-a3fa-67269d6ebc66"],
Cell[CellGroupData[{
Cell[197208, 3873, 396, 6, 101, "Section",ExpressionUUID->"58eac1c0-3dea-4423-bd3e-40f227e6c6e5"],
Cell[197607, 3881, 236, 8, 122, "Text",ExpressionUUID->"81d2ae2a-5dc9-4270-a265-1d233444296e"],
Cell[CellGroupData[{
Cell[197868, 3893, 21251, 503, 1941, "Input",ExpressionUUID->"56b426ba-7978-4852-a10a-3cd4eae9172c"],
Cell[219122, 4398, 9876, 281, 808, "Output",ExpressionUUID->"602bf1f3-0ddf-4efb-ab57-60bb32c04113"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229047, 4685, 215, 4, 101, "Section",ExpressionUUID->"dd1d0949-4425-489a-9138-ef893592d4c8"],
Cell[229265, 4691, 370, 6, 53, "Text",ExpressionUUID->"200ae999-c74e-4e08-bfe2-f7fa1b43f45d"],
Cell[229638, 4699, 4408, 106, 383, "Input",ExpressionUUID->"599d2b49-d9bb-4d65-8681-bcc6fa3e614e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234083, 4810, 150, 3, 101, "Section",ExpressionUUID->"8c1dc234-14dc-4eeb-9527-a7c0cd7c55bc"],
Cell[234236, 4815, 724, 12, 122, "Text",ExpressionUUID->"e7a21d8e-f617-4378-a5da-9dc2d5a1e93e"],
Cell[234963, 4829, 1030, 24, 46, "Input",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],
Cell[CellGroupData[{
Cell[236018, 4857, 436, 9, 81, "Subsection",ExpressionUUID->"13c39ee2-5a3a-466d-965d-7a6d5f6b780b"],
Cell[CellGroupData[{
Cell[236479, 4870, 3831, 85, 264, "Input",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],
Cell[CellGroupData[{
Cell[240335, 4959, 607, 13, 59, "Print",ExpressionUUID->"360cbb60-8645-452d-a2e0-c8de62922ef2"],
Cell[240945, 4974, 555, 11, 36, "Print",ExpressionUUID->"60414972-1e7e-4280-b0a2-0f2360e44737"],
Cell[241503, 4987, 678, 16, 44, "Print",ExpressionUUID->"d848dc79-9f51-4c5f-abde-afecbaa7a9bb"],
Cell[242184, 5005, 607, 13, 59, "Print",ExpressionUUID->"0577377c-7683-417d-8bce-bee8e57132d2"],
Cell[242794, 5020, 607, 13, 59, "Print",ExpressionUUID->"fb713724-6b3e-4318-8397-d0b843223edf"],
Cell[243404, 5035, 607, 13, 59, "Print",ExpressionUUID->"5a181059-33db-4992-86db-7640ace89208"]
}, Open  ]]
}, Open  ]],
Cell[244038, 5052, 146, 3, 53, "Text",ExpressionUUID->"44713034-9149-4e18-aea8-b2757e3281a2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244233, 5061, 221, 4, 101, "Section",ExpressionUUID->"84c54b26-f298-4444-9ec8-58440b22b9ee"],
Cell[244457, 5067, 337, 7, 88, "Text",ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-bdaf155f4274"],
Cell[CellGroupData[{
Cell[244819, 5078, 17627, 374, 846, "Input",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],
Cell[262449, 5454, 6837, 148, 678, "Output",ExpressionUUID->"df916eae-bdc8-41fb-b4f0-e3d0c973d08c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269335, 5608, 168, 3, 101, "Section",ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-4479b3290d12"],
Cell[269506, 5613, 600, 11, 157, "Text",ExpressionUUID->"587b476a-42fe-4314-b5c2-430cf24c7bba"],
Cell[CellGroupData[{
Cell[270131, 5628, 172, 3, 81, "Subsection",ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-64a93ed30112"],
Cell[270306, 5633, 864, 14, 122, "Text",ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-8abc959f8dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271207, 5652, 161, 3, 81, "Subsection",ExpressionUUID->"31f2c795-42a7-4371-8bcc-f26ae4f35c51"],
Cell[271371, 5657, 799, 17, 89, "Text",ExpressionUUID->"dad468d2-f604-44ad-83e4-8184a0b76de7"],
Cell[CellGroupData[{
Cell[272195, 5678, 13981, 347, 1001, "Input",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],
Cell[286179, 6027, 7218, 158, 678, "Output",ExpressionUUID->"40e29f2e-811a-4915-901c-f8c808e8befe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293434, 6190, 6967, 174, 481, "Input",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],
Cell[300404, 6366, 1288, 23, 34, "Message",ExpressionUUID->"1d2f1a60-7e4d-4a94-8c1d-b0a4bafc4dab"],
Cell[301695, 6391, 18317, 517, 1318, "Output",ExpressionUUID->"266c4c9f-5291-4222-9507-70644008b85b"]
}, Open  ]],
Cell[320027, 6911, 575, 13, 54, "Text",ExpressionUUID->"dab345d4-317d-4689-8b7d-c5f918423d0f"],
Cell[320605, 6926, 1061, 20, 78, "Input",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],
Cell[CellGroupData[{
Cell[321691, 6950, 715, 16, 46, "Input",ExpressionUUID->"079eff23-d452-4b8a-b102-2477f53b339f"],
Cell[322409, 6968, 557, 14, 52, "Output",ExpressionUUID->"232b0647-e9ae-4eef-8a9f-c50ce42666b9"]
}, Open  ]],
Cell[322981, 6985, 1030, 26, 109, "Input",ExpressionUUID->"601094d1-5f09-41a1-a4c2-b934a0a6ca3c"],
Cell[CellGroupData[{
Cell[324036, 7015, 1287, 34, 148, "Input",ExpressionUUID->"10c904a2-b9e6-464f-ad17-2b2796a34730"],
Cell[325326, 7051, 10696, 204, 344, "Output",ExpressionUUID->"6a04694c-4722-4394-ae8c-988d7334902c"]
}, Open  ]],
Cell[336037, 7258, 186, 3, 53, "Text",ExpressionUUID->"b28d66d7-6ed9-4ea5-a16c-e112e7b35f67"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336272, 7267, 244, 4, 101, "Section",ExpressionUUID->"1367c9d9-3697-4765-9fd2-49fbdfafea09"],
Cell[336519, 7273, 464, 9, 53, "Text",ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-5dfd369c5feb"],
Cell[CellGroupData[{
Cell[337008, 7286, 1767, 43, 148, "Input",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],
Cell[338778, 7331, 2715, 73, 189, "Output",ExpressionUUID->"a3e6fea7-23ea-459e-9e33-12eaa6be6c24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341530, 7409, 2030, 50, 180, "Input",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],
Cell[343563, 7461, 1517, 44, 106, "Output",ExpressionUUID->"09fd7610-0768-4e16-a7a9-3ab1a452c7a8"]
}, Open  ]],
Cell[345095, 7508, 526, 10, 88, "Text",ExpressionUUID->"7fea073f-4678-488f-94be-79aeb56d8b30"],
Cell[CellGroupData[{
Cell[345646, 7522, 8178, 178, 550, "Input",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],
Cell[353827, 7702, 4251, 72, 660, "Output",ExpressionUUID->"9a788bda-b7ae-4605-88f3-5b4791ff8008"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[358127, 7780, 215, 4, 101, "Section",ExpressionUUID->"0778b274-df47-40d0-990e-9f18ab4dee0d"],
Cell[358345, 7786, 248, 6, 53, "Text",ExpressionUUID->"e2b21120-6780-408f-b4b4-7bd65fa10119"],
Cell[CellGroupData[{
Cell[358618, 7796, 2492, 64, 211, "Input",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],
Cell[361113, 7862, 3618, 91, 224, "Output",ExpressionUUID->"0377bfbc-a9c9-45fe-9a4e-6df54f758a09"]
}, Open  ]],
Cell[364746, 7956, 183, 3, 53, "Text",ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-e5f2bb2c8c0b"],
Cell[CellGroupData[{
Cell[364954, 7963, 1434, 33, 101, "Input",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],
Cell[366391, 7998, 5879, 117, 340, "Output",ExpressionUUID->"6a5482c8-7a21-4dca-ab6b-22f755502038"]
}, Open  ]],
Cell[372285, 8118, 176, 3, 46, "Input",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],
Cell[372464, 8123, 420, 8, 53, "Text",ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-8ad9c9b01e0d"],
Cell[CellGroupData[{
Cell[372909, 8135, 2910, 68, 227, "Input",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],
Cell[375822, 8205, 523, 11, 37, "Message",ExpressionUUID->"b7c05723-7f73-4c45-b8bf-926de07bb4b1"],
Cell[376348, 8218, 523, 11, 37, "Message",ExpressionUUID->"f4ab1f78-c931-49b3-8ae9-d4b5bdf996d2"],
Cell[376874, 8231, 523, 11, 37, "Message",ExpressionUUID->"3d49ca06-c777-40b5-a362-9f0041958a41"],
Cell[377400, 8244, 454, 10, 34, "Message",ExpressionUUID->"38fd9501-8477-4da4-8e98-ee3c4ed892d0"],
Cell[377857, 8256, 10130, 264, 177, "Output",ExpressionUUID->"2dce6580-151c-43d6-a2f8-5ba43486cd24"]
}, Open  ]],
Cell[388002, 8523, 449, 6, 53, "Text",ExpressionUUID->"2fd82056-65c0-4b36-af8f-270e781cc6c8"],
Cell[CellGroupData[{
Cell[388476, 8533, 2373, 59, 199, "Input",ExpressionUUID->"f0795534-1999-46a5-8f81-df354a425f40"],
Cell[390852, 8594, 1342, 25, 52, "Output",ExpressionUUID->"5fa2724e-eb82-4a19-bc88-67bd59759be4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392231, 8624, 2371, 59, 199, "Input",ExpressionUUID->"8480a40d-2b6e-4169-a173-e5130b690fba"],
Cell[394605, 8685, 405, 11, 52, "Output",ExpressionUUID->"86b5f2d0-3a7b-41eb-bf27-c3a21f78494e"]
}, Open  ]],
Cell[395025, 8699, 129, 3, 46, "Input",ExpressionUUID->"22d248fe-0dd8-4015-8b3a-67cc15e43aa3"]
}, Open  ]]
}, Open  ]]
}
]
*)

