(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1107064,      22050]
NotebookOptionsPosition[   1094728,      21849]
NotebookOutlinePosition[   1095179,      21867]
CellTagsIndexPosition[   1095136,      21864]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analysis of Packing V3E05L0N01T2_1 ", "Title",
 CellChangeTimes->{{3.580135852891836*^9, 3.580135862589938*^9}, 
   3.580137141312297*^9, 3.581161087909637*^9, 3.5818563558208227`*^9, {
   3.5819486698826113`*^9, 3.5819486708477287`*^9}, {3.58195172547116*^9, 
   3.581951738572076*^9}, {3.5821220906444807`*^9, 3.58212209551359*^9}, {
   3.603189474778634*^9, 3.603189487631043*^9}, {3.603208780082828*^9, 
   3.603208780234962*^9}, {3.604159900860963*^9, 3.604159903777851*^9}, {
   3.607700600015931*^9, 3.607700600356484*^9}, {3.6465858884999866`*^9, 
   3.646585900513159*^9}, {3.646755644997344*^9, 3.646755645131776*^9}, {
   3.647265088709795*^9, 3.647265088860635*^9}, {3.6473560363001137`*^9, 
   3.647356067794221*^9}, {3.7083389526131077`*^9, 3.7083389608763103`*^9}, {
   3.709640641361698*^9, 3.709640647919407*^9}, {3.73896733808869*^9, 
   3.738967346324815*^9}, {3.77238412671733*^9, 
   3.7723841267798367`*^9}},ExpressionUUID->"3bc0b118-19e5-4ef3-836d-\
0d9f018f7019"],

Cell["\<\
Three Vertices, Five Edges, 0 Loops,Combinatorial Number 01, Face Pattern 2, \
Type 1\
\>", "Text",
 CellChangeTimes->{{3.580137445604217*^9, 3.5801375254067383`*^9}, {
   3.581856358992407*^9, 3.581856384416295*^9}, {3.5819517426040287`*^9, 
   3.581951767642358*^9}, {3.582122103025394*^9, 3.582122111216773*^9}, {
   3.603189492504524*^9, 3.603189498647831*^9}, {3.604159907960268*^9, 
   3.604159912193075*^9}, {3.646585904328833*^9, 3.6465859252879257`*^9}, {
   3.646755662934144*^9, 3.646755663058913*^9}, {3.6472650912123737`*^9, 
   3.647265091300403*^9}, {3.647356044921232*^9, 3.647356058120769*^9}, {
   3.708338967340601*^9, 3.708338985260412*^9}, {3.7096406554076014`*^9, 
   3.709640670631276*^9}, 3.709979002564518*^9, {3.738967376997569*^9, 
   3.7389673972246437`*^9}, {3.7723841302684526`*^9, 
   3.772384130439761*^9}},ExpressionUUID->"baec14af-3b99-4417-84bc-\
478b4d896230"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QdY1Ge2BvDsTbIrARSpUUARLDQbiAgWFDvYxR4VrFEUxYbYsYMEFVTA
AggoFrAbu8Ye06Mpm8QkuzGJbmL6mphkzXvn+6aAySiWgf+U93ue38292dzN
MCp8857/OafOiEl9xvzfE088MbWK6n/0iUloN2VKTGJfO9X/0S9u6rixcaNH
dY2bNnrs6CktRjyp+ps1n1J5+oknVH95Ajw8PDw8PDw8PDw8PDw8PDw8PDw8
PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8
PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8
PDw8PDw8PDw8PDxGcz79Cjj9LnDyMpmj+SuK0DgwBOPHj8eHH36o9G+3Rzpf
ffUVpk6dCm8fP8xamovjb/2u+PtK5mfK3LUIbtkeC1fuVPy1EBERVZQDF39A
zLg5aNDAG+vWrcPt27eVvuo90jl16hS6d++O8M59sa7wguLvK5mf4lNfYujo
mYjoNRTrtr6s+OshIjIWlz78A1//cO+f0R98ARx89Q/sfRlkZtbv/RThEcPg
4VEHOTk5+P333yvv8mfAc+fOHWzfvh2NGzdBaHgfrCx8U/H3lszPoDFJcH62
NmJnb1D8tRAREVWUWSv2wMs7EN26dcOlS5fwxx9/KH3Ve6Tz008/YebMmXBw
dMJzzy/GtlM/Kv7eknnZuO/faNd1KPyatsGidScUfz1ERMbi1DvAje/u/TNa
5IwHXvsDe1T/LJmXCXM2wcXVCyNHjsQnn3xSeRe/CjjffPMNJkyYAHtHF4yd
vhYl539T/P0l8zJw9AI4utTC+FkbFH8tREREFaHw6DeI7D8RLs/WQEZGBn79
9Velr3iPfEQ+evr0abRr1w7+AWFYnHlK8feXzMuGff9G2y7PwadJKyxce0Lx
10NEZCxOXWHOaIk27f8c7bvHwMurLgoKCvC///2v8i5+FXDEXXLXrl0ICAhA
y44DkL71iuLvMZkX5oxERGTu5qYdQH2/5ujVqxfeeOMNpa93j31++eUXzJkz
Bw6OzhgWuxw7Tt9S/D0m88GckYhIP+aMlmlmcgk86zfBc889h/fff7/yLnwV
eMScxtGjR8OlhgcmJxUo/h6TeWHOSERE5qz43K/oP0KdyaWmpprsXMY/nyNH
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
69ev49atW/jzzz9x9+5d/P333/jnn39w//599bX8u3xffk5+/ty5c4iIiECd
OnXg5OSsNEuZxyfz+d7coZ3eKHvQoiVKXi971LIHXzm0ter54R41IYSQ7Ah1
Rm1IOPkPNhy4hgmRu1G+mvS+OMDB2R1hTbrhjTVnNM1JZOaJzLApXrqy6vew
s8+PKlWqYMqUKTh+/Dh++eUXXLt2DTdv3lQ54J07d1ROKLmh5IiSG/7111+P
c8MrV67gk08+wcqVK9G6dWt4eHgozdHN0xdNOwzDgtjPNN17XxL/NVp2Hq1m
u8i6ZJ6j9IKv4fy/bA91RkIIMQx1Ru1I8gOXOYPdBs+Dp3epRD9wvzLoNjRS
5TLmXM/6fVfQe9QStacs6/ArVkzVK3744Ycqd5Sc8cGDB+n/Yn1KyOPk8fI8
58+fx7hx4+Dj66t0zKL+FZQX4voDf5j12kfFfIj6rfrBxc0r2R51AveoCSGE
ZGuoM2qLeB2u3fu7mjVSqlxN5U/j6l4ETdoNwYJY8/a+xB37E6Nmx6N0+TBV
u+jhURB9+/bFiRMnlFYo2uG///77XLnhw4cPce/ePdy4cQNfffUVoqKiEBRU
Ru1Fyyxumd1s7r1o8R/vNGC22muXnm/ZExffIPGUlLpSzv8j1BkJIcQw1Bm1
J8kPfGHc52jbfSLcHvmBy97poIlrELPftH7g0q8zbfEh5Wste9ReXkWUDij7
zLIn/bzaYnohzyfP+9FHH2HkyJEoVLiwyl0r1WyJmcvfMfl+/dKtX6NVlzFw
L+yHPHltULx0JeUvtJp71IQQQgh1xsxAst4XqSP0LRH8qPelhOovlj1qU69B
9mPFQ0Z8F11cXNGjRw+cOnVK1Sw+r7aYXojmKPvRFy5cUP0vJf39ld7oX6a6
0jklTzbluUq9Zt8xy+HnH6L22qWOUXp7Fm/5EpuP36G+SB5DnZEQQgxDnTHz
kOQHPm/te2jUZhCcXDyV7hcUUhejwxPUjBJjH1NqCLsMDFf5VH4HR3Tu3Fnl
kKbQF1OGPP/t27dVv027du3g4OCkZsz0HBZlEm1VcnU5V6+igWqP2ssvUPlE
yh61zBBkDkkIIYRQZ8xMJPW+rEi4gG6DI+Dp7Z/Y+1KsDHq8Hok1e34x+jG3
HLuDoZPWqv4WG5t8aNCgAfbs2aP6nY2tL6aMJL3x448/xpAhQ+Du7qF8bVp1
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
7DNd9fFKD4xofD2HRal8SryoTa0vJiept3hR7Gdo3XUc3Dy8Vb9MUFAQRo8e
jXffffeFe2bk8dKXPXLkSDV/Rp5fckjx2pH9YnOfs/TDyBzviOh30fDVAXBy
8YC1rR1KB9fC8Jlxas6O1u81QgghxNxQZ9QO0fZen7xe9bRYPerjbdr+dUSu
Pa/2SM09xy7+5D2Vr0rfh5dvadjY2Ci9sU+fPjh48CBu3br1QrmhePVIf/Ss
WbNQqVIl5ePj6FxA9S5Lf4uqYTRjPWFSPrw04Vt0GTRX9amL3uitz9G7DJyD
VW/9pPl7hGgLdUZCCDEMdcZnp1mH4an0xMd6oy5Rb9Q9+jdXN69U8+ukP7fH
6/PhU7wc8ljZoGDh4mq/dkncl9j8zh1N+zMkf1Xa27r30bzjCNXDLfWGLi4u
CAkJweDBg7F582Z8//33+Oeff56aO8r3pS9a5lkPHDgQwcHB6nny5s0Lt4I+
aNVlNObFfKBJ3vzEOZ/6V82bmbXiOEIbd1WzDG3zOaJ8lUYYN2+nWp/W7zlC
CCHEXFBnND/iST06fKvy5JYcxMGpgJozOGfVKZWjSK6i1dpEe5P8VPpvRGsr
7BuAvPrc0NHRUe0bd+/eHWvWrMHnn39ucE9a+q5/+eUX7Nq1S9VGVq9eXfVl
i34pPdphTbtj5vJ31F6vqftbnnrOj7x2ZB9c9sNlX1zqSmUed5+RS4w+/5Fk
HagzEkKIYagzPhsySyR37jyP578k9UqnqmXUJf77sOmbHj92/b4/1HUuXrqy
6tN1dfdGqy5jlS+j1lpbSiSfjT16S+WUgyZFo3Kt1nBycVcaoew1u7q6qjnV
Uu8o/S3NmjVTc2TkT/la5gLK3GjRFeXn5XHOrp6oUrsthkxej6Vbv1Z6Zmby
2JZ8duPB68r/vHJYa9jaO8Muvwsq6f8+bfHBVHoxIYQQYolQZzQf0qsr3oPS
/yI5h50+96hRryOmLz2iudaWEunVFu1NeotFE63dtKfq586b11r1OcuM6kKF
CiEgIABVq1ZF48aNVW7YokUL1KpVC2XLloWPj4+a65I/f361j23n4IKyleqj
1/BFiNrwcaY7Z8nNJUePjPkAzToOh4ubl/JvLBlUDUMnrUPMwauar5GYF+qM
hBBiGOqMz4boT//pibon9MbHfz5CfBZlD3jToZtKbwwoF6pm2Ul/rnhrS79u
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
VVQzC4zh30idkRBiaSzd+jVadx0HD6/iyGNlDd+Sweg3dgVWvnVRfZY+z+cl
dUbjRno90zrdk18zGAzjhuiNUsfz0UcfYeTIkfDy8lKfa1WrVkV0dDSuXr2q
9RIZDAbD6CH64YkTJ/Daa6/B3d1d9Ug3adIEu3fvVp97//zzzzM9H3VGQoil
IPfG4s+4Ysf36DliEbz9gpTe6FmkJNrr74GXb/vumZ+TOiMhxFJ4c8dFdOo/
E16+pZW+WNg3AN2GRmJZwrfYcuzOC83Tos5o3Eg9azrFTBjqjAyGSUN6Am/f
vo1z586hX79+8PDwUPfdtWvXxpYtW1TfIIPBYGT1kL2V999/H71790bhwoVV
Hiefc+LbLLnb33///VzPS52REGJpyL3y5uN3sHTrN+g8YDYKFimhegK9/cqg
2+AIrN55KcPPRZ2REJLVid7zG3oNX6jqFuWz0KNQMXToMw2L477A5nf+euoc
6YxCndG4oUuqY3xK7zR1RgbD9CE1PqIpHjt2DJ07d1YeZdJHmFTnI7WPDAaD
kdVCvGk//fRTDB06FD4+PsonQuq2161bp2ZIS/+0/MzzBnVGQoilIvfOcg+9
IPZTtOk+AW7Kg8xW9VX3G71czTgw9BzUGQkhWZWY/VeVl0SJwCpqvourexG0
7DQKURs+QtzRP9UMGGMdizqjceNp2mJiL7WOOiODYcYQvfHGjRvYv3+/8i1z
cnJS3mVt2rTBkSNH1D05g8FgZIX49ttvMWHCBJQoUULNvSpfvjyWLVuGH374
Affu3XshfTEpqDMSQiwduZeOO3obkWvPo0m7oXB2LQwrm3woVbYGhk6NwYYD
19J9LHVGQkhWY9PhWxgxIw6lg8NgY2sPR2d3NHx1AOZGn0Os/rPwRedjpQV1
RuNGYh2j7r9+6ZR1jTrWMzIYWoR4lIlXmcxhbdCgAfLnz6+8zLp27YozZ848
s4cZg8FgmCt++uknhIeHIzAwUOmLpUqVQkREBL755hvcvXvXKPpiUlBnJIRk
F+TeOvboLcxZdQp1mveCg5Ob/h7cAWUq1sPoOQnqeykfQ52REJJVkPrtcRFv
oXyVRshn5wT7/K4IbdwVs1Ycw6ZDN7HtlPH1xSSoMxo3Unsz6p7QF5P+jcFg
aBPiWSafa7GxsahZsybs7OyUt1n//v3x4YcfKs8zBoPByAwhn1WLFy9GcHCw
0heLFi2KqVOn4vPPP8edO3dM8nlFnZEQkt1IOPUPNh6+gelLj6BavQ6wy+8C
W3tnVKzZHJMX7FXejkk/a0hn3Lz9MGYtP4r4k/c0Py9CSPZk64n7mLr4ICrX
ag07B1fY2DmiSlgbTFl0QNVry2eeqddAndG4kXavdGq9kcFgaBdS+yP90uJl
tnr1aoSEhCiPM19fXzWr+ssvvzRqfRCDwWA8S1y7dg3R0dGoVq3a470Q+WyS
vRDxljXlfgh1RkJIdiXh5N+I0d+DT4zag5AazdS9eX79PbpojzOXv6O0Q0M6
49hx4+Ho7IGwJt0wd81Z9ZxanxchJHsg+mH4mydRs2Fn9TlkbWOvahnHz3sL
6/ddwVYzfh5RZzRuPDFjWpdy5rR8TX9GBiOzhGiJ4mkm3maLFi1CUFCQ0htL
liyJKVOm4LvvvtN6iQwGIxvF7du3sWXLFtSpU+ext0O/fv1w9uxZ9b0HDx6Y
fA3UGQkh2R25F5d78tHhWxEUUgfWtvZwcvFA7aY9sGLzu/j5j/Q/i2M270FA
uRpqxoKLm5fyQJMZC8acr0AIIcmRGVeR68+jXss++s+dQshjbYvS5WthxMzN
ara01Deae03UGY0badYwct40g5GpQ/RG8TgTrzPxQEuasSC6o3igXbp0Sesl
MhgMCw75/Nm9ezeaNGnyeFZV586dcezYMdy8eVPNszJXUGckhJBE4vX35tFv
/6pmw5QMqqa0QzcPL6xavTbdz9DPfriPtW9fwoDxq1DUv4KaZ+3m6YuWnUdh
8ZavsOMM9UZCiPFYGPc5mnUYpj5nrPLaoHjpyhg0MRqrdv2karC3n9Emd6PO
aNxIc/bLE9ojdUYGI7OG9CJKT+Jnn32mZrr6+Pio+kbpq5aZrpcvX9Z6iQwG
w4JC/GJl7n2bNm1QoEABODg4oFWrVti/fz+uX79uVn0xKagzEkLIf8g9evzx
e1i180f0G7sCRUsGIzIqKt3PUJkDs+u9h9hy7C5W7PgePYYvhFfRQHX/7+nt
j/a9p6p/1/q8CCFZm+XbLqBtj0nwLFISeays4V2sLHqPWqL/fPkBW07c1Uxf
TII6o3HjyR7plFrjfx6NDAYj84bojX/++SfOnz+P119/HYUKFVIeaTVq1EBM
TIy6/2cwGIznDel/Pn36tJp3X7BgQfX50rBhQ+zYsQNXrlzBP//8o9naqDMS
Qkhq5J5dtMMNe7/D59/+nu5naPJ50/IYmSGzJP5rdOo/Ex5exZXeKHpAt6GR
WL3rZ83PixCStVi18xK6DpoLb78gWFkl7l90GTRHfc5sOXZHc30xCeqMxo0n
9ET5U6dLU3NkMBiZP0QLEE800QN69eoFNzc35ZlWv359bNu2TX2PwWAwMhri
0SCzXGS+vZeXl6qXDg0NRWxsLH777TdV36h1UGckhJD0OfLJ//Db9fRncSXX
GZPYfvoB4o79iYWbPsGr3cbB1cNH9VMXC6iEfmNXYt3ey5qfFyEkc7N232X0
HbUUfv4har9C+qTb9ZyERbGfYfM7f6nPGa3XmBzqjMaN9PwYn/BqZD0jg5Gl
QnoXxSNN+hs7dOigvNPEQ6158+bYt2+f8lZjMBiMp4XMsZeZ0UWLFlX+rxUr
VlTz7n/66Sfcv38/08y4p85ICPk/e2cCZ1P9///fbcWQMYwx9j37kqwlW9Zs
UUlfiZQS+Up8LSXZkhQpZN/3bdqTJbvSShFSROIvIbSX3v95f7gzc5czJs69
Z+6Z5/PxeD6Y5d5z7jn3usfrvj/vN1p7sXnTwXJGryu2/iWL1p2RF2Z9LM3b
/Vdi4wqaebDlq9SV3kPny7w1Jx1/fIiYvtR/F/47eLaUrXyLZE789yJ3nkKm
H6POfVm07my6nTFFzmgvPv0Y/ddNe6hnBIhkdC3jiRMn5O2335ZWrVpJzpw5
TU81zR51XoNmBQAAKdG59Tq/vmzZsiZfrFy5splvv3//fjPvPr3ki17IGRER
rb2cnNHrii1/ycK1p+WZqZvMDOuYXHkka7YYuaFmUxnw3KuycN0Zxx8nIjqr
/jvwv2eXSeXqjSTqupjEfyfipfHtD8mz07fKgsR/P/RzC6f3MTXJGe0lOUsM
XDt9Pnf0kDMCRDi6tvH48eOyfPlyadSokURHR5sea126dJEPP/zQkdkNAJC+
OHz4sJlXr7mi5otlypQx8+z37NljaqC1D2x6hJwREdFaO3JGr8u3/Cnz156S
oePXSO2Gd0v2HLklW3Ss1KzXRp5+6V3T29Hpx4uI4VVnuAwa+5ZUvaWlZE/8
90Ct26SDDH9lnfn3Qv/dcHof0yI5o734z5X2+B1T6hkB3IPWL2pPNZ0NU7t2
bfPvaJEiRaRnz57y+eefp9scAQBCh85xmTRpklkXrf0XdW79oEGD5IsvvjDz
7NP7vwvkjIiI1tqZM3pdvvkPmbv6R3lyzJtSrXYLyXZdjETnzCO3NOkgI6Zs
lGWbfnf8cSNiaF2W+O/A8Invmc8c9PWvNYw167aRwePeMf8+LN8cGfmiV3JG
ewmWKQZkjYnX7wDgDnTNo6591B5rkydPlqpVq5psoWTJkjJgwADZu3dvulsX
CQD2c+rUKfOZQ926dc38aJ1Tr/PqP/74YzO/XudKRQLkjIiI1oYiZ/S6bMvv
MvvdY/K/kUulYrVbTe/GXLkLSMPWD8rzsz6SFRFSx4SIaVfXPz83/QNp0OJ+
yRVXwPRgvKFmE+n/3AozI0rzR6f38VIkZ7QXbx9GT9Ka6cBZ0x7qGQFch2aJ
uhZSe7GNHTtWypcvb9ZKlitXToYPHy7ffvut07sIACFAM0TtodC4cWOJiYkx
c+l1Pv2WLVvk9OnTEZMveiFnRES0NpQ5o9elm3+TGW99L/99eo6UrnizZIm6
TuLyFZUWd/9Xxi38QhI+SF9zZRHx35vw/j8ydt52aXZnD4nLW8TMoC93Qx3p
PWy+ef2bOuZt6XPGS1okZ7SXYDWMSX9nDgyA69E1kb/88ouZLav54vXXX2/y
xipVqsiLL74oR44ccXoXAcAGtI5Z583r3PnY2Fgzg15nQulceq1tjNQ+reSM
iIjWhiNnVDWDWLrxV5n66kHp1m+SFC99o8kh8hYqKXd0HigTl30lr74fuRkE
YkZ2/JI90qbj/yRvwZKSOXNWKVm2unR/YppMff1g4uv+N/P6d3ofL1dyRntJ
nv+Sct60J+BPAHA3mjdqL7YdO3ZI//79Td9GXU9dq1YtmTZtmpkjAwCRh86d
1/ny7du3N7WLOXLkMFmjzqH/8ccfzc8jGXJGRERrw5UzetW8YcmGX2TSim/k
/v+OkULFykvmLFmlUPHycu8jI2Tqq986fkwQMW1OfnW/3PPQUClYrJxkyhwl
hUtWlAd6jzOv7yUbfnVFvuiVnNFevP0Xz2eKnoA6RuoZATIWumZS11XqHOoe
PXqYudTau61+/fqycOFCU/cEAOkf/exAX8c6V75AgQLmdazz5nXN9LFjx8wc
ejdAzoiIaG24c0avulZ68fqf5eXFu01OYeqgsmQ1dY4PPv6SzHz7iOPHBhGD
q+ugu/QaK8VKVZFMmbNKvsKl5D+PjJDxS3Ynvq5/cWUvBHJGe/GukU5eN+0J
OK7kjAAZD80btVfbpk2bpHPnzpInTx7Ty+22226T119/3WSRAJD+0N6rOj9e
58gXLVrU1CXrfPl58+bJ999/b/JFN816ImdERLTWqZzR64qt52TRurOmr1ub
e/9n+rplicpm+jg+OmiGzFl13PFjhIjnnbPyB3lk4BQpVb6meZ1qn9U7Og2U
cfN3yKINZyVhq/vyRa/kjPYSLFP01UPOCJCB0Z5tWsO4evVqueuuu0xPN+3t
1rZtW/M97fkGAOkDnRevc+O9fVZ1nvyUKVPk4MGD5rXqpnzRCzkjIqK1TueM
XnVG7cJ1Z+S5mduk6R2PSM7c+SQqW7SZU933mcWyYM1Pjh8rxIzq/LWn5LGh
86V8lXpJc+Nvu+tRMzdeX7f6+nV6H0MtOaO9pFwn7QmWM3qYNw0A53u8aS83
rWVs3rx50pzae++918ypjfQebwCRjM6H1zlO3rnxFSpUMHPkv/76azNX3o35
ohdyRkREa9NLzuh1xZa/ZMF7P8kzkzdIvdvukxwxcZI1e06penNzefKFN0zt
o9PHDDGjqDWKA0YnSJVaTc3rMDpnnNzasouMnLLJvE719er0PoZLckZ7CVq/
6EmuY/RcyBoBABRdc6m93ZYsWSINGjSQ6OhoKViwoDz00EPyySefmPXWABAe
dB68zoW/8cYbTb6odYyaN3755Zdmjrz2aHQ75IyIiNamt5zR6/Itf8r81Sfl
6ZfelVr175Bs0bkke47cclODu2TYhDVmdrXTxw7RreqMaH3tVa/XJvF1F2de
f7Ub3i1Dx6+ReWtOmten0/sYbskZ7cWqH6P/7GkAgJT8/vvvptfbrFmzzExq
/TdZe8H17t1bdu7cmSHyDQCn0NpinQPvfe3pfHidE6/z4nVufEZ6/ZEzIiJa
m15zRq/LNv9hejQOHP2qVKnVTKKui5GYXPGm1nHUtC2yPPHnTh9DRLeo+aHW
Et/S5D/mdZY1W4xUvaWlPDnmTfM6zMivN3JGe7l4f0bmwABAcHQtpvZ80zWb
EyZMkBtuuMHMnChVqpQMGjTIrNkEAPvQ2Uw6913nv2stcb58+cxceJ0rrbOZ
MmI9MTkjIqK16T1n9Lps0+8y653/J48PXyjlqtQ1PeJy5ykkTdp2k7GzP80Q
/eEQQ6XOY9Jeiw1bPyixeQpIlqjrpFK1hvK/Z5ea192yLb87vo9OS85oL8H7
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
3I328NRZ0T179jSzo7W+tXbt2mZe+ffff2/mlzMzKDIgZ0REtJacMXSu2HpO
Fq07K2PmbZfb7+0rcfFFJEtUNilT6Wbp+dRMM0/Y6X1E+52z8rhZD12qQi1z
vuPyFpW29w2QsfN3mOeDPi+c3kf895Iz2kvy/JeU86Y9AX8CALgN7bWnPfdW
rVold955p+nFpz359O/aj0979YH7+Oqrr2TgwIFSqlQpMx+oatWqZj65zgfS
c06+GFmQMyIiWkvOGHp1tvDCdWfMfOGmbbtJzth8EpUtWipWu1X6PrNYFqz5
yfF9xMtXz2PvYQukfJV65+eP585n5r08P/NDc/6ZQR7ZkjPai7f/4vlM0RNQ
x0g9IwC4He29pz34Xn/9dbnttttMbz7t0dexY0czX5jefO7g4MGD8swzz0iF
ChUkKirKzB/XeeT79u0z88nJFyMTckZERGvJGcPn8i1/mixqxKT1UrdZR8ke
EydZs+eUG2u3kCfHvGnWWju9j/jv1fM2cPSrUqVWU3M+9bw2aHG/jJyySRa8
95Os2EK+6AbJGe3Fu0Y6ed20J+C4kjMCQEZAe/FpT77FixdL/fr1JXv27KZn
38MPPyyffvqpWW8NkcfRo0fNfHGdM671izp3XOePf/nll2YeufZohMiFnBER
0VpyxvCreeP81Sfl6ZdWSs16beS67LlMNnXTre1k2MS1Zvaw0/top5qz6WNa
kfi4nd4XO126+Td5+uVV5hxG54gz57F24jkcOn61zFtz0pxnp/cR7ZOc0V6C
ZYq+esgZASDDoDVt2ptPe/TNnDlTatasaXr3FStWTHr37i27du1yXd2b5qv6
mN2Wt2mNqs4T17nies2gc8Z13vj27dvN/HG3Pd6MCjkjIqK15IzOuWzzHzJn
1XEZMDpBbtBauGwxEhObV+o37yTPTt8iyxN/7vQ+plXNEV9atFN6DZkrdz84
WBq17ipVb24uxUrdILnjC0tMrniJzVNAipaoJDfUbCINWnSRu+5/Uh4dNFPG
zv0somo5NT8cOWWj1Gl6r+RMPF+6Bt7UpL7whjmfkXTeMO2SM9pLynXSnmA5
o4d50wCQ8dAsUXv1ac++CRMmSOXKlU3eWLp0aXnqqafk66+/dnoX/xUnT540
c2/Gjx9vcpkOHTqYOdtlypQxc7d1nbhmqZqrtmnTRnr06GHWGCckJJj1xpFU
y6kzfhYuXGgen84Tz5cvn5kvrnOldcZPJD0WuDjkjIiI1pIzOu+yTb/LrHeO
yuPDFki5KnVNb7/ceQpJ07aPmAwuvfb1W7TujDwzeYPc0WmAlCxb3dRk6r5n
yhyV+Gc2ic0dZ64dK1WqJDVq1JAbbrhBihcvLrnj8kjWrNdd+L1oyZ4jtxS9
/gZp0b6XDHl5lcxfe8rxxxZMnQ/9/OyPTYaq5ydL1HVSsar22Fxizp+eR6f3
EUMnOaO9BK1f9CTXMXouZI0AABkRzRu1d5/28HvuueekbNmyJm+sWLGijBo1
Sg4dOuT0LlqiNZmLFi0yfSZ15knOnDnNe6f2JvTmb/p9nYNSvXp106+wcOHC
Zh6Ori9WtVel/l7Dhg1l9OjRZkaz1j+mR3QNtLfHpj5Wnemj88Q1X/3pp5/I
F10KOSMiorXkjOnEbedMTeD0N7+THk9Ol5LlakjmLNkkPn9xub1DH5mw+EtJ
eD99nIdZK4/JIwOnSJlKtSVbdKxkzpw18Vowf+L1VXPzGfTq1avlm2++MX1p
tN/Q8ePHk9Sv9fsHDhyQ9evXy/PPP28+vy5YsFDi480q2a7LKSXKVpPOvcbI
tDcOOf5Yje+fk5cX7pSW7XtJnsTzoftZusJN0vOp2eZ86fpp/R3H9xNDKjmj
vVj1Y/SfPQ0AkJHRNbaaY+m66cGDB0uJEiVM3litWjWZOHFiunnv0VxUs8DH
H3/c1F5qnuitw+zcubNMmTJFPvroI/nuu+/MPqe8Pvzhhx/M9/T6UHsXrlix
Qvr37y+1a9c22aPej9Y93n777fLmm2+a2sD0gOaea9askTvuuEPi4uJMxnjX
XXeZOeJax6lzxcG9kDMiIlpLzpi+1CxxyaZfZfKr++WBPi9L0ZKVTN5YoEgZ
af/g0zJpxTeO7Zv2HOz11CwpW7n2+ZrLuDwmI1ywYIFZx6PXVNp3RucjXqyH
kP5cr7/02llvp+uD9LpS19NoZqmPuXiZqvJQ3wmmVtCpx/zK8n1mfXf+IqUl
U+asUqxUFXn4f6/IlIQD5jyll+wXQy85o71cvD8jc2AAALxo3qj52meffWay
vEKFCpn3o1tuuUVmz54tJ06ccGzf9u7da/oPXn/99aYWUWsVH3vsMXnvvffk
yJEjpqZP14Knpa5PH6fmd/pYtc+hZpcvvfSS1KlTx9Q4xsbGmmtP/Uxb79MJ
9PpV54FrvabWXGqm2rx5c1PTqLkpc8IzBuSMiIjWkjOmTzW/WrzxF5m47Cvp
2H2kybm0jq5oycrSuefzMv3178K2L9pvUNczV72lpak3jI/PKw899JC5xtKM
UHt4X25vcr29XleeOnVKPvnkE+nTp0/iNXRhsza5UrVbZcDoV8Paw3Ha6wfN
cS9coqJZ312waDlz3PV8LNnwC/liBpSc0V6C92P0+HxNzggA4ItmdWfOnJH3
33/fXIt5c65GjRrJsmXLTI/AcKGZmmaA2kNS80XtkzN27Fj56quvzD7aUc+n
uaOuH9f6R83xWrRoITExMZI3b14zj1tzyHDNx9F90WtU3a4359X54DonXGsx
0+u6bggN5IyIiNaSM6ZvtSeg5mu6blfr6uLzFTO1frquulu/STLrnf8X0u1P
e+2Q3Nn5CYnLW0RyxOSUu9u3l3Xr1pnPpkO1HsR7Df3BBx/IAw88IHFxecwc
mRZ3/1cmLN0b0serx/PBvuOlRJlqJteNL1Dc5EsvLdplzoOeD6efE+iM5Iz2
kjJLTFpD7Uk+ph7WTQMAWKLXYHotptdkuhZEewLqut1WrVrJO++8Y9aLhArN
9TZt2mTqCjXj1N7bQ4cOld27d5vthmqesuZ4usZac726detK9uzZTbY5depU
8zl1KNF161pHqo9VM9VatWqZueC6DtyOz9sh8iBnRES0lpwxMlyx9ZyZuzJm
1ifS4u5eEhtXSDJnvU7K3VDHzHiet+qE7dt8dupmqV6nlWSJymb6dM+bN89c
34VrPYheQ+t1o66n1uvJqMTHW7HarfL0S+/Kii1/2vpY9fj1fGqm6Tmpx1Vn
ZLfu0MfM4Vm07qw5/k4/B9BZyRntxZMyXwyYOe2hnhEAIA3oNZmuLdFsUfsX
ataovQLvvvtu0wdbMzA70RxRey1WqFDBrGPWXEXXt2jfnFDli/7oY9I+39oT
XHM/7eHYq1evkMzi1vvUOd86H1vzRZ1pqHPAdfu6bpt8MeNCzoiIaC05Y2Sp
s6cXrjsto6ZtkUatHzR1flmzxUjlGo2l36jl5meXuw1dEzzw+dekdMWbJTpH
jHTt2lW2b9/u2PWUfn6tvX/0GlJrG3Ut8+PDF8pSG+Y76/HSedG6NjvquhjJ
mSuvNGnbTZ6b8UHiz86k21nfGH7JGe0l2Lppn3kw9GcEAEgzmjfqOmb9bLZx
48ZJ85rvv/9+sz7Ejs+I9bPfESNGSIECBaRkyZLy4osvmv6LTsw70etRzTZ1
5oo+Xq1tbN++velfaQdap6hzvrVeUvNFnfetX+uacF3HTb4I5IyIiNaSM0am
y7f8KfPXnpJhE9+T2o3vkew5cku26FxSvU5rGTzuHdPb8VLv+4kXXpdSFWpJ
3rz5ZNiwYfL999+nqXd3KNHPyLXH+QsvvCDFihWXgsXKSZ/hi8xxuJTHqD0W
nxzzhlS9uaWZma3Hr26zjjJi0npZsObUJd8vuldyRnsJli2SMwIAXB762az2
Cpw/f76ZEaPvWYULF5YePXrIjh07LrnmUPvZaMaoc59r1qxp8kzN+ZzO2zQ/
1TXNOtNa+zZq1qifjV8q2gdS53jrPG+dc631kjrne+fOnSFdEw6RBzkjIqK1
5IyRrc5ombvqhAwa+5ZZ45w1e07JERNnskfNzJZu/u1f3d/IKRvlhpqNTcao
n9tqtuf0NaQX3Q+dPzh+/HgpXqKEXF+uhjz14tvy6vtpX9O8bMvvMmzCWrnp
1jslOmecmWtTq/4dMnjcSpm36sfE40m+iMElZ7QXqzXTHo/v1wAA8O/Q6yVd
W6w1edOmTUvKzEokXjvpXOg9e/b8q2s7zfJ0rXCRIkWkdu3a8tZbb9m+Hvty
0M/C9+/fb9bf6LrxRx55RL755pt/dR+69lzndms2q7WRBQsWNP0YP/30U3Pt
Sb4I/pAzIiJaS87oDpdt/kPmrPxB+j27TCpVbyhR2aIlV+58cmvLLvL8zG1p
qs/TGSt1m90rMTlzyaBBg8xnuuklY0yJzlLUnjz58heQGnVayfOzPrroY1ux
5S+z1rzBbZ3McYnKGi1VajU1c6xnv/uDOX5On0NM35Iz2kvgrGm/mTDkjAAA
l4Vew2nPG83gxo0bJxUrVjR5o64B1rkt2mMwLegca50prWuIdQZLesoYvWgO
qHNotJ5Rs8YhQ4aYz8ovhmaI+vh0XreuNdd6TZ3jrfO8tYbT6fU8kH4hZ0RE
tJac0V1qz8KZbx8xs2F0pkmWqOvMrOjm7R6VcfM+t5xnMm/NSWl7X3/JHp1L
Hn74YXNNmh4zRi+agT722GMmE23erqdMff1g0MelvSZ1lkvTto9IXHxhM9Om
XJV68viwheY4LbOhxyNmDMkZ7cXjrWNMZe00OSMAwOWj13O65ld7XevntKVK
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
iIjWkjNmLL31jA0aNJBNmzaF/D34l19+kePHj5sMRvsm6ufX+nm59vnWeYIz
ZsywnDt4qXzxxRfSunXrC/WMHzh+zNEdkjPaS7BM0VcPOSMAQJhYuHChuT7T
7OTEiRMh354T14feuddPPvkk9Yxw2ZAzIiJaS86YsZz6+kGp07SD6bW9evXq
8L0ZJ6LXi3pdqZ9hax/uK664Qjp37iz79u2zdTsffvihNGnSRGrUbSNj537m
+DFHd0jOaC8p10l7guWMHuZNAwCEi4SEBKlcubL06NFDvv/++7BuO1zXh6+8
8opZqz18+HDLeTQAaYWcERHRWnLGjOWC936SJm0fNv22ly9fbtt7rfbr1s+/
9dpU+/r8/ffflr+rn1trvaG+H4di/faqVatMjlq/eSd5Zfk+x485ukNyRnsJ
Wr/oSa5j9FzIGgEAIPS89957csstt0iHDh1kz549tt1vero+HDlypMTHx8tL
L71k6/1CxoScERHRWnLGjGXC+//Infc/IXF54mXKlCm2vdd+99130q1bN4mL
izNzA3XmsxXHjh2T+++/37wf169fXzZu3Gjbfihz5841fb5v79BX5q464fgx
R3dIzmgvVv0Y/WdPAwBA6PFmfHbPCUwv14c6W+axxx6TwoULmz6NAJcLOSMi
orXkjBnPh/q9IrnzFJLBgwfLzz//bMt7rd5P9+7dzXts7dq1zefiVnjntOjv
3n333WY+tJ2MGDFCcsXGSZfHXpQVW885frzRHZIz2svF+zMyBwYAIFxoreFD
Dz1kPqddtmyZbfebXq4Pv/nmG3OfNWvWNOteAC4XckZERGvJGTOeg19aKdeX
r2neC/Wazg7++ecfeeaZZyR79uwSHR0t48aNkz/++CPo72n/nSJFipj34z59
+siPP/5oyz4oP/zwg/m8PH+R0vK/Z5c5fqzRPZIz2kvwfowen6/JGQEAwoP3
Ok7rDnUmi653tvN+nb4+XLlypckY77nnHtuufSFjQ86IiGgtOWPGc8pr30qd
xv+RSpUqyRtvvGHb++22bdukcePG5j23WLFiMn78ePP5uJeTJ0+atdoVK1aU
K6+8UqpWrSpvvfWWrfME169fL3Xr1pXqdVrJmDmfOn6s0T2SM9pLyiwxaQ21
J/mYelg3DQAQVlasWGFmwejaZa3/s4v0cH04ZswYyZMnjwwdOtTMnAG4XMgZ
ERGtJWfMeK7Y+pd06DZccuaKMz2xf/vtN1veb3V2n147FixY0MwK1DxGP5fW
dTKa/ZUoUcJ8nn3VVVdJ7ty55cUXX7Rt3bYXvY6Mi4+Xdg88JQvXnXH8WKN7
JGe0F0/KfDFg5rSHekYAgDDz9ddfS7t27UzWaOfn0E5fHx4+fFg6depkZiAu
WbLE1E4CXC7kjIiI1pIzZkyffmmllKpQy/T8/vTTT217z9XrQv08/KabbjLX
kvr+q9eNqv796quvNjME9fr1zJkztm1X2b9/v3l/L1i0rFkzrTNvnD7O6B7J
Ge0l2Lppn3kw9GcEAAgrOgtaP3/21v2dPXvWtvt28vpQt6treOzsFwRAzoiI
aC05Y8Z0/uqT0uzO7onXkvEyadIkc21pFzrTT+cL6hpmXQczaNAgGTJkiMya
NUu2bt0qR44cCdqb53KZPXu2+Uz81pZdZHLCfsePMbpLckZ7CZYtkjMCADjL
hg0bpF69etKgQQPZtGmTrfftxPXh6dOnzZxpzU5ffvllU1sJYAfkjIiI1pIz
Zky11q/vM0ukaMlKcuedd8qOHTtsfe/VNSnaQ1zXZOvn4fo5tv5dvxeK9SqH
Dh0ya2Li8haRnk/NMmvDnT7G6C7JGe3Fas20x+P7NQAAhA/tXThgwACJjY01
81vs7m8T7utDrY/Ufo8tWrSQjz76yPb7h4wLOSMiorXkjBnXuauOS9M7HpHY
3HFm/p9+zhyp6OfihQsXllubd5bJy792/Nii+yRntJfAWdN+M2HIGQEAHGHd
unWmb6KucV6zZo3Tu3PJ/PDDD/LII4+YWsZIv86F9Ac5IyKiteSMGVetaRw0
9k25vnwNcz2p61giEe0v2bJlS9OXsc+IRdQyYkgkZ7QXj7eOMZW10+SMAADh
R+sLhw8fbvK53r17m/XMkciMGTPMfOu7775bdu7c6fTugMsgZ0REtJacMWO7
eP3PcveDgyUmZ5zJSnQmXyShfXd0fU9MzlzSpmM/mbPyB8ePKbpTckZ7SS1b
PL+W2kPOCADgELt27ZI2bdqYGdEzZ84065ojCV0j3bx5cylVqpTMnz8/4vYf
0j/kjIiI1pIz4oRFu6VWgzskPj6vTJw4MWLWlWgfH+0dXrJkSbnxpmby3PSt
zJjGkEnOaC/n6xg9yeul/esaPdQzAgA4hc4HXLBggVSsWNHMhNH5MJHC8ePH
zeyXnDlzms+i9WsAuyFnRES0lpwRdZ1x/+cSpESZqnLjjTfKW2+9Fb436ctA
13nrtW/+wqWk19NzZdnmPxw/luheyRntJbA3o8cnX/R+DwAAnOHMmTPy1FNP
SVxcnDz44IOyb98+p3fpoug8ae3FWKBAAWnbtq3prROK+TIA5IyIiNaSM6K6
eOMv0rnn8xIXX1Bat24tH374YfjeqC+BPXv2SIcOHSRHTC75z0NDZd6ak44f
Q3S35Iz2EnytdGDeCAAAzqD53P79+6Vjx46SK1cuefrpp+XHH390erdSZdmy
ZVK5cmXzufmrr77KemkIGeSMiIjWkjOi19nvHJOW9zwmOXLkNJ9bf/XVV+F7
s/4XHD16VHr16pW4nzHSpM3DMjlhP+ulMeSSM9qLz4xpj//Maf2a/owAAE5z
7tw52bp1qzRu3Fjy5csn48ePl59//tnp3QqKzsnWdS6FCxc2fYB++eUXp3cJ
XAw5IyKiteSM6FWzuonLvpK6zTpKdI4c0rNnT/M5dnri2LFj0r9/f/O5eq36
d8iYOZ/Kiq3nHD926H7JGe0laA0j86YBANIduhY5ISFBqlWrZuY3T506Nd1l
eJqF3nbbbRIbGytDhgxJ93WXEPmQMyIiWkvOiCnVXo1j534mteq1kezZo+W+
++6Tzz//PHxv2qnwzTffSI8ePSQmJkZuqNlEnpm8QZZv+dPxY4YZQ3JGewk6
+8UneyRnBABIL+iMwNmzZ0v58uWlUKFC8sILL8iJEyec3i1Tb7ly5UqpV6+e
uT7s27evfPfdd/RkhJBDzoiIaC05I/qr2d3Yedvllkbt5brrouWWW24xPW6c
mkOtMw9Xr14tTZs2lWzZskn1W1rKyCmbmPuCYZWc0V5810j7Z43JPRoBACB9
8Ouvv8rChQulSpUqZpZz165dZefOnY7tz8mTJ83MlzJlyphZNQMHDpRDhw6Z
7BEg1JAzIiJaS86IwVyx5S/T9/D2e/tKrtx5JX/+/NK7d2/Zu3dv+N7AEzl4
8KCZdVi8eHGJzpFTmt3ZXcYv2iXLyRgxzJIz2otPnqh/ejxBM0cAAEg//Pbb
b7J+/Xpp3ry5ZM+eXapWrSrTp083mV+40Bxx06ZNctddd5kaxtKlS5t+jMeP
HydjhLBBzoiIaC05I1qZ8MHfMn/tKekzYpGUqlBLsmbLZmb4vfjii3LkyJGQ
vndrX51p06ZJzZo1JWvWrFKs1A3SY9AMmf3uMbO22+ljgxlPckZ7serH6NOr
kXpGAIB0h/ZrPHDggAwePFiKFCkiOXLkkJYtW8o777xjah5DyZdffmk+99Y+
kZpz3nnnnbJhwwbTL5K10hBOyBkREa0lZ8SLuXTjbzJx2V65+8HBEp+/mFm7
rPnfhAkTbM8b9bNo7f+jfXaio6Mld1wBaf2fx2Xc/B2yZNOvzJVGxyRntBef
foz+66Y91DMCAKRntG7w7NmzZsZzu3btzHw+XbusNYbvvvuurTOpNT/UfFHX
Resa6aioKFNHqZ9H63Wo5p4A4YacERHRWnJGTIsJW/+WRevOyuhZH8ptdz0q
ufMUMHmLrlXp3LmzLFq0SA4fPnxJnyXrDGnt/9itWzepUKGCyRdjcsVJgxb3
y8jJG2Xh2tPUMKLjkjPaS3KWGLh2+nzu6CFnBABI52jGp58Rr1ixQpo0aWJq
GzVzrFWrljzxxBOyceNGOXPmzL++X+3NvWfPHrMeulWrVmb2jOaLZcuWleee
e8708dE13NQwglOQMyIiWkvOiP9G7du4YO1pGT1jm7S9r5/kL1xKsmTJYrJB
vQa89dZbpXv37jJ8+HCZMmWKvP7667Jt2zbzOfTHH38sb775punjM3LkSOnZ
s6e5JtW1L3pdmjlzZonPV0xuu7OHmSU9f/VJ5kljupGc0V7850p7/I4p9YwA
AJHDH3/8Yd4HExISzFpmrW3UXFDnxWgN4h133GFmQT///PMyd+5cWbVqlWzf
vt3MkdFei8uWLTPrZLQnd5cuXcy6mbx5z7/nav+cGjVqyNixY2X37t1mjTR9
GMFpyBkREa0lZ8RLUfPGhevOyNTXD8pTL74jd9w3QEpXuEmuy57T5IV6Tah9
c7yfa8fGxpo/9Wv9vv5c88ms2bJL8dI3Ssv2j8nA518zs2c0xyRfxPQmOaO9
BMsUA7LGxOt3AACIDLS2UPPGU6dOya5du0wfnPvvv19KlSplMke97tPeO2bd
SkyMuTZUNYvU60N9f9XfM587x8dLs2bNZNSoUbJlyxbzHku+COkJckZERGvJ
GfFy1H6Jyzb/YTLHOauOyyvLv5Znp22R/qNWyEP9XpG7HxgsZSrdLNdmyiLl
qtSVu7oMkof6TpD/jVwqz0zeKBOXfSWz3zmWePvTsmzT7/RfxHQrOaO9ePsw
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
8HJyxj179qSo7wrMbFJ+/7PPPgvB1XAg9evVC7p9n5q1xO+99tprIdm+1eP3
3z6Ej61btwYc/6RzkjIX9JvjknK+i89Ml2B1kBd5/lttv+//+jp9eADARsgZ
IdIhZ0REtJacEUMtOSO6wcvJGXWWRVxcnN+83WD1X/+X+P+uB0JwNezLuXPn
kuvWAnIh37zn/fc/CMk+WD1+/+1D+Jg4cWLA8Q+6xtnjW6sYExMjxYuXkNJl
SkvFihWlyg1VpGrVqlK5cmUpW7aslChRUgoUKCBXXX3VRZ//VtvPkiVLqq8x
AIgsyBkh0iFnRES0lpwRQy05I7rBy8kZlXbt2vnmKx6/eq8LX2fKlMn8/ys1
dH3runXrZNCgQWbGzPDhw2Xv3r1pvjbevXu35faT9+/8tfPF9uVSSev2IXz0
S9mz0+Of9yVbp04dWb16tXzzzTfy66+/pvn+//zzT/n2229lw4YN5rlbsEDB
i57/lNsfOnRoCB89AIQTckaIdMgZERGtJWfEUEvOiG7wcnPGWbNm+a4lDVbD
dcEhQ4ZY3s/Ro0elVKlS5+f1puyTl3it27VrVzl79uxFr41nz56d6va95o6N
veh9XSpp2T45Y3h5+OGHLWoMz58jz4X8b9y4cbZsT3PHTvfdl+r5T7n9EsVL
2LJdAHAeckaIdMgZERGtJWfEUEvOiG7wcnPG06dPS5aoLL5rUS3Wj2bLmlUO
Hz4ccB9//fWX1KxZ0yKTOX+fjz766EWvjTt3vj8N61f/T5o1a3bR+7pU0rJ9
csbw0qNHj6BZuP+5GTVqlG3b1J4CTZs2tTz//n7xxRe2bRsAnIOcESIdckZE
RGvJGTHUkjOiG7zcnFHp3Lmzb21Y0hrRwMxQ11n7s3Tp0qBZTMq/X3PNNXLs
2DHLfdB1rtdlz37R7eufw4YNS9O19qWQlu3r9yF86LrkYDm4f+7XvXt3W7f7
1VdfJfduvMj2n3/+eVu3DQDOQM4IkQ45IyKiteSMGGrJGdEN2pEz6ixpT7A8
Tf8M0o9uzZo1PrevfUvtIPVlgWtOFyxYYLkPixYuTPP2df5wqEjL9qlnDC9z
Zs+xrDE12bgndHWuLVu2SrXG1bv9Vq1a2b5tAAg/5IwQ6ZAzIiJaS86IoZac
Ed2gHTmj0rRZM8s1ob7Z2/9J4SKF5cSJE+Z227dvT+plaLmu9MIc4CeffPKy
tx8fHy9///33v7rm/jek5fFTzxheNm3aFHD8fTPt8+enTOkytm/7/KzrwPPv
v319XgJA5EPOCJEOOSMiorXkjBhqyRnRDdqVM37yySdy1VVX+eYn/jVcKb6u
Vq2aWQfdpEkT62zO4zsvo1OnTkG3feDAAbn66qsDayKDbP/xxx+/lMvuNJPW
xw/h49ChQwHHP1imHZU1yvZtf/7550HPf7Dt//jjj7ZvHwDCCzkjRDrkjIiI
1pIzYqglZ0Q3aFfOqHTr1i1FlhK4dvh87pa8jvjaazMF1nqlUgdYr169oNv1
9of0+GQ5wbev9ZOhJK2PH8KH1q9qDu3//PM5RyHK+s6dOyc5cuQI+vz33/62
bdts3TYAhB9yRoh0yBkREa0lZ8RQS86IbtDOnPHkyZOSO3duy1kuAfWGVl9b
rGuNyxMXsE3NZq644soLv+cJuN+Uf69QocKlXHL/K1LbfkohvBQpUiRNz79Q
zH2uVatWmp7/ryYk2L5tAAgv5IwQ6ZAzIiJaS86IoZacEd2gnTmjMmPmjIvm
Kf/nc/3quVDzl1zXlXKttPl+itxxx44dSds6e/aslCldOpUZG77bHz169KVe
dqeZtORJ+vghvNSsWTNNz79Vq1bZvu3b/HuHWmx/5syZtm8bAMILOSNEOuSM
iIjWkjNiqCVnRDdod874zz//yE0335RUg+ifE1rV+FnV/fn2OPSYuby6jePH
j/vVifnO2fDffqZMmf71Y7kUrLbv/1ghvLRt2zZNz79Zs2bZvu3297RP0/N/
0qRJtm8bAMILOSNEOuSMiIjWkjNiqCVnRDdod86o7Nu3T7KnuD+r9dCBdYge
n+8HzR4Tf1apUiXJmjVrqlml/9+7d++e6j7/9ddfcvToUTPPZv369bJ79275
/fff//VjT3VfmAPjGD169EjT82/kyJG2b1szh7Q8/ydPnmz7tgEgvJAzQqRD
zoiIaC05I4ZackZ0g6HIGZV33nknxQxo/3kbgX0Ug9Uk6tdJPRc9fj8PNk/D
73e8tZDZsmUzGWIwdB22zq/Jnj17wPavvPJKUzOp+c+vv/6apscdbPvBHj+E
lxEjRqTp+dfzvz1t33bdunXT9PxfsGCB7dsGgPBCzgiRDjkjIqK15IwYaskZ
0Q2GKmdUEhIS5Nprr029f+JFeitaGzijOrlu8ELPuwu/M2rUqIB9O3HihNx1
111p3n7BggXlzTffvOhjDrb9YNuA8DJjRmDf0GDnRp8TdvL999/LNddck6bn
/4YNG2zdNgCEH3JGiHTIGRERrSVnxFBLzohuMJQ5o6LZSWyuXGnLDANqE/3y
Q8s6tMCfef+sXLmy/Pnnnz77tGvXLilatOglbf/JQYNSfbz+2w+Wh5Izhh+t
r03L86927Vts26b2EdV+omnJzK+44gozrx0AIhtyRoh0yBkREa0lZ8RQS86I
bjDUOaOi99Gx470mSwm2rtiqr2LyHOA01jT6XRdnzpxZdu7c6bMv27dvl5w5
c17W9gcMGGD5WNOSKZEzhh/tu+n/nAl2/ksUL27L9jRj7N6je6rP2ZTb156j
ABD5kDNCpEPOiIhoLTkjhlpyRnSD4cgZvXz++efSt29fqVG9+oW1pOevY6Oj
o6Vhw4Yybdo0GT9+fMB+eLz1hSlmNwfWDabMG8/3VlyyZInP9o8cOSJ58+YN
UmsYvOYwte3PmD496GNMWQtptW/Mmw4/x44d8zn+Vudfe4rqTKDLQWehN2/e
PNXz77/9IUOG2PRIAcBJyBkh0iFnRES0lpwRQy05I7rBcOaMKdFZzge//db0
SdTar5RovWBqs6OD5oAp/tSsaN68eQHbbN26dXJm6JcfelJmjR7rbXr/HhUV
JQcPHgzYRtD6tRTrsb3bhPCjM8rTcv73799/Sfevz+PZs2dLbGzsRc9/yr9f
ddVVQZ9LABB5kDNCpEPOiIhoLTkjhlpyRnSDTuWMF2PYsGEB17ne3MYTUIeW
/HtxcXGybt26gPvTPpFpqV1My7pn7/a7du0asB2r+/efPQ3hp0KFimk6/6tW
rfrX9/3VV19JgwYN0nz+U6qZBAC4A3JGiHTIGRERrSVnxFBLzohuML3mjMqK
FSskT55431rDgMwv+es6deua+b7BOJ8BpV4XmdSLMame0VuDFnz7WbJEyalT
vm80ac0rIfy0bds2Tef/5ZdfTvN9nj59Wvr373++D8C/mJ3u3X5MTIz8v6NH
Q/ioASCckDNCpEPOiIhoLTkjhlpyRnSD6TlnVM6ePSsTJ06UcuXKJeV93j81
26lbt66MfHakfPrppwHrr718+eWXgVlikLnSSfmPz/eSf89/++p0vz6NwbIr
/zXZ5IzOoL1B03L+uzxw8frCc+fOydSpU039bKr5osX5925/2bJlYXjkABAu
yBkh0iFnRES0lpwRQy05I7rB9J4zpkRrB7/44gtZvXq1fPTRR/Lrr7+m6XaD
n346RY4UWJuYsnYxe/bsJtMMPsvF43ubxN9p2bKlz7YulmV6WDftGLNmzbro
+VerVKlieR9//vmnuZ9SpUr5ndcgdbGpnH81tbnlABCZkDNCpEPOiIhoLTkj
hlpyRnSDkZQzXio33XRTcu6TSu1ZdI5o2bVrl6mL1PwwWL2bf6aUM2dOnzpK
/8wqIKekntExPvvss4vWHuqfmTJlCpg5febMGbOeukiRIkHWXPuf74uf/+7d
u1vW3wJA5ELOCJEOOSMiorXkjBhqyRnRDbo9Z9T1rVmyZAnIffz/VMeOHZt0
O80b/TMiq1nXhw8fTrqdVXblv30IP3/88Ydce+01luc/ZU6odbOK9l8cOnSo
6aOY2qzzi2WXXq+4wmPuj4wRwJ2QM0KkQ86IiGgtOSOGWnJGdINuzxkPHDgQ
PBfy+NacXXXlVXLixAmf2xYoUMCybi2lW7duTbqNVQ0kOWP6oFLFikHP//n1
zMn1hnPnzpWNGzdKfHz8Rc9/wFpsi/OfK1cuef31150+BAAQQsgZIdIhZ0RE
tJacEUMtOSO6QbfnjO++++75LMiTSu1Z4s/KlC0TcNvGjRqb21mugb3w95WJ
2/BitWbWf/vgDJ06dQpec3hBbz1jkyZNJFvWbGk6/ynnlKd2/jvee6/8/PPP
Th8CAAgh5IwQ6ZAzIiJaS86IoZacEd2g23PGyZMnB61FS65hO/9169a3B9z2
jjvuCLydf61a4rX40qVLk27jn18lZ02+9wPOoGvjg51/n2zQ4wmc5ZLK+beq
XQ12/suWLSv79u1z+jAAQIggZ4RIh5wREdFackYMteSM6AbdnjMOHDgw1RzI
my317t074Lb3Xah9C8iW/OraZsyYkXQbT1JWldptyBmdYv369UHPf6pr3S9y
/gPz69TvT9dPf/LJJ04fCgAIAeSMEOmQMyIiWkvOiKGWnBHdoNtzRv91ssFq
2DQTGjduXMBte/ToETRn8qS4nf45fvz4pNukli2m3D44w8mTJwP+/xSYN3p8
zvPFzr/HovYxtfOvc2X27t3r9OEAAJshZ4RIh5wREdFackYMteSM6AbdnjM2
bdo0aKbknzkuX7484Lb/69s31azI63Ojn0u6jTen8s+i/LcPzlGwYMHgmbPf
c8Oqn2fQrNqbN6bx/KvlypWT33//3enDAQA2Qs4IkQ45IyKiteSMGGrJGdEN
uj1nrFLlxsCaNW9OlCIX2rRpU8Bt9Vrb+3s+Mz38MqNRo0Yl3SZlnhSwrRTb
B+do1KhRwPn3r2X0yQQvcv59znMaz7/3eyOeGeH04QAAGyFnhEiHnBER0Vpy
Rgy15IzoBt2eM+bPnz9o3uOfC+3Zsyfgtv369Tv/e0lZlH8dm8c6ZwzIpXy3
D87Rq1evwFwwKRv0nxd98fPvO286beff+3V0dLScOHHC6UMCADZBzgiRDjkj
IqK15IwYaskZ0Q26PWe8NlMm3/WvHv+857ynTgW+YSTVM17EZ0c9m3Qbn9o3
T2AtnHf74ByTJk266JwePU963q699tqLPwc8vn9Py/lPeZshQ4Y4fUgAwCbI
GSHSIWdERLSWnBFDLTkjukE354ynT5+2zIaSsx+PXHvNtfLPP/8E3L7v//oG
ZEnBevaNHj066TZBa9iCCM6xdu1an/PvSZH/mXnRF8619k88evSovPDCC3Lf
fffJXXfdJd27dze54IQJE2TRokWyZs0a2b59u3z99deydetWWbBggfm9a6+5
JtXzn3L7BfLll7///tvpwwIANkDOCJEOOSMiorXkjBhqyRnRDbo5Z9R5vsGz
HV/z5c8X9PaaKQVmRYH9+8aOHZt0m4uvnyVndJqDBw+mem68Zs2a9ZK3sWvX
LilQoECann/qmtVrbHyEAOAU5IwQ6ZAzIiJaS86IoZacEd2gm3NGneX70Ucf
yVtvvSWzZs2SZ58dJX369JEOHTpIo4YNpVKlSpI3b16pXr160NvfdtttF18z
m+ismbOSbuO7Rtb/d5PXzIJzaO3g1VddFTT385/3cuzYsUvezscffyxXXHlF
0PPvv63HHnvMxkcIAE5BzgiRDjkjIqK15IwYaskZ0Q26OWe8HM6dOyexsbGp
5ove9bW6dtaLb82jx7IfJDhL0aJFk9dNB6k/9c58+eCDDy5rO23atEm1xtW7
fc0kACDyIWeESIecERHRWnJGDLXkjOgGyRmDs2zZMp+6xMBZw8k/O3LkSNLt
rHNJ3/XW4Cz169f3q2H0BK1v1B6Ml4PW0lqtt0+5/auvvlp+++03mx4dADgF
OSNEOuSMiPj/2TsP+Jru///39tshEqQhIkaSkkSshGgQao9atepbtLQ21fEz
S9RetTexaoTYIWi/sYMI2podqLZfq3z/0VKjGlT7+uf9ISS590Rwbs4dr+fj
8XxoQu8959x17uu8P+831ZY5I7W2zBmpI8ic0ZzLly+jWDH/DLOCTRZr0qQH
X1os1TtaypeIsXTu3PnRa+JTHq9x48Y91f3cvHkTzz77rNnjbynTlHkyhBD7
hjkjsXeYM1JKqbbMGam1Zc5IHUHmjOk5f/686ttosQ7xQf50r/ZNbN++fbr/
/2GWZL52+l7uaGLOaAOMHDky/WOkkTV27979qe/L39/f7PF/xvSM2f1LDS0h
xL5hzkjsHeaMlFKqLXNGam2ZM1JHkDnjQ3bv2oX8+b0srmtNX8/48Pw74/fI
jLVqWjOGibEsXbrU7LF58HOax79BgwZPfV9Nmza1+BzIeP/Tp03TYc8IIUbC
nJHYO8wZKaVUW+aM1NoyZ6SOIHPGe2zatAkvvPBChvznfraYNndMs5Y6ICBA
zS5OS1byJKlvJMaSkJCQJjM2pasvTPv4BwUFPfV9fdyvn9njn75e9t79Dxs2
TIc9I4QYCXNGYu8wZ6SUUm2ZM1Jry5yROoLMGYHDhw/DJUcOyxlhutrG9LOj
o6KizG4rfRZpIae8n2MRY5H18Zlmwfd1c3V96vv6ZNAnj7wv+V2/fv102DNC
iJEwZyT2DnNGSinVljkjtbbMGakj6Ow54z///IOQkBCLOaLF7ClNZijfI1+r
/xratGmD999/H0MGD7aYJVlaj0uM5e+//35Qv6qVI6c+bjIX6GkYMmSI2eNv
6efevXvrtHeEEKNgzkjsHeaMlFKqLXNGam2ZM1JH0NlzxofrZ9P3XUxdR2t6
xnyGi3kmZWm2R9payIzzRrhu2hbw8/W1nDNmePyPHTv2VPczdOhQi8+DjDn2
gAEDdNozQohRMGck9g5zRkop1ZY5I7W2zBmpI+jsOeOoUaMsrpd9tOYzih/W
Ld7vuZehPi6txHiqVKli8bHJ6NNmBVLrqnn7ae5fnouEEPuGOSOxd5gzUkqp
tswZqbVlzkgdQWfPGXv17pVJbWLGNdCW69As/V3G/4c5o+3RunXrR9Sm3nPu
3LlPdT8hwcFZyqznz5+v054RQoyCOSOxd5gzUkqptswZqbVlzkgdQWfPGadM
mWK5l2Jq/pNpvVuGDNFkOVO09P8Q4+nTp4/ZY27p8R80aNAT38fSpUs1nzOm
DH0gd+/erePeEUKMgDkjsXeYM1JKqbbMGam1Zc5IHUFnzxlPnDihWXOYLnsy
PZNudrR53aL5Wlitv+O8adtg6rRpmdacpvrOO+889m1fvXpV5ZMuLi4WH//0
92vC888/j5s3b1phLwkh2QlzRmLvMGeklFJtmTNSa8uckTqCzp4zCh06dHgw
78U8C8qs3i0LmeODmsg066pNzBltgXUxMQ+y48we/xo1amR6O3/++Sd+/Okn
bNmyRWWL1apVQ44cOTJ9/DPm13Xq1M2mvSaEWBPmjMTeYc5IKaXaMmek1pY5
I3UEmTMCt27dStOr79Hrnk0Z5gZbnEOdMYvMMHuaGM+hQ4ey+Jg/g/DwcFSu
XBkVKlRAaGh5lC5dGoGBgfDw8Hiixz+jS5YsMfpwEEJ0gDkjsXeYM1JKqbbM
Gam1Zc5IHUHmjPf4559/MGPGDHh6eqapZ0utQdNaV2tKX8OYhdnFqRLj+fXX
X83WNKevZ7Te45/2/8ufP7+qiSSE2D/MGYm9w5yRUkq1Zc5IrS1zRuoIMmdM
z507d/Dtt99i+fLl6N+/Pxo3fl3VsBUrVkwdo2dNJvPcKbN8ycKaXOaMtkNO
15zm+V+6x9Nk9jjq8finvd05c+YYfRgIITrBnJHYO8wZKaVUW+aM1NoyZ6SO
IHPGx+P27dv43//+h++//x4JexMQGxuLRYsWYdLESao3n1aW9DDH4rppW6JE
iRLpahcz5oFm86c18kjLdY3aj3+qDRo0wN9//230YSCE6ARzRmLvMGeklFJt
mTNSa8uckTqCzBn1JWNmZZZTsZ7RppCcz9K66cxqFc3n/WR8vB/9+IshISH4
/fdMTlQIIXYHc0Zi7zBnpJRSbZkzUmvLnJE6gswZ9cXSullLGRWxDbp3727h
8TFZzAgzmzWe2bppS/++XNmySEpKMnr3CSE6w5yR2DvMGSmlVFvmjNTaMmek
jiBzRn15VL8+5oy2xdixY9Vjcm89s+kRs1w0Zkk/Rr9Gua+OHTvixo0bRu86
IcQKMGck9g5zRkop1ZY5I7W2zBmpI8icUV+01syaTOl/JraBzPtRueB9M9Yz
mrR6MFqa7WLSXjP97LPP4vXGjbFv3z6jd5kQYkWYMxJ7hzkjpZRqy5yRWlvm
jNQRZM6oLxnr2kyWcinmjDZDYmKieb2pyWQ+yyVNXpz+MbZc4yg+/8LzqFSp
EiIiInDixEmjd5UQkg0wZyT2DnNGSinVljkjtbbMGakjyJxRX0zPmM8itiSx
Dc6fP//Ix8ssW8xQ1yi1igULFkRYWBiaNm2KIYMHY/uOHfjjjz+M3j1CSDbD
nJHYO8wZKaVUW+aM1NoyZ6SOIHNGfcksW0zby4/YBnfv3lV1hw9rGdOvm06b
M65duxZffvklDh8+jG+//RYnT57EhQsX8Pfffxu9G4QQG4E5I7F3mDNSSqm2
zBmptWXOSB1B5oz6kppTPVgvbbbOlvWMtoa/v7/ZY2WyMF86ISHB6E0lhNg4
zBmJvcOckVJKtWXOSPVyZfx1TIs+hogJsegxYC7e6jocDVr2QNHi5fDCCzng
XyIM9Vt0R+suQ9GtfyT6j4vB5KhDWL79quHbTumjZM6oL+a9GU3pMqzU3xHb
od5rr5nVMmac7yJ/v3jxYqM3lRBiI/zzzz/q83Hv3r1YuXIlpk6dioEDB6o8
pmjRonB3d0ft2rXRs2dPNdd+0aJFiIuLw08//YRbt24ZvfmEaMKckVJKtWXO
SJ/Y/X9jwaZz6DNqBWq/3glFipZGHndPuOXyQE7X3Mjh4oYXc7ggR4qurq5w
yZkz5eecKb93VX/vlssduVL+fSHfQFSr/zY+HLwIc9f/jHX7/jJ+3yjNIHNG
fbG8Vto8byS2w/s9eqTJEzPOizY9yB8HDxps9KYSQgxE8sGjR49i8uTJaNSo
Efz8/JA3b16VKebKleveOaHLvXPD1P/OmXKO6Obmhjx58sDDwwNeXl6oWLEi
+vbti82bN+Py5ctG7xYh6WDOSCml2jJnpI/r2sRbGD1nF2q/3gEFCvvDNZd7
yvmhG/wDAtC6dWsMHz4cCxcuxJYtW1RvLpkfcPHiRfzyyy/4/vvvsX37dixZ
sgRjxoxBu3btUKJEiZRzy9xwdXOHZwFfvFqvDYZN34JVu/4wfF8pTZU5o76k
mzFtyjhz+uF8YmI7TJo0yTwfNpmvm37rrbeM3lRCiAH8+uuv6vyuTp06KFCg
gMoUX3rpJVSoUAHdu3dX7yFS07hnzx6cOnVK9W2V88MzZ87g0KFD2LRpE+bM
maNmz0s+WbhwYZU9Su4YHBysfi/nkez1SmwB5oyUUqotc0aaVWMS72Ds/L2o
0fAd5M1fSGWLpUuXVtead+zYoc4Xf//9dzU7NDk5GXfu3DE7F5Sf5ffy9/Lv
rl69qvIZ6ec1ePBghIaGwi1Xbri/5IXKtf6NETO3YfXuPw3fd0qZM+qLxRpG
CxLbITY29kH+a9KaL53yu0qVKhm9qYSQbETO/aKiolC9enVVsyi1i7IWWtZI
HzlyROWP165dw82bN1Wt419//aXWU6ci/y2zpm7fvo0///wTN27cwJUrV3D6
9Gk1V6p9+/bw9fVVmWNgYCAGDBiAH374Id1tEJLdMGeklFJtmTPSrDhz9Qk0
adMLXgVfVrWHNWvWRHR0NM6dO4fr16+r7PBpzvfknFPOK//3v/9h3bp1aNiw
Ycq5qgfyehZEveZdMWXZEaw/cNfw40CdV+aM+mJx9ku67JE5o61x7Ngxs9rF
hz78ruWZ39PoTSWEZAOSC8qa5saNG6uaQ29vb3Tu3FnVK/72228qV5T88EmR
80q5D7kmLXPrJ06ciDJlyqg6SalvnDJlijpvJMQImDNSSqm2zBlpZq6Iv46P
Bi1EQMkwuOR0Q8WKlVSPblkDLdekrXEtWc4pZQ7hqlWrUKNGDbjlygPfYmXQ
te8MRG391fBjQp1T5oz6kn6NtEZmZWLOaEtIDbopTT2jpVw4Vbn+RAhxXH7+
+We1nsXHxwf58uVDmzZtEB8frzJBuXasN7IeRnJLyRtHjhyp6hrl81jWV0s/
HrneTUh2wpyRUkq1Zc5ItZyz7ic0bvUR8nh4wdfPD0OHDlXrVGTNc3asVZEc
8+zZs5gwYQICixdXc2NqN+mIaSu+NfzYUOeTOaO+pK+BMz1Yj5sxcyS2hdQr
pa89tbzm/eDBg0ZvKiHECkjet3XrVtSrV0/VFVapUkX1XJS10dmR9cn9yzWP
L7/8Eh06dICnpycCAgJUbaPUUBKSXTBnpJRSbZkzUktOXHIQlWu3hKtrbnUu
GRcXp9Y1Z3fvbckz5fq1rMFp1rw5cuV2R7nw1zAqMh7r9/N5SbNP5oz6otWP
MV2vRtYz2hyvvvqq9trpNHOopVcbIcSxkPUmixcvRkhICPLnz4+ePXuquSzW
Wt+SGVIzKbni/Pnz1fZIT0jJfeT6NCHZAXNGSinVljkjzej4RV+hYvWmyJPn
JXTr1g3fffedOrc0Ejmf/O9//6vOaT3ze6HMKzUxYtZ2w48VdR6ZM+pLupq4
jOum0/xMbIuuXbtp5ItpcuKUn2VOAyHEcZDzsAULFqBEiRLw9/fH9OnTVQ3j
0/Rf1AOZG7Nz50689tpragZN7969mTWSbIE5I6WUasuckaZ19uqTqNmgnZrB
0qtXLzXrz+hzyFSkljIpKQkDBw6El1cBVKzeDBMXfWX4MaPOIXNGfXmYJZqv
nb6XO5qYM9ogMj/2kXWoKTZr1szoTSWE6MiaNWsQGhqKoKAglTfKGhdbmfcs
67W/+uorNG3aVNU1Dhs2TGWghFgT5oyUUqotc0aa6uK4/6dmSue+X8f4008/
Zfs66Uch57QyW1DqGj3y5sNrzbshMuYnw48ddXyZM+pLVmaJMGe0PaQv24PH
KkMdqilNPaPUPBFCHIPdu3ejbt268PPzw8yZM1XGaGtIveXevXtVr59ChQph
9uzZqtaREGvBnJFSSrVlzkjFNXuS0eGj8fDw9EbLli1x6NAhm6ljzIhkjT/+
+CPatWuHPC/lxVvdRmDZ1suGH0Pq2DJn1BdLmaJZ1phy/k5si/Pnzz+oXcy4
Vjpt7vhijhw2+xlCCMk6cr71zjvvqHkrw4cPt+lZK1LXuH79elSoUAHBwcHq
v22l5pI4HswZKaVUW+aMVOw/di2KFi+HypUr44svvlDXhW0Z+f6amJiorlt7
FSqKnsOXYt2+vww/jtRxZc6oL+n7+pnnVKk5FrEt5Dt7zpw5zTPidI/dve9d
0lOXEGK/XL9+HUOGDEG+fPnUOhd5Tdt6bpecnIwZM2agaNGiqn/D119/bfQm
EQeFOSOllGrLnJFOW/Gdmi1dxMcHkZGRdrPORK5by0zTUqVKIzS8Pj5dsNfw
Y0kdV+aM+mKphtHSelxiewQHh6R7nCyueU/5O1ljTQixX6Kjo1GyZEk1YyUh
IcHmeuloITWXMg9G8tGIiAhcunTJ6E0iDghzRkop1ZY5o3O7evdNtO4yFO4v
eaq5LxcvXsy+D2gduHbtmjqHzJsvP1q80x9L4pIMP6bUMWXOqC9p54aYLM2E
uf8nsT2kt0b62eAmmJ4xn+ETOXu20ZtKCHlCvvnmG7zxxhtqtvSiRYtw+/Zt
ozcpy0jN5ZEjR9CkSRMUK1ZM5aX2kpES+4E5I6WUasuc0bkdNHkTAkpVQO3a
tbFr1y67Ow+Tc8ljx46pc0nvIv7oO3olYvf/bfhxpY4nc0Z9Se2/eC+TMlmc
K8J6RttEvltZnjmd3sGDBxu9qYSQJ+DWrVsYOXKk6snYp08fu/x8k/4/ko/K
TKo333xTnSsSoifMGSmlVFvmjM7rki2X0KBlD3h5FcC0adNUTxt7RM4l582b
h4CAANRq3AGRa34w/NhSx5M5o76krrVNN0uE86btgilTpljMhjM+lp06dTJ6
UwkhT8DOnTtRvXp15fbt2+3uGnQqv/76K3r06IH8+fOr81zJTwnRC+aMlFKq
LXNG57XfmFXwLVZGXef99ttvs++D2Qr88ssvaN++PTy9iuCjIYuxfj+fs1Rf
mTPqy6Pr4UzMGW2UlStXZujJaLJYi9qoUSOjN5UQ8pjcvHlT9aORWsYxY8bg
jz/+MHqTnhhZ8/L555+jYsWKaNy4Mb766iujN4k4EMwZKaVUW+aMzumyrZfR
8N/vo2DBQpgzZ47Nz5d+FHKtXWbClChREnWadEJkzE+GH2PqWDJn1JeszBHh
vGnbROZBWMqGTamP6X3LlStn9KYSQh4T6aFTs2ZN1K1bV73WbX2+9KOQPt7S
f9zLy0vNobb3811iOzBnpJRSbZkzOqdDp29GUHA4mjVrhsOHD2ffh7IVOXPm
jPp8L+QXhI/HrjX8GFPHkjmjvlisX0wzQyQ1syK2x48//pguC9aaHe7t7W30
phJCHgO5Zvvpp5+qTG7EiBG4ceOG0Zv01EhOum7dOoSGhuKtt97C8ePHjd4k
4iAwZ6SUUm2ZMzqf6w/cRdvuo5A3r5c6n7TXvowZkfNj6RtWqFBhtOo0GCt2
XDP8WFPHkTmjvmj1Y8w4e5rYHpI9ZGXd+3PPPY+7d+8avbmEkCwi1xBatWqF
8uXLY9OmTXZfy5jKxYsXVW+d4sWLY82aNUZvDnEQmDNSSqm2zBmdz7mxp1Gt
/ttqTZucR1qD3377DZs3b8bw4cPRvHlzhIWFoVatWujatStWrFiBpKQkq9yv
rPepUaMGKlVvislRhw0/1tRxZM6oL1mZV8yc0XZRr4MH9YypNajm2bF8vyeE
2AdS91e2bFl07NgRP//8s1Xuw4jzQ7kOPXnyZBQqVEjVaUoPSkKeFuaMlFKq
LXNG53PotM0oXiZcfRaeOHFC98/ds2fP4sMPP1Trbtzc3PDCCy/gX//6F55/
/nm4uLjgpZdewr///W/s379f9xmGMluwc+fOKOwbhP5cO011lDmjvljux2hK
9zNzRtuleGBghtkvJrPHUf48dOiQ0ZtKCMkiMvdFzt0mTpyIO3fu6H77Rp4f
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
TecMf8yofcicUV9S10g/XDdtMjuuzBkJIeTpkXo+yQvlOrKPj49aI92gQQPE
xsaqXC2zuSiSPcq/k96NJUuWVP11MuaRtoKsc5EM1dPTU/Ucv3z5sua/lWMi
86jluPTs2RNFihRR/Rslo1yzZo3dzr4h2QdzRkop1ZY5o2O4JO4SuvWfjYBS
FVSOVsinONp2H4WZq0+oOSha+WJaZT3xhIVf4pUqDVVPm08//TTTczQjkOvo
06ZNg5+fH0qHVsew6VtU/8lH7Zvs/6pdNzFr5Qm06Trsfp1nLlXn2GPgPLXO
2ujHkNq2zBn1xVKmmF4Tc0ZCCHlKTpw4oXouptbtVa1aFUuXLlX9CmWWXlaQ
msA5c+aonoZhYWHYuHGjzfXylrkvnTt3xksvvaTmvJw5c0bVLj4KWSMua8UT
EhLU7Bu5hi3rxJs1a4bNmzfbfP0mMQ7mjJRSqi1zRvt2+c6r6D1yOcqUr6n6
EEofxuZt+2Jq1BGsjL+hWeenpWR2w6ZvRqlyVVXWOGTIEFy8eDHbPrMzQ9b0
jBs3TvUpL1o8FP3GrMYaC2vAM1OyVDkuk5YexuttesGzQBF13ELCaqfc3ios
337V8MeU2qbMGfUl7Tppk6Wc0cR504QQ8qScPXtWrf2QPoQyQ7pcuXJq3fPp
06dVn8KsZHBpkfo+uf4s9ZChoaFYvXq12Zpko/j222/VbGmp05Q/pa7xcXNQ
qdG8cuWKyhabN2/+oG+l3J70Lc+s5pM4J8wZKaVUW+aM9unq3TfVfOWwKo2R
O08+uOf1Qt2mXTBuQSJWxF/Dun1/PfFtS//GodM2o0yozB90R9u2bXH48OHH
PifVE7keLzMD8+XLh4CSYfj40zUpx+DPJ95HOT5ynMbMT0Ctxh3U8XNLOY4V
qzfFkGlxqgbU6MeY2pbMGfXFYv2i6WEdo+l+1kgIISTrXLp0CbNnz1brnCVf
DAoKwpgxY3Dy5ElVm/c053KSw8n13pdfflk5duxYQz/7JBuUeTYy70U+m999
91188803D+bYPAmSJ8oxlLXTtWvXVmup5fq2zMORmdu2VsdJjIM5I6WUasuc
0b6UesMxc3bh1Xpt4J63ANzy5EXlOm9i+MxtiN52JUtriLOiZI0TF32FqnVb
IXced3UdfO7cudm+jlp650RHR6Ny5cpwTTlfLv9qI4yK3Kl6Tep1POW4DZu2
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
Wbb9CqK2/oolWy6pP5dtv6x+vzL+usrl1ibewvoDNlKn+RiPmzw+w6ZtRniN
Fupxk8eveoN2GDs/IVt7SdLskzmjvmitmTaZ0v9MCCHOhtTtRUdHq/xNagEl
s5JM4+jRo6pe0N5yK1lnLHWXsrb6xo0bav9kPrT0k5R8TnrsSJ4o/Q1l/yRX
lFpBW81RtZB9vHDhgqq/rFSpklrbHhgYqPpLSg9L4lgwZ6SUUm2ZM2a/kqtN
XHJI1fV5evkgp2tuhIbXR8SE9arnH3Mq+1AeJ3m8+o9di5AKdeGayz3l8fRF
g5Y9MGXZUavPxqbZK3NGfTGfNZ1hJgxzRkKIkyE1ips2bUKjRo3UGlzpNSPz
XmQWSnbPPCFPRupsHFnTPnXqVAQHB6u8Ueo2x48fr9aUE8eAOSOllGrLnDF7
lVkuzdv1g3cRfzXjpUTIqw9nKifcMnz76OMrs3Hk8ftw8CIULxOOnK65UNAn
EC3bR2D22lOGbx/VR+aM+mJKrWPMZO00c0ZCiDMg62537dqF1q1bP5gpIuuI
t2/frur8jJx5Qp4MyRulflNm9wwbNuzB7J7w8HA1L1HqOIl9w5yRUkq1Zc6Y
PcrsZJkZ7VusDHK4uOLl4uXQrd8szI09behMZaqP8vjJ7Bp5PLv0ngY//2CV
I/um/PnuB2OxYNM5w7eRPp3MGfUls2zx3lpqE3NGQohDI+ufZcZyly5d1CwU
WSMtfQtjY2PVmmLOEbF/UmfjHD58GD179oSPj4/q3yh9HKVnpawVJ/YJc0ZK
KdWWOaN1ldnJ3T+ejYCSFVTuVNg3SOWNUtcofQyZLzqW8niu2nUTs1aeQJuu
w1FI1a3mQmDpSngvYi6WbEkyfBvpk8mcUV/u1TGaHq6XzljXaGI9IyHEcZE6
t759+6o6N5nxUrVqVSxbtgwXL17E7du3jd48ojOy5l3WvickJKg5ODJfW+pW
mzVrpuZVy5p5Yl8wZ6SUUm2ZM1rH5duvoveIaJQuXwOubu7IX8AXzdv2U337
ZEbK+n32NfuEPp7Sm1Ee50lLD6NJm17wTHn85XkQHFYLfUevUs8Po7eRPp7M
GfXFvDejKV2+mPo7QghxJM6ePYtRo0ahdOnSKl8MDQ3F7NmzcebMGTVHxN5m
n5DHQ9bAy1r4LVu2oEWLFiprlLXy7dq1Q2JiImtY7QjmjJRSqi1zRn2VGsVB
kzchrEpj5M6TT80hrtusC8YtSMSK+GtYt+8vw7eRZp/yeMvjPmZ+Amo17pDy
fPBS86krVmuCIVP/o2ZuG72NNGsyZ9QXy2ulzfNGQghxBJKSkjBr1iyEhYWp
fDEoKAhjxozByZMnVS0b80XnQvJEWRu/du1atYY6da74+++/j2PHjtndTHFn
hDkjpZRqy5xRH2P23sboyHi8Wq+VyhYlS6pS598YMXMborddQUziHcO3kRr4
/Eh5/OV5MGz6ZoTXbKEy6DweXqhRvy3Gzk/gjHE7kDmjvqSbMW3KOHNafmZ/
RkKI/XP16lW1Hrp69eoPsiTJJ44ePar69jFPcm6khvXChQtYuHAhKlWqpGbF
BAYGYuDAgTh16pTRm0cygTkjpZRqy5zx6Vx/4C4mLjmEes26wtPLBy5u7git
XB8RE9YjavMllT8avY3UdpQ8UZ4X/ceuRUiFOnDN5Z7yvPFFg5Y91Jp6WW9t
9DZSyzJn1BeLNYycN00IcRCkRnHjxo1o1KiRWhvr7e2Nrl27Yv/+/apPn/Tr
I0SQWtbk5GScPn0aU6dORXBwsMobQ0JCMH78eJw/f97oTSQWYM5IKaXaMmd8
cmXWh/Rc9FazPtxQsmxV9By+FAu/uIC1CbcM3z5qu65JeX7I8+TDIYsQVCYc
OV1zoaBPIN5oH4HZa08Zvn3UXOaM+mJx9ku67JE5IyHE/pD1sLt27UKrVq0e
zPqQ/96+fbvqyyf9+QixhOSNN2/eVDOChg8frmYESd4odY7z5s3DpUuXjN5E
kgbmjJRSqi1zxsd3/sazama0b7EyyOHihqLFy6Fbv1mYt/401uxJ5gxpmiXl
ebI64U/MjT2NLr2nwc8/WOXVvil/vvvBWCzYdM7wbaQPZc6oL+nXSGfMGh/2
aCSEEHtA1j8fPHgQXbp0QZEiRdQa6QYNGmDDhg2qDx/ne5CsIs8lWVN/+PBh
9OzZEz4+Pur5VLt2baxevRrXrl0zehMJmDNSSmlmMmfMukviktD949kIKFlB
5UGFfYPwdo/RmLn6pJr/wnyRPonyvFm162bK8+gE3uo2QtU1uuTMhcDSlfBe
xFws2ZJk+DZS5ox6ky5PlD9NJouZo61z5coVHDp0SM0OlR5s06ZNw6BBg9Cr
Vy9069ZdzRCVmaL169dHw4YN0a5tW3z00UcYOnQopk+fjqioKHz++efYt28f
jh8/rmZFMI8gxL6Q+rO+ffuq+jOZ8VK1alX1fnDx4kXcvn3b6M0jdoqsrZc1
9nv37kWHDh3UXGqpj23atCk2b96s1uYT42DOSCml2jJnfLTLt19F7xHRKF2+
Blzd3JHf2w/N2/VT/fRW7r6B9fvuGr6N1P6V59HK+BuYsvQImrTpDc8Cvur5
FhxWC31Hr1LPQ6O30ZllzqgvWv0Y0/VqtIN6xkmTJqXbXpNWr0mT9jrxjPv/
7LPPolSpUqouatGiRfjxxx+N3k1CiAXOnDmDUaNGoXTp0ipfDA0NxezZs9Xv
Zb4HZ0gTPZC19rLmXq5nyXUryRolc5TrWImJibw2ZRDMGSmlVFvmjNpKjeIn
kzfhlSqN1HxgmSMt817GLdiPFfHXsG7fX4ZvI3U85Xklz68x8xNQ+/WOD+aX
V6zWBEOm/ger9tw0fBudUeaM+pKuH2PG/C3Nz7aO1COmn5VtymKemLX9T73d
QgUL4p133sHixYtx7tw5o3ebEKdG6o5nzZqFsLAwlS8GBQXh008/xcmTJ1WN
GfNFYg0kT5Q1+GvXrkWdOnUezC/v0aOHml/O2eXZC3NGSinVljmjuTIjenRk
PF6t1+pBxlOlTiuMmLkN0duuICbxjuHbSB1feZ7J823Y9C0Ir9lCZd15PLxQ
o35bjJ2foGZXG72NziRzRn15mKWZr52+l7uZ7CJnjIuLM6/DfJAXmlROaLKU
HWZx/58xZfg392+jdJkyGDhwoJpdy++WhGQPV69eVeuhq1evrjIePz8/lTVI
xiP99PhaJNmB1MpeuHBB1bvLjBiZFRMYGIiIiAicOnXK6M1zGpgzUkqptswZ
H7r+wF1MXHJQ1Sx6evnAxc0doZUbIGJCLKI2X1L5o9HbSJ1PyRPl+dd/bAzK
VqwL11zuKc9PXzR4o4daY71u39+Gb6MzyJxRXzLOlTZlzOjspJ7x66+/zrAP
JgsZYob6xfu/z8r+W/q7Bz/fvx+ZOSHfL7///nujDwchDonUKG7cuFH1WPXw
8FBrVrt27apyfumfJ330CMlOpGY2OTkZp0+fxtSpUxEcHKxqa0NCQjB+/Hic
P3/e6E10eJgzUkqptswZ7zlr5Qk0a9sX3kX81YyXkmWroufwpVj4xQWsTbhl
+PZRuibleSjPxw+HLEJQmXDkdM2lnq9vvDsAkWt+QOx+5o3WlDmjvmQlT5P6
PltH+rA9yBbTrn9Os5Y6Yy6Y1TzxmXTfX0xpMsyMOeXD+5f5EzExMcw9CNEB
WacaHx+PVq1awcvLS/XFk//esWOH6pcnffMIMRLJG2/evKlmEQ0fPlzNIpL6
RqlznDdvHi5dumT0JjoszBkppVRbZ88Z58eeQdv3RsG3WBnkcHFD0eLl0K3f
LMxbfxpr9iRzhjS1KeX5uDrhT8yNPY0ufabDLyBE5eK+/sF494OxWLDhnOHb
6KgyZ9SX9FmchZzufo5m68haSfMei5ZnZ5vVOGZh/x+ZRab+PsP9FytWTM2j
4DxSQh4fWf988OBBNYtJ6oVljbTUMm7YsEH1x+PcDWJryHNWPo8OHz6MXr16
wcfHRz1va9eujVWrVuHatWtGb6LDwZyRUkq1ddaccfHmJHT9eDYCSlZQOU1h
3yC06zEGs1efVPNfmC9SW1aenzIPZmbK8/WtbiNQ0Ccw5XmcC4GlK+G9iLlY
siXJ8G10NJkz6oul3MxS3Z894Orqap79ZVK7qLVeWrPu0ey20ueYFrPH+38n
NVjjxo3DjRs3jD5MhNgFUhfWt29f+Pv7q3WoUiMsPRkvXryI27dvG715hGSK
1LLLWv69e/eiQ4cOao2/1OE2bdoUmzdv5rUnHWHOSCml2jpbzrh8+1X0GrEM
pUNrwNXNHfm9/dC8XT9MWXYUK3ffwPp9dw3fRkqzqjxfV8bfUH0am7TpDc8C
vup5HRxWC31Hr1TPd6O30VFkzqgvaev6TGb9DB/+aQ9I3ciDnovp5rZkzAQt
zXbJfP8t54jpayLl50fdf958eTFhwgS1vo4QYo70QBg1ahRKly6t8sXQ0FBE
Rkaq38vcDc6QJvaErOmXtf1btmxBixYtVNYomWO7du2QmJjImlwdYM5IKaXa
OkvOKDWKn0zaiFeqNFJze2WOtMx7GbdgP1bEX8O6fX8Zvo2UPqny/JXn8Zj5
Caj9escHc9IrVmuCIVP/o2ofjd5Ge5c5o7487D9oQmbrjO0BySO0ahctzYJ5
WLf46P3PSn1k5qa//0KFCuGzzz5j/0ZC7pOUlISZM2ciLCxM5YtBQUH49NNP
8cMPP6jaL+aLxJ6RPFHW+kvf3jp16qi11HJtrEePHmpOOmekPznMGSmlVFtH
zxllRvToyHhUrdv6QfZSpU4rjJi5HdHbriAm8Y7h20ipXsrzWZ7Xw6ZvQeWa
LVSmnsfDC9Xqt8Wn8xLU7Gqjt9FeZc6oL2YzUjRmM9sDMne2WrVqeOONN9C9
e3d88sknmDhpEubMmYMlS5Zg7dq1iIuLU73dFi5cqOoKBwzor3q/yf9TvXp1
VUNV0NsbOXLkeHRmaFYbaflYWu7leO/vypYNQUJCgtGHjhDDuHr1qloPLa8/
yV78/PzQv39/HDt2TPW5Y/5CHAmpyb1w4QIWLVqkZsTIrJjAwEBERETg1KlT
Rm+eXcKckVJKtXXUnHH9gbuYuOQg6jbrAk8vH7i4uSO0cgNETIhF1OZLKn80
ehsptZaSJ8rzvP/YGJStWFetpfb08kWDN3qoNdbr9nE29ePKnFFfslqH52xI
7dQ333yLKVOmqH5aHh4eD9ZVa/V1fDiHOos1lfe/Fz2b8mfHjh3x22+/Gb3b
hGQbUqO4ceNGNddFXl+yllSuFezfv1/1MWWtL3FU5PMlOTkZp0+fxrRp0xAc
HKxqeOVP6eN7/vx5ozfRrmDOSCml2jpizjhj1Qk0a9sX3kX81YyXkmWroufw
pVj4xQWsTbhl+PZRml2uSXm+y/P+oyGLEVQmHDldc6nXxRvvDsCsNT8gdj/z
xqzKnFFf0tbiac0xsYd509ZGaqq++vpr1Tfu1apV8a9//UszTzSlHlOT+bHN
bFaMd4ECiI2NNXpXCbEqsn40Pj4erVq1UvORpF9d69atsWPHDtXHTvrZEeIM
SN4ovXpl5tHw4cMREBCg6hulznHevHm4dOmS0ZtoFzBnpJRSbR0pZ5wfewZt
u4+CT7EyyOHihqLFQ9H949mYt/401uxJ5gxp6pTK8351wp+YG3saXfpMh19A
iJpN7esfjHc/+BQLNpwzfBvtQeaM+mKx5i7NeuDUzIyk5/Lly1i0cKGqxXrh
hRcePbvawu+01lO3e6cdrl27ZvQuEqIrktUfPHhQ9SkoUqSIWiMtrx/pYyB9
6zgPgzgr8tqQHgGHDx9Gr169VN9GeX3Url0bq1at4ufBI2DOSCml2jpCzrh4
cxK69ZuFgJJhcHFxQ2HfILTrMQazV59U81+YL1J6L2+UeTAzU14Xb3UbgYI+
gSpvDCxdEd0HzMWSuCTDt9GWZc6oL1r9GDPOXibaSM2JrHUrVqyYxdzQpDG/
OrN+mNKjbteu3UbvGiG6cPz4cfTp0wf+/v5qfaj0UY2OjsbFixdx+/ZtozeP
EJtAegVcv34de/fuRYcOHVQvAan3ld4d0ltYeg0Qc5gzUkqptvacMy7ffhW9
RixD6dAaqv9cfm8/NG/3MaYsO4qVu29g/b67hm8jpbamvC5Wxt9QfRqbvtUb
ngV81esnOKwW+o5eqV5XRm+jLcqcUV8e3Z/xGeaMWURqUtasWYPgMsGa/RnT
1TA+Yna1rM0eMmQI15ESu+XMmTOq14DMV5J8UWbCR0ZGqt/LPAzOkCbEHHnP
lx4CW7ZsQYsWLVTWKJlj27ZtVQbJ2t/0MGeklFJt7TFnlBrFTyZtxCtVGql5
ujJHul6zrhi3YD9WxF/Dun1/Gb6NlNq68jqR18vY+XtR+/WOD+axh1VrgiFT
/6NqH43eRluSOaO+WO7HaDLLwkjWkbxR1roFBQXdXx+dcf5LJvmiheNfo0YN
NZ+UEHshKSkJM2fORFhYmMoXS5QogbFjx+KHH35QNVnMFwl5NJInSk+BmJgY
1K1bF+7u7mpNdY8ePXD06FHOYr8Pc0ZKKdXWnnJGmRE9OjIeVeu2hnteL5WJ
VKnTCiNmbkf0tiuISbxj+DZSam/K60ZeP8Omb0Hlmi1Udp/HwwvV6rfFp/MS
1Oxqo7fRFmTOqC/pcy+TWQ5m4rrpJ0bWwC1YsACFCxd+OBvGUm/GLBz//F5e
anYGIbbM1atXsWzZMlSvXl31l5P1//3798exY8dU/znmIoQ8PlL7K9eaFi1a
hPDwcHX+ExgYiIiICJw6dcrozTMc5oyUUqqtPeSM6w/cxcQlB1G3WRd4evnA
xc0doZUbYOCEWERt/lXlj0YfR0rtXckTozZfQv+xMShbsa5aS+3p5Yv6b7yn
1liv2+fcs6mZM+qLKUOPwPSzSUysZ9QBqd8aPXo08jx4zmY83o8+/uLzzz+P
adOmGb07hJghM3M3btyo5rp4eHjA29sb3bp1w4EDB3Djxg2VuRNCnhypAU5O
Tsbp06fV50BwcLCqFZY/pT/w+fPnjd5Ew2DOSCml2tp6zjhj1Qk0a9sX3kX8
4ZLTDSXLVkWv4cuw8IsLWJtwy/DjR6mjuSbldSWvr4+GLkZQcGXkdM2lXn9v
vDsAs9b8gNj9zpk3MmfUF0vrdtP+nJp7kadHnpsdO3bEs88+m+m6aUvHP+2f
Mq+X/bmILSDPQ6mzbdWqFby8vFQfudatW2PHjh2qtpG9RQnRF8kbJdc/ceIE
hg8fjoCAAOTKlQuVKlXC3Llz1VwyZ4M5I6WUamurOeP82DNo230UfIqVQQ4X
NxQtHoruH8/GvPWnsWZPMmdIU2pF5fW1OuFPzI09jS59psMvIETNpvb1D8a7
H3yKBRvOGb6N2S1zRn15VL9A5oz68+WXX6J8+fJZ6tf4oL7RlL7msXat2mpO
ACFGIOufv/76a3Tu3BlFihRRa6QbNWqkahqlnxxzcEKsi7wGpRfB4cOH0atX
L9W3UV6HtWvXVv2Br127ZvQmZhvMGSmlVFtbyxkXb05Ct36zEFAyDC4ubijk
F4R2PcZg9uqTav4L80VKs095vck8mJkpr7+3uo1AQZ9AlTcGlq6I7gPmYklc
kuHbmF0yZ9QXrTW7JlP6n4m+yHfEqVOnws0tV5aOv1nNY4plypTBL7/8YvSu
ECfj+PHj6NOnD/z9/VUdVbVq1RAdHY2LFy/i9u3bRm8eIU6F9CS4fv26mkMt
9fIyl1rqips2bYq4uDjVt8PRYc5IKaXa2krOGL3jd/QasQylQ6vDxS038nv7
ocU7H2PKsqNYufsG1u+7a/ixotRZldffyvgbmBp1BE3f6gPPAr6qf2PwKzXR
d/RKLN9+1fBttLbMGfUlY371MNtKf85OrMOZM2fUHNFHHX/TMxbmVqf48ssv
46effjJ6N4gTIM/VkSNHonTp0qovXGhoKCIjI9XvZU4FZ0gTYhzSo0Bq3Lds
2YIWLVqorFEyx7Zt26oM0pFrjJkzUkqptkbnjFKj+MmkjXilSiO45ckH97wF
UK95V4z/7ABWxF/Hun1/GX6MKKX3lNfjivhrGDt/L+o06aherzL3PaxaEwyZ
+gVW7frD8G20lswZ9cWUWkeXydpd5ozWRfKZWbNnI2dO10wfg9THKOPjVahg
QXz//fdG7wZxUJKSkjBz5kyEhYWpfLFEiRIYO3YsfvjhB1UrxXyRENtB8kTp
XRATE6OuYbm7u6s11T169MCRI0cccuY7c0ZKKdXWqJxRZkSPjoxH1bqt4J7X
S2UVVeq0woiZ2xG97QpiEu8YfmwopZaV12f0tt8xbPoWVK7ZErnz5EMeDy9U
q98Wn85LULOrjd5GvWXOqC+Z5lppauiI9ZGsUGaHWjr+meeNJuT3yo9jx44Z
vQvEgZDaqKVLl6J69eqq75ufnx/69++vnmfSF84R8wpCHAWpMZZeBosWLUJ4
eLg6Z5KZMREREeoagSNdH2DOSCml2mZ3zrj+wF1MXHIQdZt1gaeXD1zc3FG+
cgMMnLgBUZt/Vfmj0ceEUpo1JU+M2nwJA8bFoFylenDN5a5e1/XfeA9Tlh7B
un2OM5uaOaO+pOZUpgwZVsZMi2QPycnJ6NCho8UZMWaZY4a/88yXT9WrEPI0
yCxbmefSsGFDeHh4wNvbG926dcOBAwdw48YN1Q+OEGL7SJYonymnT5/GtGnT
1HUsqUmWP8eNG4dz584ZvYm6wJyRUkq1zc6cccaqE2j2dl94F/GHS043lCxb
Fb2GL8PCLy5gbcItw48FpfTJXJPy+pXX8UdDFyMouDJyuuZSr/M33h2AWWt+
QOx++88bmTPqi3lvRpN5zVzK70j2Mnv2bDz33HPmj0naXNiUoY9jys958zJr
JE+GrLfcuXMn3nzzTXh5ean+bq1bt1a/u3r1qur/RgixPyRvlOsHJ0+exIgR
IxAYGKhmOFWqVAlz587FpUuXjN7Ep4I5I6WUapsdOeP82DNo230kfIqVQQ4X
VxQtHoruH0di3vozWLMnmTOkKXUA5XW8OuHPlNf1aXTuOwNFA8uq2dS+/sF4
5/1PMX/jWcO38WlkzqgvltdKm+eNJPvZvn27Wq9qaS7Mw2w447xwE/Lmy4tv
vvnG6M0ndoKsf/7666/RuXNnFClSRD3nGjVqpGoapc+bI8+PIMSZkNe69DyQ
a1G9e/dWfRvl9V6rVi2sXLlSXU+wR5gzUkqpttbMGRfH/T906zcLASXD4OLi
hkJ+QWjXYwxmrz6p5r8wX6TU8ZTX9ao9NzFrzUm83W0kCvoEqrwxsHRFdB8w
F0vikgzfxieROaO+pJtxbMo481h+Zn9GIzl69Khat/qoOT3yOKV93Dw9PTkb
hjyS48ePo0+fPvD391f1TdWqVUN0dLTq63b79m2jN48QYgWk98H169fVHOqO
HTuqudRSv9ykSRPExcWp+U72BHNGSinV1ho5Y/SO39Fz+DKUCq0OF7fcyO/t
hxbvfIwpy45i5e4bWL/vruH7TSm1rvI6Xxl/A1OjjqDZ232Qv4AvXN3cEfxK
TfQZtUK9Txi9jY8jc0Z9sVjDaEFiHCdOnEDBggUf1DWa0uS/al64pQwy5Xfy
//z4449Gbz6xQc6cOYORI0eidOnSql9b+fLlERkZqX4v8yMcaUYEIcQy0gtB
5j1t2bIFLVq0UFmjZI6S0UkGaS+1zMwZKaVUWz1zRqlR/GTSRpSv0lDNj3bP
WwD1mnfF+M8OYEX8dazb95fh+0spzV7ldb8i/hrGzt+LOk06qvcFeX8Iq9YE
Q6Z+gVW7/jB8G7Mic0Z9sTj7JV32yJzRFjh16hQKFy5s8bFJb/rvWn5+L+P8
+fNGbz6xEeT9ccaMGXjllVdUvliiRAmMHTtWzZ+VGibmi4Q4H5InSo+EmJgY
1K1bF+7u7mpNdY8ePdQaa1ufLc+ckVJKtdUjZ5QZ0aMid6Jq3VZwz+uF3Hny
pfx3a4yctUPVLMUk3jF8PymlxirvA9Hbfsfw6VtRuVZL9T6Rx8ML1eq/jdHz
9tj8LCjmjPqSfo20RmZlYs5oC/z888/w9fXVzIK1sseSJUrgt99+M3rziYFI
zdLSpUvVumjpx+bn54cBAwbg2LFjql+brecIhBDrI7XM0jNh8eLFCA8PV+dZ
AQEBiIiIUNcibPU6BHNGSinV9mlyxvUH7mLikoOo26wLPL181JrI8pUbYuDE
DYja+qvKH43eP0qpbbk25X1B3h8GjItBuUr14JrLXb1/1G/xHqYsPYJ1+2xz
NjVzRn1JXwNnerAeN2PmSGyDs2fPomjRly3UnmqveRcrVqyo8iTiXMiM2Q0b
NqBhw4bw8PBQvT67deuGAwcO4MaNG6pPGyGEpCJZYnJyMk6fPo3p06cjJCRE
1T4HBwer2udz584ZvYlmMGeklFJtnzRnnLHqOJq+3QfeRfzhktMNpcpWQ68R
y7Dwiws2X5dEKTVeeZ+Q94uPhi5BUHBl5HTNpd5PWrzTX82Kit1vW3kjc0Z9
0c6m0pyzs57RppCs8eWXX9ZeO22ynDvKDGHpx0UcH1kHuXPnTrz55pvw8vJS
fddat26tficzZfk8IIRkhuSN0kvh5MmTGDFiBAIDA9WsKLlmNWfOHFy6dMno
TXwAc0ZKKdX2cXPG+bFn1AxZn6KlkcPFFUWLh6L7x5GYt/4M1uxJ5gxpSmmW
lfeL1Ql/prx/nEbnvjNQNCBEXbfwLVYG77w/BvM3njV8G1Nlzqgv6WriMq6b
TvMzsS2k1sTH18dCvpgmJ7bQd7NTp05GbzqxIrL++euvv0bnzp1RpEgRtUZa
8uWNGzeq/mv2MteBEGIbyHuK1MJLn8bevXurvo3yvlKrVi2sXLlSXbcwGuaM
lFKqbVZzxsVx/w9d+86Ef4kw5HBxQyG/ILR7fwxmrflBzX9hvkgpfVLl/WPV
npsp7ycn1XWMgj6BcMmZC4GlKuK9/nOwJC7J8G1kzqgvD7Mo87XT93JHE3NG
G0Vmw3gXKpTpHJh7+eO9GdWm+1nkqFGjjN50YgWOHz+ucgB/f39VdyS9GKOj
o1W/tdu3bxu9eYQQO0Z6LFy/fh2JiYno2LGjmkstddJNmjRBXFycqn00CuaM
lFJq2UVf/A89+k/D2nWbNN9DD/9wFX1HLUOp0OpwccuN/N5+al3jlOhjWLnr
D6zfd9fw/aCUOobyfrIy/gamRh1Bs7f7IH8BX7imvO8Ev1ITfUatUHOljNo2
5oz6ktVZIsQ2+f7775EvXz4Ls2FMFjLk1LrVZ7FixQqjN53oxJkzZzBy5EiU
KlUKrq6uKF++PCIjI9X6epnrYKuzGwgh9of0XJC5Ulu3bsUbb7yhskbJHCXX
27t3ryE108wZKaU0vdHbruD/hi5ByXJVVXY4adJkzffQYcNHwS1PXnjkK4DX
mnfD+IUHsCL+Otbt+8vw/aCUOqby/rIi/hrGLdiLOk06wT1vAfU+VKHq6xg8
5Qus2vVHtm8Tc0Z9sZQpmmWNKefvxHY5ePDg/dfD/Wwx7XrpNGupTWl+5+Li
gi+//NLoTSdPgbzXzZgxA6+88oqa01CiRAmMGzdOzYWV2iLmi4QQayF5ovRi
iImJQd26deHu7q7WVPfo0UOtsc7OGfbMGSml9J7y3TxiQixCK9eHa24PeHh6
o/lb7yHxq+8030OHDhuJavVaYeSsHaqWKCbxjuH7QSl1DuX9Jnrb7xg+fSsq
12qJ3HnyIY+HF6rVfxuj5+3J1plTzBn1JX0WZSGnup9PORPy/cje5vDGx8cj
R44cGXpsWp4dnvp3BQsWxC+//GL0ppPHRGqJoqKi1Lpo6ZPm5+eHAQMG4Nix
Y2q+dHZ+vyeEODdSMy29GRYvXozw8HB1bhYQEKDek+SaR3Zc72DOSCl1dtfu
vY2Rs7ajcu2W6jt6LndPVH3tLYyavROf7/8dF37Tnv938MQVLN/+K2JSbsPo
/aCUOqfyHha19VcMGLcO5SrVg2sud3h6+aB+i+6YvPQw1u2z/mxq5oz6YqmG
MW3dmyOum5bvRJs2bcL4ceNUPzv5PlK3Th2UKVMGnp6eeO5f/1LfWWQtWIUK
FdTasF69emHq1KlYu3YtvvrqK/zvf/8zejfMkLqSf6Vsu9YsH0t1qxUqVFTf
E4ntIxnihg0b0LBhQ3h4eMDb2xvdu3fHgQMHcOPGDbvLxgkhjoFkicnJyWo+
2fTp0xESEqJ6xAYHB2Ps2LE4d+6cVe+fOSOl1FmV797jF32l1h3my18Erm7u
CHu1ET6ZvFF9Z5fs8NFzYP7B51/xvZJSarxSv7jw84v4aOgSBAVXQU7X3PAu
4q96xs5efRKx+62XNzJn1Je0vftMlmbC3P/Tnrlw4QKWLVuGzp064eWiL2eo
88va/ltaTy51ZN26d0NsbKzqj28LyDrajDN8zGsb0/+3zCYmtousT9y5cyfe
fPNNeHl5qX6cbdq0Ub+TWa/SL40QQoxG8kbp2XDy5EnVMzYwMFDljRUrVsSc
OXNw6dIlq9wvc0ZKqTM6Y8X3aNKmFwoULqbmtpYOrY4+I1dg0X8upltrmNV5
00bvD6WUijKbenXCn5i3/jQ6952BogEhKe9xbvAtVgbteozB/I1nrXK/zBn1
JbX/4r3sSXudrb0hdRXjx49Xveu05jA/rNt89P4/qj7wxRdfRIsWLbBmzRrD
6wP79etncZ10Zvu/YMECQ7eZmCPrn6V2tlOnTihSpIhaI92oUSNs3LhR9UUz
Yt4CIYQ8Cnnv+uOPP1SfRlkzIH0b5f2rVq1aWLlypbo+oifMGSmlzuTc2P+i
TdfhKFK0FHK4uMG/xCt4L2Ku+u69Zk+y+o6e9t8zZ6SU2qPyXrZqz03MWnMS
b3cfiYK+gSpvDCxVEe/1n4MlcUm63h9zRn0xmxFiIY+yl5xR5u5KthgWFoZn
n31Wsw7RUo3io/bfYmZnVht4z3x582Lw4MFISkoy5DjId7yWLVs+1v675syp
vhMS2+D48ePq+7m/v7+qB5JejNHR0Wq9/u3bt43ePEIIeSTSy0Fq/RMTE9Gx
Y0fVi0TmUzdp0gRxcXGq9lEPmDNSSp3BRV/8D136TEexEq+o79qFXy6Jdz8Y
h9lrT2H17j/N8sVUmTNSSu3Z9fvuYmX8DUyNOoJmb/dB/gK+cHXLjTKv1ESf
USvU/Co97oc5o75kNVOzByIiIjKvRcyYIZoeI1N85uG6aou9LFP/bZr7l3xo
yJAhqndediO9/CRvfZz9lzVutrL+21mROtwRI0agVKlScHV1Rfny5dV6w7Nn
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
9Bk2FyFlqsChsBMCgsPQY1A8Fm2+iE0HHsvmLyrFPiOLxWIZVuc+E+DlXVTc
42t6Ij169MClS5cst7i1A5Q1ArPzZTXj2hQcz2gqqF5fcHCwWg1EY/Y/3T8t
X77cbPOiOvqGjr+q50i+Wm7j6tWrmDx5MsLDw+Ho6IgqVapgyZIluH79usiR
5x7SDMMw8iDlM9L7tIuLK9w8fFC32XuITciQJV+RxWLZr9al38GQ8asQVrGO
qO3l4xeM9j1GY86G0+L5RspR8/d4MUbsM7JYLJZh6es37eTkJPIXd+zYIXoz
MIbRrs2nUPOXlN9jTMOdO3dEvxCtWEYD+z9//vzYtn2bWeZE+dNlypTRO372
97Lk7e2D27dvm2Uu1gbFR1NdyqpVq4r3F8ozj4uLE/23qT4Y+4sMwzDyIuUz
tm3bFqMnxKNazRe9BL18iqNZu/6Yvfak6M8g91qWxWLZrjYeeIhR8SmoXKMZ
HF3c4eHph+bvDkD8ymNI3Pcg6z3mH9nnqCr2GVksFsuw9PmMFONYpEgR0ZOh
a9euyMjI4FxGA0jnymr7TYzpoDxqqielqyai1P6nrwsXLozjx46bZU4HDx4U
/ZX0ja86R+qHbc/cvXsXq1evRt26dcV7TVBQEEaNGoXTp0+LZxjce5thGMY6
kPIZaQ24dfcpJO6+gcETVmf3EvQNKIl2//kYizadR+oR9htZLJbx2pz5FJMX
pqNmw/ZwK+IDZzdPES89dfFerN9zF8mZ1hG/qCn2GVksFsuw9PmM1JchISEB
UVFRojdDQEAA+vXrh5MnTwpvh9FGrcew4i2NnsNvZfdHZkzPp59+Ku6NjNn/
Sr+PPHTK4TUHAz8YaHD8VznfCmRmZpplHnJCHmJqaqqIOXV3d4efnx9iYmJE
zvvDhw/5fYRhGMbKkPIZs/tNn/w/bDr4GAkpV9FnxHwEh1YQ9dMCQ8rjPwOn
if4Mcq9rWSyWdYtioGesOIZG0b3g6e0vYqSr1W6FsbO3YU3aLSQfeib7HPWJ
fUYWi8UyLH0+I8WIUb006smwZs0a1KpVS/xeyZIlxTr0/PnznOeogWQMnYQY
8zB79myj9v8r70+BcuHlcP/+fZPPhXw08uYNja946T9GRETgn3/+Mfk85IB6
RO/ZswcdOnQQXq6npye6dOmCvXv34t69e3aznQzDMPaGXp/xZb9pZS/BhUnn
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
HsU+I4vFYhmWvfmMSsgrovzGI0eO4P3334evr6/okdGqVSuRo0hepDnQ9A8U
Ur4A+4xWD9U4lDpuCs1Ytax7MarXR/VATUnLli2NHt+YWny//vqriH3UjmGU
iLdTvIprtLU6f6o+o77rLzwszCzj//777+jevfuLe3Q94+vb/w0bNUJwcLDR
x1/5ebt27WSpScswjH1hjz6jUuQ3fpHxCAuTLqBbzFT4BZYSfmNoeCT6f7QY
q3b9T/Y5sliGtPHAw5f1AKLg6OIODy8/tOgwEDNWHcfGfQ+4JoCZxT4ji8Vi
GZa9+oxKqE7ZvXv3kJ6ejo4dO4peGRQDRr1eDxw4YPLcUEW2V6Mjdol9Rpuh
det3pL0dibgy6sViStLS0nR7SxrjU691yt81BNUjVMvDVe2prGMMysOlXse2
AuUMG3P9US65Odmzdy+CgoL1zsGY/W/s+Ve1alWzPTthGCZ3Yc8+o1Iph59j
476H+GzdKbTpNgLeviXg4OSC8lUbYPiUDVi/567sc2SxNEU1ACYt2I2aDdvD
tYgPnN28UL9ZN8Qu3ocN6fewJZP9RUuIfUYWi8UyLHv3GZVQXiP1yEhNTUWz
Zs1E74VixYqhb9++OHHihIh/NAV6fQWVGCbG+qEYxXz58mv5PK9q7L3ygeie
jM6jN4W8opSUFHGOkscn5TNJjU81JY3dJi8vLwN+l3ofmqJFfUQ8pC1AvW+M
uf4ovtnc0PMNim2UGj8n+9/Q8S9Ttgz++OMPs28PwzC5g9zgMypFcV+J++4j
bnkmmrzTB+6eReHs4oGqdVph7OztIvdU7jmyWHSexn9+FA1b9YSHl7/oaRRZ
Jxrjss7RtV//ieRDz2SfY24S+4wsFotlWLnFZ1RC8YvUM2Pt2rWoXbu22G7K
J6Vajj/++OMb5x0qfQJNL0DTU2Bsg5iYGJ1elaZatGj+2uPQeblnzx4RF0nx
thR326RJE71emaooz1bZZ9oQ33zzDZwcnbRfR6E+hmo9wLp169pED2OqlWDM
9Zcvbz6TPVswxIYNG8RzDal9bOz+13X86VkJ9YthGIYxFbnJZ1QqOfOZiGGc
ND8NNRu1h7ObJ1zdfVAvqiumLc0QcWRyz5GVOzU38SyiO38oai86FHZG+SoN
MHzqRqzcdRObM/m8lEPsM7JYLJZh5TafkSAv8cmTJ7h+/ToWLlyISpUqid7U
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
7n/62fTp0021+xiGycWwz2h6URxb4r4H+PTzw2jyzvtw9/SFs4sHqtVuhbGz
t4tcWrnnyHq94xqfdUwbtewBDy9/ODq7oVrd1hiXdUzXfv0nkg89k32OLNOL
fUYWi8UyLPYZTYuUlyAV92aLvlNuhHq4pKeno3379vD29oaXlxe6desmauK1
bdtWp3+k+fnOnTvl3pQcQ3UXqZeNeiyedMwmeWL379+Xe8rZXL16Ve/1p/r1
sGHDjH5d6jFDNRKo/wr5gnnz5jHq+Osbn9Slc2fx2qps2bJF615fX+xsgfwF
cOzYcVPvSoZhchnsM5pPyZnPRAzjpPm7UbNxRzi7ecHV3Qd1m3ZF7JIDSDr4
VPY5sozQkX8xb8MZtOo0GD7+waIGY/mqDTEidiNW7rqJzZl8HO1Z7DOyWCyW
YbHPaFpU49pexSJp9ntQYOrUqVaXa2os5JFSfN8vv/wi+uBQvujmzZuxbt06
JCcnCw/u9OnT+PXXX/Ho0SOb9FQpB/XYsWPo2bMnihUrBjc3N0RHR2PHjh24
ffu2yJMnv0mtn4dabw/149+4cWO5N+m1iImJUdkWzXxf9W1euHCB3NNVo7Rq
LxiJj0r/j+JSyTeknHgldM7+9ttv4lymeEV6L3z77bdF/KOu7dd3/HWNT32x
6b1A1zUyatQoo/c/fR4aGoqHDx9aahczDGOHsM9ofm0+9DfWpt3CqPgUVK4e
BSdnN3j6BKBp236YveaEzdbxox7K1HN73sZzmLY0A6NnpGLopHUYOW2TyCue
tfYkErZeQ+Ke+1nbaJv9t5dsuYxOvcejWIkwFHJwRGhYNQwYvQzLvvwZSYee
cA/pXCD2GVksFsuw2Gc0LS/u91/WXNOT50jxX9WqVcPChQttYh9T75Pdu3eL
XssNGzZE8eLFRe4wxfd5eHigSJEiwoujj/Q1fZ9+Tr9HHtukSZOwZ88e4dFZ
O2fPnsWQIUNELw86TvXr18fGjRvFcaL4RlVq1qwpEbemfvxpv9B9G/UMsjV+
/vlnFW9NIodXRRUiIuSerhpjx44zGAOo+TNXV1fRV8XR0VH33+jYfl3HX9f4
FB9L14Q+6Jyh8y8n41tjXx6GYWwH9hktJ6rrR77ckIlrUDaiFgo5usC3WEm0
7T4SCzadF3Fzcs9Rn5S54D0Gx4sccF//EBGfSTUKnVw9RS8URyc3kU9MeeLK
+E3KGy9TvibadBuB0TNTsWLHb1bfg3nF9hvoPXQ2gstURiEHJxQPLoeeH87C
4uRLwl9lfzH3iH1GFovFMiz2GU2LVo8GCT+AROv4EiVKiP1OPgLFAt69q+ef
lgxQXBR5i++//z7KlCkj6hKS/0JeDHlwtWrVQrt27UTM28SJE0XvXvIh+/fv
L3KKyYMLDg4Wv+/k5CT+vmzZsuL39+7da3VxV5QnTNsRFhYm5ks+cEJCgvDa
nj59KhlzRnGcUjFy9DEoOAhz5swR/chtGfKtpLZRyvc6euSI3NPNho5n3rz5
DPiF+mITpa9lfdtv7PVfu3ZtES9pDPR75NnnZHzKuWYYhnkd2Ge0rMifSsp4
gmWp19Bv5AIEl6ooelOTj9UtJlZ8X+45qoq80RkrjqFd948RXLqy8A4dCjvD
0ckZAQHFERkZKfI/+vTpgzFjxoi1IcXtDxo0SNR9rlevnsg3cHMrgkKFCgsv
0scvGHWbdsEncVtEXUO5t1FV69JuY9C4FShboZbIj/bxD0HHXmMxN/GMqKtp
7f4oy/Rin5HFYrEMi31G02Ksp0HeE+Xd9u3bV8RPkQfXsmVLbNu2TeQkywnN
jfwz6nlCcYnkudGakPymtWvX4ocffhD9KijGkXJNqS4fzZlypOkjfU3fp5/T
71FPi9WrV6NHjx4oWbKkiBGk16XtTU1Nld2Hu3nzpvADK1euLLY1PDxcrIsv
XbqEx48f6837pvxp8lxfxbG96OeRlJQkfmYPnDlzRrtOoJSHlvU7dD5bE+SD
65qzMq9ZV13FV32gjYxplNxH6ipQoCDGjx+PZ8+e5Wg7yO/Pmzev0eN7enoa
7WMyDMOowj6jPCK/cdOBR1iYdEH4i/6BpYTfGBoWif4fLcKqXf+TdX7kL05Z
tEf4gdTzhHKGKWelQ4cOWLRoEU6ePCnuGW7duiXWgPfu3RPPk1XXhvQ8Xbk2
pDUWPRMj/zEiIgJOzi4if7xshdoiD3n1rt9l3V7qE/5JXDIqvd1UeKEeXn5o
0eEDzFz1TdbPHths3jfrzcU+I4vFYhkW+4ymRTUWSjLuSPGq3zT5ULQOo9zJ
Tp06Ce+Ncik7d+4s6sJRDJ0loZzgr7/+Gu+8847wKWg+tH7cunWrqMVIc6U5
Ue3CnEC/Tz0u6O/pdaiGY5s2bcTr0zjvvvuu2AeW3l5aB69atUrEltH5T7GX
9OydfDVaFxu7nXPnzhV19mg7MjMzzTxreWjQoIFa72TtuL0XcnVxFd6stUDH
ko6N5vWn7tPp9wcVymvaiO3Xd/3XrVtXePSvyyeffJKj8Vs0b26TtVEZhpEX
9hnlVcrh58Lj+mzdKbTtNhLeviXg4OSC8lXqY9jk9ViXfsey8zn6XHhrjVv3
gqe3P5ydXdGoUSPx/Pjy5cvCO6T/+zmtDUP/n2jdSf4j3WtQz73evXvD37+Y
yLWOqNoAI6d9IWo5WnJ7yU+dND8NNeq3E/nfrm5eqNe8O2KX7MeG9HvYkmmb
tTNZphP7jCwWi2VY7DOaFsmYJ5V8TKVnoQrFNtHzXfLzmjdvLmocUu8Rig37
9ttvLVLX78cff8QHH3yAgIAAEVtJntlXX30l5kXrQFP5Fcp1Jb0u9VQhT5Pq
OdK41Pf34sWLJhlHH/RcnZ6hR0VFiW319/fHwIEDcfz4cfHsPaf7m/7m8k8/
mWm21gHVp9Tla2l6XvS71sS48eO0rj9N/1Ch6jUqdMc4GrP9mte/h6cHVq5c
+cbXEL1PREZWy9H4S5cuNdFeZBgmt8A+o3WIesEo6x82eed9UdPQ2cVd1EEc
O3u7yNk19xyobuJ7/aegWGAZkRdNzxzpf/yNGzfE82NTPsui/3H0PJqe11LO
ddGiviInu36zbiJP29zxg7S/47P2daOWPUS8JtWUrFa3NcZ9tkPkcicfeib7
OcGyDrHPyGKxWIbFPqNp0RUbpdl7Vgry3yiHl2o1KmPsKCd3xIgRwgc0R2wS
xRDSmpFqKVLOMMVcffHFF/jjjz9ynNuZU2h7aRzaXhqftrdOnTrCA6T1qznG
o+fl7du3F3GjFEvZrVs3ETtKa1tb7NNiKeh4kB9M569CKw5QvQ9y69at5Z6u
GnRcyc82JnbRsAxvv/Jzel4wadJkcW6ZCvLhnZ1djBqf5OLiKuqLMgzDGAv7
jNal5MxnWL/nrujXXLNxx+xeKnWbdkXskgNIOvjU5GNSDOOURXuFp1nY0QXl
IyKwYMECXL9+XWe9alOhzPWhZ92tWkXD1bUIioeUQ8zHi80Ty3nkX8zbcAat
Og2Gj3+wqMFYvmpDjIj9QuSqU29wuc8BlnWJfUYWi8UyLPYZTYuxfoUuaO1G
ng6t5agXdaVKlUQ9Q6oZSHW0r127ZrK5UkxhbGys6EdD8YTjxo0TPoa515Ca
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
i0IOjggpUwX9P1osvM5NBx9r9bJO2HoNDaN7wt3dA5MmTRLPqK2dTZs2iRo6
pctXx9jZ27El8x+1bSI/cfWu30VvngqRjeHo5CZy2Cmuk+I7qee23OcCy3bF
PiOLxWIZFvuMtgV5a5RHPGDAAAQFBQlfjWrTJCYmihwS8uZ0xfJRbCOtzSpX
rizqNZInaa15xrQNGzduREREBKpVqybmqqsGI/3uo0ePxHP4adOmif6JtF9o
O2fPno3ffvvNwrPPPbzXtStKhpYUtUCpnryue6VvvvlG7qkyDMMwRsA+o3m1
YsdvwvtSrWf8ym98lTet6TOS+o1cqPN1l2/9Gd0/+BQlQisIf5F60fQYPBOL
Nl8UecOa/qJS1J85btlhVHq7KQICArBkyRLxDNdaycjIQNOmTUV/6ZiPF+vO
iT72r4jbpP394YTVIp6T8sZ9/IMR3XkI5iaeEXnlcp8PLNsT+4wsFotlWOwz
2g4//vgjRo4ciVKlSomey9RL+vPPP8fPP/8sYhONyRWmOo4U+0ceZcOGDUUN
bWuE4t+o/mJwcDCWLl0q5m0I8kz/+usvnD59GqNHjxZ/S35jjRo1kJCQIOI8
GfNBPjDluVPfyqNHj2Lnzp2if8+cOXNxO+v7DMMwjPXDPqP5Rd4exRxm72cV
P5FyqjV7UStVoEAh4Y+pvtaqXf8T/mNoWKTIj/YNKJm1tp8g8qa/2P+XUV4a
5Rt/ND0JJctWETkh9JzXGvvr0fqO6gS5FfFC5z7jsearPwxuG/mrSRmPsSz1
uvAlKb6T9lOxwDLo0HMMFm2+JPv5wLItsc/IYrFYhsU+o/VDecGUy0K9lh0d
HUWuyLx58/DTTz+JZ845rUVIOTFjx44V9RwbN24s6jtaUz1D8hjr168v5kfx
iTnN4aGc8ocPH4oYusGDB4vn85RXTnGf1D/m7l09iwOGYRiGycWwz2g5jYjd
KLxDzT5qqv3VVD1H+rx0uepIOfwc69Jui3qLYZXqwMHJRfR5afPecMxeexIb
9z0UXmZO5rLpwGP0/2gR/IqXErkklCdjTfV1Tp06hc6dO8PF1Q0tOw4SeeC6
YjSlRL9LsY+Lky+j54ezUDyknPAbA0tGoPuAaViWek3284FlG2KfkcVisQyL
fUbrhfJ9qc415f9S/GLZsmUxffp00eeE4vteN+eZPMWbN2+KewkfHx9UrVpV
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
3IGQTa+iar32sfpNE0KIUUittHjtSN10p37TNU9GrlkFi1bAgHGrsfXYj2k2
F+qMhJDMjtQbisdO4eKVkc3RWesR2/acpL6Mcq8u9YqWftPUGQkh9oR4gO08
dQszV55E1bodtBeBa3ZvVKnTHrNWncK+C/cMnyMhhKRH1oZ/gnbm9aDsO0t9
S8Gi5TFo0gZsPBjln7Px4NfR/aapMxJC7AXJv5Z72GU73kKrrmPh7ZtX/Rtl
j2T4tK3YceoXm8+BOiMhJLOy6/RtjJ61E8XL1ta6Q8lXbNphGBZvfV3rEmP2
66LOSAixZ6TnvXiDBS8+hHJVm6jPg7unL2o16YEFGy/rz42eIyGEpAdEP+w2
aA7yFCih9S3yUepdxOtM9m4s/jmWftPUGQkh9kiU187vmnvdsM0AeHjlhKOz
G0pVrI/x88Ox6+xtm41NnZEQktnYc+EPTFoUibJVGsPJ1QOu7j6o2/wFzN9w
Sa+3Uo8Y92+oMxJC0gP7L93HtuM/YdzcPShRro7uoXjl8DevLwdi6fY3Y+2f
EEIIecSWl39AvzErUKBIOfU288tdSP26V+79UGsR4/Zvpc5ICEkPaO3L6duY
s/acXrPk3tfF1RPla7TA1GVH9fqW2mNSZySEZBakxmXGihOoWLsNXLP7wNnN
E9Xrd9LawrDTt/QanNDfUmckhKQbrj1A+OW/1HN22LQtKFS8itbL5MiVHy27
jFbfnrj3y4QQklnZfvImhgSHokjJqnqt9MmZT325l4W9rbWHUoNo7e+oMxJC
0hMRl/8x3/P+iunLj6FyrTaqNYrmKPfDc9ae1bVjao1FnZEQktER/XD+houo
YV4LSh2h5ItXqN4cU5Ye0bVlRDLqCakzEkLSG9p/8NI9bDj0NfqPX42AwmXU
DzxX3iLo2Geq1gAaPUdCCDEKqWEZO2c3SpSvAyfz2tDD2w9N2g/F4i2vxfPP
sQZ1RkJIekS8dLYfv4lJIQdQulLDqOufV07Ubd4bIZtfTda9cVJQZySEZFQk
X2fxtjfQoFU/rRuUPeqSFeqpH4X025L6wuQ+FnVGQkh6RfXGC3exJuIz9BwW
Av+AYloTmLdgSfQcugChh741fI6EEJJWSI3g5EVRXraWfJ46zXpj/vqL6t1t
zT/HGtQZCSHpGbkX3mK+J5Z+BcXK1ISDk5v2jGnSfojmcyeUy50cqDMSQjIc
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
mXzojADk7LLJz0afrfYsmtz111+/wD/LOHvSe2x23nnn6NRlrTj2zMkNv87k
Q2cEKKczNj9X3PxCbNp/72IdOWHChFrWkWlNN2bMmDjwwANjs802i169ehVr
vJNPPjn+8Ic/FPeX65i0xyft9enVb5c499pHG36tyYfOCEDOjj/719FltfVj
l112iUcffbSWdVoj1ofpbJ3046f70Hse8LO4Ib1nej643iz4dEaAcjpj83Py
RVNite/2ju233z4eeuihytdzt912W7F2bNGiRSyyyCLxzW9+M77xjW/Et7/9
7VhsscVixRVXjFNOOaU4M6fqeeaZZ2K33XaL5VfqHsec+cuGX2vyoTMCkLNB
B42MVq3bFXtD6ji3u5Hrw5tuuim+u/basenWg+KiG/+n4deaPOiMAOV0xuZn
6LGXRdMynYr3CL7++mf84s/F3HrrrdG7d+9i7bjkkktGnz594rDDDovhw4fH
dtttF23atImvf/3r0b59++K9Le+9916lP3+6D37CCSdE6zZN8aPDzm/4tSYf
OiMAubpmyluxxQ+GRqcVV4zx48dXujZL0+j14WOPPVbcX0/32UdcOKXh15s8
6IwA5XTG5meX/U6MNm3bxfnnn1/pnumXXnop9t9//2IN2bFjxzjnnHPihRde
iLfeeiveeeedeO211+Kqq66K7t27x9e+9rXo379//Md//EdlP//sueyyy4p7
4jvueXSMv+ONhl9v8qAzApCr8yc8ET377Fi0wLvuuqvSddn8sD5MP88BBxwQ
7ZfrHMNGXNvw600edEaAcjpj83LtlLeL+9VdunQpzviuctJ+mJ49e8a//du/
FefupDXkP3fMdH/6Jz/5SbHWXHPNNWPy5MmVfg1pbr755lhvvfWi7zb7xMWT
/tTwa04edEYAcnXKxXfH6utsEgMGDIhHHnmk0nXZ/LA+TD/fT3/602jb1N5+
FyqjMwKU0xmbl/QuwY232L3ocGndV+WMHTs2VlpppVh00UWLe9VzOsv7jDPO
iFatWkWHDh1i3LhxlX4Nae67777o27dvcV/+nKv/0PBrTh50RgBydczIX0Tn
ruvE4MGDi7Ouq5z5ZX2Y9mMvu+yysduPT4mJ937U8GvOgk9nBCinMzYvF9zw
VPTcbKfiXJypU6dWun5LZ+/st99+MWTIkLjnnntKv83MmTPj8MMPL879Xn31
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
W+0Vyy3XIcaOHVvZ2TppGrE+/P3vfx/9+/ePzl3XiWPPnByT7vN3GqqjMwKU
0xmbr3Ou+e9Yv/c20bVr15g4cWKl67q0Lp05c2bx/ue33367uI+d/jn9uyrX
rLPntttui549exZ7Yk69ZGpxT77R15e86IwA5G7StI/joBPGxnIrdIuBAwfG
Y489Vul6bV6uD9OPedpppxXPMm6322Fx5a0vN/z6khedEaCczth8Tbz3o9jv
8POj/TKdYtCgQfH0009Xur6bV5PeiTh06NBYqlVT7HXgyLj+bs8yUj2dEYDm
YMzNL0S/bfct+ty5555bPIe4IE56bnKTTTaJVdboGSecc6tnGamczghQTmds
3kb/4n+jz1Z7RlNTuzjvvPMWuLVkuvc9evTo6NSpU/TcbKc4e/zDDb+m5Eln
BKA5SO9jTnuMu6y2XvTq1SvuvPPORi/3vvS8/PLLccABB8RSS7WNHw4+Oa6Z
8mbDryv50RkByumMzVvaH3PMmb8s1pLf+973iv3HC9Kk83y+//3vF/t7Dv3p
+OIZzUZfU/KkMwLQXFx31zux637Do1XrdvHjH/84/vKXvzR6yfeF5+OPP44L
LrggOnbsGBtstnOcM+5hzzJSC50RoJzOSNpnvPuQU6NN22WK9wtWfRZPXfPc
c8/F4MGDY8mlWseAfY6Pcbe/2vBrSb50RgCakwsnPh0bbb5rsX/6rLPOKs5T
XBAm3TPfaKONolOX7nH4aRPcg6Y2OiNAOZ2RZPQvnynO4llyqVZx7LHHFvtN
5udJ54affPLJ0dTUVPz5PuraR92rplY6IwDNyY3TZhbnGnZbc8PinYHXXXdd
8azg/DyPPvpoDBgwIJZq3RR7HPAz+6Wplc4IUE5nJEln8Zwx5oFYe8MtY+ml
ly7O/U4tb36ctMa99NJLY6WVVorV1u4dw0fdHjfeO7Ph15C86YwANDcT7nk/
Bh91cSzTsUtxVuMdd9zR6GXgHOf5558vzmRs2XLJ2HKnA4oGdNN9nzT8GpIv
nRGgnM7IbGlfyTEjfxErr75+dO7cOcaMGTPfvRcmvffl+uuvj7XWWiuW77Rq
/GT4uGIN3OhrR/50RgCao6t/+3rskv4MbNM++vfvH/fff3+jl4P/Mq+++mqx
H6dNmzbFmYw/v/Kh4gzyRl878qYzApTTGflHqdkdcNwV0WHFVaNLly7Fc4Pz
y3k8H330UVx99dVFY2xaevnYb9iouGbKWw2/ZjQPOiMAzdL0T+KKXz8fWw84
KFou2Sq23HLLuOeee4p7v/PDvPDCC3HUUUdF27ZtY631+saIC6c4k5F5QmcE
KKcz8s/SOwaHHDO6aI1pD/Xxxx8fzzzzzLxbMJbMjBkz4mc/+1msuOKK0bTM
CrHPIWfH1b95reHXiuZDZwSguUpnYKemstXOBxTv31t33XWL8xrfe++9hq4P
H3rooeIdhi1btow1190sThp1R9xwz4cNv140DzojQDmdkTLXTX03jjp9UnRd
o2csvvgSsdVWWxVn8qRnCuflpHvl06ZNi5133jmWXHLJ6LTyWnHwiVfGNb99
03tfmKd0RgCas3SWd3qucdf9hkdT++VjmWWWiWHDhsXTTz89T9eGad566624
4oorit652Kx16ob9do7Tr3hAY2Se0hkByumMzEnaQ/3zq34fm249KFos1To6
duwYhx56aDz++OPzZK/Mn/70p+JZypVXXjkWX6JFbNR3QJx26T1x/e/ea/i1
ofnRGQFo7tI93vQO5yNOuyG6dt8gFlts8VhvvfVi9OjRxd6TumfmzJkxderU
4v5zOosx9c7UPS+Z9Gd7pZnndEaAcjojnyW9x/nKW1+Jg064Mrqstl6xnlx1
1VVj+PDh8cc//rGWNeSzzz4bZ511Vqy99tqzfr7FolOX7rH/kRfG5ZOftYak
YXRGAPhUuhc96vonYoc9jirOzE77lvv27VvspX799c/4i8VczscffxwPPPBA
7LfffsV978UXbxHr9d4mho+6vTirOz1r2ehrQvOjMwKU0xn5XNM/KZ4hvOCG
p2L3H58Sy63Qteh/3bp1i6FDh8Zdd931ld8V8/7778d9990Xhx9+eHTv3n3W
+nHxaL9Mp9hxr6PjnGv+O66/+137pGkonREA/s+N0z4pGt8pF0+NPlvsHku1
aoqllloqevXqFWeccUY88cQTRR/8KvPKK6/EhAkTYsCAAUVfXHTW+jM9R3nQ
CWPj8pufs0+ahtIZAcrpjHxR6V7xtXe9U3S/XfY9MZbp2CUWWWTRaN26dfEO
6H333TfGjBkTjz766OeeC/7hhx/GU089FePHjy9aZY8ePYr3BC6yyCLFe162
/eGwGDn2P+Oau96atY6d2fDPDjojAPyrtNdk3B2vxYnn3RYbbb5rtGzVVNwv
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
     "], {{0, 1050}, {1306, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{404.2776041666669, Automatic},
   ImageSizeRaw->{1306, 1050},
   PlotRange->{{0, 1306}, {0, 1050}}], ";"}]], "Input",
 CellChangeTimes->{3.773320846496043*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"a6018ad1-8a59-4032-9ed0-b07504356725"],

Cell["\<\
These are the x and y coordinates in terms of \[Beta] and \[Alpha].  The \
coordinates come from realizing that 2 is on the perpendicular bisector  of \
w1.  Similarly, 3 is on the perpendicular bisector of w1, plus w2.  That is \
exactly what we have; we take the angle -\[Alpha] and then simply add w2.   \
Note that we are scaling such that the side length of the big circle is 1/2.  \
Also note that L is the magnitude of vector w2.  \
\>", "Text",
 CellChangeTimes->{{3.773230032131681*^9, 3.7732301146898413`*^9}, {
  3.7732301698982773`*^9, 3.773230187823554*^9}, {3.773320859962916*^9, 
  3.7733209127348337`*^9}, {3.7733209647662163`*^9, 3.773320978957726*^9}, {
  3.77332133222001*^9, 
  3.773321410218862*^9}},ExpressionUUID->"88ab519e-ade3-4f73-9d45-\
8fdbbb93d8d2"],

Cell[BoxData[
 RowBox[{"x2", ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.772385080865734*^9, 3.7723851302431927`*^9}},
 CellLabel->
  "In[1899]:=",ExpressionUUID->"6ec513fd-2d9e-4135-b70e-83752c8d80df"],

Cell[BoxData[
 RowBox[{"y2", ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.772385148670485*^9, 3.772385191070553*^9}},
 CellLabel->
  "In[1900]:=",ExpressionUUID->"d79c6bfc-0c8d-421c-84b1-9dfe2cdec9f0"],

Cell[BoxData[
 RowBox[{"x3", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"-", "\[Alpha]"}], "]"}]}], "+", 
   RowBox[{"L", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Beta]", "+", "\[Alpha]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.772385215319808*^9, 3.7723852682900248`*^9}},
 CellLabel->
  "In[1901]:=",ExpressionUUID->"d1ed7365-d635-4710-95fe-87f97ecaf666"],

Cell[BoxData[
 RowBox[{"y3", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"-", "\[Alpha]"}], "]"}]}], "+", 
   RowBox[{"L", "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Beta]", "+", "\[Alpha]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.77238527655765*^9, 3.772385300288013*^9}},
 CellLabel->
  "In[1902]:=",ExpressionUUID->"073936d6-b271-401d-8e5f-aa1dc9456d13"],

Cell["\<\
Now, we have used all the information regarding tangencies, except for the \
fact that the two small circles are tangent.  We can use the distance formula \
and solve for L.\
\>", "Text",
 CellChangeTimes->{{3.77323005966503*^9, 3.773230072029593*^9}, {
  3.773230192325869*^9, 
  3.7732302296795177`*^9}},ExpressionUUID->"6a19f760-f824-41d3-a234-\
f963493b62f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x3", "-", "x2"}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"y3", "-", "y2"}], ")"}], "^", "2"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}], "^", "2"}]}], ",",
     "L"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.772385305074869*^9, 3.772385338709095*^9}, {
  3.7723853895105333`*^9, 3.772385396605896*^9}},
 CellLabel->
  "In[1903]:=",ExpressionUUID->"23ddc62a-558a-4fd5-8f41-ce7a6f8a8c76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"L", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
          "]"}]}]]}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", "\[Rule]", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
          "]"}]}]]}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.772385342518244*^9, {3.772385393548448*^9, 3.772385398521974*^9}, 
   3.7728076103834553`*^9, 3.772807648118513*^9, 3.772812965469434*^9, 
   3.772876009204508*^9, 3.7728954140914593`*^9, 3.772901312306271*^9, 
   3.77290513857008*^9, 3.772973120788373*^9, 3.772977010016346*^9},
 CellLabel->
  "Out[1903]=",ExpressionUUID->"83f3822a-3aba-4b3e-930f-e3673cfd1729"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
         "]"}]}]]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", 
       RowBox[{"Pi", "/", "4"}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"Pi", "/", "4"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772385412345542*^9, 3.77238549956126*^9}},
 CellLabel->
  "In[1904]:=",ExpressionUUID->"b037391d-cace-4010-a345-4343339862e1"],

Cell[BoxData["1.414213562373095`"], "Output",
 CellChangeTimes->{{3.772385478492741*^9, 3.772385501031172*^9}, 
   3.772807610743483*^9, 3.772807648153204*^9, 3.7728129655865927`*^9, 
   3.77287600926991*^9, 3.772895414258709*^9, 3.7729013123766727`*^9, 
   3.7729051386421947`*^9, 3.772973120985937*^9, 3.772977010085832*^9},
 CellLabel->
  "Out[1904]=",ExpressionUUID->"f6b5b657-db63-408d-bfd7-ef2c83c16cd9"]
}, Open  ]],

Cell["\<\
Numerically check to see which one is positive because L cannot be negative.  \
\>", "Text",
 CellChangeTimes->{{3.77323023735852*^9, 
  3.773230262121079*^9}},ExpressionUUID->"8552c9c8-902b-464d-bf16-\
2b380d23161a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"x3", "/.", 
   RowBox[{"L", "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
         "]"}]}]]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772385571011969*^9, 3.7723856335788918`*^9}},
 CellLabel->
  "In[1905]:=",ExpressionUUID->"0addc618-564f-42f9-a5b8-3cffa127244a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
   SqrtBox["2"]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     SqrtBox[
      RowBox[{"10", "-", 
       RowBox[{"8", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
        "]"}]}]], "+", 
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.772385613116014*^9, 3.772385634542535*^9}, 
   3.772807610942857*^9, 3.772807648307592*^9, 3.772812966010326*^9, 
   3.772876009441883*^9, 3.7728954144648447`*^9, 3.772901312549219*^9, 
   3.772905138826611*^9, 3.772973121227463*^9, 3.772977010265079*^9},
 CellLabel->
  "Out[1905]=",ExpressionUUID->"1558b543-2a00-4960-b126-9f8d2911cd5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"y3", "/.", 
   RowBox[{"L", "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
         "]"}]}]]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772385623572543*^9, 3.772385623645887*^9}},
 CellLabel->
  "In[1906]:=",ExpressionUUID->"217e8ae3-d8c4-45f6-9aac-adc4a919f8fd"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SqrtBox["2"]}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
    RowBox[{
     SqrtBox[
      RowBox[{"10", "-", 
       RowBox[{"8", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
        "]"}]}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.772385624618766*^9, 3.772807611131366*^9, 
  3.7728076484788647`*^9, 3.77281296637335*^9, 3.772876009628405*^9, 
  3.772895414700865*^9, 3.7729013127387466`*^9, 3.77290513903024*^9, 
  3.772973121424407*^9, 3.772977010442547*^9},
 CellLabel->
  "Out[1906]=",ExpressionUUID->"1afbbdaf-aeba-43e1-b99c-fe20fc2c6b70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"L", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Beta]", "+", "\[Alpha]"}], "]"}]}], "/.", 
   RowBox[{"L", "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
         "]"}]}]]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772386681501339*^9, 3.772386694570417*^9}},
 CellLabel->
  "In[1907]:=",ExpressionUUID->"af8da9d3-66ef-4279-9974-66ad6f8286ac"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"10", "-", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}]],
     "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.772386696033346*^9, 3.7728076111787777`*^9, 
  3.7728076485918207`*^9, 3.772812966537232*^9, 3.772876009675844*^9, 
  3.7728954148253508`*^9, 3.772901312793623*^9, 3.772905139107912*^9, 
  3.7729731214755983`*^9, 3.772977010503892*^9},
 CellLabel->
  "Out[1907]=",ExpressionUUID->"7bf0d81c-1d83-49df-825d-d89b4eddac8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"L", "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Beta]", "+", "\[Alpha]"}], "]"}]}], "/.", 
   RowBox[{"L", "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
         "]"}]}]]}], "+", 
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772387052677953*^9, 3.772387053174654*^9}},
 CellLabel->
  "In[1908]:=",ExpressionUUID->"30665539-f016-4605-be04-fe38aa13149f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     RowBox[{"10", "-", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}]],
     "+", 
    RowBox[{"2", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.772387055548921*^9, 3.772807611247869*^9, 
  3.772807648675215*^9, 3.7728129666864443`*^9, 3.772876009734394*^9, 
  3.772895414992105*^9, 3.772901312838787*^9, 3.7729051391730633`*^9, 
  3.772973121545933*^9, 3.772977010570066*^9},
 CellLabel->
  "Out[1908]=",ExpressionUUID->"adc57869-d5d8-43f7-8bdc-b4ccf3578304"]
}, Open  ]],

Cell["\<\
Here we substitute in for L into our original circle centers.  Thus, we now \
have the centers in terms of two varibles.  \
\>", "Text",
 CellChangeTimes->{{3.773230270045423*^9, 3.773230275977543*^9}, {
  3.773230368537518*^9, 
  3.773230438820671*^9}},ExpressionUUID->"41923340-5a45-4d52-845f-\
42d4a07c1d28"],

Cell["\<\
We also want to prevent any of circles being able to \
\[OpenCurlyDoubleQuote]pop out\[CloseCurlyDoubleQuote], i.e. we don\
\[CloseCurlyQuote]t want any of the tangencies of the small circles to be \
contained in a semi circle.  Slope C2C3 is the slope between the two small \
circles; similarly the slope between C1C2 is between the big circle and C2 \
(the small circle).  \
\>", "Text",
 CellChangeTimes->{{3.772813093075281*^9, 3.772813137184258*^9}, {
  3.773230462822361*^9, 3.7732304779607773`*^9}, {3.773230526687595*^9, 
  3.773230569011301*^9}},ExpressionUUID->"3b26575e-da2d-4c53-b9eb-\
046885e37885"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"slopeC2C3", " ", ":=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y3", "-", "y2"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"x3", "-", "x2"}], ")"}]}], "/.", 
    RowBox[{"L", "\[Rule]", " ", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
          "]"}]}]]}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "slopeC2C3"}], "Input",
 CellChangeTimes->{{3.772798266263476*^9, 3.772798301911893*^9}, {
  3.77279834877708*^9, 3.772798381709309*^9}},
 CellLabel->
  "In[1909]:=",ExpressionUUID->"a3aaf1ba-8dbf-4bc9-80f5-6caf5f53bcec"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
   RowBox[{
    SqrtBox[
     RowBox[{"10", "-", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}]],
     " ", 
    RowBox[{"Tan", "[", 
     RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"10", "-", 
     RowBox[{"8", " ", 
      SqrtBox["2"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}]], 
   "+", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]]], "Output",
 CellChangeTimes->{{3.7727983722040653`*^9, 3.772798383446958*^9}, 
   3.772807612137535*^9, 3.772807649207837*^9, 3.772812967898964*^9, 
   3.772876010962503*^9, 3.772895416235342*^9, 3.772901314044821*^9, 
   3.772905140551373*^9, 3.7729731227923*^9, 3.772977011743704*^9},
 CellLabel->
  "Out[1910]=",ExpressionUUID->"4d087095-0b97-40ed-946a-fcb7aba0dafe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"slopeC1C2", " ", ":=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0", "-", "y2"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"0", "-", "x2"}], ")"}]}], "/.", 
    RowBox[{"L", "\[Rule]", " ", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
          "]"}]}]]}], "+", 
      RowBox[{
       SqrtBox["2"], " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", "slopeC1C2"}], "Input",
 CellChangeTimes->{{3.772798396527972*^9, 3.772798417682453*^9}},
 CellLabel->
  "In[1911]:=",ExpressionUUID->"93746d1c-38e0-49db-b221-b5c0359cb3cf"],

Cell[BoxData[
 RowBox[{"Tan", "[", "\[Alpha]", "]"}]], "Output",
 CellChangeTimes->{{3.772798412953619*^9, 3.772798418369573*^9}, 
   3.772807612203361*^9, 3.7728076492479963`*^9, 3.77281296798656*^9, 
   3.77287601125189*^9, 3.77289541662525*^9, 3.772901314117442*^9, 
   3.772905140626412*^9, 3.7729731229450073`*^9, 3.772977011816285*^9},
 CellLabel->
  "Out[1912]=",ExpressionUUID->"00b4db5e-0851-4f45-baf5-fe2edee01a62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"slopeC2C3", "==", "0"}], ",", 
     RowBox[{"slopeC2C3", "\[Equal]", "slopeC1C2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772798435577351*^9, 3.772798460704722*^9}, {
  3.7727985142251368`*^9, 3.7727985603056583`*^9}, {3.772798626365337*^9, 
  3.772798637006875*^9}, {3.772798682979794*^9, 3.772798721896573*^9}, {
  3.772798832337633*^9, 3.7727988565034037`*^9}},
 CellLabel->
  "In[1913]:=",ExpressionUUID->"11ec36e7-30ab-497b-b63c-144679339498"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
dRMqvPzl+NhlaGUxGEIxvu3wZyJbJ5ZCh3ahQ/5FArq9CrFKVygsUum+9XAH
gT6Vx/MdblOML7448TUoO52CfrB7ds90AomdkVaamfSc5l85PdmHh2d1Pu6c
EorxwV/h9noPyijkHWroizHkYedHD7+qcgr2r6RnbqXnIAmP8P7rJV3Xvju2
Ke1vZ+pYJY405dFz1nLZks6KWorh6dUvZ5cqvqMQrbU6oFunHVMdWhp30HpT
RV0Bfx4XwZZhkQkN/82ZoWNz3ec3UvA43CN+PNSGiNN6Ztm0Dnuz72qIYhv0
v9yqz6X1KE+7bVS6/n9//71D6jb0HN36YtabeFrX9yUHNnDZODVfXmMpPceO
8nRW+yuVITo+O+Saovd7Nk7qrxzIoXVxwvamfX+zmfOM+Ep8Kt+z8FrFsiOH
Pv8oXz3XOZ+kSiloJd41TUtiweYmhy1+Sp939S0DtLUiXnZGhlYGxfA0YNBz
5sVUCnG11Z56y1oxx73cJuwyBbdKw/rmby1w1Pp5MuI8hSPTdBWPP2ph+nyU
r+uM70wdOUF//xi9vmT1FuS5LFbe6EeBN1jieO1CMwJUz2mecaQYvlrY2IfK
2FD4onJ4cb4NrTNXqvZZUdi43L2Vo9rM1G9eb3GXc0QTTFVfub5XoxjepnlQ
rl0KFK7JZmxtq2pE2r4R25WfScx33/Yx7GgjVvQuKK5pIBm+Xl5X5TW9nETR
WYv71yY24rCMp3VsEQm3FeFpap0NTD8bBjksG9zRgEl7zukohpGI83xqHTO5
gfGLUd4GvD+r7k/7yf8A7X6+yg==
     "], {{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121}]}, 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               FractionBox[
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}]}], "+", 
                  RowBox[{
                    SqrtBox[
                    RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], " ", 
                    RowBox[{"Tan", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}], 
                RowBox[{
                  SqrtBox[
                   RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], "+", 
                  RowBox[{"2", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}]], "\[Equal]", 
               "0"}], ",", 
             RowBox[{
               FractionBox[
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}]}], "+", 
                  RowBox[{
                    SqrtBox[
                    RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], " ", 
                    RowBox[{"Tan", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}], 
                RowBox[{
                  SqrtBox[
                   RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], "+", 
                  RowBox[{"2", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}]], "\[Equal]", 
               RowBox[{"Tan", "[", 
                 TagBox["\[Alpha]", HoldForm], "]"}]}]}], "}"}]], 
        Annotation[#, {((10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] + 
             2 2^Rational[1, 2] Sin[
                HoldForm[$CellContext`\[Alpha]]] 
              Sin[HoldForm[$CellContext`\[Alpha]] + 
                HoldForm[$CellContext`\[Beta]]])^(-1) ((-2) 2^Rational[1, 2] 
             Cos[HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]] Sin[
               HoldForm[$CellContext`\[Alpha]]] + (10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] 
             Tan[HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]]) == 
          0, ((10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[
                2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] + 
             2 2^Rational[1, 2] Sin[
                HoldForm[$CellContext`\[Alpha]]] 
              Sin[HoldForm[$CellContext`\[Alpha]] + 
                HoldForm[$CellContext`\[Beta]]])^(-1) ((-2) 2^Rational[1, 2] 
             Cos[HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]] Sin[
               HoldForm[$CellContext`\[Alpha]]] + (10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] 
             Tan[HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]]) == Tan[
            HoldForm[$CellContext`\[Alpha]]]}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
            134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 
           147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 
           160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
           173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 
           186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 
           199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
           212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
           225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
           238, 239, 240}]}, 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               FractionBox[
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}]}], "+", 
                  RowBox[{
                    SqrtBox[
                    RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], " ", 
                    RowBox[{"Tan", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}], 
                RowBox[{
                  SqrtBox[
                   RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], "+", 
                  RowBox[{"2", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}]], "\[Equal]", 
               "0"}], ",", 
             RowBox[{
               FractionBox[
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}]}], "+", 
                  RowBox[{
                    SqrtBox[
                    RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], " ", 
                    RowBox[{"Tan", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}], 
                RowBox[{
                  SqrtBox[
                   RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], "+", 
                  RowBox[{"2", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Sin", "[", 
                    TagBox["\[Alpha]", HoldForm], "]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], "]"}]}]}]], "\[Equal]", 
               RowBox[{"Tan", "[", 
                 TagBox["\[Alpha]", HoldForm], "]"}]}]}], "}"}]], 
        Annotation[#, {((10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] + 
             2 2^Rational[1, 2] Sin[
                HoldForm[$CellContext`\[Alpha]]] 
              Sin[HoldForm[$CellContext`\[Alpha]] + 
                HoldForm[$CellContext`\[Beta]]])^(-1) ((-2) 2^Rational[1, 2] 
             Cos[HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]] Sin[
               HoldForm[$CellContext`\[Alpha]]] + (10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] 
             Tan[
              HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]]) == 
          0, ((10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] + 
             2 2^Rational[1, 2] Sin[
                HoldForm[$CellContext`\[Alpha]]] 
              Sin[HoldForm[$CellContext`\[Alpha]] + 
                HoldForm[$CellContext`\[Beta]]])^(-1) ((-2) 2^Rational[1, 2] 
             Cos[HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]] Sin[
               HoldForm[$CellContext`\[Alpha]]] + (10 - 8 2^Rational[1, 2] + 
               2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
               Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
               Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])] + 
               Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
                  HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] 
             Tan[HoldForm[$CellContext`\[Alpha]] + 
               HoldForm[$CellContext`\[Beta]]]) == Tan[
            HoldForm[$CellContext`\[Alpha]]]}, "Tooltip"]& ]}}], {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.2972513613212069, 0.2972513613212069}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> Identity,
      Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> NCache[{{
         ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}, {
         ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}}, {{
       0.2972513613212069, 0.7853981633974483}, {0.2972513613212069, 
       0.7853981633974483}}], PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.772798475834646*^9, 3.772798563985631*^9, {3.772798631618209*^9, 
   3.772798640248101*^9}, {3.7727987096321487`*^9, 3.77279872590097*^9}, {
   3.772798848939163*^9, 3.772798860136054*^9}, 3.772807616175127*^9, 
   3.772807653417432*^9, 3.7728129721988773`*^9, 3.772876017332265*^9, 
   3.77289542175943*^9, 3.7729013193567953`*^9, 3.7729051453824253`*^9, 
   3.7729731328978643`*^9, 3.772977015816593*^9},
 CellLabel->
  "Out[1913]=",ExpressionUUID->"42370929-8e4f-459b-8203-212838a9d6eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"slopeC2C3", "\[Equal]", "slopeC1C2"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77279859383095*^9, 3.7727986021193333`*^9}},
 CellLabel->
  "In[1914]:=",ExpressionUUID->"c82518e4-a4e1-4d32-8475-ca5b854d4193"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
8BDUFqcRyP4n/wdpjdkj
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119}]},
      RowBox[{
        FractionBox[
         RowBox[{
           RowBox[{
             RowBox[{"-", "2"}], " ", 
             SqrtBox["2"], " ", 
             RowBox[{"Cos", "[", 
               RowBox[{
                 TagBox["\[Alpha]", HoldForm], "+", 
                 TagBox["\[Beta]", HoldForm]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
               TagBox["\[Alpha]", HoldForm], "]"}]}], "+", 
           RowBox[{
             SqrtBox[
              RowBox[{"10", "-", 
                RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                    TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
                RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], " ", 
             RowBox[{"Tan", "[", 
               RowBox[{
                 TagBox["\[Alpha]", HoldForm], "+", 
                 TagBox["\[Beta]", HoldForm]}], "]"}]}]}], 
         RowBox[{
           SqrtBox[
            RowBox[{"10", "-", 
              RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                  TagBox["\[Beta]", HoldForm]}], "]"}], "-", 
              RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox["\[Alpha]", HoldForm], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    TagBox["\[Alpha]", HoldForm]}], "+", 
                    TagBox["\[Beta]", HoldForm]}], ")"}]}], "]"}]}]], "+", 
           RowBox[{"2", " ", 
             SqrtBox["2"], " ", 
             RowBox[{"Sin", "[", 
               TagBox["\[Alpha]", HoldForm], "]"}], " ", 
             RowBox[{"Sin", "[", 
               RowBox[{
                 TagBox["\[Alpha]", HoldForm], "+", 
                 TagBox["\[Beta]", HoldForm]}], "]"}]}]}]], "\[Equal]", 
        RowBox[{"Tan", "[", 
          TagBox["\[Alpha]", HoldForm], "]"}]}]],
     Annotation[#, ((10 - 8 2^Rational[1, 2] + 
           2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
           Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
           Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
              HoldForm[$CellContext`\[Beta]])] + 
           Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
              HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] + 
         2 2^Rational[1, 2] Sin[
            HoldForm[$CellContext`\[Alpha]]] 
          Sin[HoldForm[$CellContext`\[Alpha]] + 
            HoldForm[$CellContext`\[Beta]]])^(-1) ((-2) 2^Rational[1, 2] 
         Cos[HoldForm[$CellContext`\[Alpha]] + HoldForm[$CellContext`\[Beta]]]
           Sin[
           HoldForm[$CellContext`\[Alpha]]] + (10 - 8 2^Rational[1, 2] + 
           2 Cos[2 HoldForm[$CellContext`\[Alpha]]] + 
           Cos[2 HoldForm[$CellContext`\[Beta]]] - 2 
           Cos[2 (HoldForm[$CellContext`\[Alpha]] + 
              HoldForm[$CellContext`\[Beta]])] + 
           Cos[2 (2 HoldForm[$CellContext`\[Alpha]] + 
              HoldForm[$CellContext`\[Beta]])])^Rational[1, 2] 
         Tan[HoldForm[$CellContext`\[Alpha]] + 
           HoldForm[$CellContext`\[Beta]]]) == Tan[
        HoldForm[$CellContext`\[Alpha]]], "Tooltip"]& ]}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0.2972513613212069, 0.2972513613212069},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->NCache[{{
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}, {
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}}, {{
    0.2972513613212069, 0.7853981633974483}, {0.2972513613212069, 
    0.7853981633974483}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7727986054580927`*^9, 3.772807656959936*^9, 
  3.7728129759738207`*^9, 3.772876021123302*^9, 3.772895425432887*^9, 
  3.772901323509852*^9, 3.772905149943124*^9, 3.772973137065628*^9, 
  3.772977019884738*^9},
 CellLabel->
  "Out[1914]=",ExpressionUUID->"348d91a5-b332-4769-a83b-f4c4807bc7cb"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.772798340154149*^9, 3.7727983652341413`*^9}},
 CellLabel->
  "In[1915]:=",ExpressionUUID->"abbd93a3-c8ff-481c-a53c-386b1976aaa7"],

Cell[CellGroupData[{

Cell["Circle Centers and Radii", "Section",
 CellChangeTimes->{{3.5801358843541727`*^9, 3.5801358938578777`*^9}, {
   3.580135983361384*^9, 3.580136022519301*^9}, {3.5801360744318657`*^9, 
   3.580136129319181*^9}, {3.5801361649266577`*^9, 3.580136172638129*^9}, 
   3.580137288315072*^9, {3.738968272803437*^9, 
   3.738968275929782*^9}},ExpressionUUID->"58eac1c0-3dea-4423-bd3e-\
40f227e6c6e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centers", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
       RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
        SqrtBox["2"]], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SqrtBox["2"]}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.7721221520584707`*^9, 3.772122208130066*^9}, {
   3.772318816380787*^9, 3.772319089826538*^9}, {3.772319674816237*^9, 
   3.772319675308375*^9}, 3.772385692618927*^9, {3.7723857588810797`*^9, 
   3.772385769826887*^9}, 3.772386542601409*^9, {3.772386588204664*^9, 
   3.772386608598695*^9}},
 CellLabel->
  "In[1916]:=",ExpressionUUID->"583b7c4c-5ac3-402f-8a72-fd2354787739"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
       SqrtBox["2"]], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["2"]}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.772532603667697*^9, 3.7726452294992847`*^9, 
  3.7727079254388447`*^9, 3.772797257891358*^9, 3.772807657238184*^9, 
  3.772812976053814*^9, 3.7728760211947002`*^9, 3.77289542584935*^9, 
  3.772901323593438*^9, 3.7729051500209503`*^9, 3.772973137136415*^9, 
  3.772977019988171*^9},
 CellLabel->
  "Out[1916]=",ExpressionUUID->"9174dda9-7c29-48f1-8f2b-bdad5ad01e3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lattice Vectors", "Section",
 CellChangeTimes->{{3.5801372743016376`*^9, 3.5801373048748693`*^9}, {
  3.580137407171616*^9, 
  3.5801374162247047`*^9}},ExpressionUUID->"dd1d0949-4425-489a-9138-\
ef893592d4c8"],

Cell["\<\
W2 comes from simply taking (L*Cos[\[Alpha]+\[Beta]], \
L*Sin[\[Alpha]+\[Beta]]) and substituting in our value of L.  \
\>", "Text",
 CellChangeTimes->{{3.773321480698188*^9, 
  3.773321527039363*^9}},ExpressionUUID->"282c637d-953d-42d4-a3d0-\
6c174b8a2666"],

Cell["We are working this flat torus", "Text",
 CellChangeTimes->{{3.582369864772891*^9, 3.5823699271444187`*^9}, {
  3.582369973496118*^9, 3.5823699970297337`*^9}, {3.738969423090049*^9, 
  3.738969436681583*^9}, {3.7715975872130003`*^9, 3.771597588982992*^9}, {
  3.771603132939183*^9, 
  3.77160313547442*^9}},ExpressionUUID->"200ae999-c74e-4e08-bfe2-\
f7fa1b43f45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"latticeVectors", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
        RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.580137534026297*^9, 3.5801375508003473`*^9}, {
   3.580137940862308*^9, 3.580138090818322*^9}, {3.581161269242415*^9, 
   3.581161270832081*^9}, {3.581179001836388*^9, 3.581179057408264*^9}, {
   3.581179108668387*^9, 3.581179132207106*^9}, {3.5811806969625072`*^9, 
   3.5811807093372307`*^9}, {3.581242519554166*^9, 3.581242520215888*^9}, {
   3.58124931263903*^9, 3.581249315383133*^9}, {3.58185644108707*^9, 
   3.581856445859899*^9}, 3.5818565961548*^9, 3.581949060452406*^9, {
   3.581949331181172*^9, 3.581949357082802*^9}, 3.582122138075748*^9, {
   3.73896944218652*^9, 3.7389694501137342`*^9}, {3.771597561577282*^9, 
   3.7715975818952227`*^9}, {3.7716031594864607`*^9, 3.771603216092555*^9}, {
   3.771604868269343*^9, 3.771604872292728*^9}, {3.771614674809121*^9, 
   3.771614677310281*^9}, {3.771615121197836*^9, 3.771615123985476*^9}, {
   3.771617255311338*^9, 3.771617259388358*^9}, {3.772033618527232*^9, 
   3.772033648132484*^9}, {3.772118364703985*^9, 3.7721183827086573`*^9}, {
   3.772121899641304*^9, 3.772121913734003*^9}, {3.772319105082589*^9, 
   3.772319115179603*^9}, {3.772319706381551*^9, 3.772319707623681*^9}, {
   3.7723870411848927`*^9, 3.772387103494478*^9}},
 CellLabel->
  "In[1917]:=",ExpressionUUID->"599d2b49-d9bb-4d65-8681-bcc6fa3e614e"],

Cell["Need length of w2 to be greater than 1 to prevent overlap", "Text",
 CellChangeTimes->{{3.7726591355495768`*^9, 3.772659145000038*^9}, {
  3.772797343560215*^9, 
  3.772797356578884*^9}},ExpressionUUID->"42a43664-bda2-45b5-8ecd-\
206494e981df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}], ")"}], 
      "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}], ")"}], 
      "^", "2"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772659114288291*^9, 3.772659123486455*^9}, {
  3.772797379219389*^9, 3.772797381716146*^9}, {3.772807776559598*^9, 
  3.772807783631968*^9}},
 CellLabel->
  "In[1918]:=",ExpressionUUID->"cf1d8703-de58-49eb-9a93-d4a6f9246446"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{"10", "-", 
     RowBox[{"8", " ", 
      SqrtBox["2"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}], 
     "+", 
     RowBox[{"4", " ", 
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"10", "-", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
         "]"}]}]], " ", 
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], "2"]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.7726591242778177`*^9, 3.7727973835818977`*^9, 
  3.772807657505128*^9, 3.772807785237009*^9, 3.7728129764250517`*^9, 
  3.772876021623281*^9, 3.7728954264141493`*^9, 3.7729013239925423`*^9, 
  3.772905150447591*^9, 3.772973137522882*^9, 3.772977020397155*^9},
 CellLabel->
  "Out[1918]=",ExpressionUUID->"b28ff0ae-6a63-4034-8311-384325e78d26"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Edges", "Section",
 CellChangeTimes->{{3.581161568527853*^9, 
  3.581161585574769*^9}},ExpressionUUID->"8c1dc234-14dc-4eeb-9527-\
a7c0cd7c55bc"],

Cell["\<\
Here we store the edges a list {i,j,m,n} where center[[i]] is connected to \
center[[j]] + m*latticeVectors[[1]] + n*latticeVectors[2]]
center[[i]] is *always* in the fundamental domain ****the last two numbers \
are winding numbers****\[LineSeparator]\t\
\>", "Text",
 CellChangeTimes->{{3.581161595486527*^9, 3.5811616304139853`*^9}, {
   3.581161665677293*^9, 3.5811617412920313`*^9}, 3.581162242261799*^9, {
   3.581247308234243*^9, 3.581247324583816*^9}, {3.5817831634296637`*^9, 
   3.581783166961875*^9}, {3.738969798091196*^9, 3.738969813400868*^9}, {
   3.771706689824682*^9, 3.771706708949882*^9}, {3.771770398255272*^9, 
   3.77177041972334*^9}},ExpressionUUID->"e7a21d8e-f617-4378-a5da-\
9dc2d5a1e93e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edges", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.581161747323979*^9, 3.581161777837888*^9}, {
   3.581179208843933*^9, 3.58117924274809*^9}, 3.581181365997052*^9, {
   3.581249342236608*^9, 3.5812493456365433`*^9}, 3.5818566103947773`*^9, 
   3.581949096185699*^9, 3.582122155172645*^9, {3.7389695169453783`*^9, 
   3.738969553568454*^9}, 3.772034134720971*^9},
 CellLabel->
  "In[1919]:=",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],

Cell[CellGroupData[{

Cell["\<\
Check the edge lengths are all 2rs= Sqrt[2]-1 or \
rs+rb=Sqrt[2]rb=Sqrt[2]/2=1/Sqrt[2]\
\>", "Subsection",
 CellChangeTimes->{{3.5811792593456697`*^9, 3.581179272400176*^9}, {
  3.738969559839985*^9, 3.738969575322688*^9}, {3.771598081340612*^9, 
  3.771598085444192*^9}, {3.771604075139793*^9, 3.77160408016324*^9}, {
  3.771617272380292*^9, 
  3.771617292132626*^9}},ExpressionUUID->"13c39ee2-5a3a-466d-965d-\
7a6d5f6b780b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "edges", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P1", ":=", " ", 
     RowBox[{
      RowBox[{"centers", "[", 
       RowBox[{"[", 
        RowBox[{"edges", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"P2", ":=", " ", 
     RowBox[{"centers", "[", 
      RowBox[{"[", 
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Edge \>\"", ",", "i", ",", "\"\<: Length is \>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "\[Alpha]", "\[LessEqual]", " ", 
            RowBox[{"Pi", "/", "2"}]}], ",", 
           RowBox[{
            RowBox[{"Pi", "/", "3"}], "\[LessEqual]", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "\[LessEqual]", 
            RowBox[{"Pi", "/", "2"}]}], ",", 
           RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", " ", 
            RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.581179295446331*^9, 3.581179352609571*^9}, {
   3.581179384265609*^9, 3.5811794135767803`*^9}, {3.5811794673296432`*^9, 
   3.581179567921268*^9}, {3.58118010572506*^9, 3.5811801497103157`*^9}, {
   3.581180260610394*^9, 3.581180261131735*^9}, {3.5811803102623568`*^9, 
   3.581180349154674*^9}, {3.5811804523957653`*^9, 3.581180454488806*^9}, {
   3.581180488851935*^9, 3.5811805057442503`*^9}, {3.581180549545892*^9, 
   3.581180573366247*^9}, {3.5811811710286903`*^9, 3.581181171490512*^9}, {
   3.5811813056653357`*^9, 3.581181353392084*^9}, 3.581242444414118*^9, 
   3.581242610726717*^9, {3.581949105825959*^9, 3.5819491081768417`*^9}, {
   3.581949361163632*^9, 3.581949361955078*^9}, {3.58212215863743*^9, 
   3.582122164868064*^9}, {3.738969584524962*^9, 3.738969584955559*^9}, {
   3.738969666208755*^9, 3.738969673635594*^9}, {3.7715977979175987`*^9, 
   3.771597830642771*^9}, {3.771597980732808*^9, 3.771597986444655*^9}, {
   3.771598046811739*^9, 3.771598052074088*^9}, {3.771598191968363*^9, 
   3.771598218647225*^9}, 3.7716032382556562`*^9, {3.771603296654491*^9, 
   3.771603298043535*^9}, {3.7716033527504587`*^9, 3.771603358182477*^9}, {
   3.771603418205394*^9, 3.77160345686306*^9}, {3.771603537270556*^9, 
   3.771603559998033*^9}, {3.771604884658742*^9, 3.7716048887173233`*^9}, {
   3.772118918756332*^9, 3.772118933427979*^9}, {3.772121926000918*^9, 
   3.772121947560111*^9}, {3.7723191519046307`*^9, 3.772319189491704*^9}, {
   3.772373242761643*^9, 3.772373258672859*^9}, {3.772387136101551*^9, 
   3.7723871788805943`*^9}},
 CellLabel->
  "In[1920]:=",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 1, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.77253261597657*^9, 
   3.772645243672505*^9, 3.772707938910111*^9, 3.772797517057995*^9, 
   3.772807657647318*^9, 3.7728129764656687`*^9, 3.7728760217057257`*^9, 
   3.7728954264810038`*^9, 3.772901324067445*^9, 3.7729051505081882`*^9, 
   3.772973137570508*^9, 3.772977020469679*^9},
 CellLabel->
  "During evaluation of \
In[1920]:=",ExpressionUUID->"35a962f1-08b4-4c1d-ae7e-a7dc6b93f209"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   SqrtBox[
    RowBox[{"3", "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]}]]}],
  SequenceForm[
  "Edge ", 2, ": Length is ", (3 - 2 2^Rational[1, 2])^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.77253261597657*^9, 
   3.772645243672505*^9, 3.772707938910111*^9, 3.772797517057995*^9, 
   3.772807657647318*^9, 3.7728129764656687`*^9, 3.7728760217057257`*^9, 
   3.7728954264810038`*^9, 3.772901324067445*^9, 3.7729051505081882`*^9, 
   3.772973137570508*^9, 3.772977020481715*^9},
 CellLabel->
  "During evaluation of \
In[1920]:=",ExpressionUUID->"6fc11087-e900-4bf8-9287-09aa97d09f93"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 3, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.77253261597657*^9, 
   3.772645243672505*^9, 3.772707938910111*^9, 3.772797517057995*^9, 
   3.772807657647318*^9, 3.7728129764656687`*^9, 3.7728760217057257`*^9, 
   3.7728954264810038`*^9, 3.772901324067445*^9, 3.7729051505081882`*^9, 
   3.772973137570508*^9, 3.772977020492817*^9},
 CellLabel->
  "During evaluation of \
In[1920]:=",ExpressionUUID->"5c1b5312-397f-484a-ac4b-1e948b51ace1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 4, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.77253261597657*^9, 
   3.772645243672505*^9, 3.772707938910111*^9, 3.772797517057995*^9, 
   3.772807657647318*^9, 3.7728129764656687`*^9, 3.7728760217057257`*^9, 
   3.7728954264810038`*^9, 3.772901324067445*^9, 3.7729051505081882`*^9, 
   3.772973137570508*^9, 3.772977020499193*^9},
 CellLabel->
  "During evaluation of \
In[1920]:=",ExpressionUUID->"db5088c1-087a-4fd4-990f-f3189ffeb4be"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 5, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.7720331283657846`*^9, 3.7720341522633*^9, 
   3.772118462088807*^9, 3.7721189372031384`*^9, 3.7721219505858793`*^9, 
   3.772122222345739*^9, 3.772319264114677*^9, 3.7723197378186398`*^9, 
   3.772373284684204*^9, 3.7723871829001713`*^9, 3.77253261597657*^9, 
   3.772645243672505*^9, 3.772707938910111*^9, 3.772797517057995*^9, 
   3.772807657647318*^9, 3.7728129764656687`*^9, 3.7728760217057257`*^9, 
   3.7728954264810038`*^9, 3.772901324067445*^9, 3.7729051505081882`*^9, 
   3.772973137570508*^9, 3.772977020505548*^9},
 CellLabel->
  "During evaluation of \
In[1920]:=",ExpressionUUID->"c58e5f35-78c2-4810-b3f3-a13bd81ca8ad"]
}, Open  ]]
}, Open  ]],

Cell["Yes!", "Text",
 CellChangeTimes->{{3.738969710949356*^9, 
  3.738969711596074*^9}},ExpressionUUID->"44713034-9149-4e18-aea8-\
b2757e3281a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packing Visualization", "Section",
 CellChangeTimes->{{3.5811614691633863`*^9, 3.581161498320479*^9}, {
  3.5812608794354057`*^9, 
  3.5812608803693533`*^9}},ExpressionUUID->"84c54b26-f298-4444-9ec8-\
58440b22b9ee"],

Cell["\<\
Here we visualize the packing and the fundamental domain to help determine \
the value of the parameters for which this is a packing graph.\
\>", "Text",
 CellChangeTimes->{{3.581161529243552*^9, 3.58116155007941*^9}, {
  3.581431617395529*^9, 
  3.581431638872754*^9}},ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-\
bdaf155f4274"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "20"}], ",", 
                  RowBox[{"-", "20"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "20"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}]}], 
        RowBox[{"(*", 
         RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"Pi", "/", "4"}], ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"Pi", "/", "4"}], ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "a"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Pi", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
      "a"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.581180824186262*^9, 3.5811808987974043`*^9}, 
   3.5812426341496763`*^9, {3.5812428812130423`*^9, 3.5812429341543503`*^9}, {
   3.581242984843346*^9, 3.5812430741219807`*^9}, {3.5812431287383547`*^9, 
   3.581243135743741*^9}, {3.5812473656144733`*^9, 3.5812473732061653`*^9}, {
   3.5812474374292707`*^9, 3.581247473907415*^9}, {3.581247505756896*^9, 
   3.5812475150029573`*^9}, {3.5812475479941683`*^9, 3.581247552706957*^9}, {
   3.5812475932850027`*^9, 3.581247600929019*^9}, {3.5812478520379763`*^9, 
   3.5812478573165827`*^9}, {3.581248067842428*^9, 3.5812480862360897`*^9}, {
   3.581248222177985*^9, 3.581248233458312*^9}, {3.581248384125928*^9, 
   3.581248402652212*^9}, {3.581248625800804*^9, 3.581248690334828*^9}, {
   3.581248833096355*^9, 3.5812488441877327`*^9}, {3.5812493253259697`*^9, 
   3.58124932808727*^9}, {3.581249362565637*^9, 3.581249381904962*^9}, {
   3.5812535181081867`*^9, 3.581253545706283*^9}, {3.5812536017645884`*^9, 
   3.581253629665406*^9}, {3.581253666648903*^9, 3.581253771795062*^9}, {
   3.581253892391712*^9, 3.5812538938364058`*^9}, {3.581254011947888*^9, 
   3.581254015235166*^9}, {3.5812542188329983`*^9, 3.581254261150659*^9}, {
   3.581254332240678*^9, 3.581254367846857*^9}, {3.581254500545721*^9, 
   3.5812547422051477`*^9}, {3.581254930572299*^9, 3.581254996760075*^9}, {
   3.581255074308731*^9, 3.581255166665844*^9}, {3.581255256680236*^9, 
   3.581255330983355*^9}, {3.581255397943749*^9, 3.5812554139734983`*^9}, {
   3.581256003564808*^9, 3.581256005175725*^9}, {3.5812561759913483`*^9, 
   3.581256295933*^9}, {3.58125638872497*^9, 3.581256414849011*^9}, {
   3.581256501384528*^9, 3.581256505097643*^9}, 3.581256537795217*^9, {
   3.581256626052237*^9, 3.5812566747215357`*^9}, {3.5812568590378523`*^9, 
   3.581256907194375*^9}, {3.581256959105625*^9, 3.581256979201212*^9}, {
   3.5812570178650227`*^9, 3.581257061806126*^9}, {3.5812571535181637`*^9, 
   3.5812571856360693`*^9}, {3.581257217869177*^9, 3.58125728617*^9}, {
   3.5812575986228857`*^9, 3.581257652067379*^9}, {3.581257705164557*^9, 
   3.581257726570807*^9}, {3.581257905889045*^9, 3.581257915671493*^9}, {
   3.5812579582253933`*^9, 3.581258016285577*^9}, {3.58125804725069*^9, 
   3.58125807827873*^9}, {3.5812582272199917`*^9, 3.581258503027114*^9}, {
   3.5812585494944353`*^9, 3.5812585568532867`*^9}, {3.5812586202609997`*^9, 
   3.581258620388369*^9}, {3.5812586663638973`*^9, 3.581258677585264*^9}, {
   3.581258724524333*^9, 3.581258730408498*^9}, {3.581258844723407*^9, 
   3.58125887310649*^9}, {3.581258924841276*^9, 3.581258961174138*^9}, {
   3.581258992857445*^9, 3.581259029903624*^9}, {3.581259074647087*^9, 
   3.5812591072668657`*^9}, {3.5812591426372213`*^9, 
   3.5812591450507383`*^9}, {3.581259181396778*^9, 3.581259181513996*^9}, {
   3.581259219837489*^9, 3.581259271592852*^9}, {3.581259448526546*^9, 
   3.581259481007943*^9}, {3.5812595477160797`*^9, 3.581259589490211*^9}, {
   3.5812596518096657`*^9, 3.5812596891404*^9}, {3.581259761045887*^9, 
   3.581259768693335*^9}, {3.581259809900445*^9, 3.5812598264496927`*^9}, {
   3.581259885568445*^9, 3.581259889639741*^9}, {3.5812599261246634`*^9, 
   3.581259926659635*^9}, {3.58126013800604*^9, 3.581260146929427*^9}, {
   3.5812601829290037`*^9, 3.581260292192834*^9}, {3.581260947643346*^9, 
   3.5812609596106462`*^9}, {3.581263566266234*^9, 3.581263573232663*^9}, {
   3.581332503624165*^9, 3.581332522801099*^9}, {3.581332557339148*^9, 
   3.581332572749958*^9}, {3.581332612431754*^9, 3.581332773568388*^9}, {
   3.5813328219613037`*^9, 3.581332980532728*^9}, {3.581333642221835*^9, 
   3.5813336496906977`*^9}, {3.581431425701377*^9, 3.581431484315411*^9}, {
   3.5816099744511147`*^9, 3.581609996432809*^9}, {3.5816100888174334`*^9, 
   3.581610089070348*^9}, {3.581610121856133*^9, 3.5816101219752083`*^9}, {
   3.5816101556235123`*^9, 3.581610155958583*^9}, {3.58161019999949*^9, 
   3.581610200326291*^9}, {3.58167385380202*^9, 3.5816738664729223`*^9}, {
   3.581673953056587*^9, 3.581673955198401*^9}, {3.581674136386159*^9, 
   3.58167413978489*^9}, {3.5816878802857723`*^9, 3.581687882282056*^9}, {
   3.581855466920761*^9, 3.581855642518496*^9}, 3.581855703984426*^9, {
   3.581855786596148*^9, 3.581855866184493*^9}, {3.581856641947521*^9, 
   3.581856656111063*^9}, {3.581856935157813*^9, 3.5818569445569887`*^9}, {
   3.581857006027275*^9, 3.58185703022123*^9}, {3.581857123808751*^9, 
   3.581857197094022*^9}, {3.581857274157933*^9, 3.58185731779801*^9}, {
   3.5819426776944942`*^9, 3.5819426803027163`*^9}, {3.581942844823635*^9, 
   3.581942847239024*^9}, {3.581944353890791*^9, 3.581944355752987*^9}, {
   3.58194917007652*^9, 3.581949190497978*^9}, {3.581949371385427*^9, 
   3.581949379305963*^9}, {3.58194946090628*^9, 3.5819495163196363`*^9}, {
   3.581949573938567*^9, 3.581949599944652*^9}, {3.581949729382389*^9, 
   3.581949777920323*^9}, {3.581949911516973*^9, 3.5819499136354733`*^9}, {
   3.582114084861143*^9, 3.582114107567999*^9}, {3.5821141736269503`*^9, 
   3.582114195015759*^9}, {3.582114226871348*^9, 3.582114230291051*^9}, {
   3.582122206520812*^9, 3.5821222903393497`*^9}, {3.582737411012321*^9, 
   3.582737427519579*^9}, 3.582737460319375*^9, {3.738969834417027*^9, 
   3.73896985266467*^9}, {3.738969939336814*^9, 3.738969945694798*^9}, {
   3.738970010391162*^9, 3.7389701517352753`*^9}, 3.738970262597353*^9, {
   3.7716147588094*^9, 3.771614770182129*^9}, {3.771615143165704*^9, 
   3.77161518979923*^9}, {3.771615236734894*^9, 3.7716153995456247`*^9}, {
   3.771615483489748*^9, 3.771615507641163*^9}, 3.7716155427082357`*^9, {
   3.771617311210657*^9, 3.771617350296811*^9}, {3.771621482253394*^9, 
   3.771621494135892*^9}, {3.771621537619253*^9, 3.771621571702239*^9}, {
   3.771621614008807*^9, 3.771621721740313*^9}, {3.771628016346718*^9, 
   3.7716280192162523`*^9}, {3.772387226246956*^9, 3.772387255972007*^9}, {
   3.7723873338589067`*^9, 3.772387338095673*^9}, {3.772534732845915*^9, 
   3.7725347354035387`*^9}, {3.7725347771196833`*^9, 3.772534915781098*^9}, {
   3.7725350077095757`*^9, 3.772535022103986*^9}, {3.772535078882663*^9, 
   3.7725350808674088`*^9}, {3.772535233452614*^9, 3.772535234375167*^9}, {
   3.772535289649914*^9, 3.772535291036961*^9}, {3.772538853748975*^9, 
   3.772538855931072*^9}, 3.772645308128594*^9, 3.77264537424765*^9, {
   3.772645543275654*^9, 3.772645565532217*^9}, {3.772645818961681*^9, 
   3.772645843267993*^9}, {3.772645889760076*^9, 3.772645891516005*^9}, 
   3.77264597933748*^9, {3.772647422793744*^9, 3.772647502325091*^9}, {
   3.77279754949907*^9, 3.772797607056857*^9}},
 CellLabel->
  "In[1921]:=",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    0.45638721879806154`, $CellContext`b$$ = 1.1013300480987018`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], Rational[1, 4] Pi, "\[Alpha]"}, 
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}, {{
       Hold[$CellContext`b$$], Rational[1, 4] Pi, "\[Beta]"}, 
      Dynamic[(1/2) (Pi - 2 
         ArcTan[(-1 + Sqrt[2])/Sqrt[-1 + 2 Sqrt[2]]]) - $CellContext`a$$], 
      Dynamic[(
        Pi - (1/2) (Pi - 2 
         ArcTan[(-1 + Sqrt[2])/Sqrt[-1 + 2 Sqrt[2]]])) - $CellContext`a$$]}}, 
    Typeset`size$$ = {540., {266., 274.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$552851$$ = 0, $CellContext`b$552852$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = Rational[1, 4] Pi, $CellContext`b$$ = 
        Rational[1, 4] Pi}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$552851$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$552852$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b$$}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b$$}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b$$}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{-20, -20}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{0, -20}, {0, 0}]]}}], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`a$$, Rational[1, 4] Pi, "\[Alpha]"}, 
         ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] 
         Pi}, {{$CellContext`b$$, Rational[1, 4] Pi, "\[Beta]"}, 
         Dynamic[(1/2) (Pi - 2 
            ArcTan[(-1 + Sqrt[2])/Sqrt[-1 + 2 Sqrt[2]]]) - $CellContext`a$$], 
         
         Dynamic[(
           Pi - (1/2) (Pi - 2 
            ArcTan[(-1 + Sqrt[2])/
              Sqrt[-1 + 2 Sqrt[2]]])) - $CellContext`a$$]}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{606., {343., 351.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771615331679254*^9, 3.771615344891724*^9}, {
   3.7716153780347137`*^9, 3.771615400090403*^9}, {3.771615509177734*^9, 
   3.771615543418737*^9}, {3.7716172995828247`*^9, 3.7716173506796227`*^9}, {
   3.7716214831682243`*^9, 3.771621494971486*^9}, {3.7716215390442142`*^9, 
   3.771621572221779*^9}, {3.771621614400532*^9, 3.771621722100748*^9}, 
   3.7716227504023237`*^9, 3.771624325348137*^9, 3.771628019700643*^9, 
   3.771767582590262*^9, 3.772033128921585*^9, {3.772119030659277*^9, 
   3.77211903397023*^9}, 3.7723872573440638`*^9, 3.7723873391824837`*^9, 
   3.772532621526103*^9, 3.772534740206884*^9, {3.772534784862895*^9, 
   3.772534852441724*^9}, {3.7725348880095263`*^9, 3.772534916497862*^9}, {
   3.772535012990492*^9, 3.772535022617243*^9}, 3.7725350826365643`*^9, 
   3.772535239216614*^9, 3.772535291841132*^9, 3.772538857743499*^9, {
   3.772553779339489*^9, 3.772553780451912*^9}, 3.772645254825899*^9, 
   3.77264530932701*^9, 3.772645406314416*^9, 3.772645567495329*^9, 
   3.772645820594447*^9, {3.772645874976836*^9, 3.772645891921259*^9}, 
   3.7726459809931726`*^9, {3.772647454837755*^9, 3.772647476062529*^9}, 
   3.772647507248693*^9, 3.7727079419338217`*^9, {3.7727975241418667`*^9, 
   3.772797607608831*^9}, 3.772807657730898*^9, 3.772807707544578*^9, 
   3.772812976563797*^9, 3.7728130212233047`*^9, 3.7728760218042383`*^9, 
   3.77287609503268*^9, 3.7728954266485977`*^9, 3.772901324168564*^9, 
   3.772905150641024*^9, 3.7729770205714617`*^9},
 CellLabel->
  "Out[1921]=",ExpressionUUID->"3149f200-bbac-416e-b49a-a9dfb5d7815a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locally Maximally Dense", "Section",
 CellChangeTimes->{{3.581260403324943*^9, 
  3.581260416970201*^9}},ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-\
4479b3290d12"],

Cell["\<\
We have to determine for which values of \[Alpha] and \[Beta] the packing is \
locally maximally dense. To be locally maximally dense (Following Connelly, \
Rigid Circle and Sphere Packings, Page 51, Theorem 6.1)
\t1. The packing graph is rigid as a bar framework
\t2. Have a proper stress that is non-zero on every member\
\>", "Text",
 CellChangeTimes->{{3.581260429083231*^9, 3.5812604817289133`*^9}, {
   3.58126058732162*^9, 3.581260703477894*^9}, 3.581268014437296*^9, {
   3.5814318394491863`*^9, 
   3.5814318439886436`*^9}},ExpressionUUID->"587b476a-42fe-4314-b5c2-\
430cf24c7bba"],

Cell[CellGroupData[{

Cell["Rigid as bar framework", "Subsection",
 CellChangeTimes->{{3.581260714629937*^9, 
  3.5812607219085903`*^9}},ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-\
64a93ed30112"],

Cell["\<\
To be rigid as a bar framework we need to establish a rigid ordering of the \
circles. The numbering of the circles in the picture above is a rigid \
ordering of the packing disks -- See Lemma 6.2 in the Connelly paper on Rigid \
Sphere and Circle Packings. Note: The first is held fixed. \
\>", "Text",
 CellChangeTimes->{{3.581260731787973*^9, 3.5812607589713097`*^9}, {
   3.5812608183726873`*^9, 3.581260869033848*^9}, {3.5812610404711943`*^9, 
   3.581261082093595*^9}, {3.581261148357283*^9, 3.581261161924177*^9}, {
   3.581261657149426*^9, 3.5812617281290483`*^9}, {3.581431878214656*^9, 
   3.581431907148754*^9}, {3.581855928252591*^9, 3.581855931761685*^9}, {
   3.58185743689495*^9, 3.58185744076795*^9}, 3.582737698397448*^9, {
   3.7389702310916567`*^9, 
   3.7389702492335567`*^9}},ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-\
8abc959f8dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proper Stress", "Subsection",
 CellChangeTimes->{{3.5812611912691*^9, 
  3.5812611942035923`*^9}},ExpressionUUID->"31f2c795-42a7-4371-8bcc-\
f26ae4f35c51"],

Cell[TextData[{
 "Assign a scalar to each edge of the packing and collect those scalars in a \
vector called \[Omega]. We need to solve the linear algebra problem where the \
sum of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "i"], " "}], TraditionalForm]],ExpressionUUID->
  "265e01f6-c0c7-45d6-8073-68c578121df4"],
 "times the vector from vertex j is zero. "
}], "Text",
 CellChangeTimes->{{3.581261204171701*^9, 3.5812613230015697`*^9}, {
   3.581263036291751*^9, 3.581263094625066*^9}, {3.581268035307197*^9, 
   3.581268049563353*^9}, {3.581268089331314*^9, 3.581268099474876*^9}, {
   3.581857691357902*^9, 3.581857713432221*^9}, {3.581952177554405*^9, 
   3.581952182271495*^9}, 
   3.582227123258224*^9},ExpressionUUID->"dad468d2-f604-44ad-83e4-\
8184a0b76de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"10", ",", 
                  RowBox[{"-", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\"\<\[Omega]\>\"", ",", "i"}], "]"}], ",", "Large", 
               ",", "Red"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", 
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"Label", " ", "Edges", " ", "With", " ", "Stresses"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
       " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"Pi", "/", "4"}], ",", "\"\<\[Beta]\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "a"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Pi", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
      "a"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7716156219304457`*^9, 3.7716156657824917`*^9}, {
   3.7716173605794477`*^9, 3.7716173832972507`*^9}, 3.771621836404307*^9, {
   3.771621868006282*^9, 3.771621889572094*^9}, {3.771628026520009*^9, 
   3.7716280285750093`*^9}, {3.77265843366921*^9, 3.772658458816626*^9}},
 CellLabel->
  "In[1922]:=",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.5593861940361485, $CellContext`b$$ =
     Rational[1, 4] Pi, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], Rational[1, 2] Pi, "\[Alpha]"}, 
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}, {{
       Hold[$CellContext`b$$], Rational[1, 4] Pi, "\[Beta]"}, 
      Dynamic[(1/2) (Pi - 2 
         ArcTan[(-1 + Sqrt[2])/Sqrt[-1 + 2 Sqrt[2]]]) - $CellContext`a$$], 
      Dynamic[(
        Pi - (1/2) (Pi - 2 
         ArcTan[(-1 + Sqrt[2])/Sqrt[-1 + 2 Sqrt[2]]])) - $CellContext`a$$]}}, 
    Typeset`size$$ = {540., {266., 274.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$552884$$ = 0, $CellContext`b$552885$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = Rational[1, 2] Pi, $CellContext`b$$ = 
        Rational[1, 4] Pi}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$552884$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$552885$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b$$}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b$$}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b$$}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{0, 10}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 
             Offset[{10, -10}, {0, 0}]]}}, 
          Table[
           Text[
            Style[
             Subscript["\[Omega]", $CellContext`i], Large, Red], 
            ReplaceAll[(1/2) (Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]] + 
              Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 2]] + 
              Part[$CellContext`edges, $CellContext`i, 3] 
               Part[$CellContext`latticeVectors, 1] + 
              Part[$CellContext`edges, $CellContext`i, 4] 
               Part[$CellContext`latticeVectors, 
                 2]), {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b$$}]], {$CellContext`i, 1, 
            Length[$CellContext`edges]}]], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b$$}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`a$$, Rational[1, 2] Pi, "\[Alpha]"}, 
         ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] 
         Pi}, {{$CellContext`b$$, Rational[1, 4] Pi, "\[Beta]"}, 
         Dynamic[(1/2) (Pi - 2 
            ArcTan[(-1 + Sqrt[2])/Sqrt[-1 + 2 Sqrt[2]]]) - $CellContext`a$$], 
         
         Dynamic[(
           Pi - (1/2) (Pi - 2 
            ArcTan[(-1 + Sqrt[2])/
              Sqrt[-1 + 2 Sqrt[2]]])) - $CellContext`a$$]}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{606., {343., 351.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771615655908786*^9, 3.771615666273397*^9}, {
   3.771617374972508*^9, 3.7716173837753553`*^9}, 3.771621837663521*^9, {
   3.77162186934744*^9, 3.7716218908703737`*^9}, 3.771622750542183*^9, 
   3.771624325486567*^9, 3.771628029048644*^9, 3.771767582724186*^9, 
   3.772033129720821*^9, 3.772535529224963*^9, 3.772658463197197*^9, 
   3.772807657912519*^9, 3.7728129767319317`*^9, 3.7728760219279013`*^9, 
   3.7728954268162537`*^9, 3.772901324302157*^9, 3.7729051507777348`*^9, 
   3.7729770207443933`*^9},
 CellLabel->
  "Out[1922]=",ExpressionUUID->"c870e04c-2f1b-4448-9922-f30c6a7a1e41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equations", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"Start", " ", "with", " ", "the", " ", "zero", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Omega]", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "a", " ", "vector", " ", "of", " ", 
    SubscriptBox["\[Omega]", "i"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "centers", "]"}]}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"(*", 
    RowBox[{"i", " ", "is", " ", "the", " ", "center", " ", "number"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
     RowBox[{"j", "++"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"j", " ", "is", " ", "the", " ", "edge", " ", "number"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "starting", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "ending", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"centers", "[", 
               RowBox[{"[", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], 
             "+", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"stresses", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "equations", "]"}], "\[Equal]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], ",", "w"}], "]"}], "]"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.5812631262417994`*^9, 3.5812631393932133`*^9}, {
   3.5812632927362833`*^9, 3.581263433806449*^9}, {3.5812635111903543`*^9, 
   3.581263539604899*^9}, {3.581263643734518*^9, 3.581263818173723*^9}, {
   3.581263893704818*^9, 3.581263906457028*^9}, {3.581263976775078*^9, 
   3.581264003472631*^9}, {3.58126411114087*^9, 3.5812641340833797`*^9}, {
   3.58126426449689*^9, 3.581264271542542*^9}, {3.581264376993701*^9, 
   3.5812643859040203`*^9}, {3.581265058156464*^9, 3.581265086954626*^9}, {
   3.581265130320315*^9, 3.581265189671144*^9}, 3.581265270566058*^9, {
   3.581265302363521*^9, 3.581265302850205*^9}, {3.5812653512370853`*^9, 
   3.5812653665051527`*^9}, {3.581265742732229*^9, 3.581265792107946*^9}, {
   3.581266490644244*^9, 3.5812665010853853`*^9}, {3.5812665623037663`*^9, 
   3.581266614361026*^9}, 3.5812666979728537`*^9, {3.581266853790249*^9, 
   3.581266950054287*^9}, {3.581267109579549*^9, 3.581267113595233*^9}, {
   3.581856054653139*^9, 3.581856144183853*^9}},
 CellLabel->
  "In[1923]:=",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   1926,229,25397637502896749269,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.5812665015830107`*^9, {3.581266609340005*^9, 3.581266614687846*^9}, 
   3.581266699745332*^9, 3.581266951219722*^9, 3.581267114727116*^9, 
   3.581332364749836*^9, 3.581413745882251*^9, 3.581604814094523*^9, 
   3.581629093700818*^9, 3.581687794839203*^9, 3.58185614520014*^9, 
   3.5818576472565737`*^9, {3.5819422597185307`*^9, 3.581942262451277*^9}, 
   3.581950540664604*^9, 3.582114208599042*^9, 3.582114271275325*^9, 
   3.582122349679476*^9, 3.58221834006551*^9, 3.58222709515487*^9, 
   3.582297408729498*^9, 3.5823643731907873`*^9, 3.582367880131062*^9, 
   3.58236979732628*^9, 3.582561955606606*^9, 3.5827371302077837`*^9, 
   3.7389703520699177`*^9, 3.739634270638833*^9, 3.771615696337091*^9, 
   3.7716173921268387`*^9, 3.7716227511245317`*^9, 3.7716243260625772`*^9, 
   3.771767583554688*^9, 3.772033130466276*^9, 3.7726584829487953`*^9, 
   3.7727992186544027`*^9, 3.7728076582550507`*^9, 3.772812977093335*^9, 
   3.7728760223220873`*^9, 3.77289542716612*^9, 3.772901324671852*^9, 
   3.7729051511797857`*^9, 3.772977021107777*^9},
 CellLabel->
  "During evaluation of \
In[1923]:=",ExpressionUUID->"9e705a53-bf23-47fc-8131-96032d799c0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
           "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}],
       ")"}], " ", 
     SubscriptBox["\[Omega]", "2"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "3"], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "+", 
          RowBox[{"2", " ", "\[Beta]"}]}], "]"}], " ", 
        RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
           "]"}]}]], " ", 
        RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}], " ", 
     SubscriptBox["\[Omega]", "2"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "4"], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SqrtBox["2"], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", 
            RowBox[{"2", " ", "\[Beta]"}]}], "]"}], " ", 
          RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}], " ", 
       SubscriptBox["\[Omega]", "2"]}]}]}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "5"], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}], "-", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"10", "-", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
           "]"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}],
       ")"}], " ", 
     SubscriptBox["\[Omega]", "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7396342706707497`*^9, 3.771615696582738*^9, 
  3.771617392249407*^9, 3.77162275126501*^9, 3.771624326199301*^9, 
  3.771767583702835*^9, 3.772033130626051*^9, 3.77265848450119*^9, 
  3.7727992198329144`*^9, 3.7728076596474953`*^9, 3.772812978324332*^9, 
  3.772876023714958*^9, 3.772895428401845*^9, 3.772901326118011*^9, 
  3.772905152552216*^9, 3.772977022533979*^9},
 CellLabel->
  "Out[1926]=",ExpressionUUID->"744f3942-d382-4497-8e33-c2b9d61cd0d5"]
}, Open  ]],

Cell[TextData[{
 "Notice that stress ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "1"], TraditionalForm]],ExpressionUUID->
  "d00378a1-360b-470a-acfd-f7c34275f61d"],
 " is free."
}], "Text",
 CellChangeTimes->{{3.581942469138938*^9, 3.581942568260255*^9}, {
  3.5821224210891247`*^9, 3.5821224318252153`*^9}, {3.582218353349749*^9, 
  3.5822183541981173`*^9}, {3.738970364574954*^9, 3.738970375318268*^9}, {
  3.7716160907649403`*^9, 3.771616090925685*^9}, {3.771617427017519*^9, 
  3.771617427180217*^9}},ExpressionUUID->"dab345d4-317d-4689-8b7d-\
c5f918423d0f"],

Cell[BoxData[
 RowBox[{"yuck", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"equations", " ", "/.", " ", "stresses"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"check", " ", "the", " ", "solutions"}], ",", " ", 
    RowBox[{
    "Should", " ", "output", " ", "all", " ", "zeros", " ", "but", " ", "I", 
     " ", 
     RowBox[{"don", "'"}], "t", " ", "think", " ", "Mathematica", " ", "can", 
     " ", "simplify", " ", "it"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.581266970558997*^9, 3.5812670086486597`*^9}, {
  3.5812670428585978`*^9, 3.581267107111579*^9}, {3.58126782408628*^9, 
  3.581267830337071*^9}, {3.771615712767864*^9, 3.7716157178887*^9}, {
  3.771624832402663*^9, 3.77162484486832*^9}, {3.771625069500388*^9, 
  3.771625108040539*^9}, {3.771625188009901*^9, 3.771625188461938*^9}, {
  3.771627084687838*^9, 3.771627086697544*^9}, {3.771627137607338*^9, 
  3.7716271381130447`*^9}, {3.7716273773006067`*^9, 3.7716273909517603`*^9}},
 CellLabel->
  "In[1927]:=",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],

Cell[CellGroupData[{

Cell[BoxData["yuck"], "Input",
 CellChangeTimes->{{3.772799227780164*^9, 3.7727992291276693`*^9}},
 CellLabel->
  "In[1928]:=",ExpressionUUID->"a27774a4-4d86-4d43-8468-586700b4d7b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.772799230056937*^9, 3.772799234558123*^9}, 
   3.772807660030159*^9, 3.772812978602775*^9, 3.772876023936413*^9, 
   3.772895428799432*^9, 3.772901326353586*^9, 3.772905152795004*^9, 
   3.772977022731762*^9},
 CellLabel->
  "Out[1928]=",ExpressionUUID->"f11bdfbe-75a9-475e-a19b-425d7b4a4d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["slopeC2C3"], "Input",
 CellChangeTimes->{{3.7727993708573093`*^9, 3.772799387995517*^9}},
 CellLabel->
  "In[1929]:=",ExpressionUUID->"a2856725-7b19-4679-b687-8e16d63cf745"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
   RowBox[{
    SqrtBox[
     RowBox[{"10", "-", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}]],
     " ", 
    RowBox[{"Tan", "[", 
     RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"10", "-", 
     RowBox[{"8", " ", 
      SqrtBox["2"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}]], 
   "+", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", 
    RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]]], "Output",
 CellChangeTimes->{{3.772799372936152*^9, 3.772799389453577*^9}, 
   3.772807661213078*^9, 3.772812979794265*^9, 3.772876025305715*^9, 
   3.772895430166349*^9, 3.7729013276769133`*^9, 3.772905154081135*^9, 
   3.772977024048424*^9},
 CellLabel->
  "Out[1929]=",ExpressionUUID->"18e603c2-5b55-40a7-99c0-fa4cf3a2efc9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"guts", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "i"], "/.", "stresses"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "first", " ", "list", " ", "all", " ", "of", " ", "the", " ", 
          "right", " ", "hand", " ", "sides", " ", "of", " ", "all", " ", 
          "the", " ", "stresses"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], "/.", 
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "\[Rule]", "1"}]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7716167421291027`*^9, 3.7716167736440973`*^9}, {
   3.771624666657902*^9, 3.77162466689053*^9}, 3.772658682696733*^9},
 CellLabel->
  "In[1930]:=",ExpressionUUID->"b861794b-5dc4-4f62-a8af-a6aa1633b81c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"guts", "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], "->", 
    RowBox[{"2", "/", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "\[Alpha]"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.772799986442232*^9, 3.772799994875414*^9}, {
   3.772800254607142*^9, 3.77280029694948*^9}, 3.772800466066484*^9},
 CellLabel->
  "In[1931]:=",ExpressionUUID->"69478f9b-4e5d-4a4d-9821-61463214b59e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Alpha]", "+", 
         RowBox[{"2", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
          "]"}]}]], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Alpha]", "+", 
         RowBox[{"2", " ", "\[Beta]"}]}], "]"}], " ", 
       RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
          "]"}]}]], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"Csc", "[", 
     RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}], "-", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}], "-", 
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
          "]"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], "]"}]}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], "]"}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.772800467329953*^9, 3.7728076617459583`*^9, 
  3.772809922016815*^9, 3.772812980163136*^9, 3.772876025684269*^9, 
  3.77289543099256*^9, 3.772901328058798*^9, 3.772905154465416*^9, 
  3.772977024402001*^9},
 CellLabel->
  "Out[1931]=",ExpressionUUID->"39b8e0b0-c669-40d8-9c4b-52360e5c8562"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.772800245993595*^9, 3.772800251650728*^9}},
 CellLabel->
  "In[1932]:=",ExpressionUUID->"efd5c193-f839-404e-a95b-39ae529c4d72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "+", 
           RowBox[{"2", " ", "\[Beta]"}]}], "]"}], " ", 
         RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Alpha]", "+", 
           RowBox[{"2", " ", "\[Beta]"}]}], "]"}], " ", 
         RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"Csc", "[", 
       RowBox[{"2", " ", "\[Alpha]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Alpha]"}], "]"}], "-", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
         "]"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Pi", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
      "\[Alpha]"}]}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "\[Alpha]", "]"}], "<", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{"10", "-", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
             
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
              "]"}]}]], " ", 
           RowBox[{"Tan", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]]}], "&&", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{"10", "-", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
             
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
              "]"}]}]], " ", 
           RowBox[{"Tan", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], "+", 
          RowBox[{"2", " ", 
           SqrtBox["2"], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]], ">", "0"}]}]}], 
     "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771616758899276*^9, 3.771616778140399*^9}, {
   3.771624700169651*^9, 3.771624723760776*^9}, {3.77162586895288*^9, 
   3.7716258722505913`*^9}, {3.772658584072671*^9, 3.772658629840889*^9}, {
   3.7727990100958357`*^9, 3.772799063759933*^9}, {3.772799151773226*^9, 
   3.772799206325038*^9}, {3.7727992705817432`*^9, 3.772799271952909*^9}, {
   3.772799332641445*^9, 3.772799407199605*^9}, {3.772799492659251*^9, 
   3.77279950530576*^9}, {3.7727997560857897`*^9, 3.772799758120202*^9}, {
   3.772800023788221*^9, 3.7728000253797913`*^9}, {3.772800085727656*^9, 
   3.772800086233161*^9}, 3.772800479734638*^9, {3.7728099020558243`*^9, 
   3.772809904827814*^9}, {3.7728099509180813`*^9, 3.772809953032649*^9}, {
   3.772810451645474*^9, 3.772810455518928*^9}},
 CellLabel->
  "In[1933]:=",ExpressionUUID->"e19a6967-7441-4af8-aa7e-13ca11c722cc"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
HKPuL45R9xfHqPs7mA9lf3GMur84OH7rvr17f5Q/PIvc34gD0msSt8tkkfub
nbHnulWOGJZZn3Jl32B/g2fpnX32P/1tzXQL0hTLIn+fkjNhbVX1/ZlJ7juu
qdoi+loyS9j3/PVZF7pF6JjddYtrUYqqWeS+v3M+ovZ6rUwWue/KjZml9wtk
/963iG+a9622nY5Z97FnJGWMBeshW6pCLSKsVx+shx0bf+XMFMva1GscRyvj
YJvlk3qm/Y+3GriqLLX8rE9eJytXxRdNmin5d50kqwcZug+ukzY9140KwxSy
hOvk7dG+1pWD60TObtceO96YLPI6iejcOzczYhLmfj7SzH1wnbivkDYtGFwn
ymYlWmKdEmCd9HPMRPxzJbK6JRz9WgfXifGWE8+zDg5uh2/iaPlMPIsbs61P
YRMH29njNr1ThIF5eG7H/NO69auMOt3vhXKw+JGHv6gMfp9ciV1p2lklh91f
JHbbfXD9JI1S0f/pO5jPrJWfbWKls8jrR27ymrSqkaJZQ+tnaP38v7l+7KIX
mrVl0MH1xeBHnOi0we/X5PWT9Ft22srB73fk64v5x8NOewfr5HWy/1tJ4/ZM
Ori+GNwX5DHe0MH1ZaT2lC7+4OeS18mpzKUGnll0sB4UvNeuPDVYJ68HX69w
LZVMOri+6Jy61aH6lg6uL5OXT3awS6eD64uqudXupsHx5L4H7jK0XTy4ffL1
hZWeImgazJPc91D+E5m1g+PJ1xf6NP8S7cE6+frCfSKlZDhYJ19fEn9+ltYf
rJP7yw4xSTDORH8HG7BRb9riGeg5qEIHPh1zOG+/P3p+qdCBt4mGHPSTQHWh
A8/dXSSdexY9j1TowHKOvXtpleh5iUIHLlI1idV/IQD3M5fqk/CQQPQcUWHf
l98dvezbefTcUaE/fDZwvGhuhZ4jKlyf8d+LC1Mw9LxQ4branzRHfowKei4o
dQ7o+UvEHNDzl4g5oOcvEXNAz18i5oCev0TMAV33iTmg+ytiDui5H8Qc0H0g
MQd0/0bMAQfrQeWNok/mbDbIwbv3tdW1SCbIoergDzN7EwbIwcju44VQbTrI
Yea5Za96FtBADjFNtBdTzNtADjKGJkGWaq0ghxORbZwDBc0gh9IRW3+M9W0C
OZzPL63GXBtBDrFLd1SlXmoYyuE/cnjqv3N5KEUOgRwe14Yih9VSX56upsjB
Oy/w4kmKHNYVpRt/oMhhYYDVmy4zmEOZ7GWdflWYQ1GGbObvDzCHw43Ln8X4
wByWz9vd/9EF5vAu3Yy/bDAHK1d9U4nvVZhDy5y5b8PReUzokJXNG0y7NnSC
+pEMt+KSR+j8tkOktyabVodVvQ3tFdnaAeqOoeWHW+PQdoSuXhPS5Stv3g7q
x1zUpLufo+1su/LY8nxhE1Z3frWO2m4+qDvtPPN02Cu0nc35opN3ZLRg9Zb3
yxft44H6iWVFGxQy0XZmjtASBFm0YQ1LuU6Gh7igfnLiFN6Md2g7KutuPHM2
pmMtfbefOZxig/qZmtxZG8rQ8+2VDy6Ss1s3eF9V3bbZ9TwL1M+ljfuwswZt
Z+oNutP2wfsSl3uHDhxpQuOF/Rq2N8mk5AIO+nKp1FKlRgQH+Yu7ijMzJLpA
zpK7LC9/GiUAeUotj1ehje0EuUkr/s7pUewA+cj0b7MZodwOcpB78TV8liYP
zFf+vhG2TIcL5qtwKqzFaCnKTenPfcv4P34lrE8q0tPRXsjGJuqsmeJoAPP5
VFp05+2cbpDPFv1Te94nwnzKEqZolf7zvHFhPpHL7wwk2HeBfB4q0oKzjglA
PtH9C5aXn+4E+TyqvVZPd+kA+Ty5rzlR/AYf5BN3yv3lhDs8kE/C9gpz9Xtc
kM+zP/5Gzuf5mLP3jSP+eZ/In3+/SMGLFu6JQbmNlwnolZnNxdI+Tak6Fs8E
eYbqs4ri6mGeSol3glN3d4M8Q6csdchohXlOuU1blr8PB3nqfRs39sHHLpDn
irpDyc/KBSBP/Zfp23JqO0Geq0/beDMZ7SBPA9PUeX08Pshz3QKJTxI4D+S5
Xn6no2IfF+Rp1B0/as4PDsjTuOx3vN4wDshz8zMT482SbJCnfeJv8ZDrPSBP
3pQnNVFSPSBP+9smMfG3u0Ge/B8Dp9PkukGeh488Wpvph4M82xs3j/swHgd5
1vrjheELukCejab+knlYJ8izeQHvcdXaDpBnq7yeIXtjO8iT1n2H/XUbH+TJ
KKNdHWnBA3myni2cMXkPF+TJuXP9neZ+Dshz8dRJa24ugs+lf3E7T97vFcxz
8c8j9BBd+N6EF0fGJ0dnwjyXNGVdTFjVDfJ8tdF+24t3MM+l6fLTswxxkOep
hR89IkMEIE/nsVOVUyI7QZ5ne5yy3j3uAHmeL8/bU5PQDvJ0TRr/i5PCB3m6
3bUP+/aaB/L0cHyrJ53NBXnqbz8tZUiHeV4tCRd3tesFeUrlt/J8eD1gvjsD
OC/uf+0C893jvNz88U8BmO8es9tfXg0XgP05s3rGnpWn4P3J1avHtWo2w/uQ
ewUZvw6rw/uNh9JSn0RHwPuK55vNwwNa+KC/2T4Pj839Jzdhf0urBFieHxfM
9/LytxYl0fC673NBUt3WHV7fI7JNv/VbwuuX5Ji5h0cfgtf3qXYxMalPu8B8
58b2OBtdFYD56rXrG7bt7QTzNdLymuC8vAPM1/J4LUd6XDuY78FU1VeRXfD+
R2lSd1mcCLy+a1itiFzVyAHzXRbhebw2DZ4Pqz0MH/8aB68vux8evbvhMrxe
51+f1TWbBu9nqopOZmWmw/sZxqjsu6b+8H6mZ6uMNd8J3s+I3LPQ9tgI72fS
vs3YcHM3vF7n6Z1QVF4Cr9cV7pm8tDHwei3891BhXXj8CsR23KTlw/XwELdh
dObBfNTlb3xcOh9ef5MWJKZcfgCvv0vMqkJKpeH117Xzs8SCHng/46W9qq6g
GN7PBJ28HbvnMbyf2Vy/M+fQK3j93a302OeXL7z+Ht7ba3PvKLz+nvvz77nk
fK6zvIZlq8Drr//sugqzn/B+JvqwWlR7LbyfOWbtOq35OLz+9l18KDG7FeZ5
Iaqg64QxvP6OeC+ozXgN87zJVsiWnAWvv2pyzlsfz+4Ceepsz1Ve8c95T5gn
59XdZYYK8Pr7ZaBxZLOgHeQ5ApvdcKKQD/KUv3TqqWQ0D+Sp/D77/AM3Lshz
nuSojQst4f3Mio2Wk4sWwONXr8x/V/E0eL3I6367ZsJteP3dMJYxZ993mGfZ
wpEKCQfh9XeH+bwfX6tgni1nzJirV8Pr70edr4GT98L7GY/Ad89nOMHr751G
uUvpRvD6GzbVymTbDHj9jbN5osL5De9nXkd/6XFtgPczBZxVefJp8H6mRuOO
X+xdeD8zcuXzgPQSeJ11P/lmmmksvM76Tjp4VqEYXmdLXZfVR8fA6+zIVunl
iy7C+b69YbhLdDgLzJf8fjRhPZlUF853Sf2NqTd6GWBe846EaazfCNfJU/Ui
miwTrhMVTl9gtWsP2E966gLBbQ8mqCeqbda4oAX3P4m0n8L8t3qUTnv4kA72
c4r5LNrFW3A/w96XJd0c3Qs+t2rr8oyR/3xvEq4Hs5kq8sMPw/qaPfOSvufA
uoeJ7KO7XAbYT+lbXRqjXGH9/YIJYp894LyUcO4un60MsH3PFxI1YzPgduaa
0m+NmwHrmFK1YEopykd4PKrlb1jKuQSP04smo7LsEmH96ajS0Mdd8P45nnNM
WQeHx7WdyNe58wzheM0LZ44knUD1v+fPkf6SF6zgeWB9Yltofyusx3co673+
Au/PD5WVb5nyAZ4f9myck/m0Hx4vJvlXNJdqdIL1Rn6P2N/vlf9Rtya9X0zY
L5MrGod3LYb3+WPDnp+1uA3r+8cuWNg0Gm1feDzafHDW7ZaD3wsa+6+Yt2fC
+v6eq5Wd/9wHCtfDMak86evt8DwWZWqx0A2H3y8OlNed+D0Zbn9TpIuHdygD
fi7pPWXC+iFSXXicjo9+WoA97AV1uZ65ST9f9sL8Se8XE9aN/6N+gfTeMWHO
xrmzaW7+8Lz3c33UzjORsF72KsP/wBYWqE8a4//W3Qgev9y9wwM9fsH5vgv+
ednyGPx+VP6rL7V5DawTXRc9z5zouqhOdF0co3ZdVCe6Lno+P9F1UZ3oujhG
7bqoTnRdHKN2XVQnui6OUbsuqhNdF8eoXRfVia6LY9Sui+pE18UxatfFMWrX
RX0hui7Kn+i6KGei66I8ia6LciO6LsqH6LooB6LrovkSXRfNl+i6OEbtujhG
7booH6LronyIrovyIbouyofouigfouuifIiui/Ihui7Kh+i6KB+i66J8iK6L
8iG6LsqH6Lo4Ru26OEbtuihPouuiPImui/Ikui7Kk+i6KE+i66I8ia6L8iS6
LsqT6LooT6LrojyJrovyJLouypPouihPouuiPImui/Ikui7Kk+i6KE+i66I8
ia6L8iS6LsqT6LooT6LrojyJrovyJLouypPouihPouuiPImui/Ikui7Kk+i6
KE+i66I8ia6L8iS6LsqT6LooT6LrojyJrovyJLouypPouihPouuiPImui/Ik
ui7Kk+i6KE+i66I8ia6L8iS6LsqT6LooT6LrovkSXRfNl+i6aL5E10X7Q3Td
f/aH4Lpof4iui/pLdF3UX6Lrov4SXRf1l+i6aL5E10XzJboumi/RddF8ia6L
5kt0XTRfouui+RJdF82X6LpovkTXRfMlui6aL9F10XyJrovmS3RdNF+i66L5
El0XzZfoumi+RNdF8yW6Lpov0XXRfImui+ZLdF00X6LrovkSXRcdv0TXRccv
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
fPsxjRE1expJ4n8A5owZWw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
mXX4Wvhy+JeCc3B1sAZR/q4CPys9onoKfgHrCF8J3ozxozjbG2v7PrBU6tq4
LfX+p32wJHg5mI9QLAVrA+WbdO0E1cTUZw3FwvTMNVN5Ngt+IcaJYuh86jOg
9J5qstZ2Bm2uxdxU3uqstEL7azxXLocvy3wWWwZfCn8hWEsoV/vkHb+b416g
nJub+XyhHJ2fWTcrT6V/GkWdLE1wN1gPq0ZIs6mWzIt6U5pkUrDOlOY5m1o3
q301+Ke41041Efx6cP0sBL+B9YBvCD4HrQNX0OeXwS741wSfN5cq//C/E7xv
LgneG7RHSGtLxyyO6/KdGGObg8+nG8FVPPsW2Eo5HHymfgpcjX8l/HDi84g0
r2r1puC6rT7G06aAe/3hXeE/Cz7z6vk/BevwM4oNvR+rEKxbdHY/QPtazF2V
YN0jbaOz/j782xLrn3Kaj6jJpc21T6kvnR1K8cy9wRpuRazDdROfd8R1/iqk
rx8Hn4t7xXOBzgfVpauCNZz0lWJJZ/IFmeuv9uIDiTWSzhWzM9cynT2lEY/H
WqeYqR3PVjVyzsHjwdpaGntj6rNJlbjv3JOzNtZ/jB3g9sTnnzdpdyPxWUnn
4KuxxjbNeUx/C/bpnjTQ2eB9WTXurfis+lBNUm2SLtsd92XtzzpzSl+dxBrH
PptG/X45juVSrO3S91v41t8Ga7ml2Gn4fnxlc14T6cg/BJ+bTgXvp1N47kSw
Hn428f+BK3Es+mad8fUu6beNidtoby6T838e/cuomnMd0JlcZ1qdbVXfvhp8
xtRZs0vemnIL/pV809eC/71sTa2vpe2lPVTDRmU+e55NfF78Zsw15Yw0jOJ9
KG3WYu8G/3OQhtdZbF7UYNpLh8T5kDbbHaw/tR8OyqxXlbvD4d8K/v+j+qK4
07+L9cG6SHk8ljY/jPmrmivNozwejf9Hwf9DlOdfifmo/ePdWG9VhzVWrY/O
YcdSz9ui1P+4tG+syXx2Vb4o9j4M/r+k/0rSh6orY6Km0rlzYmaNrZoxDP7d
4P9vqpsHE587lCc6yylu54O/CdbP+hf2XqxRqiPSeNoTRmauM9ovVHP/B8Ko
IL4=
           "]], Polygon3DBox[CompressedData["
1:eJw1mGe0VdUVhQ++c/Vt9T4VEERExIqgYIkFjQoiKiCCSEeqAgIKogiIIooK
NiwUiTVRwQIo2LtR03vPSDNlpFmSjPRkJGryfWMtf+z31rz71L3XmnOu02P6
/JHzdqiqam67qqr9X6pqJP//CLixrapmg88B/wG8CnwheAT4ffBK8BrwIvDF
jDuIP8NYTTyR8YlmVfVsVNXDxAcwLuCcm5ifSzyacSTzG8F3EO/J3MPEHTn+
dvB5jE/xWz+O6UA8jvgM7vcQx9wG7gh+kLjB8VeBj2Fcxm9ncsx4/u8J7sb8
1paqepHxKPhCxljmL2f+eOLBzI8BLwQfBz4D/Apjs8/OOIq4hetfSbyU0Y74
A46dT7yE8XfimzlmHnHlc3OtZeB9gJOYmwueDD4T/GvwdeAZ4GHgd8A3gG8E
zwGPYhzRjPt1Ir6GsRPxfzhuMfHCvMd0jh9K+Dt+v57zj2/Gvg3jzwDwCubP
Bd8OXgFeV2J9as69E3wE+EBwb/DCtnj+WeCdGbsSD+a3CZzbBdyjxP64H3/h
t7XMLQf3Bs8GXwK+G3wDeA+x683YAN4bfCXxNsYDVbzjAJ71YX5fQ3wn46/E
DzB/C/GtjE8TL2VMI+7O893aFntwKccd1oi9WczoXMe5MzL/LuP4GV6TeGGJ
XPoz4wLmrwBPZW4fzr8FfALPsB94OvNngUczPwD8Nvga8HXg6eD7M//7cN4T
4INyDa9l/mzim5lf7vvzf1IVv71L/Emuf4L5QTyO+TbOucnjGbs1Yo/cK8Jq
B641CDwE3HQNS+S4ud7RZwafDh4B3t0aAZ8GPhO8q9cDDwSPrWP/dgGfCh4O
3tHnBbf6zMTLGDu6pvz2X+b/xjiZm57EGMzcSvBkzr3Ge4Cvdf/AL5aoHXOy
STyfMc588b2YvxQ8Abw7+GbwfSXetwleA+7PGMy1KMHqf62R0+b2Y/zwLngd
c+PBq/Ka5tNK4pnWP/EpnL+RY7aBXwefyPP2JZ7Hb+e2xRq71ie6B8y/wzW3
tUStW58ftMZaeQ2vZY26+NaT79+dc+4lfojxrLXKb52Z34sxmPg2868KjnuG
+Gk5znfherfLRVzv4EbkuLlujn/E3EGNwK7RLo2oD9dOzpQ7zck54LvA+zfi
Gc7i3A3gf9Tx/M+VWNM9mO9Qx1oPS06VS/dtBoe8kzk4swRHy9XW0EXgwjHP
sR6dwW0lrn9oI/jxFObWg7v6vpwzBDwHvJ24K/MdOP4i8DPeC9wZfDH4WXB3
cBe5D/xcHTXV1fxtBofL3T6PnCf3mTNTS3CW3KU+XFCCU+SWToxFJTRjA3GH
RmjJOuY7EU+W45vBYdah9TiwGfP3cPwU8KNqiRxbh96c2owcNBfNsaPBg5pR
k9bi6cSnNaNGrA2vt4pr/LOOPRnq+oK7gu/h/CdLcNJ+jeA3uWoC+KfmFvM9
OX48+Mfgk8CHgEeBvwE+AnwAeDT4m+AjwQc2Q3++Cz5WjgGfB/4leBC4VzP0
6nupTweDp7UFz8g3fcBTwL9178CHgUeAvwDuCd4PfA74y3Vwdg/wSPDXwH3A
+4Mngn8G7g8+tBn7OzX3u5PcCf69XAk+vBn1vAmsZ/ioNWqqbyOwteYerK1i
z9ybBzj26irq40/E0/ntPf4PB/fleue3RS3pCfQGauAd4H/VoY1ydjeu1aUO
Lv9QneHYF8jp91sjlzdW4TEOaUTNiP3dXD+c/1uq0HQ1T16X3+9OjbHWfd51
VdS8nuROjvl3epU3rXm5gfEW8dUlcs9rvkb8Rglu8hiP3ZfxGPHjjJeT37cl
X3fk2rPBW+rwNKWERpnr+h21a6kczPyp5m8JDpaLB4JPK8Hxcr2avbKEBqvF
vcwn+VmPBj7UfANfoWbXoXEDStx/DLg9eCe9Afh6vVUVfkgNXF2Hx1Mbr2e0
dy/A9/r+epY6PMjwEh5Dr6FnHFdCE9VGPc5I8LXg2+rwkGPAy8A31OGJhoCX
lOCetVm/1pS1pYfYXKL+3Cv37KoSHCgXqjFqzWUlvKAe4v7kqyngbqmXs8Aj
Uz/Vw5cYvczXRvCD76f2yA8LUt/kaj3NhhIeblLyYfvcL72FHld++pAc3F5F
Dny2BH+ex/zeVei5/LO+Do30eWeCz0q9Vw/1MHoZ/dAjzF8IHgXeQ5kqkfPm
/no1M+c35/61lvBM7RuhEXqpBczP1S9ZD7neP6hD44fl/v0o6/mc3O+3c3/G
Zr58K/NvoOsNfj35onfmy/dz/4a6f+CvJt+dlPn77czXQfk8r4EPtyZLrKlr
u7YOPfD990x+X5zr8whzynS73L/Hcz12zPx+OfP9oMyvn2f+jTcfwJ8DHw0+
soTH1TuK9b6Xg7/IfD/wcTkvL8gPr+T5C5g/Sn5Sn60B4uWM9SX0R63QT61L
/Xqojh5mY67HUn0g+ATwYj1o+pN+JThBbpCj9FOLmF+cz3Ns4i/V4SGPz/O/
ktc7MffjolzPniWewWd5xDXN91tUR39zDHi7OVLFO/guz5folewJXijhJ5/k
+F3AHUjKSeBfgU93v5vhJx+rw6+2cPwQ8MTMb/lFf6Nvs4bu0Q8wxlaxx/o3
PfT96UfsLfUn96X/mZ31qxewnuzn9Ef3pp7baw4FT856Np/1E+aO97C3egod
eIaxoop1cA1ci035fnp8vX4P9Qs8DHy++g7uAz67LbzUAbnf+pO7sl7ttfSo
21uiB9S7ynHm9i/q4D45Rm7RI8k9cmprFRwv11rDO1VRs9auHKQ3N6fNbTlA
b2zOm/uuqWtrjpvr6qC98oIqfKWabC3owdRq/f9WYn6udi7hXQ6swk/qYeQs
a+mpOrhMDra2rRlrR46Si/R8ctdeJbhFT6e301/q5dQne1c507VS4+RSNUdu
fKUOLXq8JfbEvbDv2EL8dEt4fnsIPfu89EOncO6rahLx1ir0VP90JfMnp37o
1+1V1Dt7VXuUlel3ppXwMxfX0ROcXMIPrUp9cv82leBW/eXlJfzQnORH61G/
oNe2x7HX0Z9dkvWvXur39Alq0BMl/Nz8Ovxb/xL+xN5SvdpSwm+bK+ZMG/F7
7O/zxPdZL43oJx6sooewl9DP3ZJ+aFYJ/zYr9dv6HQ6emX7uaPCTXGsT44oq
ehi/bbjGnfIdniXezDi4ipqwf7A3Ux/VB/3cTanP7qeew721x/f7y2rm12R9
9U8+uC79waQS/se90oOtLuFXVyRfTCzhh5elnxxVwl9enf5DP2GPbq/uGthP
6TnkKjVFbRn3sTeqIq/1QHK3mqK2uKfWpp7XvTYH1O7f1JEb5ozvpgcfn95I
7yufyqvuqc+iB3evZ+T763FdG3NSL//1OnLVdx5TBSe6Fr6D3kjP7LvZg/ut
RA6VS+0p3Re/Edlru2d698/XsZd6OL8tfacOb+eaWd96ftfSNTMX7CkmZH3K
B3pIvaQ5bm3o4c19c9C1tscwN+Wzt5Lf7A+9p/c+BNy9Gd93XgTvBd67Gd/L
Xqjje0OXZnxveBq8mzXTDA8uB8k99rbWjFpmT2EtyadvJr92a4Y+vFTHmnRt
Rk9urf6wjl7d/TaX7GnsbfzmZu7YA9kL2R/cWscay//25Pbm1lRb6sGrdXxj
26cZfrhj5srA9J5nV9EP2xePTm7skJxsTVlbegC10nuoNfYk3tsa1IvYY1mb
ao5c4T2HJj97vu/ou6rZvTK3FqUeqFWuoWvpNzRr1zV37ZektvfONeyX11fj
1Xo9g9qup1qS+ex+/6QOb61n1ivo6fR25rNcpWfTu/nNyL14vo5vSXp0vYOe
T++nZ7C309Ndmu/n8+rR9Gp+TzU//eblty81Ub7XU+mN+ub9zDFzzW+s5po5
ZC6pGdPq+D6glhyT9W1POiL1T73UU+gt/AZmrj1ax7cxNVpteKMO7VYf1Sd7
TntPNVvuNefMvf8D9AFzDw==
           "]], Polygon3DBox[CompressedData["
1:eJwt1WdsV1UYx/ELtkoDrajsVQpliC1bQJZEVoWCrLBXmQIyFVEUmQIGgWoE
FDCOCCLIcqMIOBP33nsnbl9oNGLi58m9L77p+X3vc/6999znnFs0beGIBVWT
JJmJXEzKS5KB/n6dkyS3omN+klRwg7jv5G3oxE3gBnBfybegA7eem80dlMeh
PteIq8U9Lk9HY64XvjW+DWNdm6JmH7YZ13cTu/i58mYs4vK4auhn3iFuJ1ck
N8VBeRc2cjXk6tgpV2I+95vfuhtdzJ3I9ee+lCvRntvELeROy3/iYm4/t4Nr
5Ld2c1fIZ6MGd1iegIbqthQkSQs1i/m7cDSeH5cZ/6hmJy5Ut01dg9z0+bbj
ATU1Ud34kJrxaKDuTm4TV1Ptdm6GPB3l3A/yDnRWd2+sDfe7fA+6cg9yt3NN
zG2MA/IyTObqyHVRpq5WPAv3kHmT0YhrwDXlHpVHI09egaPGQ3PS+pi3Ek/J
k2Ie11Jug7bGJ7ip8c7l9ujEPSfPRFO5Hgq5R+RRqCbXQRPuYXkEzpSL4ze5
J+WJOE8+Fw25I3I5qsjHcYAr9Vx/cRvkU3HPXHuuHU7IuTgn1lzNcNT1vE3i
f3NV1LTBMfk/1w6eoQ6rs55LeK8u2evaYNQ2dx5Xwf0sb4k+l8+Ke+T2yyNR
T10J1447KVdEv8itUco9LU+Je5F7ohf3cvQZLpC7h+dekufh/OgpDOY+kK9F
D3kOpnI/yZsxJvYpyrh35aujN+RLAu4NeXHsVXkV3jK+MnrUtQHySRw2vo8r
i7X3HMOy/vtQXo5eWU9O4L6XN8a6yl1wEfeifDlayGvwhfFq9HNtfPQjxmTn
y7pYV3ksRnCfy6vQX16Nj42vjz3p2si89JyI8+Ib7kYMkUdjOPeZvBJ94z7c
92PG03LSvo7+Xotf5K3xjrj5sYe83H9y0nNidJKedaP4Psaf8jejXX76v+Me
PpE3oW22LvHePpJvQinXE+8br8elrpXHvNgPxq9xK9BazVCuR/YuN6CE68N1
4F6Xb4h3zpXFunJvy2vQhhvIdeXekddGv3DNYn9xT8izUMh1w/3Z/o0ejl7u
wb2arWlvqne8Sxf/zkmffwm2cqerJUl8E/bwg1DLvCK+PndMnh3rylXNS78Z
++RhqJOf9nOcB6/I16EV1x2njBfkpHuiJDs3CrP9MR/N1BRydbnmfrQY5Vyl
+6tqvJwvTtKzZHtBen23PAeD1S3mxxnn8wXoz10TPZN9U+L8HZSd97Wzb9S/
8Y7lfujLvSkvQUd5AWZl34/okT7mHuFmcL/KLXPT875x9nut5NYYkp+ei3E+
Hlc3F0VcKVfEPSMvRHNuDzeJuyPOFnP3xtqhGfcstwjF6jpzrbjn5atib3FL
4wwz/iPej7kDuU5xxqh7gVsa95if9mD04nvyMnST/wdthdM9
           "]]},
         Annotation[#, "Charting`Private`Tag$553854#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
JOi8NXcd8U3huFor2lq/uOc621WF7zzyzQm0GoxbpBopd52zj3UMyF0LHVDN
Av8KfrBkf5BfyO9mxbpQtqcY+yP83VgHypZmIts3d720t+T71x5NE9mQuXZS
bPlMehPHhN60tfAv6bsid65UzuyTO/bKf3vmrnU3w49k7j1YU9UK18m7Y3zu
kdsv5B97oo/Lf9cE378OgUMz2/47hXO98pjse23hu19b5ZzM53hy5npVd8PT
wfnIPBWcx3XvUG28uuT75l545cxzU16rVuGzHxJteGg8O52h4n+VmDcnxBpJ
+zgud52uGFsdmUPoOR5cHH1Wvquzln7VUcuQmxZct3TOfd+ZrxwV76uXZL6v
KS/pDtsYfnTq/u7If4j8SuSrZb5jHpe5/tc990yNzV2vrijZN5VjNxW2qX7R
l4dkziebC9uP6utX4O8G112qfd8Jrr1VH8uuVGu/HG1P96GX4Fnmu/uSwvaj
uvtF+MvB95rOsX7Q/eZZ+qcG36d0N5sW44zizXfBeWQ/eFJqX5If9VE9kdpu
ngyusVVbax9Ujz9RuFZS/j0t+s2A6DtvBdeWlwfbqu5VkwrHDdX/vcFXgvN7
l+D4qbrm8cL2rHr8Ofgj4JzEd37lQeW1jP8XxHiouLiLGPpBmfPC/BhLFVPn
0jevzDWW6nDdu3V3X1Dmul11TxXZRpl1Kk4pXunO+FaZ47Ny0swy37tUN3fN
nfc/Yi4P843Zid81Xg+uc3QXkg/qrvM8838o+H6t9wvZm+7Zjxbe52ll3mvh
wshPoc0ocz7Um4nWvgF8LfieonuL8ojeY5YWXsdJ8bzkZ6o5W8uOgvdZ9y3F
a8Xtz9Fze+YzFZet6s70ZOFz0nkpxilntUv9rvJG8JuP7tW61+hNQG8Dyr+q
g9YVriv7RDuRX+j9ZnnhfKH/VHvKVvWOVDvWMHpDODGzHWiel2euA+XXp2X2
Yfmyagy9/2if15X8Dc1/ZeK3IMVDxcX6yFdOHYtG5a4NFIuqx3ynvKf4oDeh
FYXv8Noz1cZ6T9Dbkd56ngm+J+qerJpOcVjvXYqTujs+xdgpwe9mei/Te0UH
8D+F463eGJ4pfOdVHaV7uGor5b5RkguuqXQnfzM4Buqt7VrmUR7fcJSXR+h/
3feDc7Tey6YHv4/pvxeC90D1pWKv3r1WIv8/9DqIBg==
           "]], 
          Polygon3DBox[CompressedData["
1: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
U6Qt8ovSImmQtEgcqdzUf1B9/B+SFUgk
           "]], Polygon3DBox[CompressedData["

1:eJwt1XeMFVUYhvGh3Et25S5SRQgqgsRoQiwQG0pUpAsICCooSlFRWDqsEpWA
gJLYE3vv3cSCoiBNytLjUkQUBBYQEOmsiAv+vsz940nO+9zvnJk7c843TQeO
6FlcNUmSIcigQ2GSfG/QH7vlnHweTquSJMu54agTGRV+nyX3w/GCJGnHvWx8
GRb6bRO303h+tSSZg9bWOCS3UFfTeIVxMerJF6AWt1oehYZyRyw0HoLD1msk
d8JS+T78wzWV66LS+EfuTpxy3YWYyT0pX4ruuSQ5yG3jPpA74Q+5gbmnuHny
QFSVL0F997JOnoBz5CbIcIvle1Eod8Z64xLU8FsruTb+s94cbgBOusbsoiTZ
GnPUtEAfNdVwUN1X/M04pO4MLvH7fHkQqssXoR63Vh6Ps+S9ajcrfUe+Ab/K
q7CYe05ug17+735uK/e+3BGb5cPYzn0od8Y2ub013zVujzV+28dtQZnxa9zV
WC3/jp+5V+WrsDLWx1rudbltzJcrsIv7VO6GXXKBaxzjvpNvi3fHTeMG+W9P
yBdHrXuu5Pep+0K+CX/FWp5fUdY+VNsLJeaNQVfjGnwWo+WBaMMdNe8I7pL/
Nrea3zvxnTGSG1GY5qr8o3FtuTea5/fnQTziXpa49gL38pTcCj24o9x67hP5
1njH3HRzh5h7pvUaYqr8r7rf1H2u5o64l/z+K8s/+z64nRuHj4z7ZtL3Eu/n
CNYZf8zdEvPVjLJmF9fIxPqxp+XBaMsdj/vFhXJfNOV+kR+Ps2TuUO5abqM8
A6O51lyjfN02TOTaxNzq9pNcicncbs9vr3HLqE3Sd9lTXanx83x57DV5Z1G6
Tlw79vlwc9vG2cw/53gHU7nx+CZ/pg9Fz1FzDeqoOxUNSN0UNeUF6TVOl2vj
MW6CuobqNqirlU33wX7XzRn34Jtgmrqd5i43t2Y2/W06t4Nbxu0xty43ydxh
cV7NmRznNHqbfDly3DG5ApPMrcIdMPdLuTcOWKsGt4P7Vr4Hg3PpmY7+8nXk
6Cdxz5hrPCKT9qjoVUVxho1nc8Nwt5r68V/yfWhkrMnV4vZwP8j3xzPLpT0i
+saCeI/Ri3JpX4z++JM8FkO5xtwRbpE8Lvolt8J9L+Kela9ET24jt5p7SW6N
pfIJbOI+iz0aPVVdKTeLe0a+Is4m18w1jnOl8gNxj9yNXOMq6d64Lp4Xdz53
Ut0q+WEU59J+H71uTTzjeD5cCVYaP5RJvw/xnWiOE0n67ZmYSffVevcyj3tR
bhdnidvAzeVekK+PnspNMXeAdRp431uivxSmvS163Huxb9E/ziDfLfatugKM
lf9Ut1Ld23Hu0U9dli/nZsY7ix6dS89CM3N3RH/Fg9x2c5eqe1PuGmeYOzd6
ArcsauK9cy3jO2BumTwl3js3Bk9n0m9o9J7oQWO5N+QumbTXRs/djRXGb3Hd
o6fm0u9tfHdfkTtET+HOdo2sayyJfRHPVf4fMYYQkA==
           "]]},
         Annotation[#, "Charting`Private`Tag$553854#2"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1: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
jKn/A0oCKZk=
           "]], Polygon3DBox[CompressedData["
1:eJwt1XmwTnUcx/GHW08z7txUk6aNaZ8aKqUiCWmhQqW9pk37QjNpiBQiO9d2
LXGva7u47rVd+74kS5Zs4QoxJVIpJSml13fO88d7nu/nfb6/c87zO7/zO5e3
fLdF64qpVOpVnIk9lVKpsgqp1OR0KvUg1so/YSk3S34Cu+RyzOAmyvfjC/k0
lnP75G+xMMc5sx3jDsmHsYSrw/3H/SK3xt/G7cUsrlhuii/ln7GMmy0/id1y
fWPXc8vkv9BAXsOP50bKd2Ku/BWKuTHy3Vgq19NbwZ/9XT6GO+SzMU59L/L1
b9P3G1aq53HPYF/cG7px/eV6GOZ/NK5sbtSn+H9R27lq4g/1Cr4NSvXtNHY6
VyQ3wSq5sr4SdXNMdGw/9znGqIdzdVEm90db7gO5Kvo4X11jT3O/ykdxu5zG
au5IOrmnZfpOGbuRWx7ziTlcE/f8pzrLPGyOY1ypvk7q4+nk2AqukOvKfSJX
Q648BR9xJ+OZYaW+BpWTc2/nl2BSTvJf4j+V8s9hPJfl/mqcYYx8EIu5TX53
ZKVSW3BI/275gLGT1FPVz2OCvmxju6ovQzvHxuqp4rrr0sk1y1FVzwl+jXox
/wK+l6ca3z4zNuYx5nMAWqk7cFegr57BXHvuQ/lK9OPyuA5cR/lq9OcmcT25
HvK1sQ5i7aE796l8FYbIJ7E25kR+ET/I57rHpeqX4t1w7B+uCD3U3blrMFTu
jbe4dvKl6O26xVxHrpd8KwZzt2Unay+eeat4H/RU545xB+Q3Yp1n1nO8W/Pl
N1Fs7OGYG65MfjnWIPcjV8rNlFuiiDvOzeUWye9gCreCy+WGyvdhJLeQ68UN
lu/CCO5rroAbLz+GQm47N5qbID+OMdw8big3QL457iXeF36QumHMsWMLKiVE
PZCrhcnyEUzL7E2vpJP1V4Y56tfSyf4R+8h0dFb35uogT08+9z7XRb4eA7lL
zN/OzFosx4KcZL3Fuusm18QgbmasBfVT6WQfjP3wouzk/ejEbcDFciPrdJt6
P9831rW+RfGM1UP4RvjMuaahp/qWdLK+Yp0dxUz1XO71+L96znfOTZlrVI/3
kvtO33xumvwINstzkMflyjfFeyTXMnYV93asx7iWXMC34TrLNTDA+WagILM3
FTm2Xs8GDFeP5h5CgZ4tsSfE+yjfE3OdmYMd3EZ5NWbrK+E/5rbGXonGeg7G
8+Smyy2wVT6Hn6F+FCXxzeDWYYJ6FFcf82NPwwiuUH4Yo3OSvlhD+XIz5Mec
cl24PrFHxrvFNfQ8Tqh38emKyffjOhyV9/J74r2Wq2Une1rsne/F/eQk36i4
lynysxgX64AbFM9WviHWs/wNxmW+oU9jrL7mzneh61U8yzcITbOTdd8js54b
YLi+5bE/ccNinjCKW8KN5PLk2ulkDTUz/gLnaxvrDL305XD91Demk29VfLMe
4M7Td5pbgyry/z9oNd8=
           "]]},
         Annotation[#, "Charting`Private`Tag$553854#3"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
         "Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], EdgeForm[None], Specularity[
       GrayLevel[1], 6], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
XmZtpxhWn1DfrwveFhwn6oOLguu1anP/xDEszdUss86URtRZSj1Ie/s2+Hvq
fZH2k27/W6wnE4Jz8/bgfLlX74x/a3B8Vg3WxtKW1dXDsBqKDemR4Bi7IPjc
8Q/dy6z5pR9rZT4vSN/VhncH706sLQbGWqeaNyDmhfKjf7AmlBZ8LlhHXQoO
Ca63JYLPEdKkT2Su2zfCG2TuoTfpm8J7gfcx/pLgWtEV/njwufNxxZu+YbDu
lQ4eHlzbSwWflaRn62Q+y0gX143niD/DH8tci+Yz/kSwg+IW/peYx9KN6k89
NRa8PtYG9fBeMSf13Z5mH37P26eaMT34vFAj2L8j1rS1qrHwCZlrnebX2UG1
8W7lQ+ZznPahaubcv1DvmflcrPqjs6n0vHrBeeotwVrur2CXYC2mmNA5TrWh
Gs/2CD73/T34PHgRWD1z/1QfVc+dlVhf6VyxO43xqDqft84dk7kWK5519lEN
Ui7pfCXeLXF9El8Qr9V3ymj/M/cmnYNbR80zVrkMvpJY75UsdA9SPPZizMjE
OkI1U9p4fszbr1LHwNeprWvcO/WQUYlrjTSqzv2tmKdfjHPFk+6Pj2N+jv1R
fbJP9HeJOCpy1eyRcQ3SQtIo6gU6r1SLsdc3WO8pdqUBVAP6ZdYYJeE9MutP
6X3pRukQxX73eL5QXHfKrLH1X0jDqNWVK53h7WP8Kyd1HlIvuwMcFmuOatYL
sRYphgbFOqMapP6uPOjJPLWD/w/RGbh3zB3VR52f9P+D/tN4MbiHqnao76uW
9M3c91W3+sDrBf+Pof9TRse9URwMizmid24W80g5Vljkvjo6nil0Dh6f+Qyi
PGufuXeqRm2Iekb/nbTBfySewXUWXxKspVUz1TvVQytIcwWfBc4MPg+I107d
3/+fH5ljcnRc5/LgnqIz70qsRKHPPNJXyqEO8Zyn/1LOB9cFx6bOIdJjOiO2
zayrFD/SxhuxsoXurU2Cz5I6QyrOFFvSK6OD9ZXy4XjUS+uls4L/89FZdG1w
n9WZuU2sscpVnSOkJfR/g3qAeoHOmfqvS7qubHA8fwCOy9xPhsWe8j/0hL6S

           "]], Polygon3DBox[CompressedData["
1:eJwtmHXYVVUWxq/3w2czs78zd+wpG1uxGwMVA5OUlBBQSQkDFaRB0qBlAMFC
AYMRJKxRUBCwxU4wMFERUWbG3zvv+mM9d71773vO2WuveNfeu32Pht3LpVKp
+3alUg1+e+ZSqQ4DPVOp1LBSKj0Mvhp8J/gK8DdFqdQEfDT4cvCFyB/R92as
OWtroZ9d9ppB6I8y1hN9GvqVrB0EPh98I/hS8AVITfS9GLtUc+Aa4D3AjcHX
I2eh92GsCXO9wKeAe4Ebge8ANwcPA7cGjwe3AA8HXwaeAG4JHgFuA14Jvg48
B/kF/QGkC/ok5jsx3wK8D7gjuDf4WvCZ4N7gxuCd+K0NroVcgX4T8+egX4fe
lPn6SBv0lYztVF0q3QZuCr4B/ARrl8T7ZzHWhbmR4EbgAeCW4JeSv01rGqFv
Yf5+9GM5nJ/RH00+j9HIYp0JYwehd0W/lv93Bh8C7g6+rmIbypbtwD3BncAH
gruArwG3Au8L7gTuI/shy9HvYuw75rbKRujH1bC9JjD/IvP3MPYj+NaKv1Pf
q73dDr4UfCP4yew9a+/3MNZN54U0k90Ye5q5Z5Fe6DOQb9CXIX3R72ZNV9Z+
hb+dDN49/GUI86eC+4P7g18AXwu+r2z7/Fh4/t/In7D/JNa8w9oF4DL4EfTT
0B9D3kdfxH+uQZ+J3pm1g8EXgG8CNwOPADcE3wxuEe+/ENwP3Fy+zzMHg59B
CvR6jF+Ffj0yOzkmFBsd0Hux/ml+LwY/j3wZ/nOC1ktnfnP2XrSnDeylL/g4
Ydm04ng4FnyNfAo8FtwUPBjcCtwFfCi4B/h6cDfwYeCrwX3B/cAngvuC+4Ff
z47XWvH8OeDO4IngjhXbpxP4LvC4iB/5woPgHuDH+L2N+XHI0mQfuDL2Lt9Y
AL4cPB08Vv6YbJur4ozlI111fsm+I5/oBr4/2VeeiPi8N0UsIX9Ntpls1zns
142xBhWf2R7JOUJnOQm5CH0UY0OZGwc+FzwUPBg8PeJvHHg4eAa4MfhW8Iiw
r+J7CHhQxTlnZ/Qjys5Fykm7Jp+JzmZK9vmOZmxYxT6yZ7JPyncmhv+MZGxI
xT4t31bOVW78ljPvgF5XfqR8W1Uqbauyfw0OH5N+JNKe9W2RwyMXXcT6n1j7
MzJNOa3seNe3dWb+Eub/nJy7akfMN498cXlyLt9ckxji/xMUQ4z9iv4lMgS8
CPkefQNyR5z5FvSvkLplv7MDzztG5ys/53nfFV43Evk4O8cfrG9Pzv2NIx+1
Tc79q3We+Nc85Tl9L/t9rmybDmfuZ75vK+9bCP6ANa8ydjz6XyL/yQdy8p7k
G4oxxdrpyFPoX/PfzcjUsKGe9W2V96Zn/sTzf6iyrR9K3vsmZFTZNthYZRvL
tnciD/KO1vxOYe1o3j0PfBl4KnhMxfWlFXgyeBT4YuXZsvOr8uwm5mejv4D+
T+Zf5XceeD7ymuIj+TunxnkI62zGI8v0ffKp2Nu0im28EH1+su2fTf5Ofe8z
4SM78rtf2b6zMvn9dyOrVDORudpX2WewLft7XkGfUXE9UH2aC54OngZuBx4D
blexf2u/t4Dbgu+LfDAe3AE8G9wRfFsyf5CPVKEfEL6jeGyPPpax9syNAtcr
m0sMBH/NnuqDD4r6rhqkWnSvzi6bl4h7nB05cWTwh4HoA1i/MNv+MyK+ZFPZ
9osq+744wsHJNUDc4UPklshtUyuuAXsncwLVhubok9EfR+agT2R+Hb+PgEv4
7heseVrng1RX2x7iKxP0bRVzil2SY0Zco2FwDMW0uNjdihn0Oxi7pWIbH55c
k2R72eiI5Bwm2y1KjrXbw39lY9lENUK2V716En09Y7OY+4Lf5WXH2GfJHOrA
ZBuLWylnbJ8co8olsrlsLw4nriXOsk+yjWVrnfkhyTlOvqBa36/s+qs6/Hhy
LP2GvbfU9Hfoe55APokatl9yzlXu/TXbF48nJ6xC/6UwRxLnWJptE9nmCvmA
8kNhn5YvbykcE4oNxf9PhWPshYjB9eCZ4DfBJ/L838BbC8egYu/XwjnnMPTP
k3ORanJD9LXJtVoxoFjQ972YXXNVe0/i+d2zY0axI07zWWFOJm6mGtw1u6aq
tqreL86ukaqVvcGPZdds1W5xoKuzz2x91J/ved7miHHFtvY3RTkg2R9rBP95
V//n+17i/5+w5gLwAuQD8PvBKcUlf2DuY+T85DHNaUxzHyU/T/79lvbH89YG
31PtFp97Jvigar9qvM5HNVu1W3zwqWx+uQJ8FP9/LjumFFuqEcpX4perFQ/M
P5/NAcUTxBc+LMxZxV3Fia7M5uji6uI4rbNrqmqrcvJk8M0Vn504wNBsztg/
8LBsDiAu0Ewxk82JxI3OAw/I5gziDv/P6dk5aFDkmDHZOUW5RZxhdDYn2zfi
QXxAnEHcQTF8K7iaPfyC7x+lmpvNsU5I7lHEvRI2XoK+hLH12ZxcdVr1+rJs
Di0uLY72UWFuoJqmGiFeIE4m3xQfF1dTDX05/E+19b1sDizuu60wJxU3FWds
yVz3it89rGz/UE1TbRMnm5/dQ6iXUM/RNNsn5GtDy/YV+XODZE69KOwhrqoc
fkM2pxK3EseZlc15xX3FyfpnczBxMXHGmdmctFb8X1z4U2SMbInU5N3bVTvX
yr9fzq7/4oLiGM8Xzl+do74sL8wf1auJM6wpnH/V2x0NfrEwn+sT+Xh1Yb7X
K/LxqsL1Stxmf+XMwv3eRvDu4AbZ9VVcTByrTfaY3q2eUGvFscS11O82y+ar
6jXE/9YW5kBt43mNsvmjeg3x2ZcK96gnJtfYByJ+ZfseZceuYlKxti5qkWJI
Z6GeTbG1TmcMrp/MTxQTp0XuV6y8mR1r9aI+yQfkC+o5lTuUQ26KXK7covo4
qGw+0Q79rex8r7wv/v4GuA24TjIfVv8jvnIJUhv90+TcL34snqycoNwnbqRc
sbGw76smqjaq3gyI+vtK4TsJ3U20Bb9bOD8+nMzfVOtytd81Mervfwu/U++S
PXtn94rPIhXm+2T3hsuQP4Bfy64dqpE7VptviUuppqu2f57tiyOQDeLvyEz0
gWX3s3qmnq0aJ76unn9W1KsPCv9/rHKNziD+r15Y+XF59nlPivzwDut35Xmr
5SvIbvoexvYs+w5FfFoca3zks7cK4+OSOcd9kW/U2+mO5O3CdzK6mxGHe69w
D6xeWBztffAu1b7L0Dv1bvENcTPxj3WF+cKwyJevFeZPI4IfvF64nouHiY+9
Wpi/iCs2AL9ZmE+ptz4D/HJh/iDuKP71RuH8sH/wAfV74tDi0uoZ50Z9ODvy
4bKoJ+K+8skPI18sLTunKrfKxrL10sgfOt8VZXOST7LPXGc/IfKz+INqq85c
Z38neK9kf9Vdw9dxXhcl12txyrphP3FN8Y1LIh9uCj7QJPlOZFv4w1nJHFm9
89visJz9LPD3kf93iPqmu5p3kDrM/wtcVe3zOiO5R18U9eGc5J5ZvfP2rFmM
Ph35Kvu8T03m2LqbU/ycEuevuz7dp+iuSZz6h+z8oVo8O75f7xeXU4y/kp0P
lHuVg/+XHeN1ol6qF1Z9KZL7MfWaDZFVZfvUztWuJymZXzaO/as3Ej9bkZ0P
FAuysWytPWgvU5CNUS9Oi/2I/95VcW1TDP+ncP1THyMO+Vt2fhR3eUjz2T2Q
cpf85d3s+qm7Dd3BiN+tyeaG8+K81GOsSeYoPwb/qET9bBH1/phkvj026ud5
4a/qFcXv5Cu681oQ/OLk4Cu6qxA//FvynYb6V/G/fyTzyW7BXw5N5tdDgo8c
FfxjVNTX06N+zgh+c2zwD919iK+2Tr7T2xrxdG74i+qJ+Ovfk/mp7pJUE1Qb
1B+I/4ofHRD1WndJO1S7L14R+XGyalzsb1PhO7gNyvHJ8SL+o9jSHcMOhfnT
kcn9i/oH8beTor6pfxDf2y35DkP9h2pSvYgX5TPVsPrBT9R7qx84M+JBvZPu
BHQ3IL6ou9LfAayuH/0=
           "]], Polygon3DBox[CompressedData["
1:eJwt1XnQTmUYx/GnVzzTPN6MiXYNNVEiSyIiRYuthbGUfS3ra8++VXYikb2k
bKmsI2a02reKrBESJVrUTHvU55rz/PGd9/59z3Wfc5773Pf1lmjfs1FeTiqV
6oT8+DE3lXopnUo9gI4uvJ5JpY7iOePOXBHsVLOO68QtkJ/AaW4e14h7Ub4P
x7j5XENuslwDR7lF3JPcdPlBHOd+wmvGj6Ova2vVvIGmxtO4WvhKzR/cEm65
3BJnucIFU6kt3Fl5VTxXzUq04+bJDXBKXT51a7lj8R7IkRcUSqUOGK/gV+KS
eRczSd7PN8WH8iq05ebK9fG1+11m/mruiHwYKfmCuoXcNnkrfpZ/xSJul9wQ
G+RTmMhtljfhN/dbzbXn5suP4hvuDDeOe0tuge+4pVxz7hX5YZzginr2Lu68
fA5XyUWwg2sj58NmdRvN7cotkpvgW24Z14KbKT+Ck9x/8Zu5Q3IzfCwfxAzj
Kunk+fEes63fSXmSvAEFPHMIX8V4AH8r9rlfc64M11EuiO3cLHPXppPf1zsn
+b1vqns6+80rYWom2S/PcC/Ld2OavAmjsusS9/jF3JlcK26CXAZj4v3Qmpso
l8VYeTxqcSPkcjho7gFukvGdsZ/jO8f+RknjLlxR7FL3ATeEWyzXwdtyH5Tn
TsU3w6XYy1wHbopcIdYnk5ylOFNT5YqYLJ/EBO49eSUumDuOq82NlMvjEDeR
a8yNkm/BYPk8P8T4dtSLa9zOWPvLvRf3Gf5U05Er5XpX+Wrs5rpwpbke8nXY
w51Db+NiuNe1nmqeRSXjftzN2Bs1XDmuj3wTPuVGcNW4wfJt+IIbzT3GDZeL
o3/0EVTnhsqlsV/ddK4+N06+B0e4KVwz7gW5JIbLz6MGN0y+AweiV2V7yWi5
FEZmEleXGyNXjrOpbgbXgBsvV8WX3A8Ym93PT8X+UvMRhhov4eri3UyyDrEe
veTCaC2vj7WJ/ijXxmI5z35ek0728mSc5oahjvFA/np0zyRrFe83SL4BeZnk
29XLrt+N6CUPwkNcf/kadJb3x3ONr00nZyzO2lzPfV+eLtfMSdZ5AO4y7suX
wOd+6+64J7c3ziT+yk32X/lsb18XfS36NYpxbeX82KJuffSyfPYI5mb71vd8
e3+viD3INTFvDwZne2f01X/UbOX6cdvlHfida8YV5zrIGWzj1sRZyva/mlgg
t0RZrpN8ZcxX142ryuXJudEXM8n/i/i/8ap8PxbKPbJ7sqdcCK0yyTvGu7aT
C2Cr+/3NDeQaxzrFO8vL0Z2bJVfDLDm/3jaCWxbrlE563TvxHG52nBnMkffF
3Oy6xBmLs9YXFYw3cmfit5h7iJtjXB1tXFsRfQ6VjbtxaTSNvuH7nojvE+cB
/3rnfnxF4+Pp5NpF7jC3NHpB7CnXPsnu0+idC7lG8Wx1/wPfOhcd
           "]]},
         Annotation[#, "Charting`Private`Tag$553854#4"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
          RGBColor[0.2306315, 0.0964065, 0.05229475], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          GrayLevel[0.3], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2306315, 0.0964065, 0.05229475], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], EdgeForm[None], Specularity[
       GrayLevel[1], 6], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
NZ1qyud43zPMD/UvlBfkI0vA/wMtYQE6
           "]], Polygon3DBox[CompressedData["

1:eJwtmXm8V+MWxn/99qlW9Z59kimFpDlNpEhUMoQIGe6NMs8ficxz5nmeZ1Ek
ruHKPHPNQ5QGTSQZi1JoEPf5et4/1ues5/fu/fvt/b5rPetZ67Q+bNTQE6qV
SmV8vUqlRn9vSpXKjnIOLSqVN+V/VVepbB2VSlfhi4Tvk/XT+v7Cz8r/SOuh
9RX6kv7CbwtfKnyw1t8QfkG4uXASHin8P+GLhQ8Ufkn4WtkAfd8w4eflL9D6
vVrfT/gZ4XeF3xO+QHie8JWy7XT9PsL/lb+B7Dz558pmyZ+i69fT9Y2E983P
y3d1kF0t/x2tL2lYqczW87YUvkbWX9/3L60/J/8prTfQ/X9ofS/hF2UPCY+X
vSD/J61vIb9jvv4W2c66/0jht+UPk63RvdcK/yL/ZtlOWj9c+C35U3X/+rq/
sfB+wgfI/tL11wkvlb+brMKzyhbL/1zXb6TrmwqPEJ4mvLHwWsIH83zCLYRL
4VHCvwqv0PvdIrxCeLLsRPm7yjrJf1XrbXR9c+FzhB+RjZJ/guzj5D1lb3vo
mrPl3y87Giy7Tf4Puv8yrfUSHi/8o/CdwoOFnxD+UDZS/lDZU/Ifk/Us/Buf
yP9Gdqn8n/XOveQv1/3f6P679Vm9WsdDp8Lx8bL8V7S+idbXFT5DeLisTv71
sl/lP6P1w8P7t0T4deH2wi2FxwjfITtLfj/ZBPkzZFsV/mym/Dd1fSddv3GO
7zeEOwpvJHyh8ELhJ8Pn+47wJ8KfCV8u/L1wba33NnTGzeS/rPVWWl9Hn52m
9U9lveWfKpsq/2mtp3CMECvPCTcTbqD1I4SfFV5LuL7wYcLfCXcXbifcrqxU
vhV+Onwm7yXHBLFxg2yZ/MGyevKvYY/lPy47Rf7Jsimcr+5vpPtXVZ0frwm3
Fd6AHOJ8hMeF85F4/1C4Yc6HfsQjMSR8q6yDnqcnHKG1i3X91/I/0PUfaO1C
4a/Ya9nXWr9M+Fv5L2m9ZfgMTxS+TtaZ2Ja9Kv95ra+b8/dY4Y+FG+fnHSj8
nvBfiu/vhbsIPylcX+u/Cw8Rni/cR7ib7r9YuL1sZtXxOlb+prLpwhcJz5f/
vq7/W9/3gz7rSvwkc9dAnef1PLvWt9H3dddnlwpfkXwW5MjT5L6sidanhONh
J9lifdcVWv+B+Nf9f+r7v9Nn2wo/KrxnOAcWCreWfam184VnJ+8n97N/X8r/
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
Xm2buYa9GZvrFz0b8xL00rRwzNBb/h/j0Jk0
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1XnQzVUcx/Gf5/Fw8bgP2WUPZZc92WmhEEJisiZbRCIqJCqNxlZNI1JN
U8rUVJPSOhnZRk1mKMmSkkoZS4M20es7v/vHe+Z83vd7zu/ec8/5/uqOmTZw
al6SJBNRgFWFSdIsP0neyCTJm2iRTZLV3K3Gl0omyW+Ku8td8ZfxIP4i31w+
X5Qk38srzC+HO7gVckHxJCmG/txa+Rr+J3OfNv4Ue+WOOMa9L2/C1Z67i2tl
zkL5Q3whv4Kj6m6Ul+FVeSmuVPei/BIam9uMO67uJvm071dTPlWUrj1JbXu0
VPcZ38S4Hf8aNsvP4mbjP8w7ZI0Wcg0cNO7Jn+KLmXvGetvlBeaf8FkrNb9w
T3LXcvVRTd0n/HDjRXwX1OJWck251+UNaMb9yT3F/SjvxGG5A05b+xZ5N9qp
+5t7Rt0/vsdX3DF5MEpzI+XS6CUPRRlulFwG18sjUZ4bJxehr3wA87nP5XPW
zPeMfdwcbjP3ROyr/BzuNC6HfJ+NlgegpPEIriS6RQ0qcxPkChgYa6EBN0uu
i/HyZFTnpshVcJs8CdW4yXJlDJGnozY3Xa6RSc/VWtwbe4nLfHaffBeqGE/k
KmJQ/LfYb/96yxf8tgK/bS7XUN1srh4myPPQiJsrN8AUuTG+M7eP/J+5JbLp
+eusbjm3BPWz6fmIc9JXTmIfuOe5h42bxu9V/7j8KFoYL+CaYGasj4e47vIJ
z7hU1j0qTM/UNu6H+E/kqtjtGT3kk+oSz9jOjVf3Dvc2tsl1+DHG1VDos1Pc
Waw0PsJtwf7Yu6jlZsg1MUre4uwuzaTntluczdh36/XK3YU4/3EPFqG5z+fH
XcOM2BP87PMBcd+RMa9T3AduoFwCpbgt3Nhcf+mAxfLJorTXhB8X55DbiQnG
G/l3sUOuhT3Wu04+6/vkWW9rnDd1b0VfwWNy21hTXT/5S7RVt4abmtuXsuqn
yhex2jg/ehB+z53JuDN3yw3jHJk7gku4w5m0v3XKpvNjnWnyVajETeRK5c5u
/Tj73IPx33Fz5Faozg3nLvl+B+VD0Su4erg/+l4mPZtxRqcha3wP1yjuQ/QI
e7U1k97XVfnp2eiJf603hC+WSftQ79wzhslfx16bewP3HzdU3oP22bQu+ss3
8r7Yw2zac6LHfiR/HOtxx7kl+encwugn3GyuAjcz+lfcYa4ldzgvPbvRG9tw
fbgz3Ldx9tAxfitXKdcPWmTSPjmLqxh3WW6OqlxdTDK+IpPe7bjj69El9y5Z
E3ujZhM3jHtZbh37I7+HIdwL8jpslH+1fx8Yd43/OD99pxR359YZZ/kDOB2/
FW24RzJpP2/gGRsK074ernPcG+5CvC+4o/IuHClM34/xnhwcZx6l1R2KfqBu
h3ze2S3OLeRqcvPiv4jexvXjzps7PPpanFWuP3eOu10uH/sfd5wriP2Q60Qt
NzZ+Czderh21XB1ub17a2+PctOaWcz28jxfL66NHZdP+F734gfjPcHk2fX9c
MHd0/BfIxjuPW6ZubJxlFHH/A6iG/Ow=
           "]]},
         Annotation[#, "Charting`Private`Tag$553854#5"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.41139519999999996`, 0.3882496, 0.4805404]}, {
         "Directional", 
          RGBColor[0.264244, 0.235312, 0.3506755], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          Hue[0.7, 1, 1], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.264244, 0.235312, 0.3506755], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktrE2EYhuFX4yGJqdXYmGhBiAu7ddGmf6AGg4hoFEFc1cNKY0F6AEu7
KyJSSqlSCja2EjUeejCe1v6aVv9BocVrKMzN/TzfvN/wzTDl4Sc3Ggci4iW+
I8kdbGA3HXGMT2QiSnye+7ifK3yZL/FdvsmPcA9TWD4UcZ9fuTfNTf0BP0Wl
K+Kt/lCewYiZk3rucMRzPS9XzXTrL/RTel5uZvbP2aPP8qCZFbmAOX2Vx8yc
5nn9HRdRM1eyf8FaSe+V2+Ze62f0c/qi/MzaWb2sL+m98qS1Yfkx1/kOD3GV
B/gnt/gCPqV8Q3SwiTa+4p/v+IvfY9Tcm2Sf/Nd6Uf4hH3fGDd629pG/4TN+
4ws+YB1b7k/Y05LXMC7vOGeDc86S5dt6VnbFLTmdvLfn1+WjclG+Lh+Rr3HK
oFeOq7IrCu5fSdblGu95wEH5oqFN/pPZ/1f+A+q2PDI=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s9L03Ecx/H30HIOhrfKyNq0H0iebJSIjbEkRELKToKnyB8nre4dgqCW
+3f8Nd1MU8vlJToIdexkVJ4EYxcfw8OL5/P1/ry/3+++27LP5sfnEhFRllmy
iDP4XLbbIzb0A9zHQ/yJDfyNHamI/9iDSfsZuSj98u5cxCWcdHYH3+udeEte
piNK+mU+KPfsXGmNODYb0rv4Gzsnel6/qjf4tL2Cfk0v4is7H8wz+rC+wO/b
yeoP9bLezd/aS5yPGDHr0Vv5C3uj+nW9TX/Ei2Y39JQ+pt/kD8wu8By2YRZP
vHMaD/E1Tpj/4LWWiC/yWXakKptylIz4ihXptftE6vxfc+66Pd7hM27jX7N1
3JUN2ZePsiaf5I/zPtev8i25zX813xO/+11q7lfQv/Eqz/N1fOr+Q3yNj/NB
XuEDWLe7yu/yFXzsPMeXeT/uOF/inb6XKc8ppc7+K6cj+UXH
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slKXFEUheGtkcQmgrOIIiISbGKijnwBH0B8hMxi3451blLBWRD0CRSc
KwgO7ZNo2XexQQSJWoiIqPkuGSz+f52zz61zi1vxubu1KysiUlKaHfFFKcF3
MpIf0a9P4DBO43ecxwlM4xRe4iyuy6KcSc/riCWsLIg4x159GXdlsjCiT1/h
V/LsfFVOxIG1v3o1nzVzrN/oNfop/+hZGb1Wv8MpM/3WP+j3+gDPMVOnP+iD
yRk+Z+6SP1r7pF/xJnNPer1+rb/wPGsNekbP8v6NPN/agr1Hd5zBC5xM3hXH
sdn+W7Mp/vtVxKEcyJ78kk3J5Eac4Ipsy0/5I2k5llv7Q84f8SJ33cUba2u4
L+tyKhuyKjtybf/QmWW+lfwmX3LvNI65W1/yv+k/eC+v4j2Y8vz3vJt/45U8
+QAqcNRsJy/nHThiv4y381L8ar+NZ7+JKPbOLQX/v5l/Y7BY8w==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LVGEYhvGnGkqaKcqNm8rGrD9gLD+yjf4FOm1KqynB7bh0ZdlK3Ai6
MkKIkIgIzci1EKRlKEoQBG1zzNI+/CqV6HdwcXNd9/M+5/CeYbIdXfnigYgY
kPmDEadkTmYln464gJ1Yg93YjP3YiiN4GyewC/vkrgzL9SMR93DF2QNs03tx
QErHItr1+/yRvLGTS0XMmD3Wa/i2nVl9VL+oz/ENe0/0S/pTXLZzw7xWf6bf
5O/t1OnP9Vt6Pd+x94GPmTXoH/k/ey/0y/on/SVfMGvUP+uv9Ct80ayHv8Yi
jmMBH2ILpjMRU9gk3w65t2zJhqzIj2RWFrGLS/JLvsqOrMnfZN95zvN/+El3
XcdNs+WE8l32ZFVK8jt5v/Mhz3zhP2WQT7p3P95xt/NYrhd4NT/Bz+E77z/O
q/hbnuFZfhSv2T3Ly3glTjs/zM/wFF51fjr5zuR3xorM/n/mP/P9Vao=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j9IlHEcx/Hv3fPkXXZ3xjUVVBhIgxCmTXVnXZe6FEGEhITYGREIOkS0
NQeJoEOtgeIUFEFLc3v5r3RzsS0i6koLy9fh8OH9/nx/3+f3HA/X2Zi6MZmJ
iGlZSCI+ZCPm8bEcLURs6N34BavYxOuYOh/HI/gIT+F5OStX5UI+ohdfO7uG
Fb0Pa3K85C79HL8pT+1U04gXZsN6P++2M6/f0i/qi/ydvRH9kn4bT9jpN6/p
o609Pmvnsj7W2tPr/Iy9l7xhdkV/xd/bu6sP6G/0e/yZ2aD+Vr+vD/HnZj38
CXbiQyzjHUxwCR/gT98la78gh+SgZOSA/HVfB/6zV5cJKel/zLc8V+TlYkQe
d8wC2yWRw5LKf8/kcNv5IN+VNn0AZ8wqeNpvWXffTi6ii3/mv/knTH2DX3yN
J7zJV/kPPGl3hX/ny5hx/o0v8a94zPlHvuk9c96TL+7/V/YAHzdAtg==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{2301, 2495, 3347, 3652, 2319, 3355, 3658, 2339, 3695, 2341, 
       2358, 3702, 2360, 2380, 3388, 3672, 2382, 3372, 3679, 2402, 3716, 2404,
        2461, 2419, 2465, 2466, 3383}], 
      Line3DBox[{2302, 3648, 2303, 3686, 2305, 2322, 3691, 2429, 2324, 3356, 
       3659, 2343, 3697, 2345, 2362, 3704, 2365, 2384, 3373, 3680, 2405, 3717,
        2406, 3399, 2421, 2469, 2470, 3685, 2423, 3400, 3401}], 
      Line3DBox[{2307, 3650, 2308, 3687, 2310, 2326, 3693, 2329, 2346, 3362, 
       3666, 2366, 3387, 3667, 2367, 3368, 3674, 2388, 3375, 3682, 2408, 3718,
        2410, 2472, 2425, 3723, 2475, 2476, 2427}], 
      Line3DBox[{2314, 3651, 2315, 2438, 3353, 3656, 2333, 3405, 3358, 3662, 
       2351, 3699, 2353, 2370, 3706, 2373, 2392, 3714, 2434, 2394}], 
      Line3DBox[{2316, 2442, 3727, 3390, 2444, 2443, 3391, 3735, 2485, 2488, 
       2317, 2490, 2334, 2489, 3394, 3728, 2336, 2352, 3700, 2491, 2354, 2372,
        3707, 2432, 2374}], 
      Line3DBox[{2320, 3354, 3657, 2337, 3360, 3664, 2357, 3701, 2359, 2378, 
       3709, 2381, 2399, 3389, 3678, 2401, 3379, 3730, 2460, 2418, 3722, 2462,
        2463}], 
      Line3DBox[{2338, 3359, 3663, 2355, 3366, 3671, 2377, 3708, 2379, 2398, 
       3715, 2400, 2455, 2415, 3721, 2458, 2459, 2436, 2417, 3397, 3398}], 
      Line3DBox[{2356, 3365, 3670, 2375, 3371, 3677, 2397, 3378, 3725, 3392, 
       2414, 2456, 2457, 2416}], 
      Line3DBox[{2376, 3370, 3676, 2395, 3377, 2441, 3683, 2447, 2482, 2446, 
       2483, 2449, 2450, 2448, 3382}], 
      Line3DBox[{2396, 3376, 2440, 3393, 2479, 3726, 2481, 2480, 2454, 2453}],
       Line3DBox[{2413, 2435, 3720, 2411, 2393, 3713, 2390, 2371, 3705, 2369, 
       3669, 3364, 2350, 3661, 3357, 2332, 3655, 3385, 2330, 2313, 3689, 2311,
        3352}], 
      Line3DBox[{2422, 3731, 2468, 2467, 2420, 3684, 2464, 3380, 2403, 2385, 
       3710, 2383, 2363, 3703, 2361, 3665, 3361, 2342, 2431, 3696, 2340, 2323,
        3690, 2321, 3653, 3348, 2300, 3647, 2494, 2496, 2497, 2498}], 
      Line3DBox[{2428, 2437, 2478, 2477, 3724, 2426, 2474, 2412, 3719, 2409, 
       2391, 3712, 2389, 3675, 3369, 2368, 3668, 3363, 2349, 3660, 3386, 2348,
        2331, 3694, 2328, 2312, 3688, 2309, 3351}], 
      Line3DBox[{2473, 3733, 3402, 2424, 2471, 3732, 3381, 2407, 3681, 3374, 
       2387, 2433, 3711, 2386, 3673, 3367, 2364, 2347, 3698, 2344, 2327, 3692,
        2325, 3654, 3350, 2306, 3649, 3384, 2304, 3349}], 
      Line3DBox[{2486, 2487, 2451, 2452, 3729, 3395, 3396, 2445, 2430, 2493, 
       2492, 2439, 3403, 3734, 3404, 2335, 2484, 2318, 3337, 3342}], 
      Line3DBox[{2500, 2694, 3406, 3741, 2518, 3414, 3747, 2538, 3784, 2540, 
       2557, 3791, 2559, 2579, 3447, 3761, 2581, 3431, 3768, 2601, 3805, 2603,
        2660, 2618, 2664, 2665, 3442}], 
      Line3DBox[{2501, 3737, 2502, 3775, 2504, 2521, 3780, 2628, 2523, 3415, 
       3748, 2542, 3786, 2544, 2561, 3793, 2564, 2583, 3432, 3769, 2604, 3806,
        2605, 3458, 2620, 2668, 2669, 3774, 2622, 3459, 3460}], 
      Line3DBox[{2506, 3739, 2507, 3776, 2509, 2525, 3782, 2528, 2545, 3421, 
       3755, 2565, 3446, 3756, 2566, 3427, 3763, 2587, 3434, 3771, 2607, 3807,
        2609, 2671, 2624, 3812, 2674, 2675, 2626}], 
      Line3DBox[{2513, 3740, 2514, 2637, 3412, 3745, 2532, 3464, 3417, 3751, 
       2550, 3788, 2552, 2569, 3795, 2572, 2591, 3803, 2633, 2593}], 
      Line3DBox[{2515, 2641, 3816, 3449, 2643, 2642, 3450, 3824, 2684, 2687, 
       2516, 2689, 2533, 2688, 3453, 3817, 2535, 2551, 3789, 2690, 2553, 2571,
        3796, 2631, 2573}], 
      Line3DBox[{2519, 3413, 3746, 2536, 3419, 3753, 2556, 3790, 2558, 2577, 
       3798, 2580, 2598, 3448, 3767, 2600, 3438, 3819, 2659, 2617, 3811, 2661,
        2662}], 
      Line3DBox[{2537, 3418, 3752, 2554, 3425, 3760, 2576, 3797, 2578, 2597, 
       3804, 2599, 2654, 2614, 3810, 2657, 2658, 2635, 2616, 3456, 3457}], 
      Line3DBox[{2555, 3424, 3759, 2574, 3430, 3766, 2596, 3437, 3814, 3451, 
       2613, 2655, 2656, 2615}], 
      Line3DBox[{2575, 3429, 3765, 2594, 3436, 2640, 3772, 2646, 2681, 2645, 
       2682, 2648, 2649, 2647, 3441}], 
      Line3DBox[{2595, 3435, 2639, 3452, 2678, 3815, 2680, 2679, 2653, 2652}],
       Line3DBox[{2612, 2634, 3809, 2610, 2592, 3802, 2589, 2570, 3794, 2568, 
       3758, 3423, 2549, 3750, 3416, 2531, 3744, 3444, 2529, 2512, 3778, 2510,
        3411}], 
      Line3DBox[{2621, 3820, 2667, 2666, 2619, 3773, 2663, 3439, 2602, 2584, 
       3799, 2582, 2562, 3792, 2560, 3754, 3420, 2541, 2630, 3785, 2539, 2522,
        3779, 2520, 3742, 3407, 2499, 3736, 2693, 2695, 2696, 2697}], 
      Line3DBox[{2627, 2636, 2677, 2676, 3813, 2625, 2673, 2611, 3808, 2608, 
       2590, 3801, 2588, 3764, 3428, 2567, 3757, 3422, 2548, 3749, 3445, 2547,
        2530, 3783, 2527, 2511, 3777, 2508, 3410}], 
      Line3DBox[{2672, 3822, 3461, 2623, 2670, 3821, 3440, 2606, 3770, 3433, 
       2586, 2632, 3800, 2585, 3762, 3426, 2563, 2546, 3787, 2543, 2526, 3781,
        2524, 3743, 3409, 2505, 3738, 3443, 2503, 3408}], 
      Line3DBox[{2685, 2686, 2650, 2651, 3818, 3454, 3455, 2644, 2629, 2692, 
       2691, 2638, 3462, 3823, 3463, 2534, 2683, 2517, 3338, 3343}], 
      Line3DBox[{2699, 2893, 3465, 3830, 2717, 3473, 3836, 2737, 3873, 2739, 
       2756, 3880, 2758, 2778, 3506, 3850, 2780, 3490, 3857, 2800, 3894, 2802,
        2859, 2817, 2863, 2864, 3501}], 
      Line3DBox[{2700, 3826, 2701, 3864, 2703, 2720, 3869, 2827, 2722, 3474, 
       3837, 2741, 3875, 2743, 2760, 3882, 2763, 2782, 3491, 3858, 2803, 3895,
        2804, 3517, 2819, 2867, 2868, 3863, 2821, 3518, 3519}], 
      Line3DBox[{2705, 3828, 2706, 3865, 2708, 2724, 3871, 2727, 2744, 3480, 
       3844, 2764, 3505, 3845, 2765, 3486, 3852, 2786, 3493, 3860, 2806, 3896,
        2808, 2870, 2823, 3901, 2873, 2874, 2825}], 
      Line3DBox[{2712, 3829, 2713, 2836, 3471, 3834, 2731, 3523, 3476, 3840, 
       2749, 3877, 2751, 2768, 3884, 2771, 2790, 3892, 2832, 2792}], 
      Line3DBox[{2714, 2840, 3905, 3508, 2842, 2841, 3509, 3913, 2883, 2886, 
       2715, 2888, 2732, 2887, 3512, 3906, 2734, 2750, 3878, 2889, 2752, 2770,
        3885, 2830, 2772}], 
      Line3DBox[{2718, 3472, 3835, 2735, 3478, 3842, 2755, 3879, 2757, 2776, 
       3887, 2779, 2797, 3507, 3856, 2799, 3497, 3908, 2858, 2816, 3900, 2860,
        2861}], 
      Line3DBox[{2736, 3477, 3841, 2753, 3484, 3849, 2775, 3886, 2777, 2796, 
       3893, 2798, 2853, 2813, 3899, 2856, 2857, 2834, 2815, 3515, 3516}], 
      Line3DBox[{2754, 3483, 3848, 2773, 3489, 3855, 2795, 3496, 3903, 3510, 
       2812, 2854, 2855, 2814}], 
      Line3DBox[{2774, 3488, 3854, 2793, 3495, 2839, 3861, 2845, 2880, 2844, 
       2881, 2847, 2848, 2846, 3500}], 
      Line3DBox[{2794, 3494, 2838, 3511, 2877, 3904, 2879, 2878, 2852, 2851}],
       Line3DBox[{2811, 2833, 3898, 2809, 2791, 3891, 2788, 2769, 3883, 2767, 
       3847, 3482, 2748, 3839, 3475, 2730, 3833, 3503, 2728, 2711, 3867, 2709,
        3470}], 
      Line3DBox[{2820, 3909, 2866, 2865, 2818, 3862, 2862, 3498, 2801, 2783, 
       3888, 2781, 2761, 3881, 2759, 3843, 3479, 2740, 2829, 3874, 2738, 2721,
        3868, 2719, 3831, 3466, 2698, 3825, 2892, 2894, 2895, 2896}], 
      Line3DBox[{2826, 2835, 2876, 2875, 3902, 2824, 2872, 2810, 3897, 2807, 
       2789, 3890, 2787, 3853, 3487, 2766, 3846, 3481, 2747, 3838, 3504, 2746,
        2729, 3872, 2726, 2710, 3866, 2707, 3469}], 
      Line3DBox[{2871, 3911, 3520, 2822, 2869, 3910, 3499, 2805, 3859, 3492, 
       2785, 2831, 3889, 2784, 3851, 3485, 2762, 2745, 3876, 2742, 2725, 3870,
        2723, 3832, 3468, 2704, 3827, 3502, 2702, 3467}], 
      Line3DBox[{2884, 2885, 2849, 2850, 3907, 3513, 3514, 2843, 2828, 2891, 
       2890, 2837, 3521, 3912, 3522, 2733, 2882, 2716, 3339, 3344}], 
      Line3DBox[{2898, 3092, 3524, 3919, 2916, 3532, 3925, 2936, 3962, 2938, 
       2955, 3969, 2957, 2977, 3565, 3939, 2979, 3549, 3946, 2999, 3983, 3001,
        3058, 3016, 3062, 3063, 3560}], 
      Line3DBox[{2899, 3915, 2900, 3953, 2902, 2919, 3958, 3026, 2921, 3533, 
       3926, 2940, 3964, 2942, 2959, 3971, 2962, 2981, 3550, 3947, 3002, 3984,
        3003, 3576, 3018, 3066, 3067, 3952, 3020, 3577, 3578}], 
      Line3DBox[{2904, 3917, 2905, 3954, 2907, 2923, 3960, 2926, 2943, 3539, 
       3933, 2963, 3564, 3934, 2964, 3545, 3941, 2985, 3552, 3949, 3005, 3985,
        3007, 3069, 3022, 3990, 3072, 3073, 3024}], 
      Line3DBox[{2911, 3918, 2912, 3035, 3530, 3923, 2930, 3582, 3535, 3929, 
       2948, 3966, 2950, 2967, 3973, 2970, 2989, 3981, 3031, 2991}], 
      Line3DBox[{2913, 3039, 3994, 3567, 3041, 3040, 3568, 4002, 3082, 3085, 
       2914, 3087, 2931, 3086, 3571, 3995, 2933, 2949, 3967, 3088, 2951, 2969,
        3974, 3029, 2971}], 
      Line3DBox[{2917, 3531, 3924, 2934, 3537, 3931, 2954, 3968, 2956, 2975, 
       3976, 2978, 2996, 3566, 3945, 2998, 3556, 3997, 3057, 3015, 3989, 3059,
        3060}], 
      Line3DBox[{2935, 3536, 3930, 2952, 3543, 3938, 2974, 3975, 2976, 2995, 
       3982, 2997, 3052, 3012, 3988, 3055, 3056, 3033, 3014, 3574, 3575}], 
      Line3DBox[{2953, 3542, 3937, 2972, 3548, 3944, 2994, 3555, 3992, 3569, 
       3011, 3053, 3054, 3013}], 
      Line3DBox[{2973, 3547, 3943, 2992, 3554, 3038, 3950, 3044, 3079, 3043, 
       3080, 3046, 3047, 3045, 3559}], 
      Line3DBox[{2993, 3553, 3037, 3570, 3076, 3993, 3078, 3077, 3051, 3050}],
       Line3DBox[{3010, 3032, 3987, 3008, 2990, 3980, 2987, 2968, 3972, 2966, 
       3936, 3541, 2947, 3928, 3534, 2929, 3922, 3562, 2927, 2910, 3956, 2908,
        3529}], 
      Line3DBox[{3019, 3998, 3065, 3064, 3017, 3951, 3061, 3557, 3000, 2982, 
       3977, 2980, 2960, 3970, 2958, 3932, 3538, 2939, 3028, 3963, 2937, 2920,
        3957, 2918, 3920, 3525, 2897, 3914, 3091, 3093, 3094, 3095}], 
      Line3DBox[{3025, 3034, 3075, 3074, 3991, 3023, 3071, 3009, 3986, 3006, 
       2988, 3979, 2986, 3942, 3546, 2965, 3935, 3540, 2946, 3927, 3563, 2945,
        2928, 3961, 2925, 2909, 3955, 2906, 3528}], 
      Line3DBox[{3070, 4000, 3579, 3021, 3068, 3999, 3558, 3004, 3948, 3551, 
       2984, 3030, 3978, 2983, 3940, 3544, 2961, 2944, 3965, 2941, 2924, 3959,
        2922, 3921, 3527, 2903, 3916, 3561, 2901, 3526}], 
      Line3DBox[{3083, 3084, 3048, 3049, 3996, 3572, 3573, 3042, 3027, 3090, 
       3089, 3036, 3580, 4001, 3581, 2932, 3081, 2915, 3340, 3345}], 
      Line3DBox[{3097, 3290, 3583, 4008, 3114, 3590, 4013, 3134, 4043, 3136, 
       3153, 4049, 3155, 3175, 3617, 4024, 3177, 3603, 4031, 3197, 4062, 3199,
        3256, 3214, 3260, 3261, 3614}], 
      Line3DBox[{3098, 4004, 3099, 4038, 3101, 3117, 4041, 3224, 3119, 3591, 
       4014, 3138, 4045, 3140, 3157, 4051, 3160, 3179, 3604, 4032, 3200, 4063,
        3201, 3628, 3216, 3264, 3265, 4037, 3218, 3629, 3630}], 
      Line3DBox[{3103, 4006, 3104, 3635, 4087, 3317, 3318, 3292, 3121, 4042, 
       3296, 3324, 3124, 3303, 3141, 3305, 3595, 4019, 3161, 3311, 3616, 4020,
        3162, 3313, 3599, 4026, 3183, 3606, 4034, 3203, 4064, 3205, 3267, 
       3220, 4069, 3270, 3271, 3222}], 
      Line3DBox[{3109, 3299, 4007, 3110, 3233, 3322, 3323, 4088, 3638, 3128, 
       3634, 3645, 4084, 3329, 3309, 3146, 3642, 4091, 3334, 3148, 3315, 3165,
        4052, 3168, 3187, 4060, 3229, 3189}], 
      Line3DBox[{3111, 3237, 4073, 3619, 3239, 3238, 3620, 4080, 3280, 3283, 
       3112, 3285, 3129, 3284, 3623, 4090, 3330, 3131, 3310, 3147, 4047, 3286,
        3149, 3167, 4053, 3227, 3169}], 
      Line3DBox[{3115, 3589, 4012, 3132, 3593, 4017, 3152, 4048, 3154, 3173, 
       4055, 3176, 3194, 3618, 4030, 3196, 3610, 4075, 3255, 3213, 4068, 3257,
        3258}], 
      Line3DBox[{3133, 3592, 4016, 3150, 3597, 4023, 3172, 4054, 3174, 3193, 
       4061, 3195, 3250, 3210, 4067, 3253, 3254, 3231, 3212, 3626, 3627}], 
      Line3DBox[{3151, 3596, 4022, 3170, 3602, 4029, 3192, 3609, 4071, 3621, 
       3209, 3251, 3252, 3211}], 
      Line3DBox[{3171, 3601, 4028, 3190, 3608, 3236, 4035, 3242, 3277, 3241, 
       3278, 3244, 3245, 3243, 3613}], 
      Line3DBox[{3191, 3607, 3235, 3622, 3274, 4072, 3276, 3275, 3249, 3248}],
       Line3DBox[{3208, 3230, 4066, 3206, 3188, 4059, 3185, 3166, 4086, 3644, 
       3164, 3314, 3333, 4085, 3646, 3641, 3145, 3640, 4089, 3328, 3327, 3302,
        3127, 4011, 3301, 3321, 3300, 3125, 3637, 3108, 4082, 3320, 3297, 
       3106, 3293, 3588}], 
      Line3DBox[{3217, 4076, 3263, 3262, 3215, 4036, 3259, 3611, 3198, 3180, 
       4056, 3178, 3158, 4050, 3156, 4018, 3594, 3137, 3226, 4044, 3135, 3118,
        4040, 3116, 4009, 3584, 3096, 4003, 3289, 3316, 3335, 3336}], 
      Line3DBox[{3223, 3232, 3273, 3272, 4070, 3221, 3269, 3207, 4065, 3204, 
       3186, 4058, 3184, 4027, 3600, 3643, 3163, 4021, 3312, 3332, 3331, 3308,
        3144, 4015, 3307, 3326, 3306, 3143, 3639, 3126, 4083, 3325, 3298, 
       3123, 3295, 3107, 3319, 3294, 4039, 3105, 3291, 3587}], 
      Line3DBox[{3268, 4078, 3631, 3219, 3266, 4077, 3612, 3202, 4033, 3605, 
       3182, 3228, 4057, 3181, 4025, 3598, 3159, 3142, 3304, 4046, 3139, 3122,
        4081, 3636, 3120, 4010, 3586, 3102, 4005, 3615, 3100, 3585}], 
      Line3DBox[{3281, 3282, 3246, 3247, 4074, 3624, 3625, 3240, 3225, 3288, 
       3287, 3234, 3632, 4079, 3633, 3130, 3279, 3113, 3341, 3346}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1099, 1190, 3686, 1100, 1200, 3690, 1116, 1210, 3695, 1128, 
       1222, 3701, 1142, 1236, 3708, 1156, 1250, 1170, 3725, 1273, 1263, 
       1184}], Line3DBox[{1101, 3649, 1191, 1102, 1201, 3691, 1117, 1211, 
       3696, 1129, 1223, 3702, 1143, 1237, 3709, 1157, 1251, 3715, 1171, 133, 
       2457, 134}], 
      Line3DBox[{1105, 1193, 3687, 1106, 1203, 3692, 1119, 1213, 3697, 1131, 
       1225, 3703, 1145, 1239, 1159, 3679, 1253, 1173, 3730, 1293, 1294, 
       1295}], Line3DBox[{1107, 1194, 3688, 1108, 1204, 3693, 1120, 1214, 
       3698, 1132, 1226, 3704, 1146, 1240, 3710, 1160, 1254, 3716, 1174, 1296,
        3722, 1297, 1298}], 
      Line3DBox[{8, 2311, 18, 2328, 31, 2346, 46, 2364, 61, 2384, 76, 2403, 
       91, 2419, 1044}], 
      Line3DBox[{1109, 1195, 3689, 1110, 1205, 3694, 1121, 1215, 1133, 3666, 
       1227, 1147, 3673, 1241, 1161, 3680, 1255, 1175, 1299, 3684, 1264, 
       1185}], Line3DBox[{1182, 1262, 1318, 3726, 1317, 1278, 1271, 1168, 
       1248, 3676, 1154, 1234, 3670, 1140, 1220, 3663, 1126, 1208, 3657, 1114,
        1198, 3652, 1096, 1188, 3647, 1327, 1328}], 
      Line3DBox[{1183, 160, 1279, 3683, 1272, 1169, 1249, 3677, 1155, 1235, 
       3671, 1141, 1221, 3664, 1127, 1209, 3658, 1115, 1199, 3653, 1098, 1189,
        3648, 1097}], 
      Line3DBox[{1187, 1266, 3685, 1301, 1177, 1257, 3681, 1163, 1243, 3674, 
       1149, 1229, 3668, 1135, 1217, 3661, 1123, 1207, 3656, 1113, 1197, 1275,
        1267, 3727, 1280, 1274}], 
      Line3DBox[{1292, 1291, 3721, 1290, 1172, 1252, 3678, 1158, 1238, 3672, 
       1144, 1224, 3665, 1130, 1212, 3659, 1118, 1202, 3654, 1104, 1192, 3650,
        1103}], 
      Line3DBox[{1304, 1303, 1302, 3732, 1178, 1258, 3682, 1164, 1244, 3675, 
       1150, 1230, 3669, 1136, 1218, 3662, 1124, 1320, 1319, 1321, 3735, 1269,
        1276, 1268, 2280}], 
      Line3DBox[{1310, 1309, 3723, 1308, 1180, 3719, 1260, 1166, 3713, 1246, 
       1152, 3706, 1232, 1138, 1324, 3700, 1323, 1325, 1270, 1314, 3734, 1316,
        1315, 2282}], 
      Line3DBox[{1313, 1312, 3724, 1311, 1181, 3720, 1261, 1167, 3714, 1247, 
       1153, 3707, 1233, 1139, 1285, 1326, 1284, 3729, 1286, 1288, 1289, 1277,
        2283}], 
      Line3DBox[{1332, 1423, 3775, 1333, 1433, 3779, 1349, 1443, 3784, 1361, 
       1455, 3790, 1375, 1469, 3797, 1389, 1483, 1403, 3814, 1506, 1496, 
       1417}], Line3DBox[{1334, 3738, 1424, 1335, 1434, 3780, 1350, 1444, 
       3785, 1362, 1456, 3791, 1376, 1470, 3798, 1390, 1484, 3804, 1404, 313, 
       2656, 314}], 
      Line3DBox[{1338, 1426, 3776, 1339, 1436, 3781, 1352, 1446, 3786, 1364, 
       1458, 3792, 1378, 1472, 1392, 3768, 1486, 1406, 3819, 1526, 1527, 
       1528}], Line3DBox[{1340, 1427, 3777, 1341, 1437, 3782, 1353, 1447, 
       3787, 1365, 1459, 3793, 1379, 1473, 3799, 1393, 1487, 3805, 1407, 1529,
        3811, 1530, 1531}], 
      Line3DBox[{188, 2510, 198, 2527, 211, 2545, 226, 2563, 241, 2583, 256, 
       2602, 271, 2618, 1055}], 
      Line3DBox[{1342, 1428, 3778, 1343, 1438, 3783, 1354, 1448, 1366, 3755, 
       1460, 1380, 3762, 1474, 1394, 3769, 1488, 1408, 1532, 3773, 1497, 
       1418}], Line3DBox[{1415, 1495, 1551, 3815, 1550, 1511, 1504, 1401, 
       1481, 3765, 1387, 1467, 3759, 1373, 1453, 3752, 1359, 1441, 3746, 1347,
        1431, 3741, 1329, 1421, 3736, 1560, 1561}], 
      Line3DBox[{1416, 340, 1512, 3772, 1505, 1402, 1482, 3766, 1388, 1468, 
       3760, 1374, 1454, 3753, 1360, 1442, 3747, 1348, 1432, 3742, 1331, 1422,
        3737, 1330}], 
      Line3DBox[{1420, 1499, 3774, 1534, 1410, 1490, 3770, 1396, 1476, 3763, 
       1382, 1462, 3757, 1368, 1450, 3750, 1356, 1440, 3745, 1346, 1430, 1508,
        1500, 3816, 1513, 1507}], 
      Line3DBox[{1525, 1524, 3810, 1523, 1405, 1485, 3767, 1391, 1471, 3761, 
       1377, 1457, 3754, 1363, 1445, 3748, 1351, 1435, 3743, 1337, 1425, 3739,
        1336}], 
      Line3DBox[{1537, 1536, 1535, 3821, 1411, 1491, 3771, 1397, 1477, 3764, 
       1383, 1463, 3758, 1369, 1451, 3751, 1357, 1553, 1552, 1554, 3824, 1502,
        1509, 1501, 2284}], 
      Line3DBox[{1543, 1542, 3812, 1541, 1413, 3808, 1493, 1399, 3802, 1479, 
       1385, 3795, 1465, 1371, 1557, 3789, 1556, 1558, 1503, 1547, 3823, 1549,
        1548, 2286}], 
      Line3DBox[{1546, 1545, 3813, 1544, 1414, 3809, 1494, 1400, 3803, 1480, 
       1386, 3796, 1466, 1372, 1518, 1559, 1517, 3818, 1519, 1521, 1522, 1510,
        2287}], 
      Line3DBox[{1565, 1656, 3864, 1566, 1666, 3868, 1582, 1676, 3873, 1594, 
       1688, 3879, 1608, 1702, 3886, 1622, 1716, 1636, 3903, 1739, 1729, 
       1650}], Line3DBox[{1567, 3827, 1657, 1568, 1667, 3869, 1583, 1677, 
       3874, 1595, 1689, 3880, 1609, 1703, 3887, 1623, 1717, 3893, 1637, 492, 
       2855, 493}], 
      Line3DBox[{1571, 1659, 3865, 1572, 1669, 3870, 1585, 1679, 3875, 1597, 
       1691, 3881, 1611, 1705, 1625, 3857, 1719, 1639, 3908, 1759, 1760, 
       1761}], Line3DBox[{1573, 1660, 3866, 1574, 1670, 3871, 1586, 1680, 
       3876, 1598, 1692, 3882, 1612, 1706, 3888, 1626, 1720, 3894, 1640, 1762,
        3900, 1763, 1764}], 
      Line3DBox[{368, 2709, 378, 2726, 391, 2744, 406, 2762, 421, 2782, 436, 
       2801, 451, 2817, 1066}], 
      Line3DBox[{1575, 1661, 3867, 1576, 1671, 3872, 1587, 1681, 1599, 3844, 
       1693, 1613, 3851, 1707, 1627, 3858, 1721, 1641, 1765, 3862, 1730, 
       1651}], Line3DBox[{1648, 1728, 1784, 3904, 1783, 1744, 1737, 1634, 
       1714, 3854, 1620, 1700, 3848, 1606, 1686, 3841, 1592, 1674, 3835, 1580,
        1664, 3830, 1562, 1654, 3825, 1793, 1794}], 
      Line3DBox[{1649, 519, 1745, 3861, 1738, 1635, 1715, 3855, 1621, 1701, 
       3849, 1607, 1687, 3842, 1593, 1675, 3836, 1581, 1665, 3831, 1564, 1655,
        3826, 1563}], 
      Line3DBox[{1653, 1732, 3863, 1767, 1643, 1723, 3859, 1629, 1709, 3852, 
       1615, 1695, 3846, 1601, 1683, 3839, 1589, 1673, 3834, 1579, 1663, 1741,
        1733, 3905, 1746, 1740}], 
      Line3DBox[{1758, 1757, 3899, 1756, 1638, 1718, 3856, 1624, 1704, 3850, 
       1610, 1690, 3843, 1596, 1678, 3837, 1584, 1668, 3832, 1570, 1658, 3828,
        1569}], 
      Line3DBox[{1770, 1769, 1768, 3910, 1644, 1724, 3860, 1630, 1710, 3853, 
       1616, 1696, 3847, 1602, 1684, 3840, 1590, 1786, 1785, 1787, 3913, 1735,
        1742, 1734, 2288}], 
      Line3DBox[{1776, 1775, 3901, 1774, 1646, 3897, 1726, 1632, 3891, 1712, 
       1618, 3884, 1698, 1604, 1790, 3878, 1789, 1791, 1736, 1780, 3912, 1782,
        1781, 2290}], 
      Line3DBox[{1779, 1778, 3902, 1777, 1647, 3898, 1727, 1633, 3892, 1713, 
       1619, 3885, 1699, 1605, 1751, 1792, 1750, 3907, 1752, 1754, 1755, 1743,
        2291}], 
      Line3DBox[{1798, 1889, 3953, 1799, 1899, 3957, 1815, 1909, 3962, 1827, 
       1921, 3968, 1841, 1935, 3975, 1855, 1949, 1869, 3992, 1972, 1962, 
       1883}], Line3DBox[{1800, 3916, 1890, 1801, 1900, 3958, 1816, 1910, 
       3963, 1828, 1922, 3969, 1842, 1936, 3976, 1856, 1950, 3982, 1870, 671, 
       3054, 672}], 
      Line3DBox[{1804, 1892, 3954, 1805, 1902, 3959, 1818, 1912, 3964, 1830, 
       1924, 3970, 1844, 1938, 1858, 3946, 1952, 1872, 3997, 1992, 1993, 
       1994}], Line3DBox[{1806, 1893, 3955, 1807, 1903, 3960, 1819, 1913, 
       3965, 1831, 1925, 3971, 1845, 1939, 3977, 1859, 1953, 3983, 1873, 1995,
        3989, 1996, 1997}], 
      Line3DBox[{547, 2908, 557, 2925, 570, 2943, 585, 2961, 600, 2981, 615, 
       3000, 630, 3016, 1077}], 
      Line3DBox[{1808, 1894, 3956, 1809, 1904, 3961, 1820, 1914, 1832, 3933, 
       1926, 1846, 3940, 1940, 1860, 3947, 1954, 1874, 1998, 3951, 1963, 
       1884}], Line3DBox[{1881, 1961, 2017, 3993, 2016, 1977, 1970, 1867, 
       1947, 3943, 1853, 1933, 3937, 1839, 1919, 3930, 1825, 1907, 3924, 1813,
        1897, 3919, 1795, 1887, 3914, 2026, 2027}], 
      Line3DBox[{1882, 698, 1978, 3950, 1971, 1868, 1948, 3944, 1854, 1934, 
       3938, 1840, 1920, 3931, 1826, 1908, 3925, 1814, 1898, 3920, 1797, 1888,
        3915, 1796}], 
      Line3DBox[{1886, 1965, 3952, 2000, 1876, 1956, 3948, 1862, 1942, 3941, 
       1848, 1928, 3935, 1834, 1916, 3928, 1822, 1906, 3923, 1812, 1896, 1974,
        1966, 3994, 1979, 1973}], 
      Line3DBox[{1991, 1990, 3988, 1989, 1871, 1951, 3945, 1857, 1937, 3939, 
       1843, 1923, 3932, 1829, 1911, 3926, 1817, 1901, 3921, 1803, 1891, 3917,
        1802}], 
      Line3DBox[{2003, 2002, 2001, 3999, 1877, 1957, 3949, 1863, 1943, 3942, 
       1849, 1929, 3936, 1835, 1917, 3929, 1823, 2019, 2018, 2020, 4002, 1968,
        1975, 1967, 2292}], 
      Line3DBox[{2009, 2008, 3990, 2007, 1879, 3986, 1959, 1865, 3980, 1945, 
       1851, 3973, 1931, 1837, 2023, 3967, 2022, 2024, 1969, 2013, 4001, 2015,
        2014, 2294}], 
      Line3DBox[{2012, 2011, 3991, 2010, 1880, 3987, 1960, 1866, 3981, 1946, 
       1852, 3974, 1932, 1838, 1984, 2025, 1983, 3996, 1985, 1987, 1988, 1976,
        2295}], 
      Line3DBox[{2031, 2115, 4038, 2032, 2123, 4040, 2046, 2131, 4043, 2055, 
       2140, 4048, 2067, 2152, 4054, 2081, 2166, 2095, 4071, 2189, 2179, 
       2109}], Line3DBox[{2033, 4005, 2116, 2034, 2124, 4041, 2047, 2132, 
       4044, 2056, 2141, 4049, 2068, 2153, 4055, 2082, 2167, 4061, 2096, 851, 
       3252, 852}], 
      Line3DBox[{2037, 2244, 2245, 4087, 2273, 2246, 2247, 4081, 2049, 2134, 
       4045, 2058, 2143, 4050, 2070, 2155, 2084, 4031, 2169, 2098, 4075, 2209,
        2210, 2211}], 
      Line3DBox[{2038, 2248, 4039, 2249, 2274, 2250, 4042, 2251, 2275, 2257, 
       4046, 2258, 2059, 2144, 4051, 2071, 2156, 4056, 2085, 2170, 4062, 2099,
        2212, 4068, 2213, 2214}], 
      Line3DBox[{726, 3106, 736, 3123, 749, 3141, 764, 3159, 779, 3179, 794, 
       3198, 809, 3214, 1088}], 
      Line3DBox[{2039, 2252, 2118, 4082, 2040, 2253, 2126, 4083, 2050, 2259, 
       2135, 2060, 4019, 2145, 2072, 4025, 2157, 2086, 4032, 2171, 2100, 2215,
        4036, 2180, 2110}], 
      Line3DBox[{2107, 2178, 2234, 4072, 2233, 2194, 2187, 2093, 2164, 4028, 
       2079, 2150, 4022, 2065, 2138, 4016, 2053, 2129, 4012, 2044, 2121, 4008,
        2028, 2113, 4003, 2243, 2272}], 
      Line3DBox[{2108, 878, 2195, 4035, 2188, 2094, 2165, 4029, 2080, 2151, 
       4023, 2066, 2139, 4017, 2054, 2130, 4013, 2045, 2122, 4009, 2030, 2114,
        4004, 2029}], 
      Line3DBox[{2112, 2182, 4037, 2217, 2102, 2173, 4033, 2088, 2159, 4026, 
       2074, 2147, 4021, 2267, 2062, 2137, 2261, 4089, 2052, 2128, 2256, 4088,
        2043, 2120, 2191, 2183, 4073, 2196, 2190}], 
      Line3DBox[{2208, 2207, 4067, 2206, 2097, 2168, 4030, 2083, 2154, 4024, 
       2069, 2142, 4018, 2057, 2133, 4014, 2048, 2125, 4010, 2036, 2117, 4006,
        2035}], 
      Line3DBox[{2220, 2219, 2218, 4077, 2103, 2174, 4034, 2089, 2160, 4027, 
       2075, 2269, 2268, 4085, 2278, 2263, 2262, 4084, 2276, 2236, 2235, 2237,
        4080, 2185, 2192, 2184, 2296}], 
      Line3DBox[{2226, 2225, 4069, 2224, 2105, 4065, 2176, 2091, 4059, 2162, 
       2077, 4052, 2148, 2063, 2240, 4047, 2239, 2241, 2186, 2230, 4079, 2232,
        2231, 2298}], 
      Line3DBox[{2229, 2228, 4070, 2227, 2106, 4066, 2177, 2092, 4060, 2163, 
       2078, 4053, 2149, 2064, 2201, 2242, 2200, 4074, 2202, 2204, 2205, 2193,
        2299}], 
      Line3DBox[{2281, 1287, 1283, 1281, 1322, 1282, 3728, 1125, 1219, 3699, 
       1137, 1231, 3705, 1151, 1245, 3712, 1165, 1259, 3718, 1179, 1305, 1306,
        3733, 1307}], 
      Line3DBox[{2285, 1520, 1516, 1514, 1555, 1515, 3817, 1358, 1452, 3788, 
       1370, 1464, 3794, 1384, 1478, 3801, 1398, 1492, 3807, 1412, 1538, 1539,
        3822, 1540}], 
      Line3DBox[{2289, 1753, 1749, 1747, 1788, 1748, 3906, 1591, 1685, 3877, 
       1603, 1697, 3883, 1617, 1711, 3890, 1631, 1725, 3896, 1645, 1771, 1772,
        3911, 1773}], 
      Line3DBox[{2293, 1986, 1982, 1980, 2021, 1981, 3995, 1824, 1918, 3966, 
       1836, 1930, 3972, 1850, 1944, 3979, 1864, 1958, 3985, 1878, 2004, 2005,
        4000, 2006}], 
      Line3DBox[{2297, 2203, 2199, 2197, 2238, 2198, 4090, 2277, 2264, 2265, 
       4091, 2279, 2270, 2271, 4086, 2076, 2161, 4058, 2090, 2175, 4064, 2104,
        2221, 2222, 4078, 2223}], 
      Line3DBox[{1111, 3651, 1196, 1112, 3655, 1206, 1122, 3660, 1216, 1134, 
       3667, 1228, 1148, 1242, 3711, 1162, 1256, 3717, 1176, 1300, 1265, 3731,
        1186}], 
      Line3DBox[{1344, 3740, 1429, 1345, 3744, 1439, 1355, 3749, 1449, 1367, 
       3756, 1461, 1381, 1475, 3800, 1395, 1489, 3806, 1409, 1533, 1498, 3820,
        1419}], 
      Line3DBox[{1577, 3829, 1662, 1578, 3833, 1672, 1588, 3838, 1682, 1600, 
       3845, 1694, 1614, 1708, 3889, 1628, 1722, 3895, 1642, 1766, 1731, 3909,
        1652}], 
      Line3DBox[{1810, 3918, 1895, 1811, 3922, 1905, 1821, 3927, 1915, 1833, 
       3934, 1927, 1847, 1941, 3978, 1861, 1955, 3984, 1875, 1999, 1964, 3998,
        1885}], 
      Line3DBox[{2041, 2254, 4007, 2119, 2042, 2255, 4011, 2127, 2051, 2260, 
       4015, 2136, 2061, 2266, 4020, 2146, 2073, 2158, 4057, 2087, 2172, 4063,
        2101, 2216, 2181, 4076, 
       2111}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Beta]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{432.96901472852784`, 207.42188124535915`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->NCache[{{
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}, {0.5626151519775469, 
     1.2733790885979532`}, {-0.00014572259094430408`, 
     1.0449234737137871`}}, {{0.2972513613212069, 0.7853981633974483}, {
    0.5626151519775469, 1.2733790885979532`}, {-0.00014572259094430408`, 
    1.0449234737137871`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.686050469797334, -1.9312101905586723`, 0.7110274773760816},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.772799528753276*^9, 3.772799792585082*^9, 3.772800029577649*^9, 
   3.7728000890856743`*^9, 3.7728003376108*^9, 3.7728004832413683`*^9, 
   3.7728076627670517`*^9, {3.772809910951487*^9, 3.7728099555639668`*^9}, 
   3.772812981378976*^9, 3.772876026755003*^9, 3.772895432564793*^9, 
   3.772901329192667*^9, 3.7729051556011333`*^9, 3.7729770253745728`*^9},
 CellLabel->
  "Out[1933]=",ExpressionUUID->"56152e81-707b-4ccf-9e99-7396da7f1e64"]
}, Open  ]],

Cell["So all stresses are positive. ", "Text",
 CellChangeTimes->{{3.582300769307921*^9, 3.582300804143806*^9}, {
   3.5827376746155663`*^9, 3.582737684288596*^9}, {3.738970623128131*^9, 
   3.738970641885666*^9}, {3.771616917368434*^9, 3.771616948960253*^9}, {
   3.771624877089273*^9, 3.7716249003541393`*^9}, {3.771624995456356*^9, 
   3.7716250199650297`*^9}, {3.7716259419242783`*^9, 
   3.7716259627916727`*^9}, {3.771626101039913*^9, 3.771626150376663*^9}, 
   3.772735799687025*^9},ExpressionUUID->"d6601e40-cf20-469d-aa6a-\
92330eeb74b5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moduli Space Of Locally Maximally Dense Packings", "Section",
 CellChangeTimes->{{3.581268199842701*^9, 3.5812682055518713`*^9}, {
  3.581268252471168*^9, 
  3.581268267583231*^9}},ExpressionUUID->"1367c9d9-3697-4765-9fd2-\
49fbdfafea09"],

Cell["\<\
Determine the Torus Angle and Ratio for the packings that are locally \
maximally dense. \
\>", "Text",
 CellChangeTimes->{{3.5812682787135897`*^9, 3.581268350581593*^9}, {
   3.581333395348236*^9, 3.581333608702343*^9}, {3.5813336764078617`*^9, 
   3.581333687180387*^9}, {3.581333851570097*^9, 3.581333902825006*^9}, {
   3.5814180211148233`*^9, 3.581418038876515*^9}, 
   3.581943351425103*^9},ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-\
5dfd369c5feb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusAngleFromVectors", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"VectorAngle", "[", 
     RowBox[{
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", "Reals"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"ArcSin", "[", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "]"}], "<", "\[Alpha]", "<", 
       RowBox[{"Pi", "/", "4"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], 
       "<", "\[Beta]", "<", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"2", " ", 
              RowBox[{"ArcTan", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
        "\[Alpha]"}]}], ",", "  ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
               "]"}]}]], " ", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], "2"]}]}], 
          ")"}]}]}], ">", "1"}], ",", 
      RowBox[{
       RowBox[{"Tan", "[", "\[Alpha]", "]"}], "<", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]], ">", "0"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.58133303742656*^9, 3.581333043881184*^9}, {
   3.5813331557765102`*^9, 3.58133317227901*^9}, {3.581333205989634*^9, 
   3.581333234053957*^9}, {3.581333325533258*^9, 3.5813333760116377`*^9}, {
   3.581606424512455*^9, 3.5816064282642384`*^9}, {3.582114890721849*^9, 
   3.5821148908686647`*^9}, {3.582214278216044*^9, 3.582214279067687*^9}, {
   3.5837630857623653`*^9, 3.583763115245988*^9}, {3.771616195483326*^9, 
   3.7716162056791077`*^9}, {3.771625759558325*^9, 3.7716257619713907`*^9}, {
   3.7726588032653847`*^9, 3.772658865687325*^9}, {3.7726589688015833`*^9, 
   3.7726590188737173`*^9}, 3.772659493489024*^9, {3.7728078282974663`*^9, 
   3.772807847079307*^9}},
 CellLabel->
  "In[1934]:=",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],

Cell[BoxData[
 RowBox[{"ArcCos", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{"10", "-", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"4", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Beta]"}]}], "]"}]}]], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{"10", "-", 
       RowBox[{"8", " ", 
        SqrtBox["2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "\[Alpha]"}], "+", 
         RowBox[{"2", " ", "\[Beta]"}]}], "]"}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"10", "-", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
             
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"4", " ", "\[Alpha]"}], "+", 
               RowBox[{"2", " ", "\[Beta]"}]}], "]"}]}]]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}], 
      ")"}]}], ")"}]}], "]"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOJ132Z3b97wynHD82/3Oja+ctz89orilk2vHM/57d4Q
s/mV44PJYYE1QFpfVS4MRCvNak4H0UvcVjReOfDKsSjB5SSI3nXv9NafQJrl
s7yw6sFXjh3CEzvLD71y9H9RdLUeSH/7dzCjDUjbCfh9lz4MtM/sAJcMkD63
TM/59JFXjmHVq/pBdEFlp+BZIP391KPY8KOvHD3uOTDOL3vtyP/QbI5zxWvH
q77/p+yVfOO47+fnqpNA+q/B1sSzQDp4kV4/iJbU2adyDkgHSWulCUu9cXQQ
W8s/FUjrfdLeeEz6jeO7TaXvQfS0iDvz7gFpsW8WDvwybxw3GFwKB9Epb1Ru
CgLpbzyvFhoA6biia9JWQHpC7pU/NkB63ZWdt+2A9NMZ/z4lAmkA7a+spA==

  "],
 CellLabel->
  "Out[1934]=",ExpressionUUID->"8c267651-b817-4c2c-b0a6-eeb4f7dc68c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusRatio", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "/", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", "Reals"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"ArcSin", "[", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "]"}], "<", "\[Alpha]", "<", 
       RowBox[{"Pi", "/", "4"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], 
       "<", "\[Beta]", "<", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"2", " ", 
              RowBox[{"ArcTan", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
        "\[Alpha]"}]}], ",", "  ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
               "]"}]}]], " ", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], "2"]}]}], 
          ")"}]}]}], ">", "1"}], ",", 
      RowBox[{
       RowBox[{"Tan", "[", "\[Alpha]", "]"}], "<", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]], ">", "0"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581333928283676*^9, 3.5813339332161627`*^9}, {
   3.581334020790724*^9, 3.581334024038533*^9}, {3.5814137912868853`*^9, 
   3.581413793610195*^9}, {3.581413914891388*^9, 3.581413969106378*^9}, {
   3.581414006658498*^9, 3.5814140098857813`*^9}, {3.581417178533601*^9, 
   3.581417182493422*^9}, {3.581418120652129*^9, 3.58141812244401*^9}, {
   3.5821149063355827`*^9, 3.5821149065242977`*^9}, {3.582214283944845*^9, 
   3.582214285342742*^9}, {3.583763127000839*^9, 3.5837631367212667`*^9}, 
   3.590836445225319*^9, 3.590836673722036*^9, 3.771616430596385*^9, {
   3.771625658093115*^9, 3.7716256605829687`*^9}, 3.772659624794189*^9, 
   3.7728078925314713`*^9},
 CellLabel->
  "In[1935]:=",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]], 
  RowBox[{
   RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{"10", "-", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"4", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}]}], "]"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"4", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Beta]"}]}], "]"}]}]]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ")"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVxVkow3EcAPBtliOyZuWYvSy8iVmOxRy/EKkRsglNs4ymeHAXiRxzRMko
EfHAIsyVMGaY/TEPrBytPXn6maKhmMn39/Dpw69qKKqm02g0EaBkqmz6OkbP
i5155P7ZtgLy7HyKnQHziq0uctVhY6EXzJ1wt8vhTgmjpBIWq8QWcrD12G8A
pr2NJjE3MKJcte0+sEBZmCCDlaHKYbJZfsLWwIF6voGc6zbXjcDefYK6FZgT
MBezBcfnexwaPUZPHx7+9iZG+zk++ootjCa1RaUdsNr/qIb8cbHbbTNiZNEt
U2TJ0+fON7xWehr+AzdFyETk8bhYTtQJRpoy+2CrCaPI96D7Lnj60abuh42f
ZVlXZxj5xlBj5BnfVbYVvvxlymXnGF0vSelzLS9oam9kJrPtBZluQ7SGMCe6
NvVMUrBj1aKwwtzetDHyOGsh5AZmPghVHK4TSXoPWFr4r9n2ZQ53ovLX+nkH
LGTfZbB4TvSbG1hOjh5qfGTDkbrUBQGc/tfMS4Y1DKlHDDu4Unsa3JFocing
f5Yq54o=
  "],
 CellLabel->
  "Out[1935]=",ExpressionUUID->"a211d104-42ba-46d2-a8a8-49db594732c0"]
}, Open  ]],

Cell["\<\
Now plot the region of the moduli space that is covered by \
(r,theta)=(torusRatio,torusAngle). The right boundary is in the region, the \
others are not.\
\>", "Text",
 CellChangeTimes->{{3.5814140902111692`*^9, 3.581414154771768*^9}, {
   3.581417869513275*^9, 3.5814179087877693`*^9}, 3.5819442751664667`*^9, 
   3.581952458180634*^9, {3.58195324790655*^9, 3.581953260663254*^9}, 
   3.582222917826333*^9, {3.582740615417358*^9, 
   3.582740626390436*^9}},ExpressionUUID->"7fea073f-4678-488f-94be-\
79aeb56d8b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".5", ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"(", 
          RowBox[{"torusRatio", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"(", 
          RowBox[{"torusRatio", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"ArcSin", "[", 
         RowBox[{"1", "-", 
          FractionBox["1", 
           SqrtBox["2"]]}], "]"}], ",", 
        RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox["2"]}], 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], 
        ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Pi", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"2", " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox["2"]}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
         "\[Alpha]"}]}], "}"}], ",", 
      RowBox[{"RegionFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"10", "-", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#4"}], "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
                " ", 
                RowBox[{"Sin", "[", "#3", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "#3", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{"#3", "+", "#4"}], "]"}], "2"]}]}], ")"}]}]}], ">", 
           "1"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Tan", "[", "#3", "]"}], "<", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                SqrtBox["2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{"10", "-", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#4"}], "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
                " ", 
                RowBox[{"Tan", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", 
                RowBox[{"Sin", "[", "#3", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ")"}]}], " ", 
          "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}], " ", 
               RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
              RowBox[{
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{"10", "-", 
                RowBox[{"8", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#4"}], "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
              "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ">", "0"}], "&&",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]], 
            RowBox[{"Sec", "[", "#3", "]"}], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"4", " ", "#3"}], "+", 
                 RowBox[{"2", " ", "#4"}]}], "]"}], "+", 
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "#3", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#4"}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "#3"}], "+", 
                    RowBox[{"2", " ", "#4"}]}], "]"}]}]]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Sin", "[", "#3", "]"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ">", "1"}]}], "&"}], ")"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", "torusRatio"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}], ",", 
        RowBox[{"Im", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", "torusRatio"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"ArcSin", "[", 
         RowBox[{"1", "-", 
          FractionBox["1", 
           SqrtBox["2"]]}], "]"}], ",", 
        RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox["2"]}], 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], 
        ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Pi", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"2", " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox["2"]}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
         "\[Alpha]"}]}], "}"}], ",", 
      RowBox[{"RegionFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"], " ", 
                SqrtBox[
                 RowBox[{"10", "-", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#4"}], "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
                " ", 
                RowBox[{"Sin", "[", "#3", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "#3", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", 
                  RowBox[{"#3", "+", "#4"}], "]"}], "2"]}]}], ")"}]}]}], ">", 
           "1"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Tan", "[", "#3", "]"}], "<", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                SqrtBox["2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}], " ", 
                RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
               RowBox[{
                SqrtBox[
                 RowBox[{"10", "-", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#4"}], "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
                " ", 
                RowBox[{"Tan", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               "+", 
               RowBox[{"2", " ", 
                SqrtBox["2"], " ", 
                RowBox[{"Sin", "[", "#3", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ")"}]}], " ", 
          "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}], " ", 
               RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
              RowBox[{
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{"10", "-", 
                RowBox[{"8", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#4"}], "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
              "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ">", "0"}], "&&",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]], 
            RowBox[{"Sec", "[", "#3", "]"}], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"4", " ", "#3"}], "+", 
                 RowBox[{"2", " ", "#4"}]}], "]"}], "+", 
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", "#3", "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#4"}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "#3"}], "+", 
                    RowBox[{"2", " ", "#4"}]}], "]"}]}]]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"Sin", "[", "#3", "]"}], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], "<", "1"}]}], "&"}], ")"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Least", " ", "dense", " ", "globally", " ", "maximally", " ", "dense", 
      " ", "point"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Point", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"(", 
             RowBox[{"torusRatio", "*", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
            "]"}], ",", 
           RowBox[{"Im", "[", 
            RowBox[{"(", 
             RowBox[{"torusRatio", "*", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
            "]"}]}], "}"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Rule]", "2.4907302"}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", "2.4907302"}]}], "}"}]}], "]"}]}], 
      "}"}], "\[IndentingNewLine]", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.581415831271719*^9, 3.581415978032723*^9}, {
   3.58141612812768*^9, 3.581416251087431*^9}, {3.5814163536961203`*^9, 
   3.581416442716133*^9}, {3.581416480954212*^9, 3.581416483177804*^9}, {
   3.5814165146738863`*^9, 3.581416565902112*^9}, {3.581416608288938*^9, 
   3.5814166596471777`*^9}, {3.5814168167885647`*^9, 3.581417153958934*^9}, {
   3.581417202245771*^9, 3.581417213509737*^9}, {3.581417400105816*^9, 
   3.581417408207815*^9}, {3.58141746709744*^9, 3.5814175008866453`*^9}, {
   3.581417557569965*^9, 3.581417612638392*^9}, {3.581417671918985*^9, 
   3.581417831941291*^9}, {3.581417963968446*^9, 3.581417981960126*^9}, {
   3.5814180770100727`*^9, 3.581418078736156*^9}, {3.581418154813571*^9, 
   3.581418198197053*^9}, {3.581418231380889*^9, 3.581418233404674*^9}, {
   3.5814228339713078`*^9, 3.581422878811762*^9}, {3.581422916120751*^9, 
   3.581422920863715*^9}, {3.581423093095364*^9, 3.5814231218921137`*^9}, {
   3.5814325481543407`*^9, 3.581432568807173*^9}, {3.58143260450275*^9, 
   3.581432634829975*^9}, {3.581606579957893*^9, 3.581606608420135*^9}, {
   3.581606987915503*^9, 3.581606998825101*^9}, {3.5816074940013037`*^9, 
   3.581607502096019*^9}, {3.5816089617270803`*^9, 3.581608961944695*^9}, {
   3.581610590770281*^9, 3.5816106180632963`*^9}, {3.581610681115829*^9, 
   3.581610701075707*^9}, {3.581610737934224*^9, 3.581610756661036*^9}, {
   3.581610842392229*^9, 3.581610866051654*^9}, {3.581610899571859*^9, 
   3.581610901443101*^9}, {3.581628476144258*^9, 3.581628557405979*^9}, {
   3.5816288727085114`*^9, 3.5816289082821913`*^9}, {3.581629178822418*^9, 
   3.581629182837798*^9}, {3.581629414916697*^9, 3.581629440685017*^9}, {
   3.581629482704157*^9, 3.581629535764595*^9}, {3.581673461804196*^9, 
   3.581673549905184*^9}, {3.581673641406663*^9, 3.5816736439745283`*^9}, {
   3.5816736910543633`*^9, 3.581673692799611*^9}, {3.581673723190359*^9, 
   3.5816738188450117`*^9}, {3.581687950683776*^9, 3.5816879567545223`*^9}, {
   3.581688016649939*^9, 3.5816880272652283`*^9}, {3.5819443936836443`*^9, 
   3.5819445342161207`*^9}, {3.581950949672516*^9, 3.581950957971415*^9}, {
   3.581950988486538*^9, 3.581950995522575*^9}, {3.5819531797520447`*^9, 
   3.5819532355691442`*^9}, {3.58221429143818*^9, 3.582214323641893*^9}, {
   3.5822143838841248`*^9, 3.582214397599576*^9}, {3.5822144308149233`*^9, 
   3.582214468851671*^9}, {3.582214521826295*^9, 3.582214548417429*^9}, {
   3.582214625108366*^9, 3.582214653749571*^9}, {3.582214715107759*^9, 
   3.582214723919776*^9}, {3.582214962155978*^9, 3.582214985349832*^9}, {
   3.5822151321151953`*^9, 3.582215160198626*^9}, {3.582215328952002*^9, 
   3.5822153367977*^9}, {3.5822154632111673`*^9, 3.582215466952477*^9}, {
   3.582215958667633*^9, 3.582215958826397*^9}, {3.582216169371503*^9, 
   3.582216225367741*^9}, {3.582216696200515*^9, 3.582216709707431*^9}, {
   3.5822866723292437`*^9, 3.5822866925090446`*^9}, {3.582286752029377*^9, 
   3.582286752908947*^9}, {3.582287158898551*^9, 3.5822871632335443`*^9}, {
   3.582287337500922*^9, 3.582287358257596*^9}, {3.582301692611936*^9, 
   3.582301712401127*^9}, {3.582301784817443*^9, 3.582301789917963*^9}, {
   3.582302650469707*^9, 3.582302655265546*^9}, {3.5823027058646097`*^9, 
   3.5823027249979687`*^9}, {3.5823029530486193`*^9, 3.582303020216475*^9}, {
   3.582303064333783*^9, 3.58230307483996*^9}, {3.5823031290716467`*^9, 
   3.582303135836779*^9}, {3.583353031333394*^9, 3.583353124551704*^9}, 
   3.5837631490547533`*^9, {3.583763272239708*^9, 3.583763274307045*^9}, {
   3.5837634289930067`*^9, 3.583763431208726*^9}, {3.7716164575815573`*^9, 
   3.771616478135851*^9}, {3.7716166852611103`*^9, 3.771616698019866*^9}, {
   3.7716170003808947`*^9, 3.771617001546206*^9}, {3.771617152902998*^9, 
   3.771617154084714*^9}, {3.771625225156486*^9, 3.771625253346716*^9}, {
   3.7716256656214123`*^9, 3.771625668004211*^9}, {3.771626607610469*^9, 
   3.7716266619078503`*^9}, {3.772659747992565*^9, 3.772659838770319*^9}, {
   3.772807906525444*^9, 3.772807997252181*^9}, {3.772808055920177*^9, 
   3.772808121003755*^9}, {3.772808169362342*^9, 3.7728084134084663`*^9}, {
   3.772876833427865*^9, 3.772876963701324*^9}, {3.7728770090658693`*^9, 
   3.772877016982688*^9}, {3.772877125532753*^9, 3.77287713803596*^9}},
 CellLabel->
  "In[1936]:=",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}], LineBox[{{0, -1}, {0, 2}}], 
   LineBox[{{-1.1, 0}, {1.1, 0}}], 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{-0.5, Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
        2}}, {{-0.5, 0.8660254037844386}, {-0.5, 2}}]]}, 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{0.5, Rational[1, 2] 3^Rational[1, 2]}, {0.5, 2}}, {{0.5, 
       0.8660254037844386}, {0.5, 2}}]]}, GraphicsComplexBox[CompressedData["
1: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
SQ5l0ZESu5evNiFYtd5zQduyaTr+BxXdF5c=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], GraphicsGroupBox[
        TagBox[{
          PolygonBox[{{586, 68, 111}, {587, 3, 78}, {574, 122, 49}, {579, 148,
            123}, {594, 129, 151}, {567, 136, 76}, {581, 92, 137}, {585, 91, 
           142}, {583, 53, 125}, {591, 97, 146}, {588, 115, 144}, {589, 45, 
           95}, {572, 112, 69}}], PolygonBox[CompressedData["
1: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
N+JR4lLwi7ObM3y58bqL58MWbFphW1n7VNeRdbX9yz1+qvswF3Oie4r3kj39
IPJMYx+XeT76T9Ckfau8OxF371ry/OUcXhIZ6xLrd/f5wF5xXz/E9n0RGS93
K4mH1JGBnQdZjoy4mnh4inWCr+Dtl9b3qfGeWPqrSOwkdib2/SYS64h1wVXi
adrmeCw6iP0P9lh0dC+Jt5TwtNGHeZkf27Cxm/X1sP0rbTO2cj71LBmvE7ff
GHmOrfIe13UdGW30AceJ34njwfOVkePR09j2rHY/7Pss8v7PmcX5xVpZc6+S
5/kKz3G4/YW+q1TeHHk3WGUZerjv9fKe0Uaf1d4L1s752ajk/WEM/4Rtw0Zs
xWbOFe4T7DV7Tm6Bs4tYnrvDGtuG7hmen/vDDMu+jcxP7CBq4joyzp5jLUfG
uTnX9qKzt9c72fpWeT3cxTlruRsc7338znayn31K3gdom+ex6OC+cZzH/mif
bGh/hT/B37+358c2bPw+Uh96m7mOjLPvRPsXe3KK/W+TkvchzkHOP+rIuGsR
L/Qred9i79jDNR6PHr7/D5Ht9OO85fwCCLhXcX4SB5DP4Rux3r6eD1uwib59
vPZTbTey/rZ/pcefbn9kLuZE90zvZU/79jH2DXyEs4m7BGOxgbsUd7GfIu9j
A0qet9jNfW2g7f81Mt/GN+f7D3Q79zfOf+JU8in4Od+btn7eG+Khb9x+lv2P
OmO4m3F3rPHc2EN8M8gy7oHEA79E3i93LBk/UEdGG32Q13E+B50DPH6Q1/Ot
7T/P/kCdNd0deZfrVPI+yLnNeQ3Ic7/bSWWryDoyYg3ufMQd9X3/Q7aj+cG2
r75txRbO652sj7nutj+S/7vI35s6sQ13Qe62a5e83w4pGb8MMX+h+1CnD7EM
d1nGogO9+MdQr+di96HOGskdEN+xP5XziQvsr+Q7L7N/Nih5Xx1VMh5hfu7H
w21PE9uGLcSXw0rer7lnc/+tMY+81rrruI0+w62PezfxFf5HPvZK+1O9kvfv
ESXjK2ylD22z3EYfYjHu2sSJTd2H7z3CfbjHL7Luuq7Ptm01nhsbiOua+76P
zmHmR9p+csfEXMRa3OV/sexa+ydtLeyTfH/2jj0ktuPOP8r7eY11EPe1cj6A
Pq28Vuwjfh7jf5a80EORtgzz/hEvNyyZrw77Z5ifY3+k3tBj0THC8432fvIt
+CZ8d/5vcrjEDMQK5OqIR2udjwIzdo+8n+4tftNI3yO/eov9q2nJ/MLYkvFh
rX2HtRKjjnU7eQjyEU08fm37E/Um5f9zFegkViRnQe6d2JzcArmJziXzHcST
xLvjzM/1GOr0IZdBfN/MOmr8PWvM32YfGF8y3zHPczQ3j5z4kjoyYuP5Xg/5
kwleb3uvHfvJqeCbvEfcYX9qYb6e9586MnIf5FYmWN98zzGxZL5lgftQb1ky
1ia3gl3kV3axfbuYv9N9Oth21sL9oaX1/abX/zfvF/f81//MN/D/vnvJfMg0
1TtG1pFxF+U+0LpkPElc2SEy7id/Qx6H+H/dku8vnDnEI/Rt7Tb6NHL7/fav
iR6/m+3raFtZ+0L3RedTkbmnzp57SeT9srZkPup3rCOyhL/PY6jTh7sEuaRd
rWOS7Z9kfpH74Hu85yy2P7Ux39Tfm3ob7we5qF0j81HsUUfXkfWPzEUdFJmP
oo5s05I88o3dhozcFPE8etDxoOfA93g/etT+QZ27D7kjcl+7Rea/9mCvIkv4
R9yHOn0GROa61re+5vafaf7GtNEHX2jl/eXOMMp4sLP9A3/iPeYJ+9tA2qrM
C8/w/OTLDo60Z8+S+TbybuTHGNvW9cfddw/b+qT9i/eYp+0z5DbIPRG/H+A2
7oLkBsm17VUy3/aUZZMieeSd8YfI+bGjU6RdzEleb6Db6EMd2SGR+Trydjvy
f5d8/6q1f4GD4CF5u+eNjWDkoMgcHn3bu40+7Wxza/tbrfs8Z3/raVuxnfsy
djI/dnSyLXt6v5Z6vYw5NHJ9h1oHc2NDW3+flv6f2Av2hLWwJt5kxlb55sNb
De9U48SfFPleRY5wSJXvWuQOeRvsU+VbIG+EvIONEH9Y5HvYHoyr8h2Rt8lh
qvev8t2Id7StRIOrfAfj/Yu7KX1oO91z71Tl291Jtm1QlW9T2Mh7Va8qc5Hj
XB8t2idSNkD1i1WOqfIdjne1kVXmO8mhb49tVb6x8dZG335VvocdE2nr+Crf
uLAZW4ZW+X41zHsxwLrZk/8Arei9kA==
           "]], 
          PolygonBox[{{578, 577, 121, 147, 122}, {570, 585, 142, 110, 68}, {
           571, 569, 93, 143, 112}, {119, 590, 145, 118, 71}}], 
          PolygonBox[CompressedData["
1:eJwtkU1LQlEQhueKUZvEVeAizEzTa1m6qDR05UfWTnCt+AOUoqJFqCj2T6tF
+9Y+L2fgPjyc4Zxh3rm56Xw4S5hZCg7gHjbwCJeRWROf42PdwTGeQwdmUIYs
dT77tnBf7/R+DQ1IcD7Ch/gWL+ABPuEGCtTT+N/vr2AAF9TvcNHfq08bf8ET
VDm3cAnn8Qiu4QP6UKFex2d4H+ejMO8LdOFZd+DE51eOKxzjnrLhKs7hPfxr
oZ/6qv871GDiu/tTdniz8D72fqc4iccW8iiX8i0t7EO5lT/yPMqlfFv/Hynf
f8bnKft8rxb+h/au+X9gB2k3HzQ=
           "]]},
         Annotation[#, "Charting`Private`Tag$560094#1"]& ]]}, {}, {}, {}, {}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt0D0vQ2EYgOGXTmIwSQciQdHFKKVKPxRtfRdFiYRItL6TbjabxCTxFzp3
Npv8HzvXmxiu3M9zck7OOe/45WP9oS+EcM4PA1yw0x9CkRLP9mV914KukTBv
aEc3dYFFnuw5fdWMnmpVs5TNNT3TVZ3VLZ3nw7yiu8yZ1+P97HFlf+OFuj1P
hSX2GXX9IL6X6zi71orfzCGTtMnTIMVN/BeOmOKWIsdMc0eJE2a4j99Hk3Q8
L4f2rWM6EZ/TL03qiG7rpw7qsJa1p78MkbV3/8/8D26OIRU=
       "]]}}], 
   GraphicsComplexBox[CompressedData["
1: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
    "], {{
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.3], EdgeForm[
       None], GraphicsGroupBox[
        TagBox[{
          PolygonBox[{{509, 38, 119}, {522, 18, 84}, {521, 107, 157}, {526, 
           32, 111}, {520, 52, 132}, {512, 102, 145}, {511, 45, 129}, {519, 
           81, 152}, {63, 33, 114}, {515, 100, 149}, {504, 516, 124}, {497, 
           508, 121}, {510, 47, 80}}], PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[{{508, 509, 119, 68, 121}, {516, 517, 78, 44, 124}, {144,
            122, 498, 69, 123}, {96, 148, 97, 5, 502}}], 
          PolygonBox[{{199, 401, 221, 196, 264, 31}, {403, 198, 30, 314, 196, 
           221}, {198, 398, 220, 194, 262, 30}}], 
          PolygonBox[{{407, 199, 31, 315, 197, 405, 222}, {400, 62, 266, 29, 
           312, 194, 220}}], PolygonBox[CompressedData["
1:eJwtkDkPQUEURi8REbxnXwoKDaIQ29MIlVheqdNqdJRUiK0TP5EfIBqhdm7m
JXNy5t5Z8s2UFuvZyi8iEQhBF64whZxPxMFJnMI/GMANXMjT7+EALuIwbuMs
nuAzdGAJCYV+Cx9hDAdoQpy+jd+QYV7HLy+PRV3DOxiJWdM9Ot9DA2LUFrbx
HfdhDgVIeRk1q+tl04wfMWf0rN5xEpPZ8d6t77+Iyau5NN8XqrCFIaTZV8FR
HMRPMbX2dX0DZf1baoY84A+jMRmU
           "]]},
         Annotation[#, "Charting`Private`Tag$560118#1"]& ]]}, {}, {}, {}, {}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], LineBox[CompressedData["
1:eJwt0M8rg3EcB/DvGMNw2G2lmB+7SC7uNnJ04LKa+ZFprRSH4W8Qbm4USqn9
WUrtaBph5sfryQ6v5/15f3rq+zzfzO7h+kEshFDikWhOemTlt+zwwo7+LPt6
QojzYe6Xc/a/5k+uzBWCfUuvGlMM6a96UjbliDy3v6HALRfcUSTDIhtMUiPX
/cYpjsizyTQnLLPNDMcsscUEo857c25MvstheWZ/yT6D+pf9qXmBAb2tX5vX
SOjz8sduT/bqK9FvyrKcZZU4496py0b0HmP6g3z6v5aQ1u+7d/0HvYEnfQ==

       "]]}}], 
   {RGBColor[1, 0, 0], 
    PointBox[{0.11342355346352567`, -0.41131452481893177`}]}}]], "Output",
 CellChangeTimes->{{3.7716266149462214`*^9, 3.771626632038991*^9}, 
   3.77162666291777*^9, 3.771767601712225*^9, 3.772033150296051*^9, 
   3.772659655749153*^9, 3.77265984440558*^9, 3.772708100036003*^9, 
   3.772807687103422*^9, 3.772808177958749*^9, 3.77280841954965*^9, 
   3.772813004600687*^9, 3.772876050617223*^9, 3.772876925117416*^9, 
   3.772876971883995*^9, {3.772877131955686*^9, 3.772877140020602*^9}, 
   3.7728954611809673`*^9, 3.772901356092107*^9, 3.7729051883101482`*^9, 
   3.772977055430346*^9},
 CellLabel->
  "Out[1936]=",ExpressionUUID->"459ae68d-9c92-4856-9cc4-32d28c15635b"]
}, Open  ]],

Cell["\<\
Note that the red region has been inverted by looking at the torus ratio and \
determining when it is greater than or less than one.  For example, in the \
second paramteric plot, notice the last inequality in the RegionFunction \
corresponds to the torus ratio.  So when this torus ratio is less than one, \
we take 1/torusratio to flip the region over.  \
\>", "Text",
 CellChangeTimes->{{3.77323069229132*^9, 3.7732306951160793`*^9}, {
  3.773230835788409*^9, 3.773230898688797*^9}, {3.773231053123694*^9, 
  3.7732310998000383`*^9}},ExpressionUUID->"6d07bfdc-1123-435b-91be-\
d321880c0022"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Density Of Packings ", "Section",
 CellChangeTimes->{{3.5814349606441174`*^9, 3.581434966706005*^9}, {
  3.581443652345149*^9, 
  3.58144365457318*^9}},ExpressionUUID->"0778b274-df47-40d0-990e-\
9f18ab4dee0d"],

Cell["\<\
Here we analyze the density of the locally maximally dense packings and \
explore the density.\
\>", "Text",
 CellChangeTimes->{{3.5814349743941193`*^9, 
  3.5814350022015533`*^9}},ExpressionUUID->"e2b21120-6780-408f-b4b4-\
7bd65fa10119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusDensity", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "^", "2"}]}], "+", 
       RowBox[{"2", "*", "Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}], ")"}], "^",
          "2"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}], ")"}]}], " ", 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], ",", "Reals"}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{"ArcSin", "[", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "]"}], "<", "\[Alpha]", "<", 
       RowBox[{"Pi", "/", "4"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], 
       "<", "\[Beta]", "<", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"2", " ", 
              RowBox[{"ArcTan", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
        "\[Alpha]"}]}], ",", "  ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}], "+", 
           RowBox[{"4", " ", 
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
               "]"}]}]], " ", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], "2"]}]}], 
          ")"}]}]}], ">", "1"}], ",", 
      RowBox[{
       RowBox[{"Tan", "[", "\[Alpha]", "]"}], "<", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]]}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
             "]"}]}]], " ", 
          RowBox[{"Tan", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
        RowBox[{
         SqrtBox[
          RowBox[{"10", "-", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], ")"}]}], 
            "]"}]}]], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}]], ">", "0"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581435007166294*^9, 3.581435026699298*^9}, {
   3.5814350629183598`*^9, 3.581435137463068*^9}, {3.581441446598172*^9, 
   3.5814414948170977`*^9}, {3.5814421896974163`*^9, 3.5814422295017653`*^9}, 
   3.581442694940857*^9, {3.581604837617858*^9, 3.581604867599731*^9}, {
   3.581607908671111*^9, 3.581607909369944*^9}, {3.581944549930921*^9, 
   3.5819445543944483`*^9}, {3.582114922893406*^9, 3.582114923036167*^9}, {
   3.5822165846144447`*^9, 3.582216585540084*^9}, {3.582303334411914*^9, 
   3.582303334736128*^9}, {3.583763359343549*^9, 3.583763364560102*^9}, 
   3.771617083708983*^9, {3.771617193070365*^9, 3.771617222420538*^9}, {
   3.771626748724434*^9, 3.771626750958971*^9}, 3.772901075360999*^9},
 CellLabel->
  "In[1937]:=",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"7", "-", 
     RowBox[{"4", " ", 
      SqrtBox["2"]}]}], ")"}], " ", "\[Pi]", " ", 
   RowBox[{"Csc", "[", 
    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], " ", 
   RowBox[{"Sec", "[", "\[Alpha]", "]"}]}], 
  RowBox[{
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
   RowBox[{"4", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"2", " ", "\[Alpha]"}], "+", "\[Beta]"}], "]"}]}], "+", 
   RowBox[{"2", " ", 
    SqrtBox["2"], " ", 
    SqrtBox[
     RowBox[{"10", "-", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Beta]"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", "\[Beta]"}], ")"}]}], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"4", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Beta]"}]}], "]"}]}]]}]}]]], "Output",
 CellChangeTimes->{
  3.581435174638554*^9, 3.5814360377394533`*^9, 3.5814414525442343`*^9, {
   3.581442212853862*^9, 3.5814422309332247`*^9}, 3.5814426963111486`*^9, {
   3.581604816468317*^9, 3.581604842276881*^9}, 3.581604949571162*^9, 
   3.581607510569717*^9, 3.5816079104502077`*^9, 3.58160937151543*^9, 
   3.581687886583846*^9, {3.581944542797326*^9, 3.581944555361349*^9}, 
   3.5819510064190474`*^9, 3.5819532664168997`*^9, 3.582114219746011*^9, 
   3.5821149243109617`*^9, {3.582216584034459*^9, 3.582216587666834*^9}, 
   3.5822232014315166`*^9, 3.582286936524232*^9, 3.582302582175164*^9, 
   3.582303335778859*^9, 3.582740217258*^9, {3.583763341462748*^9, 
   3.5837633660660152`*^9}, 3.590759438761785*^9, 3.590835632743123*^9, 
   3.590836699525751*^9, 3.590924442373547*^9, 3.5916176659788513`*^9, 
   3.591634628349544*^9, 3.591648115760672*^9, 3.591954372553525*^9, 
   3.592837678747449*^9, 3.592838271356739*^9, 3.592841358448024*^9, 
   3.59312459321947*^9, 3.686070283738555*^9, 3.686931689066928*^9, 
   3.771591849711658*^9, 3.7716170854992456`*^9, 3.7716242092109537`*^9, 
   3.7716245711148777`*^9, 3.771626377492437*^9, 3.7716267524561453`*^9, 
   3.7717676033879337`*^9, 3.772033152050788*^9, 3.772877466679861*^9, 
   3.7729013621015577`*^9, 3.7729051947700777`*^9, 3.772977060762154*^9},
 CellLabel->
  "Out[1937]=",ExpressionUUID->"7724aa43-370b-4775-bdff-ecbc75974aa2"]
}, Open  ]],

Cell["Plot the density over the parameter space", "Text",
 CellChangeTimes->{{3.581609262745317*^9, 
  3.581609279281209*^9}},ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-\
e5f2bb2c8c0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{"torusDensity", ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Pi", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
      "\[Alpha]"}]}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "#4"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
             " ", 
             RowBox[{"Sin", "[", "#3", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "#3", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}], "2"]}]}], ")"}]}]}], ">", 
        "1"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Tan", "[", "#3", "]"}], "<", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SqrtBox["2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}], " ", 
             RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
             " ", 
             RowBox[{"Tan", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
            "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", 
             RowBox[{"Sin", "[", "#3", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ")"}]}], " ", "&&",
        " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"#3", "+", "#4"}], "]"}], " ", 
            RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
            " ", 
            RowBox[{"Tan", "[", 
             RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"10", "-", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "#4"}], "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
           "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", "#3", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ">", "0"}]}], 
      "&"}], ")"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581607973838263*^9, 3.581608022458598*^9}, {
   3.5816080842911158`*^9, 3.58160808861963*^9}, {3.58160813949725*^9, 
   3.581608146824136*^9}, {3.5816089073150682`*^9, 3.581608922003821*^9}, {
   3.581608970988791*^9, 3.5816089717227383`*^9}, {3.581944701349125*^9, 
   3.58194471749083*^9}, {3.581944751737221*^9, 3.581944787874208*^9}, {
   3.581951021398402*^9, 3.581951033668231*^9}, {3.58221660360467*^9, 
   3.582216617749133*^9}, {3.5822869554826403`*^9, 3.582286956658009*^9}, {
   3.5827407405041*^9, 3.582740763790533*^9}, {3.590837063823267*^9, 
   3.590837065433181*^9}, 3.771626404677743*^9, {3.772901159650709*^9, 
   3.772901175139613*^9}},
 CellLabel->
  "In[1938]:=",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],

Cell[BoxData[
 TemplateBox[{
  "Plot3D","invregion",
   "\"\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
SqrtBox[RowBox[{\\\"10\\\", \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"+\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{\\\"Cos\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]]}], \\\">\\\", \
\\\"1\\\"}], \\\"&&\\\", RowBox[{RowBox[{\\\"Tan\\\", \\\"[\\\", \\\"#3\\\", \
\\\"]\\\"}], \\\"<\\\", FractionBox[RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"2\\\"}], \\\" \\\", SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\"+\\\", RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Tan\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]}], RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]]}], \\\"&&\\\", \
RowBox[{FractionBox[RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"2\\\"}], \\\" \
\\\", SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\"+\\\", RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Tan\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]}], RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]], \\\">\\\", \\\"0\\\"}]}], \\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \
RowBox[{RowBox[{\\\"Identity\\\", \\\"[\\\", \\\"#1\\\", \\\"]\\\"}], \\\",\\\
\", RowBox[{\\\"Identity\\\", \\\"[\\\", \\\"#2\\\", \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Identity\\\", \\\"[\\\", \\\"#3\\\", \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"&\\\"}]\\) must be a Boolean function.\"",2,1938,230,25397637502896749269,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7729013625610847`*^9, 3.772905194883144*^9, 
  3.772977060879096*^9},
 CellLabel->
  "During evaluation of \
In[1938]:=",ExpressionUUID->"64473d42-b0f3-4c54-90aa-246dc5ec48e2"],

Cell[BoxData[
 TemplateBox[{
  "Plot3D","invregion",
   "\"\\!\\(\\*RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
SqrtBox[RowBox[{\\\"10\\\", \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"+\\\", RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{\\\"Cos\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \
\\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]]}], \\\">\\\", \
\\\"1\\\"}], \\\"&&\\\", RowBox[{RowBox[{\\\"Tan\\\", \\\"[\\\", \\\"#3\\\", \
\\\"]\\\"}], \\\"<\\\", FractionBox[RowBox[{RowBox[{RowBox[{\\\"-\\\", \
\\\"2\\\"}], \\\" \\\", SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\"+\\\", RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Tan\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]}], RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]]}], \\\"&&\\\", \
RowBox[{FractionBox[RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"2\\\"}], \\\" \
\\\", SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Cos\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\"+\\\", RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}]], \\\" \\\", RowBox[{\\\"Tan\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]}], RowBox[{SqrtBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]], \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"4\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}]], \\\">\\\", \\\"0\\\"}]}], \\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \
RowBox[{RowBox[{\\\"Identity\\\", \\\"[\\\", \\\"#1\\\", \\\"]\\\"}], \\\",\\\
\", RowBox[{\\\"Identity\\\", \\\"[\\\", \\\"#2\\\", \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"Identity\\\", \\\"[\\\", \\\"#3\\\", \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"&\\\"}]\\) must be a Boolean function.\"",2,1938,231,25397637502896749269,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7729013625610847`*^9, 3.772905194883144*^9, 
  3.772977060957035*^9},
 CellLabel->
  "During evaluation of \
In[1938]:=",ExpressionUUID->"89078373-7340-4a02-bf25-4c3da7e749e7"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
lModa8wXoYFL+GalwRjEU+bO9gtf51JBX2GMHhKOeC44kyjTLEOBzdLRh2bE
IZ5yVqx80iIyrCLpXb6bh3jW/rN6ezJyCPh5/HOn29gNT+kh6OLxz5r2xw7e
9zhA5vFPK8vtGkELOXCBxz9r3w79uvmQDZd5/HOXZmJ5tBKbWx/9X//88WDL
/YdPWNP8s/7yg3XZz5nAx+Ofu0mmwkVaTPjD458vcluzAw4ypvlnxp0V1lHH
6KDH459ZZ/zpKa40aObxzxyr+tuvPKnT/DNvhdqKsosU8Ofxz4duLqP2MAw9
PPFToWPet0Mfh+A2T/yMtyyOdTEfghc88XNh8bHjXmWcafEzQXOuns92Dpzh
iZ+K8UUzg6vZ0MMTP5NEnX/esmFPi5+PSPnnEu1ZcIEnfirvO2CW2sqEzTzx
M7lslnTOfiY08MTPzR7O3zw/MGART/zcYl1wPOgbHbR54ue2lcJCMd9pkMET
P7fPdnz6rJ4K53ji56mOIJ0ttGEo4MnvZMsVAjs9hqGeJ7+fKG78sZczBMY8
+X1Q0z/58IWhafn9ZLy616lfHNDkye9U0fqNZ305cIwnv5/29pX0nWDDEZ78
7ravJuf2TPa0/E4vu+QfG8qalt/PrFuyM0mMBWk8+Z2ZWqmYFs6EnTz53WPB
eUaOJBPW8eT33tnGV8+qM0CHJ7/3UyMUQlbRp+V3/R2JZ/TiR0CaR38WFm8B
WDwCTTz6U1eLNWfr4+Fp+jMv/kHnTpVhiObRn2vFzLL2pQ4Bk0d/vvamXXHW
GIIwHv1pQI7d4ZrJmaY/DctJVN+X7Gn68+26qOIQPTZE8ehPozSjW+GvWXCA
R38WLxh0vGfE1YE8+tP4eoTmo1ImcHj057uRdX/SNjHBg0d/Xqn6HHPkJjee
8OhPwZKidNVto/CWpz4K1nL2WVk1Avo89RFfgth2fesR2MpTH10VK1ho8mMY
Ynnqoxk+B8hb9wxDAE99dI08641N8xDY89RHQg65YQ6OQ/CZpz6aZSCofvow
Z1p9FJqWOXaunz2tPhKRtS+7coINfTz10Y3rfHHXyCyQ46mPREefn4hwY0Er
T31047itfhyTCYt56iOxxr9Cj88y4W/2/62P6rTqCdKjo8Dk6XvYJPgWKniP
QiVPf6NKTO262r8REOLpY1j41Nit8h+BDzz9imryJbV1AiMwseb/9iVsHZaM
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
L+t5p0NqeUe5+yGt6WB56W/6HAqWz496fpE2k76SNlCe2aexh+fGn4/2rmDa
7TD+3OKeHy/23N00Ne0hLXaIPnk81zdOTYtK00o7Fsf/SGK6Lofig+e+f7Bb
EtPenwYbv53cZ0Wwtb8bfsDH9srUdL7GU+O+x+dO87ok2BjviKY3pPFa+5qp
4TnukK8HzW9J+jyamA681HO3tNeyYOtlVzR9It0oXZhdmsjzrzShcuyfXiMo
j0srfKK6QzoDLBxMo0pbfgCvmlhNVyNYjaY6LkSr1U5Gq6FU36keu9l1i2o6
6SXVj6o/pcdU26rWzUTTNafAysFqNNWJN8JHJVZjFowWC0PGtNNbHgO7wJd6
bM8fLRamGdPLyz2udvUYq1jf1/Oj8mY3j1GKiaollUMu4NoTwWrEf6Ppn2GJ
1ZMXRdNZ56PVp9Jdqhfu9DiseJI7Wv10LlpdLJ0pTVk7mJaT5qwfrM56JrUx
HppYvdwqWo6+D2yCf3piOk3a/OnE6mvVsOMS05NNPY4pvqjulo6V7mzk+131
S95o+15FVU384xPTus08vyindPIcqtza3WO+4vtl0eJ69ozVjIrDXwbLTYs9
zrfxfD0FXjqadsiSsXpWcfVz7WnsQ8/FijOqL1RnlIuWc7LRv0y0nJ9V+l3z
yO+bpcOj6Zw60fKd8tRU+l0XTS/VAlcpXyhXwivBByVWy7ekPZb2lmg12Wee
jxTTtIa1lqUl53h+lGaQTlsA7+1aYqHH20rwRcGeK32RM2PvJp2YK2N5cGVi
ubNPMA0pLdfC869yrWqkUonVXMrX0jPSHC09dyu/Ss9LQ0r3KP4rli4OFsOl
zaQ1ldOlf6RjOsI/TkwL6TxB+nAevuzR6obTYI5odcYZaeZo9cdZz+Mak8ra
f8G0orTZKPgv8DXwp4JpxqWKbdG0ZG6+twF8LTwf/DC//47t9bHTGGr+xklb
K84oNtD+OjENKe0xC14ErK130N7KmGaQPpSWlZb7Ab5CcZE+CxOrqWtiy/Hl
oX9FaZXE6uLC2OTE6gKdeUlXa+61p8aDl9B/vWJ9YucG0sa/gevwtabPPsVz
8G/wYGLaRJp2I1gj2rmDzh9U90pv61tuAtsoB/ueHcw9v4cv455jaH8Jvwac
4M/Se0wMdqYxJpjW+gJeFfwnsTOO/Vof/Padj/leH1vd62hiY/1XYnpM67Zo
tJpli/aaYgvt1dr3Pi+6ZrN/k75NoeAIdgzb4c/Tc3f7fQ/7PB7wfopHJ9yv
+5x0v669J9p3vBLt9xP+rnWD1baqT6tHq0Uu5H3a+lhpzPoHG1vVFw/4+Gse
9C7HfayljVV3qK6QX2OUx5+70+dLWlrnS7ODfdMRf/e6GlvNN8/9179f3676
SGtyZWraTDE2n2I2/m3wVanVPls15qmtA12r56keeRssHq3uewdeMloNpbPT
ucE0tvJOJbB9tPOxKcHqDsXACtG+75B/i8Zng+8R1SDay5dHq02U166Klo+G
wLNEOw+Uxvgs2LlfA/j6YLFXe0F7Qme8I+Bng51FjPNry/g+0n7Sealyqw6p
q/o6VN2tmP8+vFq08xDli6zRzqWVg05zz1PYY4mdF+kcVVr3aLBzV+Wyk/Dz
2LOJnWVJB+os5VwwbaNYrZitMyKd7eiMR2cgAzTHwd5b76+zr+PwXonpEOUL
1RdVop1dSHdtDpb3Z8LLgnsUK+ETos2N5kjnPzrHk2bbHex8THrp92D5Uech
paKdSelsamK0XK8zwBLRcrrOBotFO8OX5v8qmCZRLVY+2prQ2mjuMVaxqLDH
3pfghaLFZJ3bFIh2JiMNtinY2UuHxM7ldGbbCL4R/n40ralvkXbtoj0cTNfp
rGNdsPNt5btjwc7/C/p6k6bSudPF2n/RNKK+SzpNZ+x5otW5qjWWB9OrqhfW
KBdFq2eUT/f7+GsetM603nRWr/8d6IxlejAdrvOxM8HOVOvD1wb734TOAaYG
O2dWfbQ62Bms4vCkYDlFsa5hNP2vdaX1pet1H53zSz/fBN8A/h8UQBtD
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmQf8l2MXxu/x19JSsqPQEJKVkSgJGSHJKg0rQjIqVKRSVHZZSSqVUaFh
JBrIJiuUEC+9hLJ7rff6dt2fT6fnnPt5fr/f89zPOdd1nfNv2Ktvp0tSCGEr
/Veh4+ZRpuN2svfkt5F1lN9NVlvX7KC4ifyWsnXym8r2k99O9of8Z3XNAfK/
lz81h1BZx6qKt5Etl7+jbDf5B8p+kH+arvla/ouyMfK/0ecvlr+TjvMUN9A1
uys+WLZe/v903ELWQLZC8UO6rqH8j+Q/oOsr6bi14sayT+VP1vktdbxZx1N1
Psmvp3O7ylbKX6L1w+X/Ln+6zu+s456KD5H9FP2Zr+TvGPxddbRWX/4esi/l
Z1ll9k/2Nvega7aX/778+/XZFxUfoXij4hmKFyk+VPHP3LviB5O/70PFExXP
Sn7eNdy74lo61lC8g+wD+XtHf/54WdS1bya/n6TjI7p+X96Z4hNkWWvVFG8r
v6nsM/lHy7rIP5d3ovOrZefI31rHJ3lWHfsorq/jXMWn6/reigfIdtPayYp7
ye8n20XxOtll7KeO83X9KdHfd7mskdY+l50nf1sd5+j8yzoeqfhPXfew4mPI
AcXnk3O8o+jrr5Q1Ubyr4hbyD5P9Ir+17Bj5p8tq6Hwrnkn+qeSu4veSn6+a
jjP1/YuT9+NXXTdN8RE6dlLcU7alzjVWvI/8trLfeGfJ+/Wu/Am6/nAdT1Tc
XVZH5/aPzpeTZJspXiHrKr+Wjo/r+o91PIsc1fEJxW8lf75Cx0cVv5/8vNV1
nKX4oOj9OEVWVWvvyjrLr6LjYzp/rGy54lvJYxXoAdH5dLKsstaOU3yG/AvI
EcUfJsc1dZytzx4Z/X1nlxqvqrVx8tvLXyz/nuR6eEvX3ae4W3T9DZLtqXNR
a6Plt5K/UP6vOg5W3FzHpxV3lj2m+G59rkL395vWr1XcQsdndO4XHa+hXnR8
SnF3XddX8RDZXuST1h6RP55a0uf/1NowxfvpuEDn6soeUNxR8VL5t2Vjz+4l
f06RLVE8U3E1AEzxjTocpOufk39h9O/fBIZobaNsqPx9dHxW52tG12sz2Rfy
5yTn29fyp+j8RdHPOwZM0Lka7Jn8o+UvkZ9lYxW3Vvy8/AHRv3+37CitXRr9
e7fK2ijur3gkzys7UnElnon8k/+C/ME6f4viidS41ipr7Q757eQvkn+Fzo9Q
fKfsCK1dEr3fN8sOVXxV9Pu6V9ZB8fjse7lB6y/JfzQZv1crnqT4muj7nyA7
llqO3v/bZYeTg8l4/bnWH9T110bf7yQwhpwEw+SfKP9F+c1kz1LPil+Vf2s2
Vm9V9nNYdP5NJYepjex8IC82yN9eNkNxl+T7vR2cVDxX1ktrd2ZjT6/o9zcu
G2vOic6XW/kdxU/Keuj6m6Pv73HZWYr/pW6pfdmbOjdea3XlvyH/Xn2+qWw+
9aL1ZfLPjMbDq8k5re2stdnyu8l/Wf6fTrlQR/a6rh0Tna+zZF11zT/B37+z
7GOdu53v5N1G4+tJ2e+T9/q7/BOy8Q2c+ya7LqiPZ2TnJdcZ9bZA1lvxHrrm
Oepf/mvyO2bjIbj4tfyh0fkzGcziXWrtafnnyn9FfqfsfCQv/5B/Z/T+P8We
6po7srn/hGg+3h8MV3wZ3MO7j96vl2T9tHZ8th5AF3wuvwWcp/hinXtDfnPZ
84r7KH5d/nHZ+AsOf8bvJ/P7a4rvUXyA7BX2R+tvkcvZ7/L+6O+jPoaXWviz
5Be1MaJgHPVEbVAjhyXvB7k9rNQU9Tuk1M7/Sn5Tq0NLTa5P5ia479fsPNuU
b9yz1n5I5lK46hedPy+au+Cwplr7Kzlumfx+qTewZHDBjH+SufXA5P0nrzfl
dzCngt9gPZgPJ7yTrLXA/v8WPoOL4KRKyfzSIZgbvy38CjeSE3AO/A/XwDlw
5NpkbmuYXH/g1yjFVwVjKPwOd8DlP2fjC1gKpsIJ3yZzKVrgp2y+GFSwcqP8
3tHPh4ZolozH1BI1BSfAF5fK3xs/G8fBczhvsNbm857lrwTDFB+la1bJH8mz
gmfR+fU296S1Q+Bc6pW9kv9wdL69yTNprVX29w2U/7b8uTr/GrUpGw6nRX/+
U9koxYfpmnflD4Gb5U+PrrfXZQO01lpr78gfJH954Xu0BNpgbbb+QvuigdEU
6Ee0HJoOzbcsWQv/XeoVvmH/4ODmBd/JTzASTgWvKgp2fZiNL3UKBoFhU3W+
drA2/hgsjr6/z2Q3JetjtCqa9Z1o/kPro/nRrOiBSsFadoU+30G2WvGNWv8g
Wz+DnWAomuHJ6PpcIbsezE/W6v8W/EI/oUXbBGsgOBPuhCOHZGsQ6pR6HZzN
2eQd+Tcwm/Phfjjx2mwNjZYGYy7I5hy4B066LhvTwDYwbFi2BmHf2L8B2ZgN
doPRQ7MxHqyfxv1ncxbcBeYOl99G9j6/rbX3sjm6bdEQ12RzMjgCngySX0sv
5/noz/BZNBvaba3i0xXXVLygvBNyp67iV6L3mL2uo/jl6Bwn17dQvETxR2CA
4tqKF/HuqflszQGOgCdXZ2sy8ob86Z/NCXADnDEiu+eg92gORmX3PL8XDdw7
WzOiHeGgvtkaGpwALy7O1qTgEHh0UXb/AJ7QS/yQrX9532jldfBbNL6ggesm
63vwEo1OT0B/AD6h/X/M7jfAWzTy9lpbk6z10bbrs/tReh96IHoe9Dcxvel3
JX8uKBhDUcBb8Bc9Epoc3oV/jwvW7Ohnvp/n5blXJuMpvcH32f0O+EbPUC9Z
s2/CUcWXZPdc3Af3c2G2xifPyfc+2T3Bpt9RfGm2Bgb3wL8rs3sE7ov765fd
Q4H74P8V2Zq7T8EEsJX+CjxG09Oz8f4vLhgBl9Fjsa/s7+XZPR3Xcf1l8jdX
/jwRzeFw+ePF/4D60XV7RuMRmu9H+Ttma8MzkvX9Q9FahPqgTtB7jwZrkaoV
1luTguuRugQv0SrkH3mIPkLbUs/U9U3R348GPS5ZT8LPaJWo7xsVrWXRtMdo
rVY2f6JV/2XvsvkdrQwwTonWLtQ/OIA+mRdc39R542ztiZasUuH9OapwIrnM
/nUonEluotHIGXo8euPnovmAeqau6QfgQ7T2P9m6BH2C5uwOzkRr0Smynoob
ZD8/2nAz/f4O2c93WnL/c1+0dgSfwKlds7UbWrZyhfUn+4uWrVRhvct5NF6n
ZL3M86GxOyveKlsPobVThd83Wg3NhoYjB9ivy5NzA73F+71ScXXFe2fff9/k
/gq8XxasIdFk8OerwZq/f+HDxcHcDdbB33AlnDmw7B/cDscPKXwLN8PRcPZB
2fkCt9aoMH/B7YuCOXZeqWl6bGZFYOxLJXfBXuZD8N+aYA35UrR2gPPRDEuj
uR7OH6F4oeJ1wTMoMB6M5XnQAmDv4mhug+OGJWMuzw/XgcVgNPePVgC76+r6
74JnRmO19kJ0bVFjQ+HHaC4G/0crXhatNdAccCwcwPPC1XADfVODYE3MjAs8
OaxgINgHPh+s+Kjg2cf0ZH5mtrVS57aLnnXR46+S/3Ay/zMbW6Xz20T3JvQo
n0TP95idMUOjR6T/Qx/QG3+aPY+jV6ZnZkbFPOGG4F72r+z5FfqG2djq7Hka
szJmXF/Jn5v8e2uj9T7zQGZTzFzoMecn3++30f0D8xb0FPwETzFf5Hpmh2vA
++T7YTb4peK9ovUHM7QN0fNB9BG91yfZcwPmB/TAzCifTn5eZplfwKfJ98vs
76vs+eC+wbPN/4D92fqY3v7v7HlMu2A9gi5hPtc6mF/hWeZxzK6YKTCDog+n
H0f/oIOYkdYve8Czwc+7KN4reFYIX3RVfFHwLAV+P0vxJcGzGPhnn/IbzALh
n/3KnqFF4ZPOhTPQ8uihHtGaG+1ND03PwQxvY+G3Q6J7CHoJZgRVojUsswP0
waGKjw2eNdFz0xNdETy7gc/aFs2HFkAvHKi4ffBsixlC9eicIreY2f4V/I54
V+i73XR+/+DZKfqkSfQ74F0ww2vEPgfP9h4u75SZM7NFZgzUTMPgWQ4z1S0U
1wyetTLTq6q4WvCsjxltDcXVg2e3zFxrR+cwuUwPCo6AJ12yZ2QxWiOjlZkZ
/B2syccXzJwTjRcHFP6mT6Jfuipb714ZXTPUDhg3LxqPwD705OXRPS29LXp5
YDTHwDXoz36Krw+eHTEjIaeYSTE7oed5RPELwb0Q+vi6aE6FW9HTQ6J7XGZr
6OGxhbPhFnr6yYVD4Qb04z2KZwbPGtDHd0VzPtyPfr5D8fTg2Qk91QzFC4N7
LXp8OI2ZCb0/mNAwuj7ZX3r6qUVTsF9vFA59Inh2gJ4fB24Fzy7AoJ2i9Qn5
A4Ztr7hRMLbRo81SvDS4d6NHfKpwDFiNhgfnwXv+9vBRNk6D18z66alCNB7y
PsEAsIC/B7yQ3BNVROMp75+e6JnCUWA3PVc9xTsF92JgztYlH8lvMK9xyV+w
EIxrWvJ7fvm9FopbBWMRmNZc8UHBWAfm7VHyHbyg53wsmnPhXjB/W8W7BHMB
mNas1BNYB4b9UTBraYlbRs8PlhRMG6H4rmCsY+ZxvuL+wbMQNPpp0fMN9BE9
e9/o+Qp4Qs/XuuAHvSAaupPiHsHamp64XXQ/AD7R87Yq/EUvzAzl3IInzFaY
OZxd8An8YsbQs+AXs4e7svUSOUauUePUOu+Ud4seRKvA2Wgc9CtaBY5H4zDz
6F7wlFkIM5X20XqfWQs9xxnR8wt6EXqcLtHzn9WF84ZH6y3qmZ7nxGh9Av4x
gzk2up8BT5kBXVHqm9kQM6dB0foX/c4MqH/BB2ZDzLSuj9Z34AGa90bF9wVr
YTTnyFL/4ANANFrx/cHamBnM1dH6mf4BTX1LtD4FD9CEt0XrU7QiGv/uUt9o
fzTp+FJ/aFU0670FD9CyaNAJpb7BDzTqxFK/aFd6so7R+hm9Qo8wrbwD8AMN
PknxnGBtTr6vLxy+MPlvgrMV35Jcr+TzusLhzyR/Hi3PfLhJ9n4xC0TzVsnG
e+YuzF8mlHxl1nSd4j9KfjHbYqb3ffL9o7XRvI2y3w+zQXqMimyNTB6RTy2z
+YO5CfOTieX56IXQsLtna1K0KRqwbTYeoEXQQNMKPzEHYh40KRk/mN00UDyl
5DB/u6xf+Iv9RvvTY+ySXQ/M3pgZflfylV6Zvwd9mVy/zC6ZwW1Ifn/0HtRM
Q53rKvuB2pWdla1h0bJo0qNLftHb0KPUzNbEaGM0dPtsfhyjWP82zW7RrGhX
NO4x2XiCVkLzbJ7NL/Qd9B83ZPcI9Ar0BIdm8yHan57h4GyNjdZGg7fL5n90
FHrqfPndZBvkb5R1z+Zj5mCUwrhkvmZOxbzq7uT6oFekB6uTzdfgAHhwYDa+
oi3pgRck1xu9Jj1q7VI/9KaTFdfL1i/ocvR5j2z8YhbMzPfH5PxnNsEM4qPk
emQ2Sg+bCl4wK2FG8kkyP6Kd0aCzC77T9yxSfFPBd7Q9GnlGck82s+A/vRp4
y+yip+JVBa+YzTBz+UzHM7J7V/aMvQOPmVUy83i74B+zZWbOy3U8M1v7kCPk
CnjGbJmZyQeFD5jdMLP5Ilkv0jfQP/TKxkd6A/7eVa3gDb0oPerW2XxNH7hE
8ehsfqbW6eno7eB7eg80/syiz+g76D/OydY79I30jzdm8zOzS3qce5P1NTof
vX9utl6g90HzP1L4m76L/uvmbH1KH0I/cna2HmDWSk91V/I87zZ4O/hvs+gL
+kr6y7HZ+mdTn6t4VLa+oU+Gg0bK/z9bPiS9
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1nnwzVUYx/H7vTeNMG2yJ0SS7GRr0d6UQkKklF2Jny2h3daChEq0aFQk
laRSI8mUNjWR0TSq0aIo065NotfT9/zxmef5vL/bPec85zm33oCy7iOLhUJh
HJWj+aVCYTiwLCsU1vJN+V38SHldsRu+TfyUrsIqi2dhH4qf0wCsingOtlks
5/lbsdPlN2O38I1oKTYIW4xN52vSfKwnNg+bzH8rvxY7RuyCfSKegC/Dhsgf
x27nm9Az2DXYk9gd/FfyYVgtsTO2VdxE3bGDxbbYG+Jb1A7bx3ekEZ6tRQuw
S127D5vCf5fGe2xE7HpsLtXm+/LXuPaN/Fxso3y6/E18Nr8njaOpOBybiP2e
5rS5OAKbhP1WzN9zong1NgG7LL6NzcXmUB9+p9gvrUc/943H2tCL2GhsBTaT
3yG/PM3f5dh1WCtahY3CnsVm8POoDn9Flv/OmPeTS/n6T5SvxmeV8vW9BKsq
9sDGYQ/QCH45vy7Gw7/Dd5Dvx06hkdh98RvxMbG2ru2V/x1e3locjd8Q80kP
Yn2w+dhU/p9iXp8niWOxG+P30sNYX2wBNo2/N8bHj8rymvtT/lHUovwQ8Tx8
jHu2RI5VFM/HxmLvxZixgngaVob1pe+hedhM6sXPid/jeocsf+8G/H06VZ6J
nfBR7vkgcqwknoGNxu6nXvy9WV7/NfhuVA+7OMvrK+psJTWPesKq0GP8Ppqa
5mAw9lOshWd7i3dk+ZzF3FWlx+Td8cl4ef7otGeinm/HDuWr0xNYj3gvVqGU
/56laQ9Owyryx9DytB53YofzR6S5vxC7ETuIPyyt2wXYJKzIt6Y3Uq09ih3P
96QyflGW12HUY0taL49G9Ah+HF837elY3xnYkXyP2A/8XVn+/aiBDrF28vH4
EvxE/vU0f3v4VrE3sXuin8gbZPm1mOPnqU6a5/o0xD2LsErY1hgrDYqxYhWw
LXwlGhhjxcpjm2OOaQDWjFZg17r2FHYn34JWprE9jd0VdVr8v8wKG/l94lWl
fN+sS88+FL+H70xfYDOwNdhp/Nn0CTYFW4W1j/WRV8e287VpcOxxrB62M+aT
hkZ/wOpHjcVa0DBsNXYctps/ga4u5T1sGzbNtRejL/Jn0sfYbVGfWNtSfjas
TX13IVaPfy3to1/C0wr+1dQPfuLr0DP8waW8D5wpvzX2K/+rfALWWLwM+1qs
HGuHdZXPwm7ju9KBWMcs/1bs3WVpHJ9FPdJC/mcajzUSe2Nfis9RU2wHfxQt
5n9M/aVh7HFsezHvHdFDWor9sd2xR323rTgky9/7r3w/TZe3E4fiv8QZ4772
4rAsH8+BYt7vJqdeNxD/IQrAfZOEjjFu7OZS/s7x6X3XYTdFD4qels6e7thn
4tK0ltuyaDx6ZTGvyWrsJr4c9fdsg1R/V7o2O/oJ/5K8daqDGvQkf1F8R14z
y+cx6mIjdU49sUX0d/FlOinVSy16im+YzpT+8jlYNf7NdN/eqNE4V7B3o9+m
c6EZreXfTr04zt8mtIZfTy2xP/g2NNyzLyQW9VyNlvAX4rvk1bN8LqK+N6R+
H99tTK8U8/8gs7FO8jLsL7FLzLW8aZbXZpxZp6Q9eIP8Ffxu/j/cGhRP
           "]]},
         Annotation[#, "Charting`Private`Tag$561210#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rsvXmEcwPGHl76uRSxiqPQPYGHUiIhEMBlJCBtDuzJ3YJMQdGjEgFmE
0f0eJre61C0iDa3FXUT0c2L4nu83v/c55zx5zvu55Vvd14QQwnc8IOobnCMb
w4khFPA4F/EXbOhabsCFbuNb7uAuZMRCGOB8HuVJlOhF/oMnbOEO/zDlpds8
zeXW7egZvcuzXGH2S8/pPZ7nSrN9vaAPuDt6vj7US/ybl7nK/Eiv6GNe5Wqz
E72mT7nH3i+5yfyZz3CPa2yizHyBi3mCR5Cn+7kTb+5vj86NW7keu7qG17mU
CzGmP0VnhkdkReeGv8i1l4+cw0PWZUa/6wzO5EGzdJ2u0ziVf5ql6rhO4WZ7
StZxHeMP0ffkH9YlR/tEEl7RZ2Z5eIEMvS5X3Bh7/x/8BzO6SNM=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{661, 922, 662, 982, 663, 679, 987, 680, 694, 992, 845, 695, 
       873, 936, 708, 876, 940, 722, 882, 946, 734, 1006, 735, 750, 1012, 751,
        764, 1015, 849, 765, 893, 961, 777, 1020, 778, 792}], 
      Line3DBox[{664, 923, 665, 983, 666, 681, 988, 682, 696, 993, 697, 709, 
       913, 937, 710, 877, 941, 723, 883, 947, 736, 1007, 737, 752, 1013, 753,
        766, 1016, 850, 767}], 
      Line3DBox[{668, 924, 669, 867, 929, 684, 989, 685, 700, 995, 701, 713, 
       999, 847, 714, 879, 943, 726}], 
      Line3DBox[{670, 925, 671, 868, 930, 686, 990, 687, 702, 996, 703, 715}],
       Line3DBox[{672, 926, 673, 984, 855, 674, 688}], 
      Line3DBox[{676, 985, 675, 689, 912, 931, 691, 871, 934, 705, 875, 939, 
       718, 1000, 719, 731, 1005, 732, 746, 1010, 747, 759, 916, 954, 761, 
       891, 959, 774, 896, 964, 788, 1025, 789, 804, 1031, 805, 817, 1034, 
       853, 818, 907, 978, 831}], 
      Line3DBox[{690, 870, 933, 704, 874, 938, 717, 881, 945, 729, 1004, 730, 
       744, 1009, 848, 745, 887, 953, 758, 1014, 760, 773, 895, 963, 787, 897,
        966, 802, 1030, 803, 815, 920, 972, 816, 906, 977, 829, 1038, 830, 
       843, 1044, 857, 858, 861, 863}], 
      Line3DBox[{716, 880, 944, 727, 1003, 728, 742, 915, 949, 743, 886, 952, 
       757, 890, 958, 771, 1018, 772, 785, 1024, 786, 800, 1029, 801, 813, 
       919, 971, 814, 905, 976, 828, 910, 981, 841, 1043, 842}], 
      Line3DBox[{741, 914, 948, 740, 885, 951, 756, 889, 957, 769, 1017, 770, 
       783, 1023, 784, 798, 1028, 852, 799, 901, 970, 812, 904, 975, 827, 909,
        980, 839, 1042, 840}], 
      Line3DBox[{754, 739, 1008, 738, 725, 1002, 724, 942, 878, 712, 846, 998,
        711, 699, 994, 698, 932, 869, 683, 928, 866, 667, 865}], 
      Line3DBox[{755, 888, 956, 768, 894, 962, 781, 1022, 782, 796, 1027, 851,
        797, 900, 969, 810, 1033, 811, 825, 1037, 826, 838, 911}], 
      Line3DBox[{780, 1021, 779, 793, 918, 965, 795, 899, 968, 809, 903, 974, 
       823, 1036, 824, 836, 1041, 837}], 
      Line3DBox[{794, 898, 967, 808, 902, 973, 821, 1035, 822, 834, 1040, 
       835}], Line3DBox[{819, 807, 1032, 806, 791, 1026, 790, 776, 1019, 775, 
       960, 892, 763, 955, 917, 762, 749, 1011, 748, 950, 884, 733, 721, 1001,
        720, 707, 997, 706, 935, 872, 693, 844, 991, 692, 678, 986, 677, 927, 
       864, 660, 921, 854, 859, 860, 862}], 
      Line3DBox[{820, 908, 856, 979, 832, 1039, 833}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 459, 252, 927, 472, 278, 931, 486, 292, 500, 306, 938, 
       514, 320, 528, 1003, 334, 542, 348, 951, 556, 362, 570, 376, 962, 584, 
       390, 965, 598, 404, 612, 418, 973, 626, 432, 640, 1039, 446}], 
      Line3DBox[{255, 461, 982, 256, 474, 280, 488, 991, 294, 502, 308, 939, 
       516, 322, 530, 1004, 336, 544, 350, 952, 558, 364, 572, 1017, 378, 586,
        392, 600, 1027, 406, 614, 420, 974, 628, 434, 642, 1040, 448}], 
      Line3DBox[{259, 463, 983, 260, 476, 282, 490, 992, 296, 504, 997, 310, 
       518, 324, 532, 1005, 338, 546, 352, 953, 560, 366, 574, 1018, 380, 588,
        394, 602, 1028, 408, 616, 1033, 422, 630, 436, 644, 1041, 450}], 
      Line3DBox[{261, 464, 262, 477, 988, 283, 491, 297, 936, 505, 311, 519, 
       1001, 325, 533, 339, 547, 1010, 353, 561, 1014, 367, 575, 381, 589, 
       1024, 395, 603, 409, 970, 617, 423, 631, 1037, 437, 645, 451}], 
      Line3DBox[{8, 667, 23, 38, 696, 53, 708, 68, 83, 733, 98, 113, 759, 128,
        773, 143, 158, 800, 173, 812, 188, 203, 838, 218}], 
      Line3DBox[{263, 465, 264, 928, 478, 284, 492, 993, 298, 506, 312, 940, 
       520, 326, 534, 340, 950, 548, 354, 954, 562, 368, 576, 382, 963, 590, 
       396, 604, 1029, 410, 618, 424, 975, 632, 438, 646, 452}], 
      Line3DBox[{267, 467, 268, 929, 480, 286, 494, 994, 300, 508, 314, 941, 
       522, 328, 536, 1006, 342, 550, 356, 955, 564, 370, 578, 384, 964, 592, 
       398, 606, 1030, 412, 620, 426, 976, 634, 440, 648, 1042, 454}], 
      Line3DBox[{271, 469, 272, 930, 482, 288, 496, 995, 302, 510, 316, 942, 
       524, 330, 538, 1007, 344, 552, 358, 566, 1015, 372, 580, 1019, 386, 
       594, 400, 608, 1031, 414, 622, 428, 977, 636, 442, 650, 1043, 456}], 
      Line3DBox[{275, 653, 984, 654, 276, 484, 290, 498, 996, 304, 512, 318, 
       943, 526, 332, 540, 1008, 346, 554, 360, 568, 1016, 374, 582, 1020, 
       388, 596, 402, 610, 1032, 416, 624, 430, 978, 638, 444, 656, 1044, 657,
        658}], Line3DBox[{445, 639, 979, 655, 431, 625, 417, 611, 967, 403, 
       597, 389, 1021, 583, 375, 569, 956, 361, 555, 347, 541, 948, 333, 527, 
       944, 319, 513, 305, 499, 933, 291, 485, 277, 985, 471, 250, 458, 921, 
       652, 659}], 
      Line3DBox[{447, 641, 433, 1035, 627, 419, 613, 968, 405, 599, 391, 1022,
        585, 377, 571, 957, 363, 557, 349, 543, 949, 335, 529, 945, 321, 515, 
       307, 501, 934, 293, 487, 279, 986, 473, 254, 460, 922, 253}], 
      Line3DBox[{449, 643, 435, 1036, 629, 421, 615, 969, 407, 601, 393, 1023,
        587, 379, 573, 958, 365, 559, 351, 1009, 545, 337, 531, 323, 1000, 
       517, 309, 503, 935, 295, 489, 281, 987, 475, 258, 462, 923, 257}], 
      Line3DBox[{453, 647, 980, 439, 633, 425, 619, 971, 411, 605, 966, 397, 
       591, 383, 577, 959, 369, 563, 355, 1011, 549, 341, 535, 946, 327, 521, 
       313, 507, 937, 299, 493, 932, 285, 479, 266, 466, 924, 265}], 
      Line3DBox[{455, 649, 981, 441, 635, 427, 621, 972, 413, 607, 399, 1025, 
       593, 385, 579, 960, 371, 565, 357, 1012, 551, 343, 537, 947, 329, 523, 
       315, 998, 509, 301, 495, 287, 989, 481, 270, 468, 925, 269}], 
      Line3DBox[{457, 651, 443, 1038, 637, 429, 1034, 623, 415, 609, 401, 
       1026, 595, 387, 581, 961, 373, 567, 359, 1013, 553, 345, 539, 331, 
       1002, 525, 317, 999, 511, 303, 497, 289, 990, 483, 274, 470, 926, 
       273}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJwkmXk4lN//xoskEoqyREXyoZSkFOKdylYqypIkSkqyJdqItFiSEFLIvhWy
r8mx7/s2lhlmX80MSiTqN9/rN/88/5znXM/1Pve579d9jcINz4vOfGvWrJFc
t2YNP++5S5f77yOTCZQUq+2/Hg2COVb+4w1DHLQeFHe238CE4Ju7ZHLVhyEl
ISf+2+lpqIktIsvIMSDZ3joykjYCQiIso02v8cDlf3BzWYUO/pt8hsVSMfBN
guidZEMA/nqzIJoGDbYdILkdsx0HT7FrEVlCRGgI3/HHSZsKBm2fvuZITIIr
yyTtagoRnssK1z00oMDdYa/Cm/1YkNxmGX5bmgQ+zKqPuWfJkEYsfVQWNQUv
uBYWFT4kSFGxuLJ6mQRjezJUFvfiAVC+pGMZCQywp38LuhJhfmpjbK447zsy
vZaDMSQYF3c0XwggwE2sAv/MbwK8mtCwOT1FgrihkcLkeDz4vsFLCdGIkIvD
uH9qJ8Gh81e0dG9Pg4yfNmGF937Yj4nqoPckqIo/crY+EwdOGJn4291kCNl6
CQaMSaBQvP6DH3USJPXMw/yaKFDjJ/zJDUsEK8N4D/lpJhyokZ9bs6sfLoco
4+rap8DVkL+Eb44BTJyhQmLOAEhvZSbVBuPhPtlbhb1Ah++bDpyJPjgENdu+
LzvEEODPqWMti7M0iPpZV7mvZhhk/ybSBUKJ8MPd0nOVTIX1Xru1b50eheO3
HD1OO5GgU7io0HWYAtZBhJDxPgxIbygxcFUiw/sJ5kX5BjLscozemWY/Dk12
6JBVFxlYA9T1l/JJ4GryKPkodwJuLc8bGV2mAAtjVp/2ngjlRZFXrIKxMBWo
ta+qiwJz1317FgMJUGeGe9qtNAVKNb69OspUqHp8IzvlNh6WdZ7FO3dPg7CQ
r5yVCxVkPX7iwz5MwaK8y55rCA+RQkbX3d5RIeHURkeODRbwqRrj4ckE0MGy
IksyqVDQckjUesMElK50S+98SYTrQ1EbpFOoMB3c0uyRgQHv0kLHnV4kONXW
ff1kEBWaz03lXWpkQi7HulHwfhd8THkYUKyMhyczVtt/NjFAsBtv+V2uFyod
LZaS7xLgid6TT3NldHisrXY64GY/xMxUTrxPIoLKyBOhqx9okJt2VWPttwFY
P23as7aSBJpbLqaI3KNCj1XVfOHmIQjkeySkV00GuSeRq6483c61VbrNuQzD
2prGu/7pFKBFx8sZbCSDZEWqYlnDCPTF35lO8aaCHh8OkvuIcMTH3sxCHgON
CkX5fHtpECLLJrS8JUBL75iIx9MxEBm4te5MBw3em3Xb/WfC04UfpWeMNA6X
HD5c17Kgw4y+e0LpTxx8vXDqu/PFSTDQOZ33qJEOE+W7tA8ZTUJomd+Rtk4s
eGZ8yHktz4DKE3kzLwPG4PAB81d256dgGxfzOOwGA1hvC1lJcSOQd7FIgYOb
hn5dI3OxaAasXFVyTQwaBJm6pcbCWjzk8VWqCeUywGnigvuHGCZsj+q0Uwxs
hYdPupTaGHiQtU5/feYZA1JcIjZcqGmH2zsYRLI5EQ6Y2rxctaFDU7HqY/vF
TuinRSbsz+LdR7DY2yJPAzklz6B9h3tAXXp4+AmJDB8PKA1G83RbvUeisMWz
DxR73CLLhKhwpt//FzWADAWtHrR9I/3wQrv/T9U2GhiqLpxK20GC5J8B9sHz
A1B9u9fvoDAd0mKSenrKCJBioeHJEh+C2ZwRnDWZDr2cYkakAR4ElScsEjSG
QcNJDYeyGCAEBnuVQ3GQqHfk+E+rEdC3nLbffoHngxPl8xt8J6A4u+CfZeAo
sKytact4Jsjm1vQpnsaAfMkLBdJXDNSHuq7E27GAuPEh3zB7CI4qXmyxpIyB
+Y20hx/qWFAuGBQV69IP51qilVIVJ2DHgwyh3g0zcCVMNO7kxQ4wqlFufes8
CbQrF9+yj87A2Iziy1ALJpiri5fNWjeAP3lzaH8BAWzk89qVlRhwiRGbVCbd
BBqjlIV7WiRYY6shXYSlgTtGaI3tZDMo7rKkvs4nw1ggh2UbQAWrzKuDj5Na
wXhLx+IOESq88nttbyNCgQdZKy3ZV9qhL07T9+pFGiS3yM8HhJHAV+Pgnhtb
O8Hj1qxD+FM61F1U2b5miQCdD26tF+jpguOxaWaENww4t5rycb8tHtq2i36J
fN4DH42KP558xoRjtWttK67gwPbd/F/3o32wtNT1YdmGBc4ff9gn0cYhpsJ0
34cH/fC2u+Oyp+QMuDBk3z60GoW7Vo+mki4OwEvj+acj5TPg7ybzMDd5EChN
D78eODgIndvuZpF02fBjr2W8x8MeENhvm6UpNgQbT54Tf5nFhvi/qZqWxi0Q
K7C2uIEzBGt+/pN+McuGw7+3uV0/VA1SjMvTtd3D4Fo1e1NHhgP6F3c2jfxm
AJlv/RrL0UqwA5znP28iPHU83v8knw5rfgS9PXeuBu4VH5MWlyNDpcrJAk2g
wRxJs4HWVAvPy4Tseosp0L7CvxReToGtH7V/+x5BsKLYcFtSnQbKO9+dOylB
BpV9kcbWffVgPOEaJhzFy8tP8fLjdkToUPicMfK3AQ7+NyimOMgAFVGpCa13
eNBcvXOTpdIEuTYZwcwfTIjKU62t98KBDBJTaz/XDLGl9ac6f7Ig5stOTkry
OJRs39pAdW8BtrkPf87wDPgNVXN6CkbgxGpXeX9YK5zXfXkzNIYN/RoiT+YS
efNtmcsbTWsD5/Xev7U1OEC7MBtZ0NEJ35b8WQ3l7bCUkTM2m88Br5Az4Q0C
jfDq34D7k+YO6M660b6wjgueKlExPXXFUDy6ZJXY1QlFJGustRYXJGuYjwLL
HyDVsffFq61d0Bvm6p19nAvxESGiG8J4/FA7TGfn5oJDgvc1N20S8D2Lif8m
SYeqwqTmaYM82NvuIqK/lgILVl3/KI+p8Pw//th8TAFIil75EVhKBcOlf9MN
tWRwGj63f1CjCMJ/C7GDTOkga3/zryiRCDScwjtzr2J4EC69KFXHAD7yD/WX
HDw8EBN5G5NVAjKbM85+3sQC2bKtnRndOFgubixN7y+FsA0uaRu0ZkDJzeZT
+MdxuF+rcHnnXBnkDuEVd2uxYbdLf9l+kxEIFx6QFBSsAJ9AG6f4TRy4sqdq
f9lEP+z9TDe7taUSuhLHpU/XciC1vQx3L70dSmx3Z22QqIKF7onWCQMuFN/Y
MoDLrQNlP0NDxQ3VcFMe8z3gExeu2x+8MyyTAwaCM+v/cKuh+Kybn28PF26M
a16a00hFVqUPyO/aakA13JPF6eUCI2ba6Nb5WjT/4YeY1etv4P4w2ITD20dv
49G/e5bpMLTuR/7yHaiL1XfUZawhA6dd8dsjaxpQBVNyL744U2eK/G9MkSmg
0PLOnvmSAm0HmtNK413q/DaLfBMrpMHD328/L74mweGOpQ7LAsM6viX9ljFr
BtjEWBjKeBJgc9G87xpkUReQMaz3aIQJKnQ+rw1eUxCgY21PPnyp7szWOrye
8gw0HryR/RMzDpOX38k5BOnWPfsUfs3FiA0+j7M1o3eNgFHab8k3a2/VPayZ
HWo+zIHr0l9X11zsh6p85Wz84dt1C1GaofvmOBD+utC5mNQKa/7/9yzr/vUL
P/24kKBbEFu6qQb2ZdDtZfA2dZHj+P8ejnBBQWL9wQ0hH8Dod8V8yF+nOqFG
JYvsVS78IrjM86SPnG08YzG/btcd2gnbO39wQWzTqNmfHQ2o8oCniFPFhbr/
f3Lhb4tNsezFLnSr+O5OV2+butAZsuqxU1y4v1JraGBEB/ybR5/lPn9BBeYq
l8vbyZAVVBczweMd373pW2rDC1Dne6nQimYqhBNW1hZbkeFDm61TgnoRcmhs
s5RIpYN0hnattyQRMDA/6RZejCyMXI/38XLnut6h+N6r03DO5chT/eES9Oxd
bP+zLhbwN7Z8KrgyAWEDxUeerC9DRyhfHT5vYoNfqNeZDUdGQGza5/fGXeXI
aYpkESXBgeHU7T7li30QuDpaJL2rAlUVOSbVYTlQOOx0JuFhC2gwI+0S11ei
gjtbl0xcuXB2Nonlu1QOsRPdXzhDlSjf/L8IyTouWPsdehV82hvsk+V/XQ+t
Qp8Z7/YcneDCM3u8K8W/FH0NrcrF7a5Gz/7zOvSynguaD2q/13Cb0MmUatv0
rGqEbdhy28ybC9Rgwz1nV3pQi3/L4B6RGrQ5N7ng/CwHFnsbu9M5Q8joY/95
QasaNKmT82FUhwNuuLQ6shMNNPMsRAcmvqEH9xQZfJEUkPIs+bP5BAU27HrR
9odQh8ZK9dg5STQYUlBwfT9FhC9p66MMaPXI1Kx9el8gA/wTzv7uOoOHNExC
Jt64EWl1ruwTUGWBVk2s8BelSXiUd8vw3psmJPPyg1hg1AxcK+s5gIJH4FbL
Nb/Jomb0+mBPiFYRG0Y2vuMzyO8DFZbwNePSFnRzIXhHdzAHwODJ+hyLZpDQ
3mxfFNOK0n/6pfJv40LsH/8fr/RLoOzn+XenLrWhlXfep7OvcyFcUDP2t3YE
anu0sajqRxval2SR6u3BhY975aXyZ6tQpO+D+fYH7Wgy498FE55vWFLHjgS2
tqKNhjGq7bh2NJ9ioZ86xYFbGsdmm6/2o0a9DgU31Q5koTAwYXaGA5L5RQr6
/40gNwtpt1LbDoQdfznrE8KG90w9+60N4yhI//3vGfcOJCcyx1f9YQawfyy+
uxtRYSo1kB1FbEEnsHseaplTofMo0pzuJkHzzg0D7dCOxm1+H3zjTIccIZlg
pigBTrE8fqz6daL1x9Oz355ggvjoI/8Pulj4YYb79CmkG515Zxj1eIAF++Te
ZS3IjoKBv/hUn00vWouRyA4RZYNx7B/b/W19oOrgekSd1ockHgT/sv3Jhl+z
JnZ6Xk3wT+ZnUEZCP/KveyQn+YoDx3Qntx9ILAD7WuGINMUBdHaslK+klQPe
bxY6AxtS0WYM8+z+twPIb7+1yrEGDgSO2PofD6xDJRucsJr4AWTW7kHUeMoB
PQe5zj+1HSgyqOTIve2D6Pqbn61f+Tjg46bcoDM0gBQjjKMVTg6iP32NTbWX
2dBepaV5PnAUndes3kO0GkRtraVXDF7NAPfix4/L5Al0+S/mzFebQUTKfxy+
OYIFhUfMHkavn0bj2ukVc8aDKGrsVNU+HyaopfRqPcDx+qwSsfJeSi9aL1OQ
0SpAg1eW0a/frBDAyuNlnD+7Hy38xsfkSzDg8/JS3UIODpS9FZQ+uQwiu0UJ
qRuDTFjnQZdq+DMKK+cpYsfKh1CRiwLhhsYM5GfiHNbs74f9obSE4u5hFH2/
DR+kyoa7z3HC2KlGsGHK/hgtGEFTLt6agbVskDrY4tVnnwMORsb8dXajaE1i
2MNv82xYfyZYfsu2LwhkTyWKYUfRn7IaQe0xNpyPPH50t2wj2q5m6eR0BIMO
XUukLj5mQ8SdZaOxyW70cwUFi3lg0BW9sBU18gwIP3mnHHdrCImVPY32C8eg
00nSflcUZiCzOIwus4JBAQZ4T2w0Bi2cUtYW12HBLZX6boMjWDR+Qsfi8EsM
as3uHBI7woQO0ZO/4kXwqP653p8HNzEof598XbIUA7puaA2YYggo3N0O+00T
g/Qvb/tFptDgt+BvcpEkCXIlKizspYbRr4cXvhdn0mDtfZayss802CUEtWnL
jaLM58/zROIYkCruGK1+bAyujTa1aOIx6HmWTWT6dhZc0KngX9PYDxNqK4Ys
y3Hkp56xUrZ3BvaU/pu+WtUIJXIzLtYPJlDwdypGpnEG2NlcpdBt6fDhZIvV
BdNJtAV70+HpzAwImq0oy4YVo40bg88cH5tE9Yk2jz7XzIDniHZz5mozap+X
9Y5Wx6LVv5a3N8IMVCsM+RVv6kcG5W0PDe2wyHvPpatFr1mw4/PexESJEXR+
ezLexxmLhHvx1mN5TJBw3pL7KWEcpdx/ujhrhUXOD7Ma8gsY0DbEqaN8xaHB
OCG27SEs8pR8ohb7gQ73vt9Tcv6KR9eyP6x78HcSvf7yg1DvTYM3H2WPTtkQ
0fur3bLxtZMoz5r6o/EEFdIOJ/kwxkjonWQkccl9ElV+2bQgsJ4C+hfuS/KP
4EEUk1uSZDCOFF+s1tZsp8PnPPngfby+eiFi2PVVzCTyapQzMe9nwIvl0b4D
1QMge9l6R8JDHKpR93ohv8qE1JN37Bx4vDt29YQiP2kKKTWukbj0iQXnLOk+
vlVJIOq69+zQ5DTaLv9z0/7vLJDXEz4ulVSOvD2/q37UxqNNa/sVl7x566nh
kW/62tAJ47VPDzvgkbSdoFMFhgn7+M893FoygPBv5tfiXfBosnBivSofE5xH
7d6+6RtFKVKefUvX8Ihtd8wwex0DOL51f6rMJ5HTNivXZmM8eijEGJ6aoUGg
lqWfkck0kkl/NpL5Hx4ZK+0/FM3L97emtVeUbhKQfjOh9slaPKqZlMIHvKNA
4rzBsaezRHTZ9Pkdia/T6Fz4t7JzdmSwYjS37TMnI2NTp5b3F6fRt/OKL3UU
SaDZ/bx4axgFbYS4cvu5KbSuvwcSGAS4b+8c5SSOhR266vnhJVOIunrV8dhF
Ogh1f5loPTAE/cnchNG3eHTL/kTCCq/PHtLwVcW6NsNx87u2wvcISHh253CD
Na+3iy2+C5RKgM8/b2md5CMi++xp42teTPjbYM3tJlUhr+SKWLcLRKT9lzsp
IMaETz5h0iznTpQ2t/FS8B0imr92zDrpEgM2yJaGOJgMoRef17rlOBIRNbfg
a7odHR5pWaWeCxtDuUpV7oUGRHS09TCa06NB3PR5tU+iOHQk0ukBYSsR8XPy
WwuEqbBRQjvl5mPeeSyZlbqTCGjxlTMlvpsMvVbXz+39j4i+vY+8oP2VgJRv
R0985PEoPn9G4EgiCU3QJdViHxHQ5+MBByVMidDj75lrOUVGd5htnOZTBLTF
66lptzABHL8dsPq+SEFLfkW6buIE5IEtKDySMQ3RIendJmwqIrfMkNqm8Kit
3xIbp4cDx1t6DQM8n7Y+tRZ3TX4QjPds8T8rz/MLsc2la2lMSM9kTw+dG4DA
rcFkxvop2O/yV/LCzARMOg836ewjw6mrj7t8CWT4r3N7OZPI62WahzYxsshg
YscWtfpOBj61KJwDfQKU3QKG7x3FoQcHw8885PnY35T+DWN807Ay5vJO/uck
4qvPfDZ1gg6WIDOm/52CTGo9Y66a45HdH8XxRhIe3u+zq89/QEVLvZWHbyzi
UavZnq9fPKbgjbB82OwTHj+GGttKWQ7B0WeuqdVnpsBX5AtOrQULJzW9ZwuM
KUC8FNJasZUEN/8ptt7Iw4AD/9Pz8ivTaFtG33ZDcQYoe5abqpymokXBVPs9
R/EIs52w4bUpHi50XL5wsZgJSTEhSubnB8GTu1x97cAUzAdIHw+8NQkzN90T
2n6TgbhPN8KNTgJWq905xsNJWBhL9LZexiH/vLUljhV0+CkqOfDuKhXZifXt
sEzAo/kDZ06wXvDmLOB5x4bBBEG+Ifci0gCQ66BALhsHRoXC8TVWWNB4N+cb
/IoCDKkzNYu/ifDxHSr9RRiHKOelUfmr0+hXnvdfVd7+xymSpYQEKprYXX2+
PwKP/uNzjP/HnILhqqsrKqVMiNZLZPlSB0GqrqTErQMHM+XGnzx459iT5X+z
8CgFCiiH6m/1k8B6/oohxOCAc8hWweIiDimNhZqfNqND5p53o39KqGjwWo24
IAuPDqvuTywYwUHRwnwe4t2bVCkHlQsPByDnphRnkxMeYsaV9n68zIApQ9yh
7icjMCnjZbTJAg8Fn490ndJiwJptu3cG9g3CIisdnbEggJ75NVznKzrEOjsI
uq6MwkfqQ5W8jQT4dEv3d4YlHXSG99ptURkGrS0iAen7iTCZq9slxOttmF1d
82cCxkC8Tth3sJgAfS84UfVuNLhz5H4p49kIZBuuK5dcJMIbj7vSW0ap4CVZ
YvZ1zQRUlQncxZ8kQoi68fMzz6iATxlI1Z0YhcUQ21WBAhLsT/1Y5LxCgU11
TsYSLyfBiDA38aCOCDbmm3aWRFFgI/HyYOjhMZA2LDBTv0CGI8Pjt0/vpoC9
d/LT/4RwsO5wmP5dJRKUjf0ukU0hg4R7QMXbqHHwihFqC+fxkPjXzx86HpLA
/AczWkAMD3lpvb+I+SQQ7pvpmawmQlzrwl5tSywQDJU2k75T4H30XcEX2URI
kvCPoGHw4F8j1RzcRwJZ+j7q/VYCLASm+EbU4eD70yc2yeJU4ObLXF/BEEDg
wL0j5hkECLj2tK4CS4L+2wLNFQN4nn75b1uqT8P3T58qB3jca/wm55q6CAHC
HKkl3veIQGG2F/kNk6Cj5jZ2rHwaGnpVRTsv4eFs5mB6UwAVvmomNnFP4uGm
8HLS1ZMk+HVn15qBChKEuNp5b23Ewe8u8xYJSQIU5Nx5kJJABe1T6ia0xSlY
DviznbOVDHEFPzdlv+Dtf3tp2q1lEuzcQ/tHxghgl96Q45FJBcm7e/rU3HFA
Olu3/j6LDG/0l/oCdUmgZdjGH1o7Dn4DffTD6US4GuEkLpFEBf8L+6uHyAyo
dzSubmrvAdrihW3VpwgwFWyIu7dMB7rF8LFt4v2QsrpzX5oFEeb0dlTsEKAD
+8LOTYLHByDppXnD9/MkeB7+NbByPQ38l7Udft4ehNtb+eZI2mRI3iN4i7WG
CmbqGL4fMUPwVznb1X4LBZwDBoz3LJDhc+iBPKf6YcgU2NqMwVBAjGbi/oRM
AquMR8dp7BH4mWHEb/GaCmsoEXkPKwnAyHG7qX1xDL4ZGo7vraCBYlWtdF0C
HkJ8dywXhI/Dx+gvqfEH6TCXiW09Psfz3V8vWcOdE3D9DVa/9iMdCqQWbuek
YKF3+sIC4uXkvcDMRPYcnXcPzieY6U3AZaWDJdbXcLBbwHLOQpsBuqe9ngy3
YCD3tc/j42VToI4PF+r3ZMC7eJroquYIYNiyAzZCeMheNdZcjWWAHDE6kZ7B
gO9yFUFiPu3gG/n1yqQSEfwN+DyFM+lw86Ar56hrJwR3TkznWJBgzz3Fb+w4
GlRs8E/Y69gNyxlVmQoeZNANOZ/7xI8KFvL71bZZ9ULCgsmZ7kcUILf9Pn/P
mgIvypX0riv1g9zs4pEiLyok3fsXdU6FDJiHX/ob5AfgA25i1xkrGly5Y3T0
4DwRTnK7TSSkBsGs6uwfX2U6OHZ29WR44eHS+qYn1qLDcM053j75LQOqXZ/O
8ZlOQY5g0qi16Aio/ePr/6DMhOC9L6uzkydhb8BKdMvmUTAf8bmXmc+EFZuZ
reumx+Cmo+msvQwG4jwids3uYsGGv/o5VIFR6NjKrM3YMwb8YmdfXX/BAtPc
y3+2iw5BG8XuVJPWODx4/NX18RAL7AK/3FtH6oPFJb0lF7MJuHZq2uqI+AzP
Uv9tUj/LAIOxFU4goRHUzhjEOK0nwZ/C3Xd7eOd8/KwIO86tGRoWPOTp5mTo
2qkXcHMdDdj3pEM//GqBjSkTv1teUyC/Zh15TTsFGvQIgh4BbZB0ZzWIr4QK
NzBexJinZNBsPUTw5+8A2eMj8jotNPCc0dPuVyYBY52Lf/qrTvjnl1cT1USH
wrzGQpEWAuw3lfdSFOgG8xAf8cR8BkT6Pd+4rw0HA9Qr+2/w9UFIJObfDX0W
3JWzsS5vnQA15bgmE4N+SE5wKf1OY0Fwz17F//0fcPnjR+mVtQOwV21bl4//
DIh+aF4T7T8M4ye+xkY3DcCl3fYBt1dmwPpRTU/6vgHYtihyQSx4EHyLI3eJ
32aDlp6WkbFHFxwa1N0uZzoExvTNHY7f2HCLmNbLOtQMpCmrZxMbhyF9y7pr
yYtsCFj6l1aMoUNZc7ieyJoaCD17h7KXl7/fSnucpT7RgLWjZsJCtRa+veZ/
VHSeAh/O6opqm1FBlZ8fK3ihDo4sPztxOIMKwurpLG8aGXLzPSOcj9ZDjmHe
K2ESDQo/256Su0eCD0V3//mdaoBPb/dztUQYUP5FQc6ORYD0VRXqhbONUChz
SNpBnpffu3EWf23w0KpTJVt1vgnuvcY/L9nKgootk58CZCfg7nYFnMbZFrj/
+uUZT14PCusu6XbJH4UGqZXPGoatQJg8VDtziw225Vj5Y3uGoNjw3JUF3Tao
utH9bdcyG4JvFy7cEOgD6Z1zJ5zU24Gz/u7jhPscENQOssp60QY/Bc6G/djR
AY9FvSJ8BjlwLjyAa+iPQPtSletLoU7AvjpyQ2MrFxyX8o4FlX+FPvMXZ/ay
O6H1kPn3BG0uuOBWb28wpAPDPt27YvYLbH6Zf7W1gwxmgyXCb0hUiIzRof0+
UgA6UjPXuk15HDuVRlC7TQGlyC1+Jj6FEBomN7ajnAadqq+7cIMkaE/InF8z
XAR3viww9m5gQI5Pg1ChKhHGtpb9PkQrhnvby05onuDdu12vtsV54GF87Gtt
23wJuJGtPxjZseCX2k5bdxMc2AgFFu//VQovSGcKlS/PwOZHenILQyNQwhKU
pVHK4dGH7EHcT55+Itz32iwNgNjdWzjPwQp44eI85xPLAcVx083rRbvBsTgr
5F1FJSj5HLtTLskF7kExCcbfJmhVVPIYj66Cf0n+E4q+XEiYoRjYPq+EkbFo
HzunasDFaNKGyriwr97vTVh0ArjUemPjVGugPOLcgtUgF8KQEn2vQRY6Hquz
akysAW1rTdWELi5Y8BnFzr+hgU5gUHHhPtM6b9zsR50vFPB/81buM48r9H1f
jm6Sv1mnV5LKEDtBg4tm9XPZZmQofi+PJo/b1nmkhPyoq6XDxONv05RnPO7b
/iMyM9Gs7qDn0ZCk7Uy4EWU0mf8JD3Mp23Jbzl+sk1AcPStpy/Mf09/uz8/j
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\[Beta]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{363.62255629038236`, 184.90448370770056`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->NCache[{{
      ArcSin[1 - 2^Rational[-1, 2]], Rational[1, 4] Pi}, {0.4881468020762414, 
     1.570796326794898}, {0.7359481958835513, 1.0300830144690174`}}, {{
    0.2972513613212069, 0.7853981633974483}, {0.4881468020762414, 
    1.570796326794898}, {0.7359481958835513, 1.0300830144690174`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.073344616985042, 0.044594310058391394`, 2.673808790233434},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.581609096455961*^9, 3.5816289197193604`*^9, 3.58168788679126*^9, 
   3.5819447901637697`*^9, 3.581951034908289*^9, 3.5819533173554783`*^9, 
   3.5821142198997307`*^9, 3.582114951275977*^9, 3.582216621867839*^9, 
   3.582223201755753*^9, {3.582286941086684*^9, 3.582286957215057*^9}, 
   3.582302582262513*^9, 3.582303339581299*^9, 3.58274021742274*^9, 
   3.582740765531266*^9, 3.583763378488957*^9, 3.590759438998534*^9, 
   3.590835632984823*^9, 3.590837068452118*^9, 3.590924442561226*^9, 
   3.591617761635764*^9, 3.5928382714151497`*^9, 3.5928413586413317`*^9, 
   3.593124593379208*^9, 3.686070283937107*^9, 3.68693168944556*^9, 
   3.771591849854644*^9, 3.771624209995349*^9, 3.771624571238709*^9, 
   3.771626405392148*^9, 3.771626756886554*^9, 3.771767603492222*^9, 
   3.77203315252115*^9, 3.772901362601137*^9, 3.7729051949953117`*^9, 
   3.772977060979888*^9},
 CellLabel->
  "Out[1938]=",ExpressionUUID->"bde9b4f7-8400-4ced-b045-3ebcfc475c3b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.581609094038151*^9, 3.581609094069778*^9}},
 CellLabel->
  "In[1939]:=",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],

Cell["\<\
Color the moduli space region with color depending on the density. Red shade \
is close to 1 and Blue shade is close to .5\
\>", "Text",
 CellChangeTimes->{{3.5816092922408857`*^9, 3.5816093140005407`*^9}, {
  3.581609621573914*^9, 3.5816096454884663`*^9}, {3.581953354061882*^9, 
  3.5819533586268*^9}, {3.582222943743129*^9, 
  3.582222944008811*^9}},ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-\
8ad9c9b01e0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"(", 
         RowBox[{"torusRatio", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], "]"}],
        ",", 
       RowBox[{"Im", "[", 
        RowBox[{"(", 
         RowBox[{"torusRatio", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"ArcSin", "[", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "]"}], ",", 
       RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"2", " ", 
              RowBox[{"ArcTan", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
        "\[Alpha]"}]}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}], "+", 
              
              RowBox[{"4", " ", 
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "#3", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}], "2"]}]}], ")"}]}]}], ">", 
          "1"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "#3", "]"}], "<", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}], " ", 
               RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
              RowBox[{
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{"10", "-", 
                RowBox[{"8", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#4"}], "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
              "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ")"}]}], " ", "&&",
          " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SqrtBox["2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{"10", "-", 
                RowBox[{"8", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#4"}], "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
              " ", 
              RowBox[{"Tan", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
             "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", 
              RowBox[{"Sin", "[", "#3", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ">", "0"}], "&&",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]], 
           RowBox[{"Sec", "[", "#3", "]"}], " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"4", " ", "#3"}], "+", 
                RowBox[{"2", " ", "#4"}]}], "]"}], "+", 
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#4"}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "#3"}], "+", 
                    RowBox[{"2", " ", "#4"}]}], "]"}]}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Sin", "[", "#3", "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}]}], ")"}]}]}],
           ">", "1"}]}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Hue", "[", "torusDensity", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", "->", "#3"}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", "#4"}]}], "}"}]}], " ", "&"}], 
       ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"BoundaryStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], " ", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "/", "torusRatio"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], "]"}],
        ",", 
       RowBox[{"Im", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "/", "torusRatio"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"ArcSin", "[", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "]"}], ",", 
       RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Pi", "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
             RowBox[{"2", " ", 
              RowBox[{"ArcTan", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
        "\[Alpha]"}]}], "}"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}], "+", 
              
              RowBox[{"4", " ", 
               SqrtBox["2"], " ", 
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "#3", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                 RowBox[{"#3", "+", "#4"}], "]"}], "2"]}]}], ")"}]}]}], ">", 
          "1"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"Tan", "[", "#3", "]"}], "<", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}], " ", 
               RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
              RowBox[{
               SqrtBox[
                RowBox[{"10", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#4"}], "]"}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
               " ", 
               RowBox[{"Tan", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{"10", "-", 
                RowBox[{"8", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#4"}], "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
              "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ")"}]}], " ", "&&",
          " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SqrtBox["2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}], " ", 
              RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
             RowBox[{
              SqrtBox[
               RowBox[{"10", "-", 
                RowBox[{"8", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#4"}], "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
              " ", 
              RowBox[{"Tan", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
             "+", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", 
              RowBox[{"Sin", "[", "#3", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ">", "0"}], "&&",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]], 
           RowBox[{"Sec", "[", "#3", "]"}], " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"4", " ", "#3"}], "+", 
                RowBox[{"2", " ", "#4"}]}], "]"}], "+", 
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", "#3", "]"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"#3", "+", "#4"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SqrtBox["2"], " ", 
                  SqrtBox[
                   RowBox[{"10", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "#4"}], "]"}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"4", " ", "#3"}], "+", 
                    RowBox[{"2", " ", "#4"}]}], "]"}]}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"Sin", "[", "#3", "]"}], " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}]}], ")"}]}]}],
           "<", "1"}]}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Hue", "[", "torusDensity", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", "->", "#3"}], ",", 
           RowBox[{"\[Beta]", "\[Rule]", "#4"}]}], "}"}]}], " ", "&"}], 
       ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"BoundaryStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.5814415563651342`*^9, 3.58144157581666*^9}, {
   3.58144166381931*^9, 3.581441756142213*^9}, {3.581441806320602*^9, 
   3.581441878069029*^9}, {3.581441915668941*^9, 3.581441925996266*^9}, 
   3.581441969683961*^9, {3.581442240718355*^9, 3.581442258158124*^9}, {
   3.581442377548176*^9, 3.581442417514968*^9}, {3.58144247190583*^9, 
   3.5814424734743013`*^9}, {3.581442751557214*^9, 3.5814427571400003`*^9}, {
   3.5814434590030537`*^9, 3.581443460904909*^9}, {3.581609502983444*^9, 
   3.581609548034075*^9}, {3.581609898970262*^9, 3.581609928408107*^9}, 
   3.581673696967795*^9, {3.581944806767089*^9, 3.58194488275401*^9}, {
   3.5819533247323313`*^9, 3.581953341447814*^9}, {3.58221665186229*^9, 
   3.582216657188343*^9}, {3.582216731483777*^9, 3.582216751511827*^9}, {
   3.582216898707114*^9, 3.5822169242483463`*^9}, {3.5822229328956413`*^9, 
   3.582222933118864*^9}, {3.58228697958738*^9, 3.582286980702338*^9}, {
   3.5822870338872538`*^9, 3.582287078033432*^9}, {3.582303381723358*^9, 
   3.582303382080562*^9}, {3.583763394256619*^9, 3.583763397797147*^9}, 
   3.771626448096888*^9, 3.772901225154244*^9, 3.772901292951006*^9, {
   3.772901531725925*^9, 3.77290154598899*^9}, {3.772901601524591*^9, 
   3.7729016413746157`*^9}, {3.7729016787071753`*^9, 
   3.7729016869429092`*^9}, {3.772901717471553*^9, 3.7729017175539722`*^9}},
 CellLabel->
  "In[1940]:=",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
SQ5l0ZESu5evNiFYtd5zQduyaTr+BxXdF5c=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1], EdgeForm[None], GraphicsGroupBox[
        TagBox[{
          PolygonBox[{{586, 68, 111}, {587, 3, 78}, {574, 122, 49}, {579, 148,
            123}, {594, 129, 151}, {567, 136, 76}, {581, 92, 137}, {585, 91, 
           142}, {583, 53, 125}, {591, 97, 146}, {588, 115, 144}, {589, 45, 
           95}, {572, 112, 69}}], PolygonBox[CompressedData["
1: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
N+JR4lLwi7ObM3y58bqL58MWbFphW1n7VNeRdbX9yz1+qvswF3Oie4r3kj39
IPJMYx+XeT76T9Ckfau8OxF371ry/OUcXhIZ6xLrd/f5wF5xXz/E9n0RGS93
K4mH1JGBnQdZjoy4mnh4inWCr+Dtl9b3qfGeWPqrSOwkdib2/SYS64h1wVXi
adrmeCw6iP0P9lh0dC+Jt5TwtNGHeZkf27Cxm/X1sP0rbTO2cj71LBmvE7ff
GHmOrfIe13UdGW30AceJ34njwfOVkePR09j2rHY/7Pss8v7PmcX5xVpZc6+S
5/kKz3G4/YW+q1TeHHk3WGUZerjv9fKe0Uaf1d4L1s752ajk/WEM/4Rtw0Zs
xWbOFe4T7DV7Tm6Bs4tYnrvDGtuG7hmen/vDDMu+jcxP7CBq4joyzp5jLUfG
uTnX9qKzt9c72fpWeT3cxTlruRsc7338znayn31K3gdom+ex6OC+cZzH/mif
bGh/hT/B37+358c2bPw+Uh96m7mOjLPvRPsXe3KK/W+TkvchzkHOP+rIuGsR
L/Qred9i79jDNR6PHr7/D5Ht9OO85fwCCLhXcX4SB5DP4Rux3r6eD1uwib59
vPZTbTey/rZ/pcefbn9kLuZE90zvZU/79jH2DXyEs4m7BGOxgbsUd7GfIu9j
A0qet9jNfW2g7f81Mt/GN+f7D3Q79zfOf+JU8in4Od+btn7eG+Khb9x+lv2P
OmO4m3F3rPHc2EN8M8gy7oHEA79E3i93LBk/UEdGG32Q13E+B50DPH6Q1/Ot
7T/P/kCdNd0deZfrVPI+yLnNeQ3Ic7/bSWWryDoyYg3ufMQd9X3/Q7aj+cG2
r75txRbO652sj7nutj+S/7vI35s6sQ13Qe62a5e83w4pGb8MMX+h+1CnD7EM
d1nGogO9+MdQr+di96HOGskdEN+xP5XziQvsr+Q7L7N/Nih5Xx1VMh5hfu7H
w21PE9uGLcSXw0rer7lnc/+tMY+81rrruI0+w62PezfxFf5HPvZK+1O9kvfv
ESXjK2ylD22z3EYfYjHu2sSJTd2H7z3CfbjHL7Luuq7Ptm01nhsbiOua+76P
zmHmR9p+csfEXMRa3OV/sexa+ydtLeyTfH/2jj0ktuPOP8r7eY11EPe1cj6A
Pq28Vuwjfh7jf5a80EORtgzz/hEvNyyZrw77Z5ifY3+k3tBj0THC8432fvIt
+CZ8d/5vcrjEDMQK5OqIR2udjwIzdo+8n+4tftNI3yO/eov9q2nJ/MLYkvFh
rX2HtRKjjnU7eQjyEU08fm37E/Um5f9zFegkViRnQe6d2JzcArmJziXzHcST
xLvjzM/1GOr0IZdBfN/MOmr8PWvM32YfGF8y3zHPczQ3j5z4kjoyYuP5Xg/5
kwleb3uvHfvJqeCbvEfcYX9qYb6e9586MnIf5FYmWN98zzGxZL5lgftQb1ky
1ia3gl3kV3axfbuYv9N9Oth21sL9oaX1/abX/zfvF/f81//MN/D/vnvJfMg0
1TtG1pFxF+U+0LpkPElc2SEy7id/Qx6H+H/dku8vnDnEI/Rt7Tb6NHL7/fav
iR6/m+3raFtZ+0L3RedTkbmnzp57SeT9srZkPup3rCOyhL/PY6jTh7sEuaRd
rWOS7Z9kfpH74Hu85yy2P7Ux39Tfm3ob7we5qF0j81HsUUfXkfWPzEUdFJmP
oo5s05I88o3dhozcFPE8etDxoOfA93g/etT+QZ27D7kjcl+7Rea/9mCvIkv4
R9yHOn0GROa61re+5vafaf7GtNEHX2jl/eXOMMp4sLP9A3/iPeYJ+9tA2qrM
C8/w/OTLDo60Z8+S+TbybuTHGNvW9cfddw/b+qT9i/eYp+0z5DbIPRG/H+A2
7oLkBsm17VUy3/aUZZMieeSd8YfI+bGjU6RdzEleb6Db6EMd2SGR+Trydjvy
f5d8/6q1f4GD4CF5u+eNjWDkoMgcHn3bu40+7Wxza/tbrfs8Z3/raVuxnfsy
djI/dnSyLXt6v5Z6vYw5NHJ9h1oHc2NDW3+flv6f2Av2hLWwJt5kxlb55sNb
De9U48SfFPleRY5wSJXvWuQOeRvsU+VbIG+EvIONEH9Y5HvYHoyr8h2Rt8lh
qvev8t2Id7StRIOrfAfj/Yu7KX1oO91z71Tl291Jtm1QlW9T2Mh7Va8qc5Hj
XB8t2idSNkD1i1WOqfIdjne1kVXmO8mhb49tVb6x8dZG335VvocdE2nr+Crf
uLAZW4ZW+X41zHsxwLrZk/8Arei9kA==
           "]], 
          PolygonBox[{{578, 577, 121, 147, 122}, {570, 585, 142, 110, 68}, {
           571, 569, 93, 143, 112}, {119, 590, 145, 118, 71}}], 
          PolygonBox[CompressedData["
1:eJwtkU1LQlEQhueKUZvEVeAizEzTa1m6qDR05UfWTnCt+AOUoqJFqCj2T6tF
+9Y+L2fgPjyc4Zxh3rm56Xw4S5hZCg7gHjbwCJeRWROf42PdwTGeQwdmUIYs
dT77tnBf7/R+DQ1IcD7Ch/gWL+ABPuEGCtTT+N/vr2AAF9TvcNHfq08bf8ET
VDm3cAnn8Qiu4QP6UKFex2d4H+ejMO8LdOFZd+DE51eOKxzjnrLhKs7hPfxr
oZ/6qv871GDiu/tTdniz8D72fqc4iccW8iiX8i0t7EO5lT/yPMqlfFv/Hynf
f8bnKft8rxb+h/au+X9gB2k3HzQ=
           "]]},
         Annotation[#, "Charting`Private`Tag$561252#1"]& ]]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1:eJwt0D0vQ2EYgOGXTmIwSQciQdHFKKVKPxRtfRdFiYRItL6TbjabxCTxFzp3
Npv8HzvXmxiu3M9zck7OOe/45WP9oS+EcM4PA1yw0x9CkRLP9mV914KukTBv
aEc3dYFFnuw5fdWMnmpVs5TNNT3TVZ3VLZ3nw7yiu8yZ1+P97HFlf+OFuj1P
hSX2GXX9IL6X6zi71orfzCGTtMnTIMVN/BeOmOKWIsdMc0eJE2a4j99Hk3Q8
L4f2rWM6EZ/TL03qiG7rpw7qsJa1p78MkbV3/8/8D26OIRU=
       "],
       VertexColors->None]}},
    VertexColors->{
      Hue[0.8193472357240549], 
      Hue[0.8200721056451289], 
      Hue[0.8239249763457613], 
      Hue[0.7959884694424999], 
      Hue[0.7926727832509676], 
      Hue[0.7922719567959026], 
      Hue[0.7947898968750512], 
      Hue[0.8002822853495649], 
      Hue[0.8088593831426076], 
      Hue[0.7761381157460581], 
      Hue[0.7721428389664199], 
      Hue[0.7709918546094062], 
      Hue[0.772681348820428], 
      Hue[0.7772579759544604], 
      Hue[0.7848213832418776], 
      Hue[0.761346454381498], 
      Hue[0.7568988806251045], 
      Hue[0.755249473576115], 
      Hue[0.7563894148277386], 
      Hue[0.7603594848516668], 
      Hue[0.7672523978311822], 
      Hue[0.7511044159671069], 
      Hue[0.746368923482123], 
      Hue[0.7444021747950894], 
      Hue[0.7451921213764239], 
      Hue[0.7487757447846721], 
      Hue[0.7552412667125229], 
      Hue[0.7523726184343483], 
      Hue[0.7450824927233496], 
      Hue[0.7401869225349329], 
      Hue[0.7380435966249441], 
      Hue[0.738638631326385], 
      Hue[0.7420068488004342], 
      Hue[0.7482339159444904], 
      Hue[0.7430951646440582], 
      Hue[0.7381482226005391], 
      Hue[0.7359481959146865], 
      Hue[0.7364806037777528], 
      Hue[0.7397795657100462], 
      Hue[0.745929917332993], 
      Hue[0.8353693898734498], 
      Hue[0.8201186584443511], 
      Hue[0.8193315654362087], 
      Hue[0.8215726240829162], 
      Hue[0.808050949655397], 
      Hue[0.80517373808245], 
      Hue[0.7939645206187094], 
      Hue[0.8083554677248644], 
      Hue[0.8144684970239447], 
      Hue[0.797158722008929], 
      Hue[0.8041760960749639], 
      Hue[0.7853906676341252], 
      Hue[0.7791593077815621], 
      Hue[0.7681465406635652], 
      Hue[0.7646357832347825], 
      Hue[0.7556810178994989], 
      Hue[0.7545275491239449], 
      Hue[0.7475806250768136], 
      Hue[0.7485799762816409], 
      Hue[0.7511141955210826], 
      Hue[0.7435910708666787], 
      Hue[0.7466164981149607], 
      Hue[0.7402755400604265], 
      Hue[0.7367068787931379], 
      Hue[0.7358718663500128], 
      Hue[0.7377801917280828], 
      Hue[0.7424909307988444], 
      Hue[0.8358644856380354], 
      Hue[0.8357270396647446], 
      Hue[0.8062316523042633], 
      Hue[0.8110265347840375], 
      Hue[0.7713417721623547], 
      Hue[0.7590455201309755], 
      Hue[0.7510476470797974], 
      Hue[0.747106484597565], 
      Hue[0.8441401668684403], 
      Hue[0.8196071516802215], 
      Hue[0.8226099680918316], 
      Hue[0.8158439780815523], 
      Hue[0.8064177019882682], 
      Hue[0.79051549626854], 
      Hue[0.7775865593130196], 
      Hue[0.771989367755736], 
      Hue[0.7516386794702087], 
      Hue[0.7447674083393996], 
      Hue[0.7391258099810677], 
      Hue[0.7362422944295886], 
      Hue[0.7360903129635112], 
      Hue[0.7386917209092774], 
      Hue[0.7441183555972378], 
      Hue[0.8531222883533758], 
      Hue[0.8209154184795179], 
      Hue[0.828202786757778], 
      Hue[0.8207270018074673], 
      Hue[0.8018228928209064], 
      Hue[0.8071323612263539], 
      Hue[0.8159232790817023], 
      Hue[0.8021317976263203], 
      Hue[0.7806018782270342], 
      Hue[0.7662566304815764], 
      Hue[0.7565078298398368], 
      Hue[0.7505960884668841], 
      Hue[0.7508019455899577], 
      Hue[0.7486441017577785], 
      Hue[0.7415982990421537], 
      Hue[0.7373420814960738], 
      Hue[0.7358246385835434], 
      Hue[0.737043558042], 
      Hue[0.7410453548487629], 
      Hue[0.8354815625918909], 
      Hue[0.8277189595112205], 
      Hue[0.8373349831398249], 
      Hue[0.8272756143904192], 
      Hue[0.8354511788609361], 
      Hue[0.8284849021614034], 
      Hue[0.8129633062056374], 
      Hue[0.8070391892259414], 
      Hue[0.8126502096153753], 
      Hue[0.8186919587314323], 
      Hue[0.8095955273932359], 
      Hue[0.8111850282669271], 
      Hue[0.8170437710808311], 
      Hue[0.7867671731497439], 
      Hue[0.7696537485926602], 
      Hue[0.7751295190425996], 
      Hue[0.7678462096740744], 
      Hue[0.7617041278324486], 
      Hue[0.7566548420656576], 
      Hue[0.7613868124241123], 
      Hue[0.7526596428364872], 
      Hue[0.7496885878572616], 
      Hue[0.753049080276084], 
      Hue[0.7477197945314988], 
      Hue[0.7467389396740822], 
      Hue[0.7491312361000703], 
      Hue[0.8446388973597155], 
      Hue[0.8137055146936452], 
      Hue[0.8171713137684433], 
      Hue[0.7636975293615466], 
      Hue[0.7546513436718719], 
      Hue[0.7497409614812586], 
      Hue[0.844147251401359], 
      Hue[0.8276432249166521], 
      Hue[0.8289549540821513], 
      Hue[0.8190331250611008], 
      Hue[0.8135092350391304], 
      Hue[0.8090602653489222], 
      Hue[0.7919870184451688], 
      Hue[0.7820161474894585], 
      Hue[0.7734687013533867], 
      Hue[0.7586219289714284], 
      Hue[0.7516981381761757], 
      Hue[0.74876583156985], 
      Hue[0.8052779390548445], 
      Hue[0.7921089647192295], 
      Hue[0.7931638358578097], 
      Hue[0.7817014125694529], 
      Hue[0.773782754688116], 
      Hue[0.7808879433888087], 
      Hue[0.7712132171411952], 
      Hue[0.7829498661961987], 
      Hue[0.7714798273773976], 
      Hue[0.7879378386989523], 
      Hue[0.7746038301457416], 
      Hue[0.7959562207336304], 
      Hue[0.7806579170250354], 
      Hue[0.7639014053743717], 
      Hue[0.7587704274040321], 
      Hue[0.7624750561535105], 
      Hue[0.7557261075008058], 
      Hue[0.7638609162954649], 
      Hue[0.7554694058900785], 
      Hue[0.7681023995683194], 
      Hue[0.7580161490567343], 
      Hue[0.7752953307846324], 
      Hue[0.7634326518207879], 
      Hue[0.7510717042093262], 
      Hue[0.7483879249841976], 
      Hue[0.7492440563871811], 
      Hue[0.7450413472186334], 
      Hue[0.7501874503135629], 
      Hue[0.744451414188598], 
      Hue[0.7539405432648144], 
      Hue[0.7466304516390477], 
      Hue[0.7605935391062691], 
      Hue[0.7516406462389175], 
      Hue[0.7427506507375324], 
      Hue[0.7422879216792696], 
      Hue[0.7406796992784783], 
      Hue[0.7387732279171487], 
      Hue[0.7413546433937706], 
      Hue[0.7379977985231424], 
      Hue[0.7448111952706208], 
      Hue[0.7399719698306045], 
      Hue[0.7511360748170123], 
      Hue[0.7447555814160072], 
      Hue[0.7386568809340837], 
      Hue[0.7364709309589438], 
      Hue[0.7370188887778062], 
      Hue[0.7403350488136227], 
      Hue[0.7465044536055897], 
      Hue[0.8048559805364291], 
      Hue[0.8064424104018315], 
      Hue[0.7831845745739405], 
      Hue[0.7809364103004919], 
      Hue[0.7815575310677362], 
      Hue[0.7850728793860061], 
      Hue[0.7915594871083884], 
      Hue[0.7656692822602104], 
      Hue[0.7628374519471359], 
      Hue[0.7628149357804348], 
      Hue[0.7656199882795083], 
      Hue[0.7713217841660691], 
      Hue[0.7530260815196099], 
      Hue[0.7498119794250466], 
      Hue[0.7493681278822014], 
      Hue[0.7517083966105945], 
      Hue[0.7568967934686596], 
      Hue[0.7448180473509475], 
      Hue[0.7413722515830256], 
      Hue[0.7406728618284897], 
      Hue[0.7427310343764302], 
      Hue[0.7476075761985835], 
      Hue[0.7407776651592913], 
      Hue[0.7372224011737822], 
      Hue[0.736402181961227], 
      Hue[0.7383268576567726], 
      Hue[0.7430556942324483], 
      Hue[0.8196383779083726], 
      Hue[0.8120412877094443], 
      Hue[0.7932274686525723], 
      Hue[0.8124396161562383], 
      Hue[0.792099554529203], 
      Hue[0.7938846353266739], 
      Hue[0.7986252768861429], 
      Hue[0.7870037456821575], 
      Hue[0.7728737614733893], 
      Hue[0.7863862453438679], 
      Hue[0.7710140092696071], 
      Hue[0.7886646226541526], 
      Hue[0.7719910072073801], 
      Hue[0.7938918977530061], 
      Hue[0.775838643939226], 
      Hue[0.8021752067994127], 
      Hue[0.7826429551718622], 
      Hue[0.7629012811831075], 
      Hue[0.7678627413508321], 
      Hue[0.7577470229959328], 
      Hue[0.7665669838680546], 
      Hue[0.7554008182991169], 
      Hue[0.7680968279018545], 
      Hue[0.755841559667451], 
      Hue[0.772497223635381], 
      Hue[0.7590974952350452], 
      Hue[0.7798658089872829], 
      Hue[0.7652480129022938], 
      Hue[0.7583750106113856], 
      Hue[0.7527269576726876], 
      Hue[0.7538418336274808], 
      Hue[0.7472916887563967], 
      Hue[0.7520980962926465], 
      Hue[0.7446357810900998], 
      Hue[0.7531340268121061], 
      Hue[0.7447350230722368], 
      Hue[0.7569892848316874], 
      Hue[0.747614016662778], 
      Hue[0.763755259551111], 
      Hue[0.7533478441043447], 
      Hue[0.7492128151468661], 
      Hue[0.7467426646494526], 
      Hue[0.744426317915919], 
      Hue[0.741151188650859], 
      Hue[0.7424033224523372], 
      Hue[0.7383229893509442], 
      Hue[0.7431311993227134], 
      Hue[0.7382320918091064], 
      Hue[0.7466462465649235], 
      Hue[0.7409010256631495], 
      Hue[0.7530358772177236], 
      Hue[0.7464024248695601], 
      Hue[0.7442118204332235], 
      Hue[0.7392936555674295], 
      Hue[0.7371253935221348], 
      Hue[0.7376928885362438], 
      Hue[0.7410306543664579], 
      Hue[0.7472239930388279], 
      Hue[0.8271146837089411], 
      Hue[0.8192449801710211], 
      Hue[0.7987238116136199], 
      Hue[0.7948845752372455], 
      Hue[0.8013459447466679], 
      Hue[0.7958807965284906], 
      Hue[0.7646013891130429], 
      Hue[0.7532590814295648], 
      Hue[0.7462047218624481], 
      Hue[0.7432190834824149], 
      Hue[0.8056100219717214], 
      Hue[0.7999045094077164], 
      Hue[0.8038579898900047], 
      Hue[0.7572738873701279], 
      Hue[0.7492253793657265], 
      Hue[0.7452603182062265], 
      Hue[0.7985626632154678], 
      Hue[0.7923000278676822], 
      Hue[0.7926265305857737], 
      Hue[0.7767519511197273], 
      Hue[0.7748705599898535], 
      Hue[0.7757612291880571], 
      Hue[0.7715894412970995], 
      Hue[0.7776275150933084], 
      Hue[0.7711469848183818], 
      Hue[0.7823993565251148], 
      Hue[0.7735518790172239], 
      Hue[0.7901786307933139], 
      Hue[0.7788637006346959], 
      Hue[0.7602495687073805], 
      Hue[0.7599699032522362], 
      Hue[0.7587056681924468], 
      Hue[0.7562253837297293], 
      Hue[0.759961931086682], 
      Hue[0.7552722222999121], 
      Hue[0.7640603856922324], 
      Hue[0.7571139009503625], 
      Hue[0.77109522066257], 
      Hue[0.7618038773724739], 
      Hue[0.7485825015982565], 
      Hue[0.7496584853890618], 
      Hue[0.7466807060567467], 
      Hue[0.7456189670356453], 
      Hue[0.7475423133983551], 
      Hue[0.7443406238929668], 
      Hue[0.751205090073996], 
      Hue[0.7458235757608811], 
      Hue[0.7577581862816807], 
      Hue[0.7501173209206751], 
      Hue[0.7413384779385346], 
      Hue[0.743597999726818], 
      Hue[0.7392275121881556], 
      Hue[0.7393944353289402], 
      Hue[0.7398582799043888], 
      Hue[0.7379351149495679], 
      Hue[0.7432660021081651], 
      Hue[0.7392182479636178], 
      Hue[0.749536817594492], 
      Hue[0.7432910817571571], 
      Hue[0.7382753238229401], 
      Hue[0.7360788101998427], 
      Hue[0.7366150989263045], 
      Hue[0.7399183532016168], 
      Hue[0.7460734603210595], 
      Hue[0.79827679530717], 
      Hue[0.8049743966539131], 
      Hue[0.8049224429178709], 
      Hue[0.8118667334051329], 
      Hue[0.7995838272308935], 
      Hue[0.8073048564780733], 
      Hue[0.8057670585380046], 
      Hue[0.8137631791632641], 
      Hue[0.782352999419289], 
      Hue[0.7883959620646261], 
      Hue[0.7783174194936908], 
      Hue[0.7841968328159862], 
      Hue[0.7808225888390528], 
      Hue[0.7863343007156144], 
      Hue[0.7759005012617067], 
      Hue[0.7812293165472443], 
      Hue[0.7821629364124798], 
      Hue[0.7871613606771668], 
      Hue[0.7763354204305942], 
      Hue[0.7811327620647356], 
      Hue[0.7864117776655499], 
      Hue[0.7909042682879333], 
      Hue[0.7796451700599895], 
      Hue[0.7839194134211102], 
      Hue[0.7859044950050204], 
      Hue[0.7936596700405901], 
      Hue[0.7896530150130542], 
      Hue[0.7976426145491332], 
      Hue[0.7646970850540283], 
      Hue[0.7695699275252968], 
      Hue[0.762072079698416], 
      Hue[0.7668187759493315], 
      Hue[0.7625685868780794], 
      Hue[0.7668624964255152], 
      Hue[0.7591282672763379], 
      Hue[0.7632816583068115], 
      Hue[0.7632493016040436], 
      Hue[0.7669770912411761], 
      Hue[0.7589823362362127], 
      Hue[0.7625570457915288], 
      Hue[0.7667700055223371], 
      Hue[0.7699333838772872], 
      Hue[0.7616512634440088], 
      Hue[0.764650753031114], 
      Hue[0.7732130685939914], 
      Hue[0.7758022168413359], 
      Hue[0.7672027191399869], 
      Hue[0.7696189814836238], 
      Hue[0.7519617641218631], 
      Hue[0.7557572190205147], 
      Hue[0.7505713293951867], 
      Hue[0.7542654903076672], 
      Hue[0.7494416020489446], 
      Hue[0.7526230422770235], 
      Hue[0.747286607649178], 
      Hue[0.7503552597448258], 
      Hue[0.7496905583156135], 
      Hue[0.7522672990365749], 
      Hue[0.7467648913554381], 
      Hue[0.7492194615535991], 
      Hue[0.7527348431138545], 
      Hue[0.7547047827310607], 
      Hue[0.7490192294128316], 
      Hue[0.7508596982925485], 
      Hue[0.7586514383068116], 
      Hue[0.7600005904407049], 
      Hue[0.7541126615546737], 
      Hue[0.7553272148750236], 
      Hue[0.7436979093576094], 
      Hue[0.746471444234132], 
      Hue[0.7434244538580541], 
      Hue[0.7461119325687581], 
      Hue[0.7409403236217218], 
      Hue[0.7430713076475869], 
      Hue[0.7399405642493992], 
      Hue[0.7419755941532389], 
      Hue[0.7409273739817149], 
      Hue[0.7424222949347531], 
      Hue[0.7391991356005287], 
      Hue[0.7405904562722967], 
      Hue[0.7436824442080363], 
      Hue[0.7445361021147724], 
      Hue[0.741210871703822], 
      Hue[0.7419555156969491], 
      Hue[0.7492791773647319], 
      Hue[0.749474172935747], 
      Hue[0.7460360456668956], 
      Hue[0.7461189475554876], 
      Hue[0.7396311614042849], 
      Hue[0.7414062299295567], 
      Hue[0.7404010108526907], 
      Hue[0.7420972763870526], 
      Hue[0.7367613783959609], 
      Hue[0.737867800962657], 
      Hue[0.7368356930310644], 
      Hue[0.7378541294219825], 
      Hue[0.7366245632908172], 
      Hue[0.7370661691034736], 
      Hue[0.7360043725306886], 
      Hue[0.7363511166560626], 
      Hue[0.7392427392671348], 
      Hue[0.7390113865576878], 
      Hue[0.7379167785902694], 
      Hue[0.7375859805687272], 
      Hue[0.7446879419493111], 
      Hue[0.7437629576920957], 
      Hue[0.7426320345555305], 
      Hue[0.7416054184487054], 
      Hue[0.8120596194201062], 
      Hue[0.8147083831370259], 
      Hue[0.7893644059428983], 
      Hue[0.7865788371235026], 
      Hue[0.7866831711607327], 
      Hue[0.7896917527772177], 
      Hue[0.7998098521921558], 
      Hue[0.7706901617107873], 
      Hue[0.7672744617881755], 
      Hue[0.7666836581691863], 
      Hue[0.7689249275362416], 
      Hue[0.7740560718099889], 
      Hue[0.7569778301399468], 
      Hue[0.7531456069981457], 
      Hue[0.7520957905445579], 
      Hue[0.7538308705006068], 
      Hue[0.7584031364878442], 
      Hue[0.7477545963888824], 
      Hue[0.7436628123348057], 
      Hue[0.7423268248146685], 
      Hue[0.7437461488989041], 
      Hue[0.7479695703917759], 
      Hue[0.742721885450634], 
      Hue[0.7384951633676825], 
      Hue[0.7370102821939699], 
      Hue[0.7382651784576055], 
      Hue[0.7423067780730447], 
      Hue[0.7983280434642736], 
      Hue[0.7984087181268033], 
      Hue[0.8118606556224407], 
      Hue[0.8003717847334695], 
      Hue[0.7989810563504387], 
      Hue[0.8130072312685414], 
      Hue[0.7876092977132266], 
      Hue[0.7774451959196486], 
      Hue[0.77936934120695], 
      Hue[0.7862700623509487], 
      Hue[0.7757418360966377], 
      Hue[0.7762371620895644], 
      Hue[0.7878215359700101], 
      Hue[0.7768913276384821], 
      Hue[0.7759589388843351], 
      Hue[0.7923037250970738], 
      Hue[0.7809293782666716], 
      Hue[0.7785450409109819], 
      Hue[0.7879441631254788], 
      Hue[0.7840570162363498], 
      Hue[0.7956707847572604], 
      Hue[0.7686277077907802], 
      Hue[0.7610728962649583], 
      Hue[0.7632479139920745], 
      Hue[0.7666266658368086], 
      Hue[0.7588296667505807], 
      Hue[0.7596014954523902], 
      Hue[0.7674478820050168], 
      Hue[0.7593839168835287], 
      Hue[0.7587564381231128], 
      Hue[0.7711236080353959], 
      Hue[0.7627650927115402], 
      Hue[0.7607173290864421], 
      Hue[0.7777379524814728], 
      Hue[0.7690539955576826], 
      Hue[0.7655389263134686], 
      Hue[0.7547121609636109], 
      Hue[0.7494899961949838], 
      Hue[0.7518273453754063], 
      Hue[0.752273891272291], 
      Hue[0.7468974731250869], 
      Hue[0.74784819288716], 
      Hue[0.7526131399967895], 
      Hue[0.7470666303748155], 
      Hue[0.746636413035623], 
      Hue[0.755757079406488], 
      Hue[0.7500228231708235], 
      Hue[0.7481928200871955], 
      Hue[0.761783827412428], 
      Hue[0.7558420235749868], 
      Hue[0.7525677304479016], 
      Hue[0.7453623051099761], 
      Hue[0.7422951401428617], 
      Hue[0.7447272925948204], 
      Hue[0.7426515120475427], 
      Hue[0.739498512845144], 
      Hue[0.7405537840220413], 
      Hue[0.7426901997803711], 
      Hue[0.7394424702514976], 
      Hue[0.7391276330945159], 
      Hue[0.7455023143042728], 
      Hue[0.7421499247745346], 
      Hue[0.7404474020551097], 
      Hue[0.7511621629157335], 
      Hue[0.7476939625942856], 
      Hue[0.7445607540513862], 
      Hue[0.7402637805219672], 
      Hue[0.7392520859295891], 
      Hue[0.7417229842924186], 
      Hue[0.7374112534036902], 
      Hue[0.7363719975202232], 
      Hue[0.7374700286334405], 
      Hue[0.7372934940114777], 
      Hue[0.7362238011505496], 
      Hue[0.7359561870189353], 
      Hue[0.7399327360143572], 
      Hue[0.7388293940652509], 
      Hue[0.737179085830757], 
      Hue[0.74540126370774], 
      Hue[0.7442606631150029], 
      Hue[0.7411852855753394], 
      Hue[0.8487335875561527], 
      Hue[0.7969513525550782], 
      Hue[0.8341103142274222], 
      Hue[0.838661900126408], 
      Hue[0.8363710403076123], 
      Hue[0.8408434935021241], 
      Hue[0.7544877754897317], 
      Hue[0.8179109413867839], 
      Hue[0.7574784626200916], 
      Hue[0.8204105307722285], 
      Hue[0.8164242149913726], 
      Hue[0.8169013673136474], 
      Hue[0.7873796011245742], 
      Hue[0.7721547891854381], 
      Hue[0.8142449988072741], 
      Hue[0.8220356499936459], 
      Hue[0.7755127899611188], 
      Hue[0.7558714744657472], 
      Hue[0.8442545673134911], 
      Hue[0.8281052544593165], 
      Hue[0.8260715772994021], 
      Hue[0.8311582487712774], 
      Hue[0.8022967431698806], 
      Hue[0.8196169130932444], 
      Hue[0.8160528570667361], 
      Hue[0.7831096998789949], 
      Hue[0.7690715614057991], 
      Hue[0.7593162155052667], 
      Hue[0.7533227659432489], 
      Hue[0.7506964848135458]}], GraphicsComplexBox[CompressedData["
1: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
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1], EdgeForm[None], GraphicsGroupBox[
        TagBox[{
          PolygonBox[{{509, 38, 119}, {522, 18, 84}, {521, 107, 157}, {526, 
           32, 111}, {520, 52, 132}, {512, 102, 145}, {511, 45, 129}, {519, 
           81, 152}, {63, 33, 114}, {515, 100, 149}, {504, 516, 124}, {497, 
           508, 121}, {510, 47, 80}}], PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[{{508, 509, 119, 68, 121}, {516, 517, 78, 44, 124}, {144,
            122, 498, 69, 123}, {96, 148, 97, 5, 502}}], 
          PolygonBox[{{199, 401, 221, 196, 264, 31}, {403, 198, 30, 314, 196, 
           221}, {198, 398, 220, 194, 262, 30}}], 
          PolygonBox[{{407, 199, 31, 315, 197, 405, 222}, {400, 62, 266, 29, 
           312, 194, 220}}], PolygonBox[CompressedData["
1:eJwtkDkPQUEURi8REbxnXwoKDaIQ29MIlVheqdNqdJRUiK0TP5EfIBqhdm7m
JXNy5t5Z8s2UFuvZyi8iEQhBF64whZxPxMFJnMI/GMANXMjT7+EALuIwbuMs
nuAzdGAJCYV+Cx9hDAdoQpy+jd+QYV7HLy+PRV3DOxiJWdM9Ot9DA2LUFrbx
HfdhDgVIeRk1q+tl04wfMWf0rN5xEpPZ8d6t77+Iyau5NN8XqrCFIaTZV8FR
HMRPMbX2dX0DZf1baoY84A+jMRmU
           "]]},
         Annotation[#, "Charting`Private`Tag$561275#1"]& ]]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
      LineBox[CompressedData["
1:eJwt0M8rg3EcB/DvGMNw2G2lmB+7SC7uNnJ04LKa+ZFprRSH4W8Qbm4USqn9
WUrtaBph5sfryQ6v5/15f3rq+zzfzO7h+kEshFDikWhOemTlt+zwwo7+LPt6
QojzYe6Xc/a/5k+uzBWCfUuvGlMM6a96UjbliDy3v6HALRfcUSTDIhtMUiPX
/cYpjsizyTQnLLPNDMcsscUEo857c25MvstheWZ/yT6D+pf9qXmBAb2tX5vX
SOjz8sduT/bqK9FvyrKcZZU4496py0b0HmP6g3z6v5aQ1u+7d/0HvYEnfQ==

       "],
       VertexColors->None]}},
    VertexColors->{
      Hue[0.8762373743790686], 
      Hue[0.8655091949700787], 
      Hue[0.8582149318651683], 
      Hue[0.8542221433561132], 
      Hue[0.8626802004808087], 
      Hue[0.8473475089551754], 
      Hue[0.8355292739154211], 
      Hue[0.8270125215593048], 
      Hue[0.821648674375038], 
      Hue[0.840164898190656], 
      Hue[0.8241659761418482], 
      Hue[0.8116065210608305], 
      Hue[0.8022663284193935], 
      Hue[0.8224470727955178], 
      Hue[0.8059929188139442], 
      Hue[0.7929292725502707], 
      Hue[0.783031632215382], 
      Hue[0.8297569531306637], 
      Hue[0.8090805775410408], 
      Hue[0.7923213327997095], 
      Hue[0.7789203662878504], 
      Hue[0.7686504269083341], 
      Hue[0.8203376214480459], 
      Hue[0.7997456601318812], 
      Hue[0.7827922119086406], 
      Hue[0.7691765432467227], 
      Hue[0.7586696440228734], 
      Hue[0.8149163185118703], 
      Hue[0.7942272466611369], 
      Hue[0.7771661125042283], 
      Hue[0.7634313212232999], 
      Hue[0.7523726184343483], 
      Hue[0.8131214452330403], 
      Hue[0.7924012910488822], 
      Hue[0.7753056732943464], 
      Hue[0.7615327169089507], 
      Hue[0.7508520906849522], 
      Hue[0.8833088913192644], 
      Hue[0.8610259218427062], 
      Hue[0.8545584872491536], 
      Hue[0.8369839329405656], 
      Hue[0.8239434470186815], 
      Hue[0.8534391891558153], 
      Hue[0.8507892353044645], 
      Hue[0.8493093885081365], 
      Hue[0.8138994421744776], 
      Hue[0.808050949655397], 
      Hue[0.7987521401362679], 
      Hue[0.8307374693725522], 
      Hue[0.8320351833352052], 
      Hue[0.7920067200818764], 
      Hue[0.7791593077815621], 
      Hue[0.8152425555482877], 
      Hue[0.8188099048628699], 
      Hue[0.7752667764152015], 
      Hue[0.8244400981293645], 
      Hue[0.7631317726460717], 
      Hue[0.8171684819460884], 
      Hue[0.804096300506717], 
      Hue[0.7552315352280202], 
      Hue[0.8135695940296976], 
      Hue[0.7928571510012036], 
      Hue[0.8022862952476824], 
      Hue[0.7834210984880453], 
      Hue[0.7680198030260265], 
      Hue[0.7511141955210826], 
      Hue[0.7558177551315864], 
      Hue[0.8680107505001452], 
      Hue[0.8358644856380354], 
      Hue[0.8105859060055175], 
      Hue[0.8402304559333984], 
      Hue[0.7883276465774064], 
      Hue[0.8249086270816801], 
      Hue[0.8027381980086667], 
      Hue[0.8453521894896084], 
      Hue[0.8226999497262424], 
      Hue[0.8537301417100318], 
      Hue[0.8565716116704203], 
      Hue[0.8447346166190954], 
      Hue[0.814636078886266], 
      Hue[0.7969513525550782], 
      Hue[0.8353055289451484], 
      Hue[0.7790020562329589], 
      Hue[0.8268478215025921], 
      Hue[0.7657566742006316], 
      Hue[0.818637522377969], 
      Hue[0.8206553952148274], 
      Hue[0.7568243019608629], 
      Hue[0.814130313569244], 
      Hue[0.8189113548039123], 
      Hue[0.7972279881648544], 
      Hue[0.7792575991125733], 
      Hue[0.7646781710362396], 
      Hue[0.7516386794702087], 
      Hue[0.7532425443336822], 
      Hue[0.8683849906440574], 
      Hue[0.858503233738488], 
      Hue[0.8290907493743793], 
      Hue[0.8533487099264814], 
      Hue[0.8209154184795179], 
      Hue[0.8453233412049949], 
      Hue[0.8380752344862749], 
      Hue[0.7810316699727635], 
      Hue[0.8315858703751189], 
      Hue[0.8240308125079334], 
      Hue[0.7718184533502888], 
      Hue[0.7662566304815764], 
      Hue[0.8222709762046586], 
      Hue[0.7607708675920616], 
      Hue[0.8159286102838956], 
      Hue[0.7538885132887035], 
      Hue[0.8132334468751493], 
      Hue[0.7925152167798459], 
      Hue[0.8075820479209826], 
      Hue[0.7878007143400128], 
      Hue[0.7715610669220728], 
      Hue[0.7508019455899577], 
      Hue[0.7585802340703447], 
      Hue[0.875287006625928], 
      Hue[0.8611056307400201], 
      Hue[0.871847118626701], 
      Hue[0.8443514348555522], 
      Hue[0.836288413342581], 
      Hue[0.8552883933927273], 
      Hue[0.8092152431918619], 
      Hue[0.8170661854870973], 
      Hue[0.8044862043704777], 
      Hue[0.8353656108431262], 
      Hue[0.8447435954236607], 
      Hue[0.8359964006621577], 
      Hue[0.7933700943516891], 
      Hue[0.7836134681948678], 
      Hue[0.8283410322728391], 
      Hue[0.8217330775931084], 
      Hue[0.8300991194728525], 
      Hue[0.7755127899611183], 
      Hue[0.7732121871605662], 
      Hue[0.7613868124241123], 
      Hue[0.8220484543779336], 
      Hue[0.8198174305662301], 
      Hue[0.797681843643507], 
      Hue[0.8023992335731706], 
      Hue[0.808032048762537], 
      Hue[0.8447529357072632], 
      Hue[0.8335137348734726], 
      Hue[0.7769733813079697], 
      Hue[0.7636975293615466], 
      Hue[0.8649987309806173], 
      Hue[0.8283086400743639], 
      Hue[0.8498594312641256], 
      Hue[0.8157559242630743], 
      Hue[0.803060851860381], 
      Hue[0.8399058482165799], 
      Hue[0.8405927622594077], 
      Hue[0.7919870184451688], 
      Hue[0.82693959683169], 
      Hue[0.7697405313938114], 
      Hue[0.8212778246264087], 
      Hue[0.8201672866045656], 
      Hue[0.819610343204054], 
      Hue[0.7973414137342811], 
      Hue[0.807694511680929], 
      Hue[0.8704332466767387], 
      Hue[0.8496998295915568], 
      Hue[0.841013998407946], 
      Hue[0.8614425846568153], 
      Hue[0.8417331557347082], 
      Hue[0.8308689199507607], 
      Hue[0.855811700259388], 
      Hue[0.8350921351055196], 
      Hue[0.8317190307153464], 
      Hue[0.8228679044733841], 
      Hue[0.8174716569223549], 
      Hue[0.8065452181078345], 
      Hue[0.8144889719259167], 
      Hue[0.8137794636455619], 
      Hue[0.8016529236245367], 
      Hue[0.7990528782915985], 
      Hue[0.7875961957992688], 
      Hue[0.7986199518403133], 
      Hue[0.8002642948311955], 
      Hue[0.7853700333800844], 
      Hue[0.7852168234112327], 
      Hue[0.7734057001294076], 
      Hue[0.8039248737233163], 
      Hue[0.8095648858726147], 
      Hue[0.7870564825662761], 
      Hue[0.7908347377945582], 
      Hue[0.7735348607103159], 
      Hue[0.7755830177016263], 
      Hue[0.7635462996736003], 
      Hue[0.7965191618995698], 
      Hue[0.7795021167403805], 
      Hue[0.785263854180176], 
      Hue[0.7658161065582836], 
      Hue[0.769898845444209], 
      Hue[0.7577369219967481], 
      Hue[0.7757700891210579], 
      Hue[0.762006603098016], 
      Hue[0.854931615279758], 
      Hue[0.845306883706874], 
      Hue[0.8389628707393809], 
      Hue[0.8424902807726046], 
      Hue[0.8285610690954078], 
      Hue[0.8179876918589342], 
      Hue[0.8221700542231825], 
      Hue[0.8076598754111772], 
      Hue[0.7964424560073596], 
      Hue[0.8064928624691559], 
      Hue[0.7915890930486008], 
      Hue[0.7799366702697004], 
      Hue[0.8137047291604751], 
      Hue[0.7950554003241516], 
      Hue[0.7798931422876], 
      Hue[0.7679552491866384], 
      Hue[0.8063678179203495], 
      Hue[0.7875772507952501], 
      Hue[0.7722586294575768], 
      Hue[0.7601479833474353], 
      Hue[0.783881126664673], 
      Hue[0.7684888349540183], 
      Hue[0.7562967441892442], 
      Hue[0.8684324324929242], 
      Hue[0.8508413470444287], 
      Hue[0.8732237176742441], 
      Hue[0.8573906478616103], 
      Hue[0.838167160503368], 
      Hue[0.8633699595514972], 
      Hue[0.8497431206725021], 
      Hue[0.828841352222813], 
      Hue[0.8569110223418637], 
      Hue[0.8410481542251061], 
      Hue[0.82783314191935], 
      Hue[0.829017200069895], 
      Hue[0.81443712053066], 
      Hue[0.8202635571483742], 
      Hue[0.8043091631897437], 
      Hue[0.8271233981367304], 
      Hue[0.8191758508472926], 
      Hue[0.8097783276555343], 
      Hue[0.8064714240973256], 
      Hue[0.7958907343208069], 
      Hue[0.79697077102797], 
      Hue[0.7852190803914227], 
      Hue[0.8187119617143058], 
      Hue[0.813828426226323], 
      Hue[0.8021692971995728], 
      Hue[0.7961859369332129], 
      Hue[0.7890077633078526], 
      Hue[0.7819693231824589], 
      Hue[0.7709343949223357], 
      Hue[0.8063789486754446], 
      Hue[0.804539039747231], 
      Hue[0.7895619262897621], 
      Hue[0.7867072254599962], 
      Hue[0.7760970918836508], 
      Hue[0.7722811892038199], 
      Hue[0.7610150449045869], 
      Hue[0.7980145834799194], 
      Hue[0.799045864397493], 
      Hue[0.781026791192283], 
      Hue[0.7811090839298995], 
      Hue[0.7673731392586464], 
      Hue[0.7665668720159886], 
      Hue[0.7551723817070682], 
      Hue[0.7934275650974251], 
      Hue[0.8794777361418336], 
      Hue[0.8540023719677421], 
      Hue[0.8253804655346456], 
      Hue[0.8079049907907538], 
      Hue[0.8004146139521637], 
      Hue[0.8264535319681386], 
      Hue[0.7873635708584592], 
      Hue[0.8120336739236385], 
      Hue[0.8093843867654619], 
      Hue[0.864405093858269], 
      Hue[0.8121467720323592], 
      Hue[0.7900735912299887], 
      Hue[0.8199583672528542], 
      Hue[0.8033036371718486], 
      Hue[0.8678627259785723], 
      Hue[0.8424183272593109], 
      Hue[0.8440729662719373], 
      Hue[0.8597248875508735], 
      Hue[0.834162971746951], 
      Hue[0.8330974175444077], 
      Hue[0.8549157395166245], 
      Hue[0.8294682056174079], 
      Hue[0.8358280461565978], 
      Hue[0.8170683412604862], 
      Hue[0.8207134236080171], 
      Hue[0.8089768184921667], 
      Hue[0.8100971698295402], 
      Hue[0.8180007896437796], 
      Hue[0.7971417183309776], 
      Hue[0.8024190660023187], 
      Hue[0.7901653823388064], 
      Hue[0.7953390663628851], 
      Hue[0.8045609071577543], 
      Hue[0.7820095496674513], 
      Hue[0.7886662721358759], 
      Hue[0.7760667968626394], 
      Hue[0.8017148276402194], 
      Hue[0.8148290184612048], 
      Hue[0.7848010779885728], 
      Hue[0.7951792737151098], 
      Hue[0.7712293071374112], 
      Hue[0.7790854618171337], 
      Hue[0.7662658950092227], 
      Hue[0.7952573023412701], 
      Hue[0.7782158718785891], 
      Hue[0.7896349617267433], 
      Hue[0.7645028831278798], 
      Hue[0.7734306904043046], 
      Hue[0.7604889918327198], 
      Hue[0.7754217339471631], 
      Hue[0.7616511407411555], 
      Hue[0.8522094853385295], 
      Hue[0.8624761673241664], 
      Hue[0.847782727306567], 
      Hue[0.8578693080427768], 
      Hue[0.8434186914040371], 
      Hue[0.8531526678860575], 
      Hue[0.8378850927873797], 
      Hue[0.8473998204656348], 
      Hue[0.8378750994434745], 
      Hue[0.8471467905774916], 
      Hue[0.8312357237894774], 
      Hue[0.8402484234027593], 
      Hue[0.8386808257365771], 
      Hue[0.8483571332541865], 
      Hue[0.8369474741550482], 
      Hue[0.8465248610759967], 
      Hue[0.8256114041679375], 
      Hue[0.8346111593239727], 
      Hue[0.8228516205494458], 
      Hue[0.8317201433975507], 
      Hue[0.8158457351085648], 
      Hue[0.8242415739415343], 
      Hue[0.8120932043144838], 
      Hue[0.820327580994298], 
      Hue[0.8182209779754679], 
      Hue[0.8267959876066227], 
      Hue[0.8178335695097415], 
      Hue[0.8263406373873041], 
      Hue[0.8045553297553141], 
      Hue[0.8124108981268678], 
      Hue[0.8032098733526752], 
      Hue[0.8109698920321474], 
      Hue[0.7941289599064968], 
      Hue[0.8013319137975313], 
      Hue[0.7918669146811164], 
      Hue[0.7989495775648815], 
      Hue[0.8024490891930094], 
      Hue[0.8100012236438898], 
      Hue[0.8032488913274258], 
      Hue[0.8107557554686794], 
      Hue[0.78837981353884], 
      Hue[0.7951815324443575], 
      Hue[0.788269395986379], 
      Hue[0.7950012575959456], 
      Hue[0.7775075340402514], 
      Hue[0.7836219803153305], 
      Hue[0.7765333412032777], 
      Hue[0.782556616901874], 
      Hue[0.8086983131679858], 
      Hue[0.816135024068409], 
      Hue[0.811515679143202], 
      Hue[0.8189499324589139], 
      Hue[0.7909494168890694], 
      Hue[0.797534508778965], 
      Hue[0.7928232503376663], 
      Hue[0.7993789470481735], 
      Hue[0.7766151117684691], 
      Hue[0.7824262749725028], 
      Hue[0.7776132863623018], 
      Hue[0.7833723730513412], 
      Hue[0.7654502585300877], 
      Hue[0.770548048436233], 
      Hue[0.7656226983631976], 
      Hue[0.7706492170450564], 
      Hue[0.8013274478286124], 
      Hue[0.8078497032776331], 
      Hue[0.8051172408238931], 
      Hue[0.8116460990796314], 
      Hue[0.7834336407838163], 
      Hue[0.7890869260381125], 
      Hue[0.786303509835229], 
      Hue[0.7919374796138346], 
      Hue[0.7689390007669564], 
      Hue[0.7737990788907341], 
      Hue[0.7709592328573638], 
      Hue[0.7757784350074596], 
      Hue[0.7575970767906511], 
      Hue[0.7617224425902027], 
      Hue[0.7588202286642333], 
      Hue[0.7628867523616051], 
      Hue[0.7797197931373265], 
      Hue[0.7835360642960958], 
      Hue[0.7882586315150838], 
      Hue[0.7651495996898298], 
      Hue[0.7681370155453418], 
      Hue[0.7720277616528775], 
      Hue[0.7537241815355927], 
      Hue[0.7568962321602442], 
      Hue[0.7559374523323162], 
      Hue[0.7590566399342609], 
      Hue[0.8653438394857191], 
      Hue[0.8551670030194652], 
      Hue[0.8483441072305646], 
      Hue[0.8523489019688604], 
      Hue[0.8377225710360989], 
      Hue[0.8265284810623622], 
      Hue[0.8309372574671389], 
      Hue[0.8156884348100907], 
      Hue[0.8038031122440763], 
      Hue[0.8142443903133763], 
      Hue[0.7985718809719748], 
      Hue[0.7862178446062227], 
      Hue[0.8213687932205425], 
      Hue[0.8018453791317591], 
      Hue[0.7858914886494623], 
      Hue[0.77322654462973], 
      Hue[0.813121477122987], 
      Hue[0.7934399366366012], 
      Hue[0.7773108980020843], 
      Hue[0.7644523906347116], 
      Hue[0.8598261136165292], 
      Hue[0.8449952238663871], 
      Hue[0.850783974966749], 
      Hue[0.8513453802323251], 
      Hue[0.8359237452390422], 
      Hue[0.840049159220154], 
      Hue[0.8461498499156019], 
      Hue[0.8300661014693265], 
      Hue[0.8326008597172628], 
      Hue[0.8445916622076729], 
      Hue[0.8330979952856201], 
      Hue[0.8410210259009959], 
      Hue[0.8317104402847679], 
      Hue[0.8198574857621664], 
      Hue[0.82605401603757], 
      Hue[0.8221540104959933], 
      Hue[0.8099019105987848], 
      Hue[0.8144811708045668], 
      Hue[0.8228769924611121], 
      Hue[0.8138571876765547], 
      Hue[0.8220307658596149], 
      Hue[0.8093396657450469], 
      Hue[0.8000751093687379], 
      Hue[0.8065493576213357], 
      Hue[0.7990552495869132], 
      Hue[0.7895200327001375], 
      Hue[0.7944066043138776], 
      Hue[0.8059776839053407], 
      Hue[0.7991868933912284], 
      Hue[0.8075295528602865], 
      Hue[0.7919946179775725], 
      Hue[0.7850399751201312], 
      Hue[0.7917012082146709], 
      Hue[0.781217523722613], 
      Hue[0.7740819824369837], 
      Hue[0.779174973317862], 
      Hue[0.8111403443008519], 
      Hue[0.8064989010385609], 
      Hue[0.8167709776038081], 
      Hue[0.7934415271001111], 
      Hue[0.7887057862439264], 
      Hue[0.7971579900986269], 
      Hue[0.7791626138559349], 
      Hue[0.7743225660466618], 
      Hue[0.7811048954062283], 
      Hue[0.7680589129241715], 
      Hue[0.7631037039683832], 
      Hue[0.7683303307839137], 
      Hue[0.8028160132957272], 
      Hue[0.8000713029619997], 
      Hue[0.8104009455203448], 
      Hue[0.7849507206003347], 
      Hue[0.7821537272257231], 
      Hue[0.7906697556546031], 
      Hue[0.7704876386714941], 
      Hue[0.7676327769206936], 
      Hue[0.7744856969127542], 
      Hue[0.7591805771945224], 
      Hue[0.7562617825466289], 
      Hue[0.7615663532765252], 
      Hue[0.7793731053600137], 
      Hue[0.7879151533981276], 
      Hue[0.7647959816226225], 
      Hue[0.7716776962330364], 
      Hue[0.7543269979066237], 
      Hue[0.7533629023591721], 
      Hue[0.7586992866591574], 
      Hue[0.8640488319850372], 
      Hue[0.8240235331565863], 
      Hue[0.8730212925601296], 
      Hue[0.8386619001264084], 
      Hue[0.8335774010344824], 
      Hue[0.8265829071664091], 
      Hue[0.7544877754897319], 
      Hue[0.866842700066871], 
      Hue[0.7574784626200916], 
      Hue[0.8561927125065841], 
      Hue[0.843295928525256], 
      Hue[0.7873796011245742], 
      Hue[0.7721547891854381], 
      Hue[0.8755802511616769], 
      Hue[0.8779851733153093], 
      Hue[0.8142449988072745], 
      Hue[0.846199325571282], 
      Hue[0.8357353651655708], 
      Hue[0.7558714744657472], 
      Hue[0.8442545673134916], 
      Hue[0.8281052544593163], 
      Hue[0.8579487617791869], 
      Hue[0.8599925078911497], 
      Hue[0.8526397513715966], 
      Hue[0.8022967431698806], 
      Hue[0.7831096998789944], 
      Hue[0.7690715614057996], 
      Hue[0.8280935073771797], 
      Hue[0.8252299561800321], 
      Hue[0.7593162155052667], 
      Hue[0.8229644210800791], 
      Hue[0.753322765943249]}]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0., 0.2946977679747117}, {0.9567651498283404, 
   1.4142135623730945`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.581609384437285*^9, {3.581609504822774*^9, 3.581609549260466*^9}, {
   3.581609900266757*^9, 3.581609929014892*^9}, 3.581673699423524*^9, 
   3.581687887039155*^9, {3.5819448706496763`*^9, 3.581944883675671*^9}, 
   3.581953345308755*^9, 3.5821142202221193`*^9, 3.582216660165596*^9, {
   3.582216735008424*^9, 3.582216752562191*^9}, {3.582216900522902*^9, 
   3.582216925413727*^9}, 3.582222934929668*^9, 3.582223202402267*^9, 
   3.582286981851467*^9, {3.582287036288845*^9, 3.582287079211164*^9}, 
   3.582302583044299*^9, 3.58230334630746*^9, 3.582303382805304*^9, 
   3.582740217957407*^9, {3.5837633852906523`*^9, 3.5837633996885767`*^9}, 
   3.5907594396778*^9, 3.590835633320829*^9, 3.590924442886402*^9, 
   3.5916177675330877`*^9, 3.59283827170261*^9, 3.592841358957922*^9, 
   3.5931245937263193`*^9, 3.6860702842285557`*^9, 3.686931690535644*^9, 
   3.7715918500836573`*^9, 3.771624210867381*^9, 3.7716245714190683`*^9, 
   3.7716264502796497`*^9, 3.771626760470799*^9, 3.771767603654272*^9, 
   3.772033152785941*^9, 3.772901363521449*^9, 3.772901649596492*^9, 
   3.7729017354077272`*^9, 3.772905196698704*^9, 3.7729770624017773`*^9},
 CellLabel->"Out[1940]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQeYHMW1dWm6e2Y2aFeRRYAIa8AYMMnG9rPBz34Oz882BuNnngMY4wS2
MRmTc04mG5NzzjmZaIKQRJDIQWQkASILgbTh/vfcrqrp7q3u6Z6ZlQS/9/t6
dqa7OlWdc1Pdqtpgi522+v1fttjpj7/dYvn/3mGL7bb64293XP672+7Au7wR
So24QqnSocsrfCelzIf8XYkP/cPx/TPyz6N58+aR/lPtjn2BY9/Ket9HH31k
97U59vl6X19fH82fPz927uDgoCmrxuh9AwMDdt9KkX0ff/xxrByuhWtGr9ff
3z+kHPaZ+67keBZTDuehrL1eiRYsWGBqA09k7hbYo2G9qOXlX1ke85577qGD
DjqI9thjDzr22GPp+eefL+lr3HXXXXT44YfT66+/rkr6FNTA3XffTQceeKA9
5cUXX0wexhX33HNPOu6443D4M/ownvf222+Xs3H4xBNPpFdeeaWkG/KWW26R
G7777rvSFni+2267LVb8tddeMzebO3cuXXLJJbTvvvvSXnvtRf/4xz/opZde
MjfD69900010wAEHyNknn3wyzZ4927zdtddeS3/729/oww8/tG1+0UUX0aWX
Xqp/1S5zww03xC7zxhtv9OrDaJarrrqK9t9/f3mIM888k955552SxhIqBFc9
/vjj0QBepJHPOussXNje6M0335Sz9957b9pnn33kO+8LX6dLsHzZZZfRfvvt
Jzc699xz6f3335eKwuXw+5RTTpHfeKBjjjmGjjjiCI8OPfRQrlv+Kg1q/nA5
VB4uhzued9559MEHH5jX4lqhCy+8UOoWh/EOfEr4WhV569NOO43OPvtsuRqu
dPTRR6P1VHjHNrnjpEmT5Dg3C5100kny4LjkBRdcgObThG6XFj/nnHPkvbFd
fvnlhhjyKH//+9/xCKblX3jhBTrhhBOkPfACF198MerCHOb6lyfDlXC3K6+8
Ek/sRdHfQffeey9ttdVWAhsgDxfbZZddpB3wd/PNNwvEZ86cqeHfTf/617/k
HIAA5+D4rrvuSnPmzJFzgH1z3Jy/22670VtvvaXCql2abr31VimD+kMZ3BP1
8t5779nG23333XGOfQ6UP+OMMwTPf/3rX6VJuLUEnODYn//8ZwEu2IJjO+yw
A3in79khYP/jH/8otXLjjTfSjjvuKIhF3eIPzYvaQpsYjAK6Bx98MNpRE6Qi
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
wIGw44CMRcG2wVWBr73nYobVZMfucWiz427b4Orgz71tKHhgzzbv9bZt26Yz
Jt7j8NAEqx+2DbV4FE+85+KzKaK4x+H6mOj2tuH69kEMtg3H2DZ7PfQXaYn3
OLRBFm8bNCFyjICTrSanedrMM4jcNuBuQzrbhtTIaqq9HjTQapY9zizM+FFf
oAvec9E3k0K5x6HN2pdtQz/CcEnAZFYDYBhNXaHw7FFXfM0rr7wS9vUInqw4
9qswVJEqDPFMcTJM5Wybvd7777+vAZj3OK8h2zYMXeS57733Hibbwo5DrhBp
OqAZ1PO9bV5isNfDc9cxr+E9bsOGDT8yCaiXndnxDmmkmXiJxrbh+rimtw1b
etg2ez30N1L90WYp06silrjsuZj7tZSe5mmLVH/gbs+1bcixItXfS4T2OIyF
pX7bBh2INGPoT6S6+rV5idWoqzBPA0w9/lhdnXAS9bxHHnkEa0OSdP4pEYGn
ag4+pZk21B4wDxzZhkfreNsgpTnfty3dtKHC+/LLL5/1XIxW5Lno8ooVK8KO
w+xKZBtGa9GiRVHb0j3nAs3I62F0vG34jJUx3nPxOfI4XD+yDdfHNaO1pXvO
RR8jrxfZBlmBQ+S5wMt7HLADrt424A78vW0YR9uWHuNcvzboBXQh8txIHfJr
wx0WmB31tiF3R71r7ty54c8KdwgMnIy7xtHkJk2YVIfTxj/sBHSD/wW5W1yf
\
\>"],ExpressionUUID->"12476f64-eec6-42c6-b986-0e065c4ab40f"]
}, Open  ]],

Cell["\<\
This is the density color as plotted where both sections are above the \
circle.  Below is the plot where the region hasn\[CloseCurlyQuote]t been \
flipped over iteself.  \
\>", "Text",
 CellChangeTimes->{{3.773231135570039*^9, 3.773231165578376*^9}, {
  3.773231206997941*^9, 
  3.77323121903981*^9}},ExpressionUUID->"13a52492-62ee-4d9d-8fa6-\
fc52d03d58b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"(", 
       RowBox[{"torusRatio", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], "]"}], 
     ",", 
     RowBox[{"Im", "[", 
      RowBox[{"(", 
       RowBox[{"torusRatio", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], "]"}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcSin", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "]"}], ",", 
     RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", " ", 
          RowBox[{"ArcTan", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}], "-", "\[Alpha]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Pi", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}]]], "]"}]}]}], ")"}]}]}], ")"}], "-", 
      "\[Alpha]"}]}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{"10", "-", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "#4"}], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}], "+", 
            RowBox[{"4", " ", 
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
             " ", 
             RowBox[{"Sin", "[", "#3", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "#3", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{"#3", "+", "#4"}], "]"}], "2"]}]}], ")"}]}]}], ">", 
        "1"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Tan", "[", "#3", "]"}], "<", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SqrtBox["2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}], " ", 
             RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
            RowBox[{
             SqrtBox[
              RowBox[{"10", "-", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#4"}], "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
             " ", 
             RowBox[{"Tan", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
            "+", 
            RowBox[{"2", " ", 
             SqrtBox["2"], " ", 
             RowBox[{"Sin", "[", "#3", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ")"}]}], " ", "&&",
        " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"#3", "+", "#4"}], "]"}], " ", 
            RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"10", "-", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#4"}], "]"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
            " ", 
            RowBox[{"Tan", "[", 
             RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"10", "-", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "#3"}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "#4"}], "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"#3", "+", "#4"}], ")"}]}], "]"}]}], "+", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "#3"}], "+", "#4"}], ")"}]}], "]"}]}]], 
           "+", 
           RowBox[{"2", " ", 
            SqrtBox["2"], " ", 
            RowBox[{"Sin", "[", "#3", "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"#3", "+", "#4"}], "]"}]}]}], ")"}]}], ">", "0"}]}], 
      "&"}], ")"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Hue", "[", "torusDensity", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]", " ", "->", "#3"}], ",", 
         RowBox[{"\[Beta]", "\[Rule]", "#4"}]}], "}"}]}], " ", "&"}], ")"}]}],
    ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{3.772901831979927*^9},
 CellLabel->
  "In[1941]:=",ExpressionUUID->"e068b23e-84f7-4b84-8a12-82e688069a31"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1], EdgeForm[None], GraphicsGroupBox[
       TagBox[{
         PolygonBox[{{101, 66, 157}, {1066, 1077, 169}, {1082, 12, 120}, {
          1068, 172, 113}, {1084, 176, 201}, {1070, 126, 96}, {1083, 175, 
          199}, {1081, 150, 195}, {1071, 181, 89}, {1080, 87, 183}, {1078, 77,
           167}, {1086, 148, 203}, {1063, 193, 118}}], 
         PolygonBox[CompressedData["
1:eJxFm3UcVkXThnf3eehGQkBElBCUUhSREEQMbMROFOu1A5vXxlYQCUVU7O5C
UMREEVsRWwEVsbuQ776Ym+/9Y3+7Mzs7Z3bPOXvunZnT/sBjhh9dUkrPVFKq
qj5bxJVqn6V6aE7pfNUTRZ+nekvRL6meK3qu6t1Fzykx9mnVu4oeo/oK0Weo
3kL0RaqniL5Q9VaiT1V9qehTVA8R/d8cNPz3df3jVI8Vfazqweq7TPVU0Zeq
3lr0eNXXiR6nehvRD6h+VPT9qncWPVr1RaJPVL256Mekc77KoyonqNyl8rzK
nSrHqhwluXMlf6TqQZI/WPUY0aNUDxR9uOqzRB+mejPRfdRurYXaWPUJopuo
/lelscrholuxjupfXfURopdo3EdqL1a9n+jPmKfoT1XvK/oN1a+Kfl31nqKX
qv5U9Feq9xe9XPX3ov9RPUr0t6oXif5G9QGif1W9VPQvqg/MMY/zRB/t+Zym
shW2iH5X8/1R9Reif1A9Un1/qv5G9B+qDxL9juo3RL+tei/RH6leIPpD1fuI
Xqj6bdHvqd5bdAO1/1apzxqJbq+6rua/luqjRD8iuRlqP6x6uOi2atdS/xqs
uej54s9T+xXVe4juoXYz9XdXfZzoDVW3FL2B6uNFZ9U/qSSVg0U3V53V30z1
f0TXUP0r90DlENHrqW6i/q48U6LrMFeV2iqH5lin89U+xuv1pOrZomepHiH6
edXPi35O9W6ir9SlX1K5X2U3lbkqp7oN7ySVOSr3qgxXOc3yjGugcq7KWyrX
qgxxG97BKrPNh/eUyiiVt1Wmqhyk8rTK6byrKg+p7KEyzTKzrWOqafibq5yj
8qb50HervKByD++ayu0qz6ncoXJMiud4hUpTP89X+H3hvdnZdr3l641Wudzj
0bOjyrMqM1ROVJlpWx9UOd42n6EyT+UqlRYq41VeVLlPZVfbdrLKCNv4hMpr
1oXOcZZnXD3b8bbXZrRtPclrf6d1veBxyM/QfZyluT2uepcc7/XZPDt+v09W
2ZJnQ/QOkt9M7bX0/AxUPVp9Q1SvI3pz1SeJnmL7sHN/lX7it1X/puxB6p8m
Pbepfa3q7URPV32n6BtUby/6atU3i56ielvR96h+SPTdqncSPdn6uU57lVvE
v0f9N2Of+u9Qfb/o21XvKHqi6umir1I9TPQ1GvO6yiyVkSqTVF5VeVxl3xR7
4xiVfVLskW+onO3n7Um34Z2l0sfP0ZvuQ4Z98r+8a94vqc/0+kGzrud4/2F9
J2jMKyoTVZq7hn5YZW/bgk28Nw3cx5g9VR4xn3729d1tF/O7xvbN8zO2t3XO
8DM5yfN9n31Q9nzg/Yt97J1K8KFPUn2J6JP9/eA7dAF7j79HF6psJ/pM0Z9J
33mih1n+oxTftctEn+bvG/Xlok9f9b1TPd7j+T5OVBkuejL7cIrrXMi3xdfj
Pt4oepLvJ9/VcZXQw/ixKtta/ycpvnsXV2Ie2M/etI31sUfxXZ8g+hx/3/mu
Xiv6cn9fuc5NtofrXaz6GtGX+Pt9Cu+5ad5XcMEk0WNL4IOnVM8RPdv755Wq
bxA9wd9rvtvXV4IPjR1XiT7X9kxQ2dnyX0v/xaK3d/+iFHZOE32F7eV52ck0
zzB2TBZ9ge0BFzwm+sES+IBnYw/R95V4Rq4Wb4To60X/wHOk+lbRU/0+8l49
IPpOv1+8t3eJvtHvL/Xdom8yPVVlV9M/Sd800buJvk30L6Lrl7ge120ierLq
XXy970RX/PzVVN1Q9K2q7/N43nfe+3srwYe+TvUdtp/9hX3m9krwobH7QdF3
2f5HVc8U/Zi/x+w7t1Ri3sz3FpU9RT8ker8U3+0nKjEO+XtVP+L1Y39iXR+3
POt7h8reomeK/pd9UfVTptlvr1fZ3fb8luI7+3QlnhueF/a9hytxHfTfprKX
7f0nxb79ZCX0om+GykF+nxvmwJlXV+K55Xkdo7K1v+8LU+DWl0S/XAK/3qOy
r+hnRRe131T9uui3SuAx5F4WPc/yD6jsb7pmDtzyiuhXS+AXcNxrldDD+K9V
fy56WQk8B454QfQLJfDEbPZM0V+Kbqb2QyoHiH5NdO0ceuebRv99KvuJflF0
NYeeF02j7xGVkba/rtozVUaJ/kR04xy48rNK2IU94Lr3RH9cAt9RL7Q89H+1
ZgeKXiD6gBQ4/1nRz5TA++Daj0V/UQLfPqlysOhFopvmwJFvin63BJ5E7hPP
F3n4b1k//eDiD0R/XgIfU39ofdB8z3fw+w1GmC/eUaIrKmurXVT/Yhp8+JPk
vlL75xJ4F9y8WPR3JfDzSypHiP5b9JrgPZXDLd86B67+WvRvJfA19TLRv5v+
i/fW48HPd6ns4/0v5bjOEtHf+3qs23N+3lg/cPe3ldDD+Bf5Zlr/Gjlw+peV
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
VON/qwdS/P/XuRr/1PFv3f8BOy9DKA==
          "]], 
         PolygonBox[{{141, 196, 142, 5, 1072}, {1075, 1074, 180, 204, 181}, {
          1077, 1078, 167, 111, 169}, {1067, 1065, 144, 198, 172}, {178, 1085,
           202, 177, 114}}], 
         PolygonBox[{{309, 804, 366, 292, 464, 57}, {809, 309, 57, 588, 294, 
          367}}], PolygonBox[{{806, 100, 481, 56, 586, 292, 366}, {310, 807, 
          367, 294, 466, 58, 482}}], PolygonBox[CompressedData["
1:eJwt0MsuA1EcwOEzIkITO2LNS/ASLcoCcUnKWl3D0uUJ8AwuISQiEboQT+Ad
bFF3VV35Juck/fWbM9PpnP/0V6rlxbYQQrc6da95bWtQ31kIFba4zln9OV7j
rWa0b93HQ5Z5oWWda1xvzhdY5wh/ucQGx/jKLr5wgXchPquVnv3AIT5yik2u
8FKTOlCv9pyf4FWI15vp9x/s4XsW93ujVV1rWp9p//kcc6yFOF8+Zz7vFwd4
lPbbSPs/DXHeeppvl8M8UVU/1iU+s4ObWZw9fwdbbOcOR3kW4n+W0n35/ccq
6snaJ2z4+ge28zpz
          "]]},
        Annotation[#, 
         "Charting`Private`Tag$561299#1"]& ]]}, {}, {}, {}, {}}, 
    {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
     LineBox[CompressedData["
1:eJwt0TkvZWEABuDvolRPfTX2JVyDMWPfxjIFjWgJwyxXLRHEvkYjdGNXSUwj
01DohESQSCQKNT+BROY5ieK57/uek5x78p2M3uGuZCyEMM6IEvVnP99kWVoI
H8llxc6U5/IvX/RuWSFLudLX+aQXsKFnMEahXUM2tZy4ds0EN5xyyyT19DNF
A38YYJpGNvnODE1sMcgszWwzxBwt7PCDeb6yy08WaGWPXyzSxj6/WaKdA5Is
00FfSghVzueJOrvHTuiPlEXvYMf1S/LsEjtd/0fcjtsv0XvYH+Qa1c6khATH
dpG8kMWynHS9Uh7JzzKHPA7tfHkms+Sq7IzO0bPNEPNfD9G3tVPlm7yXo9Kt
8Crv3r/7f/tOOLE=
      "],
      VertexColors->None]}},
   VertexColors->{
     Hue[0.8762373743790686], 
     Hue[0.8655091949700787], 
     Hue[0.8582149318651683], 
     Hue[0.8542221433561132], 
     Hue[0.8626802004808087], 
     Hue[0.8473475089551754], 
     Hue[0.8355292739154211], 
     Hue[0.8270125215593048], 
     Hue[0.821648674375038], 
     Hue[0.8193472357240549], 
     Hue[0.8200721056451289], 
     Hue[0.8239249763457613], 
     Hue[0.840164898190656], 
     Hue[0.8241659761418482], 
     Hue[0.8116065210608305], 
     Hue[0.8022663284193935], 
     Hue[0.7959884694424999], 
     Hue[0.7926727832509676], 
     Hue[0.7922719567959026], 
     Hue[0.7947898968750512], 
     Hue[0.8002822853495649], 
     Hue[0.8088593831426076], 
     Hue[0.8224470727955178], 
     Hue[0.8059929188139442], 
     Hue[0.7929292725502707], 
     Hue[0.783031632215382], 
     Hue[0.7761381157460581], 
     Hue[0.7721428389664199], 
     Hue[0.7709918546094062], 
     Hue[0.772681348820428], 
     Hue[0.7772579759544604], 
     Hue[0.7848213832418776], 
     Hue[0.8297569531306637], 
     Hue[0.8090805775410408], 
     Hue[0.7923213327997095], 
     Hue[0.7789203662878504], 
     Hue[0.7686504269083341], 
     Hue[0.761346454381498], 
     Hue[0.7568988806251045], 
     Hue[0.755249473576115], 
     Hue[0.7563894148277386], 
     Hue[0.7603594848516668], 
     Hue[0.7672523978311822], 
     Hue[0.8203376214480459], 
     Hue[0.7997456601318812], 
     Hue[0.7827922119086406], 
     Hue[0.7691765432467227], 
     Hue[0.7586696440228734], 
     Hue[0.7511044159671069], 
     Hue[0.746368923482123], 
     Hue[0.7444021747950894], 
     Hue[0.7451921213764239], 
     Hue[0.7487757447846721], 
     Hue[0.7552412667125229], 
     Hue[0.8149163185118703], 
     Hue[0.7942272466611369], 
     Hue[0.7771661125042283], 
     Hue[0.7634313212232999], 
     Hue[0.752792865940863], 
     Hue[0.7450824927233496], 
     Hue[0.7401869225349329], 
     Hue[0.7380435966249441], 
     Hue[0.738638631326385], 
     Hue[0.7420068488004342], 
     Hue[0.7482339159444904], 
     Hue[0.8131214452330403], 
     Hue[0.7924012910488822], 
     Hue[0.7753056732943464], 
     Hue[0.7615327169089507], 
     Hue[0.7508520906849522], 
     Hue[0.7430951646440582], 
     Hue[0.7381482226005391], 
     Hue[0.7359481959146865], 
     Hue[0.7364806037777528], 
     Hue[0.7397795657100462], 
     Hue[0.745929917332993], 
     Hue[0.8833088913192644], 
     Hue[0.8610259218427062], 
     Hue[0.8545584872491536], 
     Hue[0.8369839329405656], 
     Hue[0.8534391891558153], 
     Hue[0.8353693898734498], 
     Hue[0.8201186584443511], 
     Hue[0.8193315654362087], 
     Hue[0.8215726240829162], 
     Hue[0.8507892353044645], 
     Hue[0.8493093885081365], 
     Hue[0.8083554677248644], 
     Hue[0.8144684970239447], 
     Hue[0.797158722008929], 
     Hue[0.8041760960749639], 
     Hue[0.8307374693725522], 
     Hue[0.8320351833352052], 
     Hue[0.8152425555482877], 
     Hue[0.8188099048628699], 
     Hue[0.8244400981293645], 
     Hue[0.8171684819460884], 
     Hue[0.804096300506717], 
     Hue[0.8135695940296976], 
     Hue[0.7928571510012036], 
     Hue[0.8022862952476824], 
     Hue[0.7834210984880453], 
     Hue[0.7680198030260265], 
     Hue[0.7558177551315864], 
     Hue[0.7466164981149607], 
     Hue[0.7402755400604265], 
     Hue[0.7367068787931379], 
     Hue[0.7358718663500128], 
     Hue[0.7377801917280828], 
     Hue[0.7424909307988444], 
     Hue[0.8680107505001452], 
     Hue[0.8357877989938842], 
     Hue[0.8357270396647446], 
     Hue[0.8110265347840375], 
     Hue[0.8402304559333984], 
     Hue[0.8249086270816801], 
     Hue[0.8027381980086667], 
     Hue[0.8441401668684403], 
     Hue[0.8196071516802215], 
     Hue[0.8226099680918316], 
     Hue[0.8565716116704203], 
     Hue[0.8447346166190954], 
     Hue[0.8158439780815523], 
     Hue[0.8064177019882682], 
     Hue[0.8353055289451484], 
     Hue[0.828093507377179], 
     Hue[0.818637522377969], 
     Hue[0.8206553952148274], 
     Hue[0.814130313569244], 
     Hue[0.8189113548039123], 
     Hue[0.7972279881648544], 
     Hue[0.7792575991125733], 
     Hue[0.7646781710362396], 
     Hue[0.7532425443336822], 
     Hue[0.7447674083393996], 
     Hue[0.7391258099810677], 
     Hue[0.7362422944295886], 
     Hue[0.7360903129635112], 
     Hue[0.7386917209092774], 
     Hue[0.7441183555972378], 
     Hue[0.8683849906440574], 
     Hue[0.858503233738488], 
     Hue[0.8533487099264814], 
     Hue[0.828202786757778], 
     Hue[0.8207270018074673], 
     Hue[0.8453233412049949], 
     Hue[0.8071323612263539], 
     Hue[0.8159232790817023], 
     Hue[0.8021317976263203], 
     Hue[0.8380752344862749], 
     Hue[0.8315858703751189], 
     Hue[0.8240308125079334], 
     Hue[0.8222709762046586], 
     Hue[0.8159286102838956], 
     Hue[0.8132334468751493], 
     Hue[0.7925152167798459], 
     Hue[0.8075820479209826], 
     Hue[0.7878007143400128], 
     Hue[0.7715610669220728], 
     Hue[0.7585802340703447], 
     Hue[0.7486441017577785], 
     Hue[0.7415982990421537], 
     Hue[0.7373420814960738], 
     Hue[0.7358246385835434], 
     Hue[0.737043558042], 
     Hue[0.7410453548487629], 
     Hue[0.875287006625928], 
     Hue[0.8611056307400201], 
     Hue[0.871847118626701], 
     Hue[0.8354815625918909], 
     Hue[0.8443514348555522], 
     Hue[0.8373349831398249], 
     Hue[0.8272756143904192], 
     Hue[0.8354511788609361], 
     Hue[0.8284849021614034], 
     Hue[0.8561927125065845], 
     Hue[0.8126502096153753], 
     Hue[0.8186919587314323], 
     Hue[0.8095955273932359], 
     Hue[0.8111850282669271], 
     Hue[0.8170437710808311], 
     Hue[0.8353656108431262], 
     Hue[0.8447435954236607], 
     Hue[0.8359964006621577], 
     Hue[0.8283410322728391], 
     Hue[0.8217330775931084], 
     Hue[0.8300991194728525], 
     Hue[0.8220484543779336], 
     Hue[0.8198174305662301], 
     Hue[0.797681843643507], 
     Hue[0.8023992335731706], 
     Hue[0.808032048762537], 
     Hue[0.8446388973597155], 
     Hue[0.8171713137684433], 
     Hue[0.8335137348734726], 
     Hue[0.8649987309806173], 
     Hue[0.844147251401359], 
     Hue[0.8276432249166521], 
     Hue[0.8289549540821513], 
     Hue[0.8599925078911497], 
     Hue[0.8498594312641256], 
     Hue[0.8190331250611008], 
     Hue[0.8135092350391304], 
     Hue[0.8090602653489222], 
     Hue[0.8399058482165799], 
     Hue[0.8405927622594077], 
     Hue[0.82693959683169], 
     Hue[0.8212778246264087], 
     Hue[0.8201672866045656], 
     Hue[0.819610343204054], 
     Hue[0.7973414137342811], 
     Hue[0.807694511680929], 
     Hue[0.8704332466767387], 
     Hue[0.8496998295915568], 
     Hue[0.841013998407946], 
     Hue[0.8614425846568153], 
     Hue[0.8417331557347082], 
     Hue[0.8308689199507607], 
     Hue[0.855811700259388], 
     Hue[0.8239434470186815], 
     Hue[0.8350921351055196], 
     Hue[0.8317190307153464], 
     Hue[0.8228679044733841], 
     Hue[0.8174716569223549], 
     Hue[0.8138994421744776], 
     Hue[0.8065452181078345], 
     Hue[0.8080333964928809], 
     Hue[0.7987521401362679], 
     Hue[0.80517373808245], 
     Hue[0.7939645206187094], 
     Hue[0.8052779390548445], 
     Hue[0.7921089647192295], 
     Hue[0.7931638358578097], 
     Hue[0.8144889719259167], 
     Hue[0.8137794636455619], 
     Hue[0.8016529236245367], 
     Hue[0.7990528782915985], 
     Hue[0.7920067200818764], 
     Hue[0.7875961957992688], 
     Hue[0.7853906676341252], 
     Hue[0.7792172295664181], 
     Hue[0.7817014125694529], 
     Hue[0.773782754688116], 
     Hue[0.7808879433888087], 
     Hue[0.7712132171411952], 
     Hue[0.7829498661961987], 
     Hue[0.7714798273773976], 
     Hue[0.7879378386989523], 
     Hue[0.7746038301457416], 
     Hue[0.7959562207336304], 
     Hue[0.7806579170250354], 
     Hue[0.7986199518403133], 
     Hue[0.8002642948311955], 
     Hue[0.7853700333800844], 
     Hue[0.7852168234112327], 
     Hue[0.7752667764152015], 
     Hue[0.7734057001294076], 
     Hue[0.7681465406635652], 
     Hue[0.7646357832347825], 
     Hue[0.7639014053743717], 
     Hue[0.7587704274040321], 
     Hue[0.7624750561535105], 
     Hue[0.7557261075008058], 
     Hue[0.7638609162954649], 
     Hue[0.7554694058900785], 
     Hue[0.7681023995683194], 
     Hue[0.7580161490567343], 
     Hue[0.7752953307846324], 
     Hue[0.7634326518207879], 
     Hue[0.8039248737233163], 
     Hue[0.8095648858726147], 
     Hue[0.7870564825662761], 
     Hue[0.7908347377945582], 
     Hue[0.7735348607103159], 
     Hue[0.7755830177016263], 
     Hue[0.7631317726460717], 
     Hue[0.7635462996736003], 
     Hue[0.7556810178994989], 
     Hue[0.7545275491239449], 
     Hue[0.7510717042093262], 
     Hue[0.7483879249841976], 
     Hue[0.7492440563871811], 
     Hue[0.7450413472186334], 
     Hue[0.7501874503135629], 
     Hue[0.744451414188598], 
     Hue[0.7539405432648144], 
     Hue[0.7466304516390477], 
     Hue[0.7605935391062691], 
     Hue[0.7516406462389175], 
     Hue[0.7965191618995698], 
     Hue[0.7795021167403805], 
     Hue[0.785263854180176], 
     Hue[0.7658161065582836], 
     Hue[0.769898845444209], 
     Hue[0.7552315352280202], 
     Hue[0.7577369219967481], 
     Hue[0.7475806250768136], 
     Hue[0.7485799762816409], 
     Hue[0.7427506507375324], 
     Hue[0.7422879216792696], 
     Hue[0.7406796992784783], 
     Hue[0.7387732279171487], 
     Hue[0.7413546433937706], 
     Hue[0.7379977985231424], 
     Hue[0.7448111952706208], 
     Hue[0.7399719698306045], 
     Hue[0.7511360748170123], 
     Hue[0.7447555814160072], 
     Hue[0.7757700891210579], 
     Hue[0.762006603098016], 
     Hue[0.751336442467555], 
     Hue[0.7435910708666787], 
     Hue[0.7386568809340837], 
     Hue[0.7364709309589438], 
     Hue[0.7370188887778062], 
     Hue[0.7403350488136227], 
     Hue[0.7465044536055897], 
     Hue[0.854931615279758], 
     Hue[0.845306883706874], 
     Hue[0.8389628707393809], 
     Hue[0.8424902807726046], 
     Hue[0.8285610690954078], 
     Hue[0.8179876918589342], 
     Hue[0.8105859060055175], 
     Hue[0.8062316523042633], 
     Hue[0.8048559805364291], 
     Hue[0.8064424104018315], 
     Hue[0.8221700542231825], 
     Hue[0.8076598754111772], 
     Hue[0.7964424560073596], 
     Hue[0.7883276465774064], 
     Hue[0.7831845745739405], 
     Hue[0.7809364103004919], 
     Hue[0.7815575310677362], 
     Hue[0.7850728793860061], 
     Hue[0.7915594871083884], 
     Hue[0.8064928624691559], 
     Hue[0.7915890930486008], 
     Hue[0.7799366702697004], 
     Hue[0.7713417721623547], 
     Hue[0.7656692822602104], 
     Hue[0.7628374519471359], 
     Hue[0.7628149357804348], 
     Hue[0.7656199882795083], 
     Hue[0.7713217841660691], 
     Hue[0.8137047291604751], 
     Hue[0.7950554003241516], 
     Hue[0.7798931422876], 
     Hue[0.7679552491866384], 
     Hue[0.7590455201309755], 
     Hue[0.7530260815196099], 
     Hue[0.7498119794250466], 
     Hue[0.7493681278822014], 
     Hue[0.7517083966105945], 
     Hue[0.7568967934686596], 
     Hue[0.8063678179203495], 
     Hue[0.7875772507952501], 
     Hue[0.7722586294575768], 
     Hue[0.7601479833474353], 
     Hue[0.7510476470797974], 
     Hue[0.7448180473509475], 
     Hue[0.7413722515830256], 
     Hue[0.7406728618284897], 
     Hue[0.7427310343764302], 
     Hue[0.7476075761985835], 
     Hue[0.783881126664673], 
     Hue[0.7684888349540183], 
     Hue[0.7562967441892442], 
     Hue[0.747106484597565], 
     Hue[0.7407776651592913], 
     Hue[0.7372224011737822], 
     Hue[0.736402181961227], 
     Hue[0.7383268576567726], 
     Hue[0.7430556942324483], 
     Hue[0.8684324324929242], 
     Hue[0.8508413470444287], 
     Hue[0.8732237176742441], 
     Hue[0.8573906478616103], 
     Hue[0.838167160503368], 
     Hue[0.8633699595514972], 
     Hue[0.8497431206725021], 
     Hue[0.828841352222813], 
     Hue[0.8569110223418637], 
     Hue[0.8453521894896084], 
     Hue[0.8226999497262424], 
     Hue[0.8537301417100318], 
     Hue[0.8196383779083726], 
     Hue[0.8410481542251061], 
     Hue[0.82783314191935], 
     Hue[0.829017200069895], 
     Hue[0.81443712053066], 
     Hue[0.8202635571483742], 
     Hue[0.8043091631897437], 
     Hue[0.814636078886266], 
     Hue[0.7972772428510405], 
     Hue[0.8120412877094443], 
     Hue[0.7932274686525723], 
     Hue[0.8124396161562383], 
     Hue[0.792099554529203], 
     Hue[0.7938846353266739], 
     Hue[0.7986252768861429], 
     Hue[0.8271233981367304], 
     Hue[0.8191758508472926], 
     Hue[0.8097783276555343], 
     Hue[0.8064714240973256], 
     Hue[0.7958907343208069], 
     Hue[0.79697077102797], 
     Hue[0.7852190803914227], 
     Hue[0.79051549626854], 
     Hue[0.7775865593130196], 
     Hue[0.7870037456821575], 
     Hue[0.7728737614733893], 
     Hue[0.7863862453438679], 
     Hue[0.7710140092696071], 
     Hue[0.7886646226541526], 
     Hue[0.7719910072073801], 
     Hue[0.7938918977530061], 
     Hue[0.775838643939226], 
     Hue[0.8021752067994127], 
     Hue[0.7826429551718622], 
     Hue[0.8187119617143058], 
     Hue[0.813828426226323], 
     Hue[0.8021692971995728], 
     Hue[0.7961859369332129], 
     Hue[0.7890077633078526], 
     Hue[0.7819693231824589], 
     Hue[0.7790020562329589], 
     Hue[0.7709343949223357], 
     Hue[0.771989367755736], 
     Hue[0.7629012811831075], 
     Hue[0.7678627413508321], 
     Hue[0.7577470229959328], 
     Hue[0.7665669838680546], 
     Hue[0.7554008182991169], 
     Hue[0.7680968279018545], 
     Hue[0.755841559667451], 
     Hue[0.772497223635381], 
     Hue[0.7590974952350452], 
     Hue[0.7798658089872829], 
     Hue[0.7652480129022938], 
     Hue[0.8063789486754446], 
     Hue[0.804539039747231], 
     Hue[0.7895619262897621], 
     Hue[0.7867072254599962], 
     Hue[0.7760970918836508], 
     Hue[0.7722811892038199], 
     Hue[0.7657566742006316], 
     Hue[0.7610150449045869], 
     Hue[0.7583750106113856], 
     Hue[0.7527269576726876], 
     Hue[0.7538418336274808], 
     Hue[0.7472916887563967], 
     Hue[0.7520980962926465], 
     Hue[0.7446357810900998], 
     Hue[0.7531340268121061], 
     Hue[0.7447350230722368], 
     Hue[0.7569892848316874], 
     Hue[0.747614016662778], 
     Hue[0.763755259551111], 
     Hue[0.7533478441043447], 
     Hue[0.7980145834799194], 
     Hue[0.799045864397493], 
     Hue[0.781026791192283], 
     Hue[0.7811090839298995], 
     Hue[0.7673731392586464], 
     Hue[0.7665668720159886], 
     Hue[0.7568243019608629], 
     Hue[0.7551723817070682], 
     Hue[0.7492128151468661], 
     Hue[0.7467426646494526], 
     Hue[0.744426317915919], 
     Hue[0.741151188650859], 
     Hue[0.7424033224523372], 
     Hue[0.7383229893509442], 
     Hue[0.7431311993227134], 
     Hue[0.7382320918091064], 
     Hue[0.7466462465649235], 
     Hue[0.7409010256631495], 
     Hue[0.7530358772177236], 
     Hue[0.7464024248695601], 
     Hue[0.7934275650974251], 
     Hue[0.7625996771598953], 
     Hue[0.7519426706638939], 
     Hue[0.7442118204332235], 
     Hue[0.7392936555674295], 
     Hue[0.7371253935221348], 
     Hue[0.7376928885362438], 
     Hue[0.7410306543664579], 
     Hue[0.7472239930388279], 
     Hue[0.8794777361418336], 
     Hue[0.8540023719677421], 
     Hue[0.8290907493743793], 
     Hue[0.8271146837089411], 
     Hue[0.8207885354336493], 
     Hue[0.8192449801710211], 
     Hue[0.8013459447466679], 
     Hue[0.7958807965284906], 
     Hue[0.8264535319681386], 
     Hue[0.8120336739236385], 
     Hue[0.8093843867654619], 
     Hue[0.864405093858269], 
     Hue[0.8277189595112205], 
     Hue[0.836288413342581], 
     Hue[0.8038579898900047], 
     Hue[0.8199583672528542], 
     Hue[0.8033036371718486], 
     Hue[0.8678627259785723], 
     Hue[0.8424183272593109], 
     Hue[0.8440729662719373], 
     Hue[0.8597248875508735], 
     Hue[0.834162971746951], 
     Hue[0.8330974175444077], 
     Hue[0.8549157395166245], 
     Hue[0.8253804655346456], 
     Hue[0.8294682056174079], 
     Hue[0.8358280461565978], 
     Hue[0.8170683412604862], 
     Hue[0.8207134236080171], 
     Hue[0.8079049907907538], 
     Hue[0.8089768184921667], 
     Hue[0.8018228928209064], 
     Hue[0.8004146139521637], 
     Hue[0.7987238116136199], 
     Hue[0.7948845752372455], 
     Hue[0.7985626632154678], 
     Hue[0.7923000278676822], 
     Hue[0.7926265305857737], 
     Hue[0.8100971698295402], 
     Hue[0.8180007896437796], 
     Hue[0.7971417183309776], 
     Hue[0.8024190660023187], 
     Hue[0.7873635708584592], 
     Hue[0.7901653823388064], 
     Hue[0.7806018782270342], 
     Hue[0.7810316699727635], 
     Hue[0.7767519511197273], 
     Hue[0.7748705599898535], 
     Hue[0.7757612291880571], 
     Hue[0.7715894412970995], 
     Hue[0.7776275150933084], 
     Hue[0.7711469848183818], 
     Hue[0.7823993565251148], 
     Hue[0.7735518790172239], 
     Hue[0.7901786307933139], 
     Hue[0.7788637006346959], 
     Hue[0.7953390663628851], 
     Hue[0.8045609071577543], 
     Hue[0.7820095496674513], 
     Hue[0.7886662721358759], 
     Hue[0.7718184533502888], 
     Hue[0.7760667968626394], 
     Hue[0.7646013891130429], 
     Hue[0.7665515624719649], 
     Hue[0.7602495687073805], 
     Hue[0.7599699032522362], 
     Hue[0.7587056681924468], 
     Hue[0.7562253837297293], 
     Hue[0.759961931086682], 
     Hue[0.7552722222999121], 
     Hue[0.7640603856922324], 
     Hue[0.7571139009503625], 
     Hue[0.77109522066257], 
     Hue[0.7618038773724739], 
     Hue[0.8017148276402194], 
     Hue[0.8148290184612048], 
     Hue[0.7848010779885728], 
     Hue[0.7951792737151098], 
     Hue[0.7712293071374112], 
     Hue[0.7790854618171337], 
     Hue[0.7607708675920616], 
     Hue[0.7662658950092227], 
     Hue[0.7532590814295648], 
     Hue[0.7565078298398368], 
     Hue[0.7485825015982565], 
     Hue[0.7496584853890618], 
     Hue[0.7466807060567467], 
     Hue[0.7456189670356453], 
     Hue[0.7475423133983551], 
     Hue[0.7443406238929668], 
     Hue[0.751205090073996], 
     Hue[0.7458235757608811], 
     Hue[0.7577581862816807], 
     Hue[0.7501173209206751], 
     Hue[0.7952573023412701], 
     Hue[0.7782158718785891], 
     Hue[0.7896349617267433], 
     Hue[0.7645028831278798], 
     Hue[0.7734306904043046], 
     Hue[0.7538885132887035], 
     Hue[0.7604889918327198], 
     Hue[0.7462047218624481], 
     Hue[0.7505960884668841], 
     Hue[0.7413384779385346], 
     Hue[0.743597999726818], 
     Hue[0.7392275121881556], 
     Hue[0.7393944353289402], 
     Hue[0.7398582799043888], 
     Hue[0.7379351149495679], 
     Hue[0.7432660021081651], 
     Hue[0.7392182479636178], 
     Hue[0.749536817594492], 
     Hue[0.7432910817571571], 
     Hue[0.7754217339471631], 
     Hue[0.7616511407411555], 
     Hue[0.7509731261191432], 
     Hue[0.7432190834824149], 
     Hue[0.7382753238229401], 
     Hue[0.7360788101998427], 
     Hue[0.7366150989263045], 
     Hue[0.7399183532016168], 
     Hue[0.7460734603210595], 
     Hue[0.8522094853385295], 
     Hue[0.8624761673241664], 
     Hue[0.847782727306567], 
     Hue[0.8578693080427768], 
     Hue[0.8434186914040371], 
     Hue[0.8531526678860575], 
     Hue[0.8378850927873797], 
     Hue[0.8473998204656348], 
     Hue[0.8378750994434745], 
     Hue[0.8471467905774916], 
     Hue[0.8312357237894774], 
     Hue[0.8402484234027593], 
     Hue[0.8386808257365771], 
     Hue[0.8483571332541865], 
     Hue[0.8369474741550482], 
     Hue[0.8465248610759967], 
     Hue[0.8256114041679375], 
     Hue[0.8346111593239727], 
     Hue[0.8228516205494458], 
     Hue[0.8317201433975507], 
     Hue[0.8158457351085648], 
     Hue[0.8242415739415343], 
     Hue[0.8120932043144838], 
     Hue[0.820327580994298], 
     Hue[0.8092152431918619], 
     Hue[0.8170661854870973], 
     Hue[0.8044862043704777], 
     Hue[0.8121467720323592], 
     Hue[0.8056100219717214], 
     Hue[0.8129633062056374], 
     Hue[0.7999045094077164], 
     Hue[0.8070391892259414], 
     Hue[0.79827679530717], 
     Hue[0.8049743966539131], 
     Hue[0.8049224429178709], 
     Hue[0.8118667334051329], 
     Hue[0.7995838272308935], 
     Hue[0.8073048564780733], 
     Hue[0.8057670585380046], 
     Hue[0.8137631791632641], 
     Hue[0.8182209779754679], 
     Hue[0.8267959876066227], 
     Hue[0.8178335695097415], 
     Hue[0.8263406373873041], 
     Hue[0.8045553297553141], 
     Hue[0.8124108981268678], 
     Hue[0.8032098733526752], 
     Hue[0.8109698920321474], 
     Hue[0.7941289599064968], 
     Hue[0.8013319137975313], 
     Hue[0.7918669146811164], 
     Hue[0.7989495775648815], 
     Hue[0.7867671731497439], 
     Hue[0.7933700943516891], 
     Hue[0.7836134681948678], 
     Hue[0.7900735912299887], 
     Hue[0.782352999419289], 
     Hue[0.7883959620646261], 
     Hue[0.7783174194936908], 
     Hue[0.7841968328159862], 
     Hue[0.7808225888390528], 
     Hue[0.7863343007156144], 
     Hue[0.7759005012617067], 
     Hue[0.7812293165472443], 
     Hue[0.7821629364124798], 
     Hue[0.7871613606771668], 
     Hue[0.7763354204305942], 
     Hue[0.7811327620647356], 
     Hue[0.7864117776655499], 
     Hue[0.7909042682879333], 
     Hue[0.7796451700599895], 
     Hue[0.7839194134211102], 
     Hue[0.7859044950050204], 
     Hue[0.7936596700405901], 
     Hue[0.7896530150130542], 
     Hue[0.7976426145491332], 
     Hue[0.8024490891930094], 
     Hue[0.8100012236438898], 
     Hue[0.8032488913274258], 
     Hue[0.8107557554686794], 
     Hue[0.78837981353884], 
     Hue[0.7951815324443575], 
     Hue[0.788269395986379], 
     Hue[0.7950012575959456], 
     Hue[0.7775075340402514], 
     Hue[0.7836219803153305], 
     Hue[0.7765333412032777], 
     Hue[0.782556616901874], 
     Hue[0.7696537485926602], 
     Hue[0.7751295190425996], 
     Hue[0.7678462096740744], 
     Hue[0.7732121871605662], 
     Hue[0.7646970850540283], 
     Hue[0.7695699275252968], 
     Hue[0.762072079698416], 
     Hue[0.7668187759493315], 
     Hue[0.7625685868780794], 
     Hue[0.7668624964255152], 
     Hue[0.7591282672763379], 
     Hue[0.7632816583068115], 
     Hue[0.7632493016040436], 
     Hue[0.7669770912411761], 
     Hue[0.7589823362362127], 
     Hue[0.7625570457915288], 
     Hue[0.7667700055223371], 
     Hue[0.7699333838772872], 
     Hue[0.7616512634440088], 
     Hue[0.764650753031114], 
     Hue[0.7732130685939914], 
     Hue[0.7758022168413359], 
     Hue[0.7672027191399869], 
     Hue[0.7696189814836238], 
     Hue[0.8086983131679858], 
     Hue[0.816135024068409], 
     Hue[0.811515679143202], 
     Hue[0.8189499324589139], 
     Hue[0.7909494168890694], 
     Hue[0.797534508778965], 
     Hue[0.7928232503376663], 
     Hue[0.7993789470481735], 
     Hue[0.7766151117684691], 
     Hue[0.7824262749725028], 
     Hue[0.7776132863623018], 
     Hue[0.7833723730513412], 
     Hue[0.7654502585300877], 
     Hue[0.770548048436233], 
     Hue[0.7656226983631976], 
     Hue[0.7706492170450564], 
     Hue[0.7572738873701279], 
     Hue[0.7617041278324486], 
     Hue[0.7566548420656576], 
     Hue[0.7609975391378291], 
     Hue[0.7519617641218631], 
     Hue[0.7557572190205147], 
     Hue[0.7505713293951867], 
     Hue[0.7542654903076672], 
     Hue[0.7494416020489446], 
     Hue[0.7526230422770235], 
     Hue[0.747286607649178], 
     Hue[0.7503552597448258], 
     Hue[0.7496905583156135], 
     Hue[0.7522672990365749], 
     Hue[0.7467648913554381], 
     Hue[0.7492194615535991], 
     Hue[0.7527348431138545], 
     Hue[0.7547047827310607], 
     Hue[0.7490192294128316], 
     Hue[0.7508596982925485], 
     Hue[0.7586514383068116], 
     Hue[0.7600005904407049], 
     Hue[0.7541126615546737], 
     Hue[0.7553272148750236], 
     Hue[0.8013274478286124], 
     Hue[0.8078497032776331], 
     Hue[0.8051172408238931], 
     Hue[0.8116460990796314], 
     Hue[0.7834336407838163], 
     Hue[0.7890869260381125], 
     Hue[0.786303509835229], 
     Hue[0.7919374796138346], 
     Hue[0.7689390007669564], 
     Hue[0.7737990788907341], 
     Hue[0.7709592328573638], 
     Hue[0.7757784350074596], 
     Hue[0.7575970767906511], 
     Hue[0.7617224425902027], 
     Hue[0.7588202286642333], 
     Hue[0.7628867523616051], 
     Hue[0.7492253793657265], 
     Hue[0.7526596428364872], 
     Hue[0.7496885878572616], 
     Hue[0.753049080276084], 
     Hue[0.7436979093576094], 
     Hue[0.746471444234132], 
     Hue[0.7434244538580541], 
     Hue[0.7461119325687581], 
     Hue[0.7409403236217218], 
     Hue[0.7430713076475869], 
     Hue[0.7399405642493992], 
     Hue[0.7419755941532389], 
     Hue[0.7409273739817149], 
     Hue[0.7424222949347531], 
     Hue[0.7391991356005287], 
     Hue[0.7405904562722967], 
     Hue[0.7436824442080363], 
     Hue[0.7445361021147724], 
     Hue[0.741210871703822], 
     Hue[0.7419555156969491], 
     Hue[0.7492791773647319], 
     Hue[0.749474172935747], 
     Hue[0.7460360456668956], 
     Hue[0.7461189475554876], 
     Hue[0.7797197931373265], 
     Hue[0.7835360642960958], 
     Hue[0.7882586315150838], 
     Hue[0.7651495996898298], 
     Hue[0.7681370155453418], 
     Hue[0.7720277616528775], 
     Hue[0.7537241815355927], 
     Hue[0.7568962321602442], 
     Hue[0.7559374523323162], 
     Hue[0.7590566399342609], 
     Hue[0.7452603182062265], 
     Hue[0.7477197945314988], 
     Hue[0.7467389396740822], 
     Hue[0.7491312361000703], 
     Hue[0.7396311614042849], 
     Hue[0.7414062299295567], 
     Hue[0.7404010108526907], 
     Hue[0.7420972763870526], 
     Hue[0.7367613783959609], 
     Hue[0.737867800962657], 
     Hue[0.7368356930310644], 
     Hue[0.7378541294219825], 
     Hue[0.7366245632908172], 
     Hue[0.7370661691034736], 
     Hue[0.7360043725306886], 
     Hue[0.7363511166560626], 
     Hue[0.7392427392671348], 
     Hue[0.7390113865576878], 
     Hue[0.7379167785902694], 
     Hue[0.7375859805687272], 
     Hue[0.7446879419493111], 
     Hue[0.7437629576920957], 
     Hue[0.7426320345555305], 
     Hue[0.7416054184487054], 
     Hue[0.8653438394857191], 
     Hue[0.8551670030194652], 
     Hue[0.8483441072305646], 
     Hue[0.8523489019688604], 
     Hue[0.8377225710360989], 
     Hue[0.8265284810623622], 
     Hue[0.8185682091600294], 
     Hue[0.8137055146936452], 
     Hue[0.8120596194201062], 
     Hue[0.8147083831370259], 
     Hue[0.8309372574671389], 
     Hue[0.8156884348100907], 
     Hue[0.8038031122440763], 
     Hue[0.79507635416432], 
     Hue[0.7893644059428983], 
     Hue[0.7865788371235026], 
     Hue[0.7866831711607327], 
     Hue[0.7896917527772177], 
     Hue[0.7998098521921558], 
     Hue[0.8142443903133763], 
     Hue[0.7985718809719748], 
     Hue[0.7862178446062227], 
     Hue[0.7769733813079697], 
     Hue[0.7706901617107873], 
     Hue[0.7672744617881755], 
     Hue[0.7666836581691863], 
     Hue[0.7689249275362416], 
     Hue[0.7740560718099889], 
     Hue[0.8213687932205425], 
     Hue[0.8018453791317591], 
     Hue[0.7858914886494623], 
     Hue[0.77322654462973], 
     Hue[0.7636390887289436], 
     Hue[0.7569778301399468], 
     Hue[0.7531456069981457], 
     Hue[0.7520957905445579], 
     Hue[0.7538308705006068], 
     Hue[0.7584031364878442], 
     Hue[0.813121477122987], 
     Hue[0.7934399366366012], 
     Hue[0.7773108980020843], 
     Hue[0.7644523906347116], 
     Hue[0.7546513436718719], 
     Hue[0.7477545963888824], 
     Hue[0.7436628123348057], 
     Hue[0.7423268248146685], 
     Hue[0.7437461488989041], 
     Hue[0.7479695703917759], 
     Hue[0.7596528810672577], 
     Hue[0.7497409614812586], 
     Hue[0.742721885450634], 
     Hue[0.7384951633676825], 
     Hue[0.7370102821939699], 
     Hue[0.7382651784576055], 
     Hue[0.7423067780730447], 
     Hue[0.8598261136165292], 
     Hue[0.8449952238663871], 
     Hue[0.850783974966749], 
     Hue[0.8513453802323251], 
     Hue[0.8359237452390422], 
     Hue[0.840049159220154], 
     Hue[0.8461498499156019], 
     Hue[0.8300661014693265], 
     Hue[0.8326008597172628], 
     Hue[0.8445916622076729], 
     Hue[0.8330979952856201], 
     Hue[0.8410210259009959], 
     Hue[0.8317104402847679], 
     Hue[0.8198574857621664], 
     Hue[0.82605401603757], 
     Hue[0.8221540104959933], 
     Hue[0.8099019105987848], 
     Hue[0.8144811708045668], 
     Hue[0.8157559242630743], 
     Hue[0.803060851860381], 
     Hue[0.8061003724599688], 
     Hue[0.8124087349292117], 
     Hue[0.7992222754310637], 
     Hue[0.8007711142561583], 
     Hue[0.7983280434642736], 
     Hue[0.7984087181268033], 
     Hue[0.8118606556224407], 
     Hue[0.8003717847334695], 
     Hue[0.7989810563504387], 
     Hue[0.8130072312685414], 
     Hue[0.8228769924611121], 
     Hue[0.8138571876765547], 
     Hue[0.8220307658596149], 
     Hue[0.8093396657450469], 
     Hue[0.8000751093687379], 
     Hue[0.8065493576213357], 
     Hue[0.7990552495869132], 
     Hue[0.7895200327001375], 
     Hue[0.7944066043138776], 
     Hue[0.7918503015596312], 
     Hue[0.7820161474894585], 
     Hue[0.7853953648489304], 
     Hue[0.7876092977132266], 
     Hue[0.7774451959196486], 
     Hue[0.77936934120695], 
     Hue[0.7862700623509487], 
     Hue[0.7757418360966377], 
     Hue[0.7762371620895644], 
     Hue[0.7878215359700101], 
     Hue[0.7768913276384821], 
     Hue[0.7759589388843351], 
     Hue[0.7923037250970738], 
     Hue[0.7809293782666716], 
     Hue[0.7785450409109819], 
     Hue[0.7879441631254788], 
     Hue[0.7840570162363498], 
     Hue[0.7956707847572604], 
     Hue[0.8059776839053407], 
     Hue[0.7991868933912284], 
     Hue[0.8075295528602865], 
     Hue[0.7919946179775725], 
     Hue[0.7850399751201312], 
     Hue[0.7917012082146709], 
     Hue[0.781217523722613], 
     Hue[0.7740819824369837], 
     Hue[0.779174973317862], 
     Hue[0.7734687013533867], 
     Hue[0.7661336920994897], 
     Hue[0.7697405313938114], 
     Hue[0.7686277077907802], 
     Hue[0.7610728962649583], 
     Hue[0.7632479139920745], 
     Hue[0.7666266658368086], 
     Hue[0.7588296667505807], 
     Hue[0.7596014954523902], 
     Hue[0.7674478820050168], 
     Hue[0.7593839168835287], 
     Hue[0.7587564381231128], 
     Hue[0.7711236080353959], 
     Hue[0.7627650927115402], 
     Hue[0.7607173290864421], 
     Hue[0.7777379524814728], 
     Hue[0.7690539955576826], 
     Hue[0.7655389263134686], 
     Hue[0.8111403443008519], 
     Hue[0.8064989010385609], 
     Hue[0.8167709776038081], 
     Hue[0.7934415271001111], 
     Hue[0.7887057862439264], 
     Hue[0.7971579900986269], 
     Hue[0.7791626138559349], 
     Hue[0.7743225660466618], 
     Hue[0.7811048954062283], 
     Hue[0.7680589129241715], 
     Hue[0.7631037039683832], 
     Hue[0.7683303307839137], 
     Hue[0.7599499728058559], 
     Hue[0.7548677701394066], 
     Hue[0.7586219289714284], 
     Hue[0.7547121609636109], 
     Hue[0.7494899961949838], 
     Hue[0.7518273453754063], 
     Hue[0.752273891272291], 
     Hue[0.7468974731250869], 
     Hue[0.74784819288716], 
     Hue[0.7526131399967895], 
     Hue[0.7470666303748155], 
     Hue[0.746636413035623], 
     Hue[0.755757079406488], 
     Hue[0.7500228231708235], 
     Hue[0.7481928200871955], 
     Hue[0.761783827412428], 
     Hue[0.7558420235749868], 
     Hue[0.7525677304479016], 
     Hue[0.8028160132957272], 
     Hue[0.8000713029619997], 
     Hue[0.8104009455203448], 
     Hue[0.7849507206003347], 
     Hue[0.7821537272257231], 
     Hue[0.7906697556546031], 
     Hue[0.7704876386714941], 
     Hue[0.7676327769206936], 
     Hue[0.7744856969127542], 
     Hue[0.7591805771945224], 
     Hue[0.7562617825466289], 
     Hue[0.7615663532765252], 
     Hue[0.7508473487517842], 
     Hue[0.7478580013886165], 
     Hue[0.7516981381761757], 
     Hue[0.7453623051099761], 
     Hue[0.7422951401428617], 
     Hue[0.7447272925948204], 
     Hue[0.7426515120475427], 
     Hue[0.739498512845144], 
     Hue[0.7405537840220413], 
     Hue[0.7426901997803711], 
     Hue[0.7394424702514976], 
     Hue[0.7391276330945159], 
     Hue[0.7455023143042728], 
     Hue[0.7421499247745346], 
     Hue[0.7404474020551097], 
     Hue[0.7511621629157335], 
     Hue[0.7476939625942856], 
     Hue[0.7445607540513862], 
     Hue[0.7793731053600137], 
     Hue[0.7879151533981276], 
     Hue[0.7647959816226225], 
     Hue[0.7716776962330364], 
     Hue[0.7543269979066237], 
     Hue[0.7533629023591721], 
     Hue[0.7586992866591574], 
     Hue[0.7458773021464742], 
     Hue[0.7448905794301279], 
     Hue[0.74876583156985], 
     Hue[0.7402637805219672], 
     Hue[0.7392520859295891], 
     Hue[0.7417229842924186], 
     Hue[0.7374112534036902], 
     Hue[0.7363719975202232], 
     Hue[0.7374700286334405], 
     Hue[0.7372934940114777], 
     Hue[0.7362238011505496], 
     Hue[0.7359561870189353], 
     Hue[0.7399327360143572], 
     Hue[0.7388293940652509], 
     Hue[0.737179085830757], 
     Hue[0.74540126370774], 
     Hue[0.7442606631150029], 
     Hue[0.7411852855753394], 
     Hue[0.8640488319850372], 
     Hue[0.8487335875561527], 
     Hue[0.8240235331565863], 
     Hue[0.8341103142274222], 
     Hue[0.8730212925601298], 
     Hue[0.8363710403076123], 
     Hue[0.8408434935021241], 
     Hue[0.8335774010344827], 
     Hue[0.826582907166409], 
     Hue[0.8179109413867839], 
     Hue[0.866842700066871], 
     Hue[0.8204105307722285], 
     Hue[0.8164242149913726], 
     Hue[0.8169013673136474], 
     Hue[0.843295928525256], 
     Hue[0.8755802511616761], 
     Hue[0.8779851733153093], 
     Hue[0.8220356499936459], 
     Hue[0.8461993255712819], 
     Hue[0.8357353651655709], 
     Hue[0.8260715772994021], 
     Hue[0.8311582487712774], 
     Hue[0.852639751371597], 
     Hue[0.8196169130932444], 
     Hue[0.8160528570667361], 
     Hue[0.8252299561800321], 
     Hue[0.8229644210800791]}],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0., 0.2946977679747117}, {0.764705144473812, 
   1.4142135623730945`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.772901834225341*^9, 3.7729051974848537`*^9, 
  3.772977063122261*^9},
 CellLabel->"Out[1941]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQm4HFWd93+opbtvbhIICXsCqIy7oqKAoo6KorjrjM74n/H/vo6vww4O
KIoCsio7sorIvi9JCBD2fREIgbCFLXtCQoBAEhKy3dx7z/v7/uqcU6eqz6mu
6u4bZp7nzfNU53Z1dVV11ed8z287p77zs1/t/YsDfvarfX7+s+2/fvDPfrn3
Pj8/ZPs9DjqYVoUbCbHRbkIEJ2wv8LcUQr/wv8/jRb1x/D2O/wvl6tWrpfon
hjnWxY51o9W6NWvWmHU9at3g4KBeb767fv16uW7dOn43xrHdpmrdwMCAXLt2
beYY9jq9XV9fH+/T3g7v89v19/c3Hdc+l1FqHb6Hbc12AQ6hrwbOUh+tZj6N
ksu4tVqNn/Pwww/L448/Xv7+97+XZ555ppwzZ06orusDDzwgTzrpJLlkyRK+
XNj8wQcf5M0PP/xwedZZZ8l58+YFam/40fjKcccdxx9jb/Pnz99EfYxzvffe
e83H55xzjnzllVf0we68804+2Ntvv80Hw+Z33323PPbYY3nzc889Vy5atEgf
bOXKlfLaa6+VRx11lDziiCPkX/7yFxxslPoYP/3222833/7rX/8qX3vttUBd
nZtuukmedtppctWqVSK07u0111wjJ0yYICK1G9yzW265hXeDo/ztb3/D1Uh+
Ui/fkptvvlkec8wx/PFFF10kly1bZi4WdoeLRNupXSa38uKLL5a33nqrOnRN
vvHGG7zuyCOPlH/4wx/kJZdcIt9880195XAvr7/+evNbL7vsMvz+5MfU+bpj
FX4jjjpp0iT55z//WZ588sl0hBNOOIEwp7/l/fffz2eGRoFLd/TRR/MRr7zy
SvnOO+8osEbiosirr76aD4ezueqqq3gd/uGCXHjhhfLSSy/l99ddd508/fTT
cefsQz322GP8Md0RvjM4a+wOu6UzV4caxjf78ssvN4eia6/bA58mbjp9R9/0
uXPnMja4ozh7XN8VK1boy4hLjxPDnrDHG264AZc+sKGvy7///e9y7733lued
dx5Dh3P77W9/iwsuAtU6gQ4aBCHD5wLq8R1c4jvuuIM/+93vfiffeust/hyX
Fp+ff/75vM/DDjuMt6EzEhur49511128zQUXXMD7+M1vfsOXn66BOS7OGPtd
unQp7xfb7bPPPgwHzunQQw/l74B+NBA0sf3220+OHz+eGwt+yyGHHILrLjSk
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
uGqP094OuMK6T7crxBW71Mqid4HT1upqlxXpYmK9HXDQLVdvh8ulwguF28H/
1EXCNWtd/tJiXV7l7O3sdbqE2K5N0pfbvvVaITdX67AvVclrYle4TnBM7XPB
b9AKWXOsG1mwHdRLI6K3w/XEdbW3A9L6uHo7qBIi5vnt0JEisl9wm4dblEGQ
8e6DFj265X7Q2q0W2Q9ZOOhT0tvhp+hbqteh9WmV0+uAgu5stUmM26lJjvyn
jhe5tXU7/od+B/0q7hJ/hz8I+H2oP2n+YuKNIqIChVT3Q26hPoPSYz3sLeMn
ZQ6pG8x/x8vx/77z/76zIb8DwW/6jleCkpYHTwn9KkQb/3TLg22G9fBe8i0v
MoMooIHKSTDfhCWB9Uqyy7bZklKpDXn0/fi9CK7BI8XfZIvpTsCOE+xR7Yrf
pI6ALnW33XaTX/va11i+cATqV3QPiZ51s8024zFSEb+GPBRAH1VHn2F8QcLw
dbjDu+66q9xll13k7rvvDuNHh83RiWpX48vVTniSWif7adP/85o84RO/M2c0
btw4vkTpGdF2ZDqsu+FN+e1PfF1tF8lRG28iF/5tupS3kDl633I74qwHgoXq
9T2bbSsH739L70zCaMD93mijjfiHfetb3+KSuX+s9ivG82sS0Td37zGywnYi
vMRrcm/xr3QgnEKPPG+/0+lMqZu+hSyZfcjo33EmbTNbHiR+Ir8mdpHfFJ+n
X/tNsRtd/5+L79JnZHQKsioEGbg7Py3lLs/JmTveiFNOLkBdvk9sLQfFnfQx
GS67PEbLo7Q8Ll/4+JXml+P26dv7hWq/7hy1DgaCNia0XQpD5Etf+hIuHr1L
Xr/5zW+aQyW7HcemvXKPuGP84Ac/KOe8QM32gNelHEV2qJhHyww5V9wtHxMT
5ZFiX/ktug1fETvzTbxQHEWf42q+RMvztDzHV+VVcQf9T6a1oPsvnlV/42px
bbp4BJFfQR2zmCrfFJPld8TnaL+7yn8XX5OP0i97jJanxfn0+d203Jc0UnEP
//26uEZ+SXw8UFfwq1/9artX8Fi1DhYswkhf/OIXafOdd95ZJPWO2XaXWKZo
Y8kWeG3wFVPmnZQ44u1klU9eJ1+7YoGMNooSFraSo4dvKlf9bYmUxxJek1fz
JnIBG9xyjz32kFtuuSV2KEeNGsUX9qObfYjYeZkRlPw/LjCQnKXWkVUoXpRT
xFV0Qe7HhecL+zRsVr7Q0/COlicVqlPVBScWxWO4EbgNwBdfexi5k8zHRLV4
iJYH1T24ixZCme/r7bxunkC6PLkJW221lXGB27wJuLgf/vCHLfGry2P//6Pp
StHncwfSCzy5T/7rZ36ktmmwRlz86XOplVHD/iR5w4LcE7FKrqArVRc1vasx
YlO6oNSuBTnW4o3k/21elYt3elppQCR3JMN7CrQvoR4X5mXY3XztX6TlBbXM
UP8/y9f8GfwuvtZPWde+5XXHZbcuMuk030cbdnPhcZg76DzX0LX/ithRCyiC
leKL1a73L9Q6VCKgtBnlaLESSgRqQCEW5I7wHciGGQtCfRhyS9BkxETRwaK8
3RTlkf68PCgv+8nFlrzTLRIbyQniCsnd81bkse1MyydX8vtDxUG6w/iA2EHe
RI1bCmobAh2GeAOJFbFQTiXupohbsQT0cgvdzGm0aoBvKOQH/0OuXpXv0J35
ofiWHEetDpcopNP4sfimfIPvwjzVgmaqu/gyjvISfpy5wVCx6aZBPSu2k4l6
DekNVi3rPnka3SAo4QVHn83DFCve3Z3VOsSQcHdQl/JB9SU487jrSEnutNNO
gWoZD130sBwk+2CQvjuA79Oy4hcr5egRo00jqwU1+caVbySNkZdB/n/5tcvk
sHhYpDpREtA0k3Zjv5RfpL9Hr6Vb+LY8X5xNdw5jT6aIB2iX0/gCkXCKFdxe
paAuTJAyipVygZhOTrLAoJgpdH3e4lvGdediSQgs8Ncybppo8G+pheRVkAYR
LwQFWBQLeJslciHdlSniBupTJqvPAQIXJopZuJ4pEOABq1/k1RkgEh7GbQAe
UpXl715e2fT5lNoASXndoj/zmc9ovf73f/9307vpwAIi2ioSrfaclLWgUgco
YUFoFj3gZz/7WYQV7YCzjqTZqTtoiG3MHiT+KxEBwZ2qwHbrxHo5SozK2IM9
xNI7zAZLCr/2ER8jxcjMdsNqw+TSS0jIP8cFhYLLNAUxJ9bgHS2opBb9qH3l
1e8wXskC7KgzFsuxHputxssq3sXbiij0FW8ydlqNpCDLiGzHZFmM1a8iC56C
J1NFmqf+5s/4l8zhU0H/PUvmlEiqfga7fIE3M+CpRdtRTB42m4YkZtfAy3bv
8itTqkL3fgUAiFGpLF4QUCX4uI5XIwOjJ+sGRPL23e+X62lXfVCYdVKXf6Ng
Cl/H8ulPf1ozrELzut/h1y222MLsVW8X0F9zLpovB24GdLR/XFs6ytqn+uSn
PvUpOWLECN41CiZwts8++6zpzMjIOvMXZ1m7i6lf2Vb+QPxAPkPaMEAs9zHL
6wUKgdeJfvkEicFjdB+m0HK6+DOJ+bflg3Td1xPnmmeEr/oJyCfp3p0uTqPv
f1t8i37pHmT+bkKm8WoGEBdArAVyayw8Qxtjpn4FXt7Gy3L+FPYPZHEpf/oW
Xt7kD6CPbzDHWPc6oqEJxWp5VaOKj3ncpelXQfI87GMukzmnCOJEPWGH2uqp
Qc5ALC3pxNemosikLYjzPSm9/4cHqgKsAwdIPupcbKDyrgAWlVLpLkIutMtC
XJf/9LkfATXZR8uKPWn5DKFGy98+cIXapkduQbbJt8R35GwSGeKHzDop3/5Y
su2yz/TLrcQ2RjNh307fcY5c8xlwtvIzOO47tN3ST/fJzWqbmy4amM/jWyyZ
y8FEZ+WbI1fL0bXRyWYj2XTjTAQazw10ml8h551UZB7d/R3FJ+T3xPfkHXRF
5zMJya7WkRXFnIfgXGoFjxJGBxNQ+QWhGd7uaVKkPu7VeYyWWIeN1+KvNYwi
+vlVzDPWsfyuZJb5Uy3LXHQtULtEMOMDo8mJLcCnAKJfVwtm/RCLGWwDs0x1
eQE+no8dzePdzdUoFxsCbaK8cUWUM0YAn9GdOMsGbXN3kg2s6FrpDAhyxkpA
6V3yqiI4GfWESZ8PzXx/1x/KftrdOlZPvJKrdoyUl71/vNW1j5Y/Ev/OYKyi
ZSUtKxJu5GT6mVeIG+U9dCnupOVpkpO1tH4p0KTlLbU9vvc2LePEdqY/+IL4
CjWT7xGby7CvgHSREz/qKz8VP6dT+ob4Nm2KzW6kK/cg9YJviXUhNsCYSdrs
IULxO+L7MhKRdkjGbTlOvrrzm7Jv64RmtJX1fBL9ZCouCRTeWLU2XQLTEFjv
A5JwejtgtwG2BNjuoFX9tKynpU+1mD71Nw8DFOsC0yJSdefGwGhqC2WFKKPu
2KFRd7QFrH6NtzfCztsnVoi2T7hgXMwPvA0itBuESHwlRApsX8m2UrwtQiRN
YkyFJuGyi+9Mtv/tDM78LVq06PPlWoQOY+tY7gBdlUGi+trDJijvP5RfH/4d
uRrCykK7lIUW7y/a4ZqMEft98WO+oe9wx/+OMmKlvIV+xR4EY8CvERm7h8n7
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
dVBXK6QuLEld0GVpE1z5xQbZLGaoW8DFeeCs4tTYRVzTKNd02o/YEjmTDs+U
N+dKv3LIvWeIetCyEjebLvxkZ8q7TeY+9KEPmcjXWWIqyKK1t2Pi8DvgT94J
pbsLzN0N0jLgRQ65CwvBCxx9qkvuqvepLldgKMGrucBLR/7ELg9TVfb0WB5B
85BqVYIhkoH523XZcityB5qkjiX1ZW4zL8svWcnwq666SmWLOhrIc7Z4knnb
BLwNB28N8FYHb7ERusjBW9iat8DRveaELvUQBPev4I272I79z9ywjmy+vCVt
SwpoW+6ireGgzS74kUnWMrQmCB1gwPp5dpGmGjLZNGh/Wwdr3fIQbH2bL48U
+8rRhMRPPv/PeEJfFzA7izC7m2OGtyFtdDu60juA2Z0gLKNtzFpUhbWgsFMN
sp2qYNgYtWf5XbPACc4vcXbpJb79XQAuNsBZmXJVxBjlicsP+kjHzMa235Dr
V2t2WYYZ0sjT+PUr3zRTApQUU7/PBVyHPWq1hGW/mE4X7O9SXvt2VR+0CLXR
QK0XqDWAWs2gFjtQC1ujFvi6Ua+slehGc0nMoHUS00OZiOxobauKRmLF8k9t
zvIzJrkmJ8nM1lZzFf4AsYC70O3LxNRKYla1ItZ6FFaYfLzHfAamTUGzM5Rn
kJ2W+Aa3QtBuA2W3Q9A0arFBLXKoWuhDLfD1oF5Vq2SxeX3TLqAW51GzarJr
LtZSz7SnKJWZfQKN+IhV99Ofn6qkS6RVSQS4Irf0/1iicEFfa9QiRu3GG2/k
p/atX79+mKINj676wRd+Ir8ifiIvIqZv56TJLYiv3Qqv4DbQppGLDXKRUbfQ
h1zYuiN1qdv/MOTqvmCIlYQKHaNva01dqOIN+PWLsKkAaD3nm7qBXNVAiB3T
pW0mrni/QgqkASdglS8fi8yDmG+77TY8075XrV48nkc/gi45GVOP3gKP4FYo
220Qtdvx0sxaKm9hSdYCn7zl4m9e1nLxN5eDkCup7T5wbzQBF9rAqUG6PZlY
ry1yvtG59sjc5llzYK05i4BKENduDMQlcPT5YW8IjRuejAaYss9oLpoi8LVJ
nN0EZ2IEXkeAth7QVje0xYa2yEFbard5aQt8yla9MxWcY+cM+wt8x1rTFtm0
lcqIEl45D8Eq3a6Z1MJblunmGIdSkFUwVttHXcVm+eLZLnakVWIeM5i1ZWTG
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
tTlFUvqaPEIcIFyDOwsYxpOs6F9/fz9qFvnhPIcccog86qij5LRp0xAT5W+S
KMvf//73PC19sq7GUJ933nnyV7/6FS+nnnoqHrMYFfjtmCzk9IMulfuLS+Vf
6ceB9dFgvRd/NsB6zcF65GA9LDQaAh/rOQu2OusitIvARXEFuIhs1lulv9u0
X0NHOZDHaKi7jIbcCNPhLY2G7DO4B3T9RTqfQ3+XxNqVXnyVLt0dbCxsJDaS
n/rUpwqMBbEZw33ffffJffbZh8st8LTQU045RR500EEY/8efP/LII/Lkk0+W
ixYt4vfYy7nnniv3339/+eCDD8rHHnuMG8RvfvMbJC+N7rcaEH2MmAqYxQh5
BdT8Sqj5VVBzjXnswzx0WCVeSQ98Vkm3MRc8/xxT/gSvM8H7apjHeczTeeiI
dUvN7VBVfmRhJpMe520SK3XZW2SUFE5eohgXyXSt25WYQ6JqqaW/zm2tmCkv
EafJlz7+ALgURZSHmKWQCSWKlTz3skVy8MEHc82Hphoyr74tV69eLc844wwu
Vdcyjxaw3377yfHjxxdSbiehjhNPMuWjQXkvKG+A8pqD8qgy5cGQUS54SA9D
/hjfd1044qKcLrUVGSucRMByAy27RbmBNeMG5uyWamZL3WW25HzA3io+YBKJ
ENtYkwXkUe+2ni/gfOt8YIZtxtL6BetbYP7aa68xnrfddpvBE2J+3HHHAVO1
ZQ9/E9iuXbuWH9qLahO8P/300+Xxxx+PZmCQb4X3sYT31WySXw68r4CIXwkR
zzAeORgPHQaLV8m9Bsu7zngbpnkLgyXKe5f551ZnxkoO99krxXn/OBfytZ+f
Mq5AxquOESqTeCW+x7/Tgm1wuvfee2P+T8M25gSF1b1mzRrlOjbk4sWL2VjZ
d9992YgB/3/+8595u1WrVtlY6wLnIqxHA+vhwLpusI7xSWykO6qMdbDhsXYl
dunqWrGT3PwvcR5ra0xckYFS9xkoVkW0K5tRd5kouUEhw8u6m3ZFASwTe46X
dOhvq5hJmYk1iuYipXVff9Vg7ah1prWzZ89mVJ944gmD9eWXX8629MqVK41k
9/X1McoHHngg29ywzbEdmsRhhx0GZ9M4njgKPoNd/uijj3L59EsvvdRQmNsV
CkeTCZ4EVC6Del+OoPQV0Owr8aIlPHKwHmbNlFx8JShppnTCelJRyKg/yogU
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
RWTcMOoHDgbDLxidXDQ0pRWNWD4yPAAN+XULCJbP4D3Qr/FOpeaw+2bPxE+R
devjJ+Ajlj4oFFHBd7frjUmOPleDn3rqKXzHHXfgv/zlL/Rx88034+7du9OV
A1zBNWvW+OOnOi7Uetb741Lwx4VnWHjU0LpRRNdBesdc5TwchKh8x79F9weU
um3b+Ouvv6af6u/xhgLM0iWXXIKvvvpq6LGDr7rqKnzxxRdTyffXv/6VhgV0
h6IehqJBOhSlG8jmCFvyG65ywfDunGFkybgQvUTGaD0dnevdO+luctdMu2gV
bt3Q1hXtFm7bti0+7LDD8MMPPwzbvu6OMzJ5euIKjIyblocbiObYibMbuGmC
BX5Bve+ZFCr1G2FEipwRkd80tJKP2BAYkaFkFLqjl/HPiGDvRCx5W7QzuCv4
ui2W4QmHYDxnMsYfOR+XfjbYpAjBHKid+9///ofudT83x5vlDUWePpejQwD3
ByxIYDtgGMhoWu6P4TfdeeedNAwAgwx/v/baawV3QF588UU8/tJHCb2P4r5o
BXUGMzAg7f0BoVakELQiIUSopkL0TqG3yJW0sscZHZo9Ip99a7S/N/S+B2eR
q/hjH9oYktw9zgeGHfHshw32rHAum16o23OYhj7CgwK9EcaMGUPvGDihB+y0
PyhZv+OFs4DD16w35C5g2Fcof6RTCwtygBD5gJDf8CfXTHhWdCj6Ep9PbpL+
aD5yFmNHjtzQhPHfuzXjY7a92CuOgHsEemuNHTsW/ZOZR/jY3iPY+cEdFqin
BBbATo4bN46KUBgWb7aXLl2KBwwYQO0qDAlBjbvGsDJ0JF0BYOUdAmuLd/35
4B1iB+8QshJdQePYi/E56Dm8OzoF74yOJbdEJ8rAT7a6BE/shvHjvckt8SjG
X77vDPzNN9+Cu3TpQj37yZMnQ+zzIbGBcC+aKC46GuBEgXWEmki46Br3tYR2
fOGFF9KfkXtN9Xpbw9d6uN4a/3rzvo3MwfWSEYWr/JP7uNL5G9G2wojaB/oc
mMNfoHG2O7u/+tWvfNC8dRNinbAJFr57WHzFWfcbiAnDIjB06FC4VK+GEwQY
iC3yTuVppYavQXSZdFqJxb/MvcQLyCoCEB+HbsY7kgkll0UtPl0X22D8NzKp
dxNbN2bAJLfUx8JNTU2UZvhkZK4ei7b4b7/9Nr3tYan3rg2WUniO6FHptcEt
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
AeXTTpM=\
\>"],ExpressionUUID->"cecf604e-eaf0-4721-8b25-32a0806d51a1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 775},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.5,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 993, 14, 146, "Title",ExpressionUUID->"3bc0b118-19e5-4ef3-836d-0d9f018f7019"],
Cell[1575, 38, 906, 15, 53, "Text",ExpressionUUID->"baec14af-3b99-4417-84bc-478b4d896230"],
Cell[2484, 55, 195311, 3208, 510, "Input",ExpressionUUID->"a6018ad1-8a59-4032-9ed0-b07504356725"],
Cell[197798, 3265, 788, 13, 122, "Text",ExpressionUUID->"88ab519e-ade3-4f73-9d45-8fdbbb93d8d2"],
Cell[198589, 3280, 347, 9, 46, "Input",ExpressionUUID->"6ec513fd-2d9e-4135-b70e-83752c8d80df"],
Cell[198939, 3291, 345, 9, 46, "Input",ExpressionUUID->"d79c6bfc-0c8d-421c-84b1-9dfe2cdec9f0"],
Cell[199287, 3302, 491, 14, 46, "Input",ExpressionUUID->"d1ed7365-d635-4710-95fe-87f97ecaf666"],
Cell[199781, 3318, 488, 14, 46, "Input",ExpressionUUID->"073936d6-b271-401d-8e5f-aa1dc9456d13"],
Cell[200272, 3334, 373, 8, 88, "Text",ExpressionUUID->"6a19f760-f824-41d3-a234-f963493b62f4"],
Cell[CellGroupData[{
Cell[200670, 3346, 675, 20, 46, "Input",ExpressionUUID->"23ddc62a-558a-4fd5-8f41-ce7a6f8a8c76"],
Cell[201348, 3368, 2480, 71, 122, "Output",ExpressionUUID->"83f3822a-3aba-4b3e-930f-e3673cfd1729"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203865, 3444, 1347, 40, 113, "Input",ExpressionUUID->"b037391d-cace-4010-a345-4343339862e1"],
Cell[205215, 3486, 410, 6, 52, "Output",ExpressionUUID->"f6b5b657-db63-408d-bfd7-ef2c83c16cd9"]
}, Open  ]],
Cell[205640, 3495, 227, 5, 53, "Text",ExpressionUUID->"8552c9c8-902b-464d-bf16-2b380d23161a"],
Cell[CellGroupData[{
Cell[205892, 3504, 1186, 34, 71, "Input",ExpressionUUID->"0addc618-564f-42f9-a5b8-3cffa127244a"],
Cell[207081, 3540, 1484, 41, 77, "Output",ExpressionUUID->"1558b543-2a00-4960-b126-9f8d2911cd5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208602, 3586, 1184, 34, 71, "Input",ExpressionUUID->"217e8ae3-d8c4-45f6-9aac-adc4a919f8fd"],
Cell[209789, 3622, 1442, 41, 73, "Output",ExpressionUUID->"1afbbdaf-aeba-43e1-b99c-fe20fc2c6b70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211268, 3668, 1278, 37, 113, "Input",ExpressionUUID->"af8da9d3-66ef-4279-9974-66ad6f8286ac"],
Cell[212549, 3707, 1335, 37, 73, "Output",ExpressionUUID->"7bf0d81c-1d83-49df-825d-d89b4eddac8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213921, 3749, 1278, 37, 113, "Input",ExpressionUUID->"30665539-f016-4605-be04-fe38aa13149f"],
Cell[215202, 3788, 1331, 37, 73, "Output",ExpressionUUID->"adc57869-d5d8-43f7-8bdc-b4ccf3578304"]
}, Open  ]],
Cell[216548, 3828, 321, 7, 53, "Text",ExpressionUUID->"41923340-5a45-4d52-845f-42d4a07c1d28"],
Cell[216872, 3837, 622, 11, 122, "Text",ExpressionUUID->"3b26575e-da2d-4c53-b9eb-046885e37885"],
Cell[CellGroupData[{
Cell[217519, 3852, 1484, 42, 210, "Input",ExpressionUUID->"a3aaf1ba-8dbf-4bc9-80f5-6caf5f53bcec"],
Cell[219006, 3896, 2137, 63, 101, "Output",ExpressionUUID->"4d087095-0b97-40ed-946a-fcb7aba0dafe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221180, 3964, 1434, 41, 210, "Input",ExpressionUUID->"93746d1c-38e0-49db-b221-b5c0359cb3cf"],
Cell[222617, 4007, 425, 7, 52, "Output",ExpressionUUID->"00b4db5e-0851-4f45-baf5-fe2edee01a62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223079, 4019, 1036, 27, 122, "Input",ExpressionUUID->"11ec36e7-30ab-497b-b63c-144679339498"],
Cell[224118, 4048, 36377, 744, 564, "Output",ExpressionUUID->"42370929-8e4f-459b-8203-212838a9d6eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260532, 4797, 694, 20, 77, "Input",ExpressionUUID->"c82518e4-a4e1-4d32-8475-ca5b854d4193"],
Cell[261229, 4819, 8674, 183, 562, "Output",ExpressionUUID->"348d91a5-b332-4769-a83b-f4c4807bc7cb"]
}, Open  ]],
Cell[269918, 5005, 178, 3, 46, "Input",ExpressionUUID->"abbd93a3-c8ff-481c-a53c-386b1976aaa7"],
Cell[CellGroupData[{
Cell[270121, 5012, 396, 6, 101, "Section",ExpressionUUID->"58eac1c0-3dea-4423-bd3e-40f227e6c6e5"],
Cell[CellGroupData[{
Cell[270542, 5022, 3553, 97, 299, "Input",ExpressionUUID->"583b7c4c-5ac3-402f-8a72-fd2354787739"],
Cell[274098, 5121, 3235, 92, 187, "Output",ExpressionUUID->"9174dda9-7c29-48f1-8f2b-bdad5ad01e3d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277382, 5219, 215, 4, 101, "Section",ExpressionUUID->"dd1d0949-4425-489a-9138-ef893592d4c8"],
Cell[277600, 5225, 268, 6, 53, "Text",ExpressionUUID->"282c637d-953d-42d4-a3d0-6c174b8a2666"],
Cell[277871, 5233, 370, 6, 53, "Text",ExpressionUUID->"200ae999-c74e-4e08-bfe2-f7fa1b43f45d"],
Cell[278244, 5241, 4096, 96, 218, "Input",ExpressionUUID->"599d2b49-d9bb-4d65-8681-bcc6fa3e614e"],
Cell[282343, 5339, 250, 4, 53, "Text",ExpressionUUID->"42a43664-bda2-45b5-8ecd-206494e981df"],
Cell[CellGroupData[{
Cell[282618, 5347, 2832, 77, 262, "Input",ExpressionUUID->"cf1d8703-de58-49eb-9a93-d4a6f9246446"],
Cell[285453, 5426, 2172, 61, 126, "Output",ExpressionUUID->"b28ff0ae-6a63-4034-8311-384325e78d26"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[287674, 5493, 150, 3, 101, "Section",ExpressionUUID->"8c1dc234-14dc-4eeb-9527-a7c0cd7c55bc"],
Cell[287827, 5498, 724, 12, 122, "Text",ExpressionUUID->"e7a21d8e-f617-4378-a5da-9dc2d5a1e93e"],
Cell[288554, 5512, 947, 22, 46, "Input",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],
Cell[CellGroupData[{
Cell[289526, 5538, 436, 9, 81, "Subsection",ExpressionUUID->"13c39ee2-5a3a-466d-965d-7a6d5f6b780b"],
Cell[CellGroupData[{
Cell[289987, 5551, 4148, 91, 295, "Input",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],
Cell[CellGroupData[{
Cell[294160, 5646, 1328, 24, 59, "Print",ExpressionUUID->"35a962f1-08b4-4c1d-ae7e-a7dc6b93f209"],
Cell[295491, 5672, 1397, 27, 44, "Print",ExpressionUUID->"6fc11087-e900-4bf8-9287-09aa97d09f93"],
Cell[296891, 5701, 1328, 24, 59, "Print",ExpressionUUID->"5c1b5312-397f-484a-ac4b-1e948b51ace1"],
Cell[298222, 5727, 1328, 24, 59, "Print",ExpressionUUID->"db5088c1-087a-4fd4-990f-f3189ffeb4be"],
Cell[299553, 5753, 1328, 24, 59, "Print",ExpressionUUID->"c58e5f35-78c2-4810-b3f3-a13bd81ca8ad"]
}, Open  ]]
}, Open  ]],
Cell[300908, 5781, 146, 3, 53, "Text",ExpressionUUID->"44713034-9149-4e18-aea8-b2757e3281a2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301103, 5790, 221, 4, 101, "Section",ExpressionUUID->"84c54b26-f298-4444-9ec8-58440b22b9ee"],
Cell[301327, 5796, 337, 7, 88, "Text",ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-bdaf155f4274"],
Cell[CellGroupData[{
Cell[301689, 5807, 19100, 411, 913, "Input",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],
Cell[320792, 6220, 7864, 167, 722, "Output",ExpressionUUID->"3149f200-bbac-416e-b49a-a9dfb5d7815a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328705, 6393, 168, 3, 101, "Section",ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-4479b3290d12"],
Cell[328876, 6398, 600, 11, 157, "Text",ExpressionUUID->"587b476a-42fe-4314-b5c2-430cf24c7bba"],
Cell[CellGroupData[{
Cell[329501, 6413, 172, 3, 81, "Subsection",ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-64a93ed30112"],
Cell[329676, 6418, 864, 14, 122, "Text",ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-8abc959f8dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330577, 6437, 161, 3, 81, "Subsection",ExpressionUUID->"31f2c795-42a7-4371-8bcc-f26ae4f35c51"],
Cell[330741, 6442, 799, 17, 89, "Text",ExpressionUUID->"dad468d2-f604-44ad-83e4-8184a0b76de7"],
Cell[CellGroupData[{
Cell[331565, 6463, 14800, 374, 1068, "Input",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],
Cell[346368, 6839, 7626, 168, 722, "Output",ExpressionUUID->"c870e04c-2f1b-4448-9922-f30c6a7a1e41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354031, 7012, 6967, 174, 481, "Input",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],
Cell[361001, 7188, 1390, 24, 34, "Message",ExpressionUUID->"9e705a53-bf23-47fc-8131-96032d799c0f"],
Cell[362394, 7214, 6599, 184, 401, "Output",ExpressionUUID->"744f3942-d382-4497-8e33-c2b9d61cd0d5"]
}, Open  ]],
Cell[369008, 7401, 575, 13, 54, "Text",ExpressionUUID->"dab345d4-317d-4689-8b7d-c5f918423d0f"],
Cell[369586, 7416, 1061, 20, 78, "Input",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],
Cell[CellGroupData[{
Cell[370672, 7440, 182, 3, 46, "Input",ExpressionUUID->"a27774a4-4d86-4d43-8468-586700b4d7b3"],
Cell[370857, 7445, 546, 14, 52, "Output",ExpressionUUID->"f11bdfbe-75a9-475e-a19b-425d7b4a4d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371440, 7464, 187, 3, 46, "Input",ExpressionUUID->"a2856725-7b19-4679-b687-8e16d63cf745"],
Cell[371630, 7469, 2095, 63, 101, "Output",ExpressionUUID->"18e603c2-5b55-40a7-99c0-fa4cf3a2efc9"]
}, Open  ]],
Cell[373740, 7535, 1002, 25, 109, "Input",ExpressionUUID->"b861794b-5dc4-4f62-a8af-a6aa1633b81c"],
Cell[CellGroupData[{
Cell[374767, 7564, 509, 13, 46, "Input",ExpressionUUID->"69478f9b-4e5d-4a4d-9821-61463214b59e"],
Cell[375279, 7579, 4235, 122, 289, "Output",ExpressionUUID->"39b8e0b0-c669-40d8-9c4b-52360e5c8562"]
}, Open  ]],
Cell[379529, 7704, 176, 3, 46, "Input",ExpressionUUID->"efd5c193-f839-404e-a95b-39ae529c4d72"],
Cell[CellGroupData[{
Cell[379730, 7711, 11114, 302, 1112, "Input",ExpressionUUID->"e19a6967-7441-4af8-aa7e-13ca11c722cc"],
Cell[390847, 8015, 171937, 2844, 337, "Output",ExpressionUUID->"56152e81-707b-4ccf-9e99-7396da7f1e64"]
}, Open  ]],
Cell[562799, 10862, 547, 8, 53, "Text",ExpressionUUID->"d6601e40-cf20-469d-aa6a-92330eeb74b5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[563395, 10876, 244, 4, 101, "Section",ExpressionUUID->"1367c9d9-3697-4765-9fd2-49fbdfafea09"],
Cell[563642, 10882, 464, 9, 53, "Text",ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-5dfd369c5feb"],
Cell[CellGroupData[{
Cell[564131, 10895, 9173, 245, 600, "Input",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],
Cell[573307, 11142, 3511, 95, 180, "Output",ExpressionUUID->"8c267651-b817-4c2c-b0a6-eeb4f7dc68c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576855, 11242, 9378, 252, 632, "Input",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],
Cell[586236, 11496, 2629, 70, 131, "Output",ExpressionUUID->"a211d104-42ba-46d2-a8a8-49db594732c0"]
}, Open  ]],
Cell[588880, 11569, 526, 10, 88, "Text",ExpressionUUID->"7fea073f-4678-488f-94be-79aeb56d8b30"],
Cell[CellGroupData[{
Cell[589431, 11583, 30696, 751, 2512, "Input",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],
Cell[620130, 12336, 36093, 600, 674, "Output",ExpressionUUID->"459ae68d-9c92-4856-9cc4-32d28c15635b"]
}, Open  ]],
Cell[656238, 12939, 604, 10, 122, "Text",ExpressionUUID->"6d07bfdc-1123-435b-91be-d321880c0022"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656879, 12954, 215, 4, 101, "Section",ExpressionUUID->"0778b274-df47-40d0-990e-9f18ab4dee0d"],
Cell[657097, 12960, 248, 6, 53, "Text",ExpressionUUID->"e2b21120-6780-408f-b4b4-7bd65fa10119"],
Cell[CellGroupData[{
Cell[657370, 12970, 9812, 265, 663, "Input",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],
Cell[667185, 13237, 2551, 57, 95, "Output",ExpressionUUID->"7724aa43-370b-4775-bdff-ecbc75974aa2"]
}, Open  ]],
Cell[669751, 13297, 183, 3, 53, "Text",ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-e5f2bb2c8c0b"],
Cell[CellGroupData[{
Cell[669959, 13304, 8979, 242, 814, "Input",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],
Cell[678941, 13548, 3696, 55, 160, "Message",ExpressionUUID->"64473d42-b0f3-4c54-90aa-246dc5ec48e2"],
Cell[682640, 13605, 3696, 55, 160, "Message",ExpressionUUID->"89078373-7340-4a02-bf25-4c3da7e749e7"],
Cell[686339, 13662, 73509, 1212, 303, "Output",ExpressionUUID->"bde9b4f7-8400-4ced-b045-3ebcfc475c3b"]
}, Open  ]],
Cell[759863, 14877, 176, 3, 46, "Input",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],
Cell[760042, 14882, 420, 8, 53, "Text",ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-8ad9c9b01e0d"],
Cell[CellGroupData[{
Cell[760487, 14894, 25553, 659, 2241, "Input",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],
Cell[786043, 15555, 157780, 3141, 674, 71557, 1729, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"12476f64-eec6-42c6-b986-0e065c4ab40f"]
}, Open  ]],
Cell[943838, 18699, 369, 8, 88, "Text",ExpressionUUID->"13a52492-62ee-4d9d-8fa6-fc52d03d58b4"],
Cell[CellGroupData[{
Cell[944232, 18711, 9281, 261, 901, "Input",ExpressionUUID->"e068b23e-84f7-4b84-8a12-82e688069a31"],
Cell[953516, 18974, 141172, 2870, 674, 68040, 1670, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"cecf604e-eaf0-4721-8b25-32a0806d51a1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

