(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    691939,      13781]
NotebookOptionsPosition[    681081,      13598]
NotebookOutlinePosition[    681532,      13616]
CellTagsIndexPosition[    681489,      13613]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analysis of Packing V3E05L1N01T2_1 ", "Title",
 CellChangeTimes->{{3.580135852891836*^9, 3.580135862589938*^9}, 
   3.580137141312297*^9, 3.581161087909637*^9, 3.5818563558208227`*^9, {
   3.5819486698826113`*^9, 3.5819486708477287`*^9}, {3.58195172547116*^9, 
   3.581951738572076*^9}, {3.5821220906444807`*^9, 3.58212209551359*^9}, {
   3.603189474778634*^9, 3.603189487631043*^9}, {3.603208780082828*^9, 
   3.603208780234962*^9}, {3.604159900860963*^9, 3.604159903777851*^9}, {
   3.607700600015931*^9, 3.607700600356484*^9}, {3.6465858884999866`*^9, 
   3.646585900513159*^9}, {3.646755644997344*^9, 3.646755645131776*^9}, {
   3.647265088709795*^9, 3.647265088860635*^9}, {3.6473560363001137`*^9, 
   3.647356067794221*^9}, {3.7083389526131077`*^9, 3.7083389608763103`*^9}, {
   3.709640641361698*^9, 3.709640647919407*^9}, {3.73896733808869*^9, 
   3.738967346324815*^9}, {3.771795615591055*^9, 
   3.7717956186529427`*^9}},ExpressionUUID->"3bc0b118-19e5-4ef3-836d-\
0d9f018f7019"],

Cell["\<\
Three Vertices, Five Edges, 1 Loop, Combinatorial Number 01, Face Pattern 2, \
Type 1\
\>", "Text",
 CellChangeTimes->{{3.580137445604217*^9, 3.5801375254067383`*^9}, {
   3.581856358992407*^9, 3.581856384416295*^9}, {3.5819517426040287`*^9, 
   3.581951767642358*^9}, {3.582122103025394*^9, 3.582122111216773*^9}, {
   3.603189492504524*^9, 3.603189498647831*^9}, {3.604159907960268*^9, 
   3.604159912193075*^9}, {3.646585904328833*^9, 3.6465859252879257`*^9}, {
   3.646755662934144*^9, 3.646755663058913*^9}, {3.6472650912123737`*^9, 
   3.647265091300403*^9}, {3.647356044921232*^9, 3.647356058120769*^9}, {
   3.708338967340601*^9, 3.708338985260412*^9}, {3.7096406554076014`*^9, 
   3.709640670631276*^9}, 3.709979002564518*^9, {3.738967376997569*^9, 
   3.7389673972246437`*^9}, {3.7717955309580317`*^9, 3.771795539354027*^9}, {
   3.77273501351747*^9, 
   3.772735028334743*^9}},ExpressionUUID->"baec14af-3b99-4417-84bc-\
478b4d896230"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
U8UHJ336DBg3bhy+/vpr0f5suRhP0s/xwoUL6NChAzw9vZEpeyEMmrRJfUUU
u8UedEZiqW2k3zg1+lQu7gjOVgA9Ry7HuiN/mL5PzorqjIqiOCtzN1xGhZpt
xEOnZKlS2LJli/hyv4h3zvMsfj/21Wzbtg2lS5c2rscV5aqHim+j2XukKDFh
LzojYW0j/bt7jw6XcxVrG4uUqmlc12H1qUokVGdUlNhRnTFpsP7oDbTqOkFm
kxUqVBgbNmyQmS2JnaN+1mI8+fPPP2PKlCnImDEYgcG50H/8Oq3zV+wSe9EZ
LTBmXPbmd2jVbSL80mWCi7sXKtXpKJ4IWttofVRnVBTFGZm99pJ4Zru4uqFV
q1Yy/4/+iWYufn/monk99NkpVakxwla/Z/peKcqT2JPOaGHzqbuYuep9Iybs
ALc0PjLHKbT7JPH6NvvanA3VGRUldlRndH5YS88zsrdfBpQpU0b6pM2OIS2L
tY3UO+kDnjVrNsm/cR719rf+MX3fFCU69qYzEtY2cnb72LkHUbhUDalFyZyj
MHqPXoUNR26afn3OhOqMiqI4G4u2f4VKdTvC1S0NunXrhs8++8wmHjrxWcxF
f/XVV+jatSvSpPEUzWTe5k9N3zNFiY496owk4swDrN7/K3qMWIbgrPmRIrUr
ipWtKz7fEWfum359zoLqjIoSO6ozOjfUIfqNW4f0mXLLPL+IiAib90nHZ3Eu
9YwZMxAUlBEFileVWdRm752iRMcedUYLrAFe8uY34sXjGxAsM93p0cNeOLOv
zVlQnVFRFGdizYHraNB6CFzdPNGuXTt88sknNu+Tjmux54YzaNq2bQsXdw80
bDMUK/f8ZPreKYoFe9UZhfMPsfnEXcwIfwchNdsY95A30qbPira9piF8n95H
1kB1RkWJHdUZnZsJC48hb5EQZMqUGcuWLZO5fva6OI962LBh8Pb2kbz1wi2f
mb5/imLBnnVGElnbeAujZ+0TrZ4zlhj79Bu7FhuM/2729Tk6qjMqiuIsMDfV
qf9s450WiNq1a+PcuXN2pzFaFrXG9957D3Xq1IGHlx86D5yLTSfvmL6HikLs
WmeMgrWNqw78jG7DFiFD5rwSH5ao0MD063IGVGdUlNhRndF5Wbzja4TUbgcv
L2+MHz9eZkrb82IP9ZUrVyRv7Z7GG626TdC5FordYO86owWeHxdv/xpNO46G
j3+QzB2s0bgH5m/8xPRrc2RUZ1QUxVmgP02WnEWlz2XHjh24f/++2SHgMxd7
uXft2oXixUsgOEt+DH9jh/oQK3aBI+iMgtQ23sEbK87L9aZ280STDiMxYcFR
bNM+6udGdUZFiR3VGZ2TLSfvIrTbRNEYONOZfSfU8ex9MW996tQpVKpUCeky
ZJcZ1KzTMns/FcVRdEZCf1PWMI4M2418RStJ7jpbnpIYOHGjzKo2+/ocEdUZ
FUVxBhZs/hRlq7SAf0AA5syZgzt37pgd+sVr0Vd89uzZ4q9TpnIzmV9j9l4q
isPojFFQUwzfdw1dBs1H8hSp4B+YGa17TMbKvVdNvzZHRHVGRYkd1RmdkxEz
diJLrqIoW7YsDh48aLf9MDEt5tWXLFmCLFmzomRII8xce8H0/VQUR9IZLWw9
9TcWbvsSjdoOh7dfINw9/VCraR/MV0+CBKM6o6Iojg5z0C27jIebhw969uyJ
77//3uyQL0Hr559/Ro8ePZDGuH7Oz91wTOedKebiaDojYf0GvQcq1mqHoCz5
JBddvFw9TFh8AhFnH5h+fY6E6oyKEjuqMzofy3f9gMr1OsHX319yv/bsyRjb
+vXXXyUGZizZpucUmalr9r4qSRtH1BmJ1DYeuYnh03cgT6EKEk/mzFcagydv
UY+rBKA6o6Iojs7oWXuRLU8JlC9fHkeOHJEeEkda7Ms5ceIEKlasiEzZCxln
/D2m76mStHFEndECvaneCH8b5Wu0hqubFwIyZEW73jOk3tHsa3MUVGdUlNhR
ndH56Dlymcycbd26NT777DPbBYBWXIwljx49inLlyiFHPr67D5u+r0rSxlF1
RgusbVyw9XPUDx0ML59AeHinRd2WA7Bw2xemX5sjoDqjoiiOzOqDv6JG417w
9vFFWFiYQ+ague7du4c33ngD/gHpUKtpb8mtm723StLFkXVGwj7qVft+Rrch
C5Ehcx6kSu2OkhUbY8rS01rbGA9UZ1SU2FGd0bmgZlCmagtkzZoN69atc6h+
6SfXX3/9hbFjx8Lb2xdNO4zSmTCKqTi6zki2n/0H64/ewNBp25CrQFmkTOmC
3AXLGf8eIf7gZl+fPaM6o6Iojgxr2Nkj2bBhI3zwwQdmh3gvtD799FM0atRI
fLz5c5m9t0rSxdF1RsI+asaA01a8hXLGGZIzYtIF5ZC4Z/X+X0y/PntGdUZF
iR3VGZ2LniOXSy1jly5d8O2339ou6Eukde7cOVSuXBk5C5TB+AWO+f5WnANn
0BktbDn1N+Zt/hR1W/YX7czLJwANQofInGqzr81eUZ1RURRHZe3h31GzSS/4
+6fFggUL7H6+dFyLOfR58+YhQ1AQajfrgxV7fjR9j5WkiTPojBYiZ8T8hI4D
5yIwY06kcnGXmUvUHyPO6nz3mFCdUVFiR3VG54F+GpXrdkLGjMFYvXq1w/nu
xLQ4X3DUqFHw8vJB217TsOX0X6bvs5I0cSadkTBmZI3woMmbkT1vKaRI6YK8
RSrKDKktJ/U+exLVGRVFcVRen7PfeM6XRL169fDee++ZHdpZZV2+fFl+nsw5
CovvpNl7rCRNnElnJJYZMeybLlW5KVxcPZA+U250GTQPaw5cN/367A3VGRUl
dlRndB4YZ2XNXRyNGzfGpUuXbBfsJfLas2cPihUrhlKVmmLO+g9N32claeJs
OqMFavdzN30sPlceXv7wNn7Gxu2GY8n2K6Zfmz2hOqOiKI4IZ4G16joBnp6+
mDx5snjSOMN68OABxo8fDy9vX7TuMVnzY4opOJvOaIG1jawT7tAvDAFB2ZHa
xR1lq7WUuTF8pph9ffaC6oyKEjuqMzoPjLM8ouJI1gEmxrp+/Tr2798vvon1
69dHkSJFZO5f586dsWHDBvz8889W/57Xrl1Du3btxIdnyJStpu+zkjRxVp2R
SG3jod8xYPwGZMtdXGob8xerLLkL9libfX32gOqMiqI4IvTDoOdagYIFsWvX
LqvHaFxmxIZczEMXLVZM9A/my8zeayXp4aw6I5HaxuO3MWnxCZSs0AipXTyQ
IXNedBuyCGsP/mb69dkDqjMqSuyozugc0E+jUp0OyJUrF7Zt25Yo8Rz9Hnv1
6gVfX1+kTp0ar732Gv73v//h1VdfRYoUKZAmTRqppaSnojV7tvm1pk6dCl8/
f7TpOQVbT98zfb+VpIcz64wWWA/CmuHqjbrD3dMXPv5BaNpxtMZOb6nOqCiK
YzJ61j7pdWnVqpXMT7H2Mis2tHzvli1bIjh7QYwK2236XitJD2fWGS1sO31f
5rq36z0NadNnhYurJyrUbIOw1e+JFmn29ZmJ6oyKEjuqMzoH05aflfqjunXr
Jor3ztdff42uXbvC1dVVYsc8efLIrJlJkyZhwIAByJcvn8SVyZIlQ7Nmzaw+
yzAiIgIFChRA1fpd9DmumEJS0BlJxNkHkqfuO3YNsuQsipSpXFCwRDWMmXMg
SWv8qjMqiuKI0FfNyzdQag3v3r1r1djM7NiQ82BGjhwJL28/dB26yPS9VpIe
SUFnJJbaxgkLj6FYuboyIyY4awH0GLFMvL7Nvj6zUJ1RUWJHdUbnYPDkLVLL
zpzy1atXrRrHcYWFhcHHxwevvPIK2rZtiwsXLuDmzZu4ffs2bt26hY8//hht
2rSRPDbjTdYf8testaid1qhRA0VK18T0lW+bvt9K0iOp6IwWWNs4c+1F0fbd
PHzhmzYYLbqMw/Ld35t+bWagOqOiKI4GPTEathkK/7QBWLZsGf7991+rxWVc
ZseGXEuWLEFQUEY07TAaG4/9afqeK0mLpKIzWth2+h6W7foOoT0mwS9dZri6
eSGkdnsjXvwAO84lvZnUqjMqSuyozugcdBk0H96+gZg4cSLu3btn1Rjum2++
kX6b//u//0PlypVx4sQJySFHX+yF2bdvH0qWLCm/r0WLFhJfWmv98MMPaN26
tdRXvT57n+n7rSQ9kprOSFjbuObQdfQeHY5M2QtJbWORUjWNWPqwxJpmX58t
UZ1RURRHg8/vKvU6S53hjh07rBaTcdlDbMi1c+dOFCpUCNWMc/6yN78zfc+V
pEVS0xkJaxs3nvgT4+YdQuFStZAqtbvEiL1GrcT6ozdMvz5bojqjosSO6ozO
QWj3ifDxTYt58+ZZNX7jOnPmDCpVqoSXXnoJgwYNwm+//Rbj72P/TPPmzeX3
lStXDsePH7faNdy5cwc9e/YUX5BBkzabvt9K0iMp6owWNp+6i5mr3hcPWLc0
PpLDDu0+SWYRmn1ttkJ1RkVRHI3F279C2SrNUbZsWRw7dsxqMRmXPcSGXKdO
nZKZM/w55238yPQ9V5IWSVFntEAvnaU7vkXLruPhG5AJbu4+ktegz7fZ12Yr
VGdUlNhRndE5aNJ+JNKmDZS+GGuv3bt3y+zAl19+WXpeYvPxttQcMpYsU6YM
jh49arVrYK8P41gfvwzoO2aN6futJD2Sss5IIs48wOr9v4oXT3DW/EiR2hXF
ytbFxEXHjV+7b/r1JTaqMyqK4mjM2XgZxcvXQ7Vq1WQOizWXPcSGXPTVqVmz
pnjGcS6F2XuuJC2Sss5IpLbx2J/i4V2oZHWpbWTvGc9qG47dMv36EhvVGRUl
dlRndA4atR2GdIGBCA8Pt2r8xnX9+nWJ45gzZrwY27LklBlLcrbgpUuXrHod
w4YNg49fIHq/Hm76fitJj6SuMwrnH2LzibuYEf4OQmq2gYu7t9QYt+01TWbe
m359iYjqjIqiOBqz115CkbJ1UKtWLbz99ttWjcnsJTa8ePEiateujSKla8m7
yew9V5IWSV1ntMDaxiXbr6BZxzHwTZtRfL2rN+yOOU5eY6w6o6LEjuqMzkHj
diOQLl0gVqxYYdX4jYu1hPTcefDgQaz5asab/fv3R6pUqZA8eXKZa0gvcGuu
IUOGiM7Yd8xq0/dbSXqozvgfrG1cdeBndBu2SOZPpUzlihIVGmDyklPi6Wj2
9SUGqjMqiuJozN7wIYqXqytz9M6fP2/VmMxeYkPOnqGOSj11+qp3Td9zJWmh
OuN/bH/rH6lhHDVzD/IXqyyxYbbcxdF//HqnndGkOqOixI7qjM6B1DOmC8TK
lSutGr/FZ33xxRfo0aMHPDw8xOe7fv36kuO29lxDrWdUzER1xieQ2sY7eGPF
eYmxU7t5IiAoO9r1DcOqfT+bf31WRnVGRVEcjcSsZ4xr2So2ZD1jnTp1tJ5R
MQXVGZ9m66m/sSjiK6mBod+Vu6cvajbphXmbPzX92qyN6oyKEjuqMzoHjdsN
t7nOeOvWLaxZs0bmCKZIkUI8ejhzkF7jzG9be7Ge0dsvEH1eX2X6fitJD9UZ
Y2bbmfsI33dNZt6nD84t3jylKjXG1GXnEHH2oenXZy1UZ1QUxdGYtf6S+OjS
v9Da9YyxLVvHhpZ6xqJlams9o2JzVGeMmcjaxpsYMX0n8hauKLWNOfKVwsBJ
m7Dp+G3Tr89aqM6oKLGjOqNjQJ/ddUf+wNxNH2Ps3IPoNXolWnadIN4XxcrW
gY9/ENJ4eGDRokVWj+GeXIwTOS+wUaNG8PLywiuvvAJvb2/pjfnoo49w//59
q39Pfs1+/fohefKUyFe0Epp2GI3uw5dg9Ky9Mtds7cHfnErTUOwP1Rljh8+n
TSfvYOqyMyhTuRlcXD0RmDEXOg2YI7NjzL4+a6A6o6Io9ogl1xO2+n2MmLET
3YYsktmAIbXbI2f+Mkjt5oWQkBDxSUzMZUZsyPXWW2+hSpUq8Dbez2WqtkBo
90kyg2LCwqNYuO0Lp+3XVOwD1RmfDWsbeR82bD3UiKED4eHljzot+mPB1s9N
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
FSV2krrOGN0/mzVw3YdGak/svyhQrArSZ8otPRVP1SImTyGeiPzv7Gthv0Wl
Oh0i55MYX0N8AddckGeOxImsRTwUcy2iNX4O5q5Zg+fr64fFixdbNY/MfHWz
Zs3EG7Fz5864cuWKzfLUXHfv3hUfcW/jHcRelhfdM9EhT98TLXejRYc8FKVD
7voh8swwZ7/UlDbr9Doq1e2AAsWrymeBfe3Jojwxkz/SIb3kHEG9OVvu4uKZ
VJt6ct/pGDRpk8zGWLrzOzkbmP15V54f1RmfH9YCL9v5PUJ7TpHzIPv/qO/P
Wn3BYXyxVGdUlKTF5lN3JYabuuyc1N60j9KeOGuEPjb+6bPC3SuyFpGaE/PK
llpE/tPLiB2z5CyC4uXqokajHgjtPhF9Xl+FsfMOYc7GjyXeiF6LuCGGWkRr
/ByMb6l7VqpUyaqzYMyODbk4Q7tq1aoSg09b/tYL7ZPokMa+c//pGSd56mg6
5NId30jfEn176KHesPUQlI2Pb4/xGWFNf6RvTygatRmGzoMXYMT0NzFz1ftY
ve8XRKhvj8OiOuPzw/MYn30DJm5Atjwl5FzFPkB6SPCcbPb1xQfVGRUldpxd
Z2Rt4KIn/LPrNO/7qFfiWf7Z0rPiHyTPvpIVG4nXS9te09B/3Dqpz1m45TOs
3B1Zi7iGtYiHY6hFPG+7MzR9Hzkvhn0rP/zwg9XiuEOHDqFUqVJwdXWVWHLz
5s3YunXrM+HMwV9++cUq3/+dd95B9erVZcbLpMUnEn0f6Vf8nw75p/y9WnRI
9ijN2/hR5MzvUSvRoss4VKnXWXreg7LkE92ZGjR1SH5+WL/AOgbRIY3PEr04
S1SoL/Ww/CwNGL9B6lqZv+P5wuz7RYkd1RlfDEttI733C5epLWey4GwFJXfA
e8zs64sL1RkVxXmg3x41pMj3+QHjfb5C5oNUa9ANRY3nU6bshaRn2VKLyJxi
8lT/+SIyXqQXC/v9qDE0CB2CjgPnylyDaSvOY/H2r8Vvhd6Law9H9aqc+FP6
Apl3saXfH5+7jHv9/PyxdOlSq2mBZseGXMyrZ8iQQfRfxmmJupdGPP+UDmnp
l9l/Dct2fouwNZEzv8W3p+1wlK/RGnno25M+WzTfnv90yOi+PbnEt6clGrQe
jM7GZ0nqWle9q749do7qjC8O6zDmbrgscwt4P/DZS69ZavtmX1tcqM6oKLHj
yDpjpH/2r9KXMGrmnsf9s0tWR1CWSP9s9xj9s1M85Z/NGcXR/bP5fLPUIrJn
ZcNz9qzYCvoWcq5M0aJFsX//fqvFcexZZhxHf++UKVM+6pF5FjVq1MDJkyet
8v3nz5+PwMBA1DPiyNUHEzmOjAc8HzDmY62D6JDG+YE979SbqTvP2/wJxi84
InULrbpNQLWG3VCkdC0EZysgmjY/f9QiZSZiNB3S2y+DnG2Kla0r71p6KrFP
n5o2tXJ+9sz+2ZMyqjNaB2r4jMVaGPeGb7pMcs6i9/6s9ZdMvzYLvKc5h5R5
DdYxsZeR9UDMQRU03i2dBszBwImbMHHhcczf+AnWH/7D7t4HipKUYS0MfVLo
a0Ltj7pNg9ZDRA+gNhgQlF169ZgbpA8f8x7/zQlJJTkFvo+pOVbjjOIu40WL
lNkgxnn4US3igf9qEak9SS3iGevVIlqF8w+NeCQyD921a1d8++23VonNzI4N
qVdS3/RLF4y+Y9aYv+fRdMgY/cOjfHt4XpHeqfYjjbNHW+QrUkn6rp/27fF4
3LcnXynx9azXcqD0dVt8e5j/3qq+PaahOqN14L3DszZrebLmKir3QMESVaW/
zF4+3/JeMZ791P/pi8A8OXsZI98XBaXvmzUo9G5lHTl90ezl2hXFDOxZZ7T4
Z09aehoDJ21Ch74zUbfFgHj6Z6cWXxzmGJ70z6YGRC0oLv9sW9YiWgNqXy27
jDNiZ1/xyfnzzz9fOI6jz86wYcPw2muv4aWXXoo3ZcqUwdGjR1/4+3/zzTcI
DQ1FugzZxXvH9DgyHkTqkPelbiG6Dsm6Br5zqF9MXBTp9dla5o73EG0xU/bC
cu5JHqWDiw5pnH3Yr0+tnBpXcNYColmy5oIaJmtY+XmmPye/l6P0oDoiqjNa
D97H/LyyLrhQqRryOc+co4ho8/SWsPX1UMPnvCd651JXYJ17pFdGZB0T3y2v
vppM+gP5T8a/zBHw3uTv8/XPKLNhW3efhGnLzsn50uw9VhRnhc+PdYdvSBw3
bt5heW6EGveevEvL1UXmnEWkFyXSN9tyD//ni8h7l/FjroLlpAea805Zr8yc
An1OFkZ8iZV7omoRo/tmn4qqRTzreLOHxcO7UmPkypUL27dvd/jYkGvHjh0o
WLCg/Fz0uzF7j+NDvHx76PU5YimadXxdNIwCxasgMDgevj3svQppFOkD3zcM
gyZtlp5/zkd0lB5UR0R1RuvCWp7Zay9Jfifys51R5qPyc2zra+F5bsmb34jH
LesV6bkbvQcyhXglpJBcy/9eeeXRDKnotcqZcxSW2hHmBXiP6+x6JSlhls4Y
k392i85jUbV+lyj/7AJx+meny0jf5YrSl/CYf/bKt5/tn336vtPe5+wPZ66+
XLly0p9ijXXz5k38+OOPCeLXX3/F33///cLfe+XKlcicObP4ZS6K+Mr0/bUG
PCOxHpafRX4m+dlkXxXPNOyP4WygyYtPSp9/m15TUZMzh8o3kJ5r+j1FaumP
65DUOli7y95t6ja8j9jTzbwavaA4l5L6jSPotPaK6ozWh+etJdu/kdkJMk/L
+BwzlmO9kC2+P++1tsY9Rg8Nfm++Y9zc3JE/fwE0adIEffv2xeTJk7FixQrs
2bNH6nD27duH8PBwmXFK39gWLVqgcOHCSJPGQ+5Jvq/oycb32dxNn+gcUkVJ
IJzjxpwcZ6EMe2O7EdvNlxiPs1I4M4WzU1g/Er0WUXyzozQYnu0YQ/JdSF8T
3os9Ry6TWJN106wrC9//RC3i8TsyH2TbmX+c8j3J3Dln19Hnul+/fvjpp58c
Ojb8448/0KdPH5mjzfpyfmbM3mNrEF/fnp6jVsjnukq9TtK/RZ943g+vJfvP
tyd1XL49EzbIHHSel/j9zP7ZHRXVGa0Pn1f83Pd+fZXUYDBPVNh4no8zzjO2
8BDguWz49Dclh8F7J1KDSI2MGTOKjxfrqEeNGoV58+Zhy5YtOHbsmORP6B0x
Z84cjBgxAp06dULlypURGJhe/izvR86Tokfr67P3R9aG2MFeK0piklg6I2u5
6FUybfnZx/yz6T1Cz2R6lUjPymP+2f/1rFj8s1nnVb1Rd7TqNtF43oTb3D/b
0WCs0LTDKHh4+mL06NESiznq+uKLL+QMz7qDvmNWJ5l5fTHrkL+LZk4dkj3U
k5edxqCJm6T+qnbzvuIfyhk03n6BSJ7Sch9F6pA8hzH+5LksQ6bcKFi8KirV
6SgzbjjrZsyc/cY99ZHcR86qv1sD1RkTB37eNxy/JX0mnLfE/DDr0PuNW5do
cdii7V+heecxMtuJ8R/nZ9WuXVs8Gj744APpx+Oz89atW7h9+zb++usv3L9/
Hw8ePJB/8t/v3Lkjv87fx7Pz5cuXxfusYcOG8A8IkK/L9xx7NVl3lVTfSYry
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
kya6b8+YOVG+PUYMmpTqqML3/4yqDbrA3zjLLly4UHqQHXUxDz158mSZld2g
9RD5rJi9v2Zhmb3H3uMYZ+/lKPxis/e2R5u9d1hn770oqjMqFqiJ0CfgjfC3
pa6D3qScA50qKq5krWPatGmlh6ZgwYIoU6YMSpUqhbx580qe288vsv/azc0N
KVOmhLdvoPQS9BixHPM2fiz3Kt+tZv+civI8JEhnjItoOiTPcY90yAORXuTM
w7EvkxoatZHG7UagQs22yFskRGr1qTsyzuR7kzokfeOoQ/K9ynpJxrulqzRH
/VaD0Invz6nbMG3l21ix96rkFczeS2vBd3/9VgONZ5OvzFKJ7ZzrKIv14/Pm
zUOGDEGRNY17nLemMXIO31eYtPgkBk7YEOscvphqEdm/wjgy+hy+Nr2mynz5
mObwMbdlj3P4FMURoDbB+5U1HOx/oV8xa4RSpXaRnLSHh4fklAMDA5EjRw7x
ryhbtqz8k//O/85f5+/j70+ZKrXMkK7VtA9Gzdwt7zt+fT2/KY5IQnXGuHjK
P/xYlA4Z1S/Del/WaQ2eslX0f/r2lKrcNNK3xz+jvB9j8u2hDvlo7kTtSN8e
5t34DubX3HTSufwhqRvR96RZs2bizeDo67333pN8ehYnr2mMPntv6LTtUkuR
oNl7Xv4xzN5bLjPmOWdxuc7esymqMypPwvuM7zaez+h3zGc1cwX0BucZkDVX
6YNziq+jt28AgrPmE68rvmfpg9Gub5jMveB7i+9G5gA0flQcHavqjPGAfZmR
MxHviEYiOmTUTES+J2evjZxxxutp2nG0ETe2f+Q5Rz8RyzuXeTzm75jXow7p
G5AJ2fOURMlKTeR+7dAvTLywpi1/S76u9KvZwX7HB/bLch5ptWrVcPbsWdsF
fIm4GA/TKzfSp3Gv6Xv8fJ/dx+fw9TQ+o807vY7K9TrJHD7G/vTIpidV6ifn
8BmfW2qL/Bw/OYdveFTdLn0Jos/h2+Cgc/gUxZHgfcV3EnUP3n/TV76NXiOW
o3H7kahctxOKlqmNbHmKwz9dJnh4+sI/IBjZchdDYeO/09+U+TK+r+ibQ08C
3rf8enq/Ko6MtXXGuIiPb49oNFMjfXvqhw5G2SotkLNAGfESSZXK9ZEOyRxe
asucGvpDZisofW3Vo+ZWcDYac3esaWZe1+y9ji+MmRnf+vr6Y/78+Q5dy2hZ
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
6+w/fj2CsxeEh3damZu95sB10/dPURRFUZTYUZ3R8aDWuGDr56jeqDvSePjI
HOo33ngDP/30k01jQ67vv/8eY8aMQaZMmcSPsX7rwVi0/Svx6+b8mmnL30LR
MnWRKrW7zDmct/lT0/dPUeKL6oyKoihxozqjY7Ll1N+Su65ct6PEk+nTp0ef
Pn1w+fJl/Pvvv4keQ37++ecYOnSoeEW6uqVB+RqheGPFeWw5+bgXI/99+PQd
0ivjlsYHzTqOxso9P5m+f4qiKIqixIzqjI5JxNmHWL3/F3QZsgAZMueGq6sr
qlSpgh07duD27duJHhveunULGzZsQLly5ZA6dWpkyl5Q/H7WHLqO7Wf/eXSd
9BwPW3sBZSo3QyoXN5St1lJiWrP3T1Hig+qMiqIocaM6o+PCvPCag7+i/7h1
yJ6npBHTuSBnzpwYNWqU6ICJoTd+8803mDx5MvLlyycxZOYchdFz5HLRDhk3
xnSd1ETHzjuEvIUrIpWrJ+q1HIilO74xff8URVEURXka1RkdF/aTbD5xB9NX
vi29yqwn9PHxQaNGjaT35e7du1aPDalh7ty5E7Vr14aXlxc8vfxQs0kv0RI3
n7qLHecePnWdrL+cv/ETVKzVzogNPVC8fD3JV5u9f4oSF6ozKoqixI3qjA7O
+YdSM7gw4ku06TUNgcE5Rf9jv0zXrl1x6NAh3Lx584Xixzt37kh/NOslc+fO
LV+f812adx6LuZs+NuLZuxLXPus62SczZelpFC5VE6lc3FG9YXfp7zF9/xRF
URRFeQzVGR0f5n7XHv4dI2bsQqHSNaX3hHpjtWrVsGjRIskbv0g+mn/2iy++
wJw5cxASEgJvb2/je3iiZMVGGDPnANYd+UPy4c+6Rv764u1fS6+3i7sXChSv
gokLj8WoSyqKvaA6o6IoStyozugccN4gZ8TM3fQRWnSbgMCMOZEyZSp4enoi
b968aNeuHZYuXYr3338/Tt2ReelLly7J/OjOnTujQIECkp9OmTIl0qbPLDMC
2d+y8dif0qMT32vcdvo+wsLfkxiUnjwVarbB7A0fmr53iqIoiqL8h+qMzsPW
U38jfN81DJ68BYVKVoOrq7v0U2fIkAHVq1eXOX4HDhzA1atXnzk35sGDB+K7
uHfvXrz++uuoVKkSAgMD5WtRwyxeri5GzNiJVQd+kdxyfK+P/dTLd/2Aeq0G
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
+/x1xofGjFXH7oM1e80H1p8HANhCZ3QbnRGQVm77Uf1HzFaZChcrtlQF3TZs
ulZu3Wt9LwCwgc7oNjojIO/8loenPaea9a5QocLR6nTDPZq75kO/nXH48BEK
D49Sm863aXrS29afBwDYQGd0G50ROCZx2z4NHrNM8ZVre38meg+aqGWbvrW+
FwAUNDqj2+iMwDHJ6Yc0bm666l12lcIjonTltf21fP07p+2Mm7a/oWZtrleh
rB/ftG1PTVn+qvXnAQAFjc7oNjoj8LvVO/Zr+PhU774wkdGx6t5vjBZt+ML6
XgBQkOiMbqMzAr9LST+sSUteVqMruqhQeJTadb5J6Xte99kZ3/roiGYnv6Ur
2vdWeES0Gja7RhMW7rH+PACgINEZ3UZnBE6WlH5AD07ZqOoJzRQeGaNrbrpP
89Z+ZH0vACgodEa30RmBk6XsPKynV72p5u17KaJwtJ56aorPzmjuN/33F49q
dtr7atvlDkVEFVXtS9vo0VnbtGZXpvXnAgAFgc7oNjojcKrkHQf12OwXVKfh
lSpUOErtr7tTs1Lfs74XABQEOqPb6IzAqVIzjmh2ynu6MuvPxbTpM07bGf/x
z1+UlnFU89d+4l3X0Zwjc3GtyzX6qfVZvw6tEUDoozO6jc4I5Cwl/ZCeWPSi
d76LOU+mVYebNW3Vm9b3AoD8Rmd0G50RyJlphKs2/U9vvvuF385ofnzarl+0
eP0X3v2qY4qVVqWL63nX5zHvMW0/FwDIT3RGt9EZAd+882RWvKambW7wrv99
eatumrTkX9b3AoD8RGd0G50R8O351zL12XeZueqMhmmNyzZ9o5sGPK7YkhVU
tmINDX54uXedHtvPBQDyC53RbXRG4PTMeTIzkt9Rq6v7etdrrHdZR42bm2F9
LwDIL3RGt9EZAd+2vq7T3m86e2f07MnUiud/0K33PK2SZSurVJaBWV97J277
2frzAYD8QGd0G50R8M+cJzPnmQ/V/rpBiixSXDXrXZH1tfdm7zNq27sBQF6j
M7qNzgj4dkad8Vertv6kAaPmq2zF6ipesrzXHVds/sH6cwKAvEZndBudEcid
tN1HtWDdp979p6NiSqhKzUYaOWmtd7yj7d0AIC/RGd1GZwR889cZX3//gFZt
/U7LNn97qk3fZr2X/ET975upuPhq3jV5zPvKmSnv5PzjASBIXdXtLv31gnD1
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
lixZcvK9WbIfi/jrvzdr1sz78eaajqahhYeH/3bvmLBfu+Jv96vO6bjIsN9/
3ejoaL333nuWn3n+Dp0RdEbANxc6o5G684imJv6fmrfvpfCIaDVsfo0mLnzR
+l4AggOd0e2hMzJMaM7Bgwe1YcMGNW3aVDExMRo+fHhI3huXcXdefPHFE96z
hPk8f/pvF/xND4wapYiICJ/nVud87OLJre28887X888/b/tp5/vQGUFnBHxz
pTMaqRlHNCv1v97fBYUji6pOwyv12KxtWrMr0/puAAIbndHtoTMyTOiOObfz
hRdeUJs2bRQVFaVBgwbpv//9r+21GCZP5scff9Q555xz8rGJ2e/j4qND5tQW
c7rfy3F/+ctflJSUZPspF8jQGUFnBHxzqTMaqRmZmrf2I13dY4gio2NVrXYT
PThlo/fttncDELjojG4PnZFhQnsOHz6sPXv2qFOnToqMjNQtt9yi//u//7O9
FsPkyZj//wrLqSd693DxfYzjb20yh+/Lfs+X4wYMGOBdjyDUr3dKZwSdEfDN
tc5opO0+qkUbPtd1N49STLFSuvDi+hoxIc27jqPt3QAEJjqj20NnZJjQnyNH
jui1115Tjx49vOMau3fvrldeecX2Wgxz1nPZZZf5vF9Ljuc/h2VvijkcC5nt
uMjs3fHcc89Vly5dvHOof/nlF9svQZ4PnRF0RsA3FzujkbbrFy197hvdeMdj
Kl6yvMpVqql7xq5QUvoB67sBCDx0RreHzsgwbszRo0f1n//8xzue0dzLomPH
jsrIyLC9VlCPua/Izp07NX/+fA0fPkK33nqrrr/+erVr187rXzVr1lT16tVP
UaNGjZP+OSGhri5teKmaNGmili1bqlOnzurfv793/565c+fqH//4h9544w3v
2FTm5OnZs2fO11zMfpxiWPa26MeJ9672jo3M+ce1bt1aH374oe2XIU+Hzgg6
I+Cbq53RMK1xxeYf1HfIFJWMq6TSZS/SgJHzlLjtZ+u7AQgsdEa3h87IMO6M
aY2miQwcOFBFixb1mlaoHpOVH/PBBx9o1qxZuq5rV8WVLnNquwo7oUtlO3f3
WPc68TzesGw/1s9xeFnMfZKvvLKtnnjiCe941MzMTNsvifW5//77C+z1P/Zz
jx37eOLjmesRrFmzxvZLkWdDZwSdEfDN5c543KqtP2nAyLkqG19NsSXLq9/Q
qVrx/A/W9wIQOOiMbg+dkWHcGtOmPv30U68llChRQo0bN9a6deu8BsmcOua+
OY8//rhq1Kxx2i51/Nza091L5NTzdXP4dx/n9Z7a0P6kivHxmjZtmn7++Wfb
L5O1mTNnjrXX/0TnhJ3j/bcIhaEzgs4I+EZnPCZx+z4NGbtC8RfV8a7Z2Gvg
eO+8att7AQgMdEa3h87IMO6NOX7xq6++0kMPPaQyZcooISFBycnJnJf765jX
x7RXc7znSeffnnAura8u5a9n/emkfhN2QsPK3sl+/fZcPH6xYsX08MMP69vv
vrX90hX4PPvss9Zf/xN//RUrVth+Sc566IygMwK+0Rl/l7T9gO5/Yo2q1Gyk
yCLF1a3vaC1c97n1vQDYR2d0e+iMDOPmmJZm7ptrzsGNj49XtWrVtHTpUh04
cMD2atZm//79mjV7tqpWrarfz7XNdhxbjl0xLIcWlUOn8nGMna/j7v7o4//t
b3/TA6Mf8J6HK2OuWxkor78RHhHuHQMbzENnBJ0R8I3OeLKkHQc1Zuom1ajb
QhGFY9S55zD+3gBAZ3R86IwM4+6Y1vjjjz9q+vTpqlKliipVqqTZs2frp59+
sr1agc6+ffu8c6PNcYHHO1KO7ek0xy76Ol/X53GPp/xaJ3ess3l8cz61uXeM
C2N+/wba63/llVfaflnOauiMoDMCvtEZT5WcfkiPzd2huo3bq1BElNp2GaCZ
Ke9a3wuAPXRGt4fOyDCM6WyLFi3y7o9ctmxZTZ48Wd9/f5o30SEy5lqV8+bN
U1xc3CnHxJl//+2afyfdNyR7k8rp3iInHguX/X4jp15HMPsxcXn1+J06ddLH
H39i+2XO94mKigq419+czx2sQ2cEnRHwjc6Ys5T0w5q4+J9q1LyLLgiPUour
emvqyjes7wXADjqj20NnZBjGjDlfOikpSfXq1fPuD/Poo49613AM1Vm7dq2q
V6/u8/i00zv1XiC/Hzf36zX/Tnuerf/j4/Lq8WNiYrRhwwbbL3e+To0aNfLs
9T/nnHO8e7Gb65aGhxc649e/ebPmtl+WMx46I+iMgG90Rt9Sdh722mLTtjd6
xzU2uqKL1x5t7wWg4NEZ3R46I8Mwx+fgwYPe/U8uv/xyr7WMHDnSuzd1KI25
dl779u1zcWxatn7k8zi4U78v+8/JVTPMx8f/85//rFGjRoXsPcXbtm2b69f/
6quv1k033aThw4frqSlPefc/2rVrl959913veqXmGNcTx9zLOyMjw3s/FFui
RK5f/7BzwvTee+9ZekXObuiMoDMCvtEZTy8144hmpLyr1p36KTwyRnUbt9Pj
c3ZY3wtAwaIzuj10RoZhTpxDhw7p+eefV6tWrVSkSBENHjxYH3zwge21znpM
QzX3ZL7ggguOtaAcrsMXlr0dnfZ4w2wNK+wPNEVLj3/FFS315Zdf2v5PkefT
t2/fXD3/s/3/OXMtgWbNmuX69Z84cWIePcOCHToj6IyAb3RG/1IzMr2/Ozp0
u9u7D3WNhObevWLSdh+1vhuAgkFndHvojAzDZJ/Dhw97x3h17NjRu/Zdv379
9Pbbb9te64znueee04UXXnjCvYhP7ESn71Nhx48vPOHexScetxYREaFGjRp5
r9GUKVO0cuVKrV+/Xjt27NCrr76q119/3fPaa6/99s/mHsmvv/6G97+vZf37
Sy+9pN27d+uFF17wdl2xYoV3jcxhw4Z5fadWrVo699xzc3z8U3b2cx+TCytV
ColufOI89NBDuXr+ppmf7ezdu1dxWf+fmZvX3xw3G4xDZwSdEfCNzpg7piku
XP+ZuvQeoeiiJVW5egPdP/EZpe48bH03APmPzuj20BkZhslpjhw5on//+9+6
/vrrvdZoOoPpZsE0X3/9tXre2FMnndd6Yof6tR2Gndgaw3wfY2j+2Vy/r0GD
Bho/frzXXs09uwtiTN9KTEz07mV8YgM6bXP87ZjIk5+/+Tv/3XfeKZC9C2Jm
z5mTq+ffo0ePPHk804Bz8/oXLVosTx6voIfOCDoj4BudMffSdv2iJZu+1g23
j1WxEuUUX7mWhj66Skk7DlrfDUD+ojO6PXRGhmF8jbme31tvvaU+ffp451B3
7txZe/bssb1WrsYcV1isWHGdeI5y7q6XmLNKlSp5femTT+zfv/mVV17xmpl3
jGNO90HOfkxmDs/f3Ff8448/tv1U8mTMPX1y8/xbtWqdJ49nrlma8/Gwpz5+
ML7GdEbQGQHf6Ix/jGmNy7d8rz53T1KJMpVUunwV3Tl6oRK377O+G4D8Q2d0
e+iMDMOcbkxrfP/993XHHXd494Zp06aNtm3bVmDH8f3R+fzzz70e6vdcaB/n
u/5+POOxztLk8iZKS0s75f4ggTBvvvmmmjdvfvL+uXD8+Zv7NJvjJIN9zH1a
cvP869Spk2ePWb58hZN/H/l4fHOt02AbOiPojIBvdMYzs3Lbj+o/YrbKVLhY
saXjdfu9M7Ry64/W9wKQP+iMbg+dkWEYf2MamzmOb+jQoYqNjfXuR71hw4aA
am+mey5atEjR0dEntZ/s50SfdNxZWA797ddva926tXfNxEAf87yXLl2qEiVK
5NhO/T3/a6+9NmCbcW7nnXfeybktZnv+5cqXy7PHvOqqq/z33azvW7x4cZ49
ZkENnRF0RsA3OuOZS9y2T4PHLFN85doqWry0+gyaqGWbvrW+F4C8R2d0e+iM
DMPkZkyLMvcqHj16tPd3Rt26dZWamurdM8b2vPOfd3TFFVf4bYlhOZzXeuKx
i0ZCQoJ3L5Zgm++++867b8+ZPH9z/5pgnm+//TZXLTm8UHiePeYdA+7I+fjY
bI//9NSpefaYBTV0RtAZAd/ojGdn9f+zdx7QUZVrGzUqKiQhIT0QkpCE3nvv
SJEiglSlNwHhSruAIL3jBaX33kuC9CYlVEGKdEWkCfxIb6H7/LwfRlLmZMIw
yZmZ8+y19sKEZOabIStz3POVHVHoMTxcnQvj5uGLBq37Y9a6/9N9XJRS68rO
aGzYGQkhiUVaozSdYcOGITg4WK27nTdvHh49eqTLeOR++/Xrj5QpU5pshrHX
RzslOPfMP62/eiz2PLdPxi7n07zctzHxj/+DDz5Q+3DaK/K4303xbqL+/aOi
oqxynz169IjdMzV+/oYOHWqV+0tO2BkpOyOl2rIzvrlLdz5E3+/XI0f+MnBx
80Stxt0xbdUF3cdFKbWe7IzGhp2REPI6SNORPf3GjBmDTJkyIWPGjJg6dSru
37+frOP44YcfEBoaqr1mVWtddJw/U6RIoV7rHGGfwmi2bt0KV1fXRD3+6L+T
tfD23Fh9fHwS9e9/4cIFq9zfwIEDNc64jn3/vXv3tsr9JSfsjJSdkVJt2Rmt
47IdjzBk8nbkK1oZzqk9ULVuB0wK/133cVFKrSM7o7FhZySEWIJ0xenTpyNH
jhwICgpSa29v376d5PcrZ378e/aJqbXACcxZ/LcL/dNQihUrps5udkQiIyNf
tsYEHn/0514+h05YsGCB3sO2mOzZsyfq3//gwYNWub9Ro0Yl6uevU6dOVrm/
5ISdkbIzUqotO6P1XL7zMUbO2oeiZWrB2cUdH1ZvjnGLjus+Lkrpm8vOaGzY
GQkhliJrUBctWqT2NPT391frqa9fv54k9yV9sUqVKvHWqsY8J1przayTU+yP
3d3dMXnyZJs6xyYpkHmNqVKlivf443WxfwwICEj2eanWonSZ0on699+4caNV
7k9+fhLz89eqVSur3F9yws5I2Rkp1Zad0bou3/UEYxYcQelKn8HF1R0lP6yP
0bMP6j4uSumbyc5obNgZCSFvguyRuHLlShQvXhze3t745ptvcPnyZavctjSv
adOmoUiRIv/2otiNLP65JjH72avW9OrrPvnkE6uNzx6Q847fijPn7tUcxvjz
/exxna8g52Yn5t9f9uC0BjKXNzE/f82bN7fK/SUn7IyUnZFSbdkZrW/47qcY
v+xXVPi4pdqvsWCJGhg2dbfu46KUWi47o7FhZySEvCmPHz/G5s2bUaFCBXh4
eKBr1644f/68Rbcl+yQumD9fdSNnZ+f4bTGWpvqZ6bWz3l5eWLJkiZUfuX0g
jcjkPEYTz5ecqXPu3Dm9h/zafPHFFwn++0cr5+RYA9UZE/Hzx85I7VF2Rkq1
ZWdMGsN3P8eUH86hat2OcEvjg1wFy2PA+M2I2MPnklJ7lJ3R2LAzEkKswZMn
T7Br1y5Uq1ZNrUtu27YtfvvtN7PfJ2uXDxw4oM7lLVuuLN57771Y607jdsZX
ewzG/XvtuWUNGjTAtWvXkuFZsE2k3YaEhJicwxi/NzqhdZvWeg/5tRk0aFAC
PTr6MTrhyy+/tMr9veyM5n/+WrRoYZX7S07YGSk7I6XasjMmnRF7n2HGmkvq
/Gl3Tz9kyVUMvUetUvMd9R4bpfT1ZGc0NuyMhBBr8fTpU3XORp06dVRrbNy4
MY4ePRrv606dOoUJEyaoOYuenp6xeld0D9LaT9BkK4vuPf90sujvlfNpVq1a
pcMzYXvI2va4z7Gp3ii+l+I9nDlzRu8hvxYzZ86M9+8fb17ji48//vhjq9zf
tGnTzf78ycfNmnE+I7U/2Rkp1ZadMWmV+Ytz1v+FBq37w8s3ECGZ8+G/Q5dg
2c7Huo+NUpp42RmNDTsjIcSaSGs8fvy4aoxp0qRRLXH//v3//v3hw4dfNaCY
XSbOORoxz9eIdaaHqXl4cZpZihQp0KVzZ9y7d0/HZ8L2qFix4qvnyszz37Rp
U72H+1r8+OOPsX52Yv1cxPhZyZcvn1Xu79/5jKbmMsa4f66bpvYoOyOl2rIz
Jr3SGudtvommHb+Fb7pQpM+QDf/pOxtLtkfpPjZKaeJkZzQ27IyEEGvz7Nkz
/P7772jTpo2aryjnREdGRuLvv/9W66Q9vbxMrt91inder1OMFhZ3HmPshhT9
p5xHIy2TxOfEiRP/rEs3vX465nMsrTYx695tBRmr6fmvsX9WfHx8rHJ/06fP
MPnzF1d2RmqPsjNSqi07YzL503Ms3HoHX/x3AgKCssAvIBRf9JiERVvv6T82
SqlZ2RmNDTsjISQpkJ544cIFdOrUSbWd0qVLY8OGDerzsq46wb30nLTXTZvq
Y2qNdGAg5s+fr1om0Ub2J0zonJSYz3+HDh30Hm6iiYqKUm0s1nzXOHNh5XG9
/fbb6mvflOj5jLGeS6e34t1/C3ZGaoeyM1KqLTtj8rp423181Wc2gjPmhpdv
ejT7apSa66j3uCilCcvOaGzYGQkhSYU0RXkN6dWrF9KmTYvChQtjxYoVmDBh
/L9zEp3+6T/Rc89Mni8da410bL29vdXvL2u0IyPw559/qjOlE/P8u7m54f79
+3oPOdHIz4LmWuYYWmOe5r+d0cTPZcz753xGao+yM1KqLTtj8rtkRxT+O3QZ
MmYrBHdPX3z2xSDM3nBV93FRSrVlZzQ27IyEkKRE5hdev34dgwcPVuey5MqV
C6NHjzbRZUypsVb6hX5+fhg+fDj3YLSAzp07J/r5nzx5st7DTTSy96LWXM2Y
j3HLli1vfF8zZsww/bMZ5/7ZGak9ys5IqbbsjPq4NPLhi99Na5A9bym4unvj
06ZfY/qqP3UfF6XUtOyMxoadkRCS1EhrvH37tuqLYWFhyJw5Mzw9PBNsQVrt
q0D+/GouGecvWs6VK1fg4uycqOc/d+7ceg830chZ0nHnwJrqgHI29Zsybdq0
OO07zlr/f+6/RYsWb/7Akhl2RsrOSKm27Iz6uWzHIwyauBV5i1SEi6sHqtf/
CpMj/tB9XJTS+LIzGht2RkJIciFzD6dMmYJs2bLBxcXlZZsxMf8s7pkvwcHB
qn3wfBfr0a5du0Q//wcOHNB7uIlC7T0Zo/tFrweP2xwHDhz4xvc1duxYjSYe
+/5lTPYGOyNlZ6RUW3ZGfV228zFGzNiLwqVqwNnFHRVrtsa4JSd1HxelNLbs
jMaGnZEQkpzIPEQ5r0XWUMfcyy7u/MVChQqhf//+qnHxbBfrc/To0QSf/5jz
8vr27av3cBPFsGHDNNd/x3w80litcl9OpuZNxrZnz55WeGTJCzsjZWekVFt2
Rv1dvusJRs87jBIV68HZ1R2lKzVUH+s9LkrpK9kZjQ07IyEkuXn48GG8/e0C
0geoveykQV69elXvIRqC0qVKaTeyGGcn58+fX++hJopJkya9mmMYt//F+Lhu
3bpvfF9ytlFCfTH6/gcNGmSFR5a8sDNSdkZKtWVntA3Ddz1V8xjLV28O59Qe
KFz6Y4yYvlf3cVFKX8rOaGzYGQkhevDo0SPUqlVL7dUo5xpL27hw4YLewzIU
CxcuRELnMr/a09AJly9f1nu4ZlmwYIHJtcuvut/L//6w4odvfF9fvbg+itku
nWK1zFf3L6+x9gY7I2VnpFRbdkbbMXz3U0xe8Qc+qtNenQ2Tp3BFDJq4BRF7
+PxTqrfsjMaGnZEQohePHz/Gjh07UKVKFbi7u6u97H7//Xe9h2UYZL/M9997
L/Yeg3HmAUavq548xfbPnV6zZk2izhIqXrz4G99XtWrV4jxPTvHuU/5bzoux
N9gZKTsjpdqyM9qWEbufqXOnP2nUDe6evsiauwT6jF6D8N3PdR8bpUaWndHY
sDMSQvTkyZMn+Pnnn1G7dm3VGps1a4bjx4/rPSzDUKlS5X/aYtxO5hRr/0Fr
rDVOaqRZx1u/HG89uBMKFiz4RvcjP7Pys2qqy8Z1w4YNVnp0yQc7I2VnpFRb
dkbbU+Yvzl53FfVb9oGXTzqEZi2A7sOWY/nOx7qPjVKjys5obNgZCSF68/Tp
Uxw7dgyff/656jfStOzljGN7Z8yYsZrz/mLucShnfts6+/bti7GvpJPJc1rk
7woUKPBG9yNzFE2uL4+1r+XL+//zzz+t9OiSD3ZGys5IqbbsjLaptMZ5G2+g
0ZfD4Js2AwJDc6BT/3lYGvlQ97FRakTZGY0NOyMhxBZ49uwZfvvtN7Rq1Qoe
Hh5qXequXbv0HpbDc/r06Th7MWqvObb1PRr37dtvcu1y3HmHb9IZpWXKfqIJ
zZuM/m97aLOmYGek7IyUasvOaMP+9BwLfryD1l3HIl1gZvinD0O7r6dg0dZ7
+o+NUoPJzmhs2BkJIbbC8+fPcf78efXa4+3tjXLlymHz5s3q8yTp8PX1jTcn
Tz7+d8/Bfz5esWKF3kNNkP37fzYxF9Mp3p+WdMYTJ06gbdu2eP/99+M0WRP/
/c/9t2vXLgkeZdLDzkjZGSnVlp3R9l289T469p6BoNCc8PZLj5adR2P+j7d0
HxelRpKd0diwMxJCbAlpijJvrmfPnvD390fRokWxatUqNd+RJA1xzzTRUv5N
bJn9+/f/c760E+LOz4xpQp1R1vDLWuc9e/ao86tbt26NwMBA7XXS8eZNvrp/
2S/SHmFnpOyMlGrLzmgfLtkeha6DFyMsawG4e/qhUbshmLP+mu7jotQosjMa
G3ZGQoit8ffff+PatWsYOHCgajx58+bF4sWL1fnUxPoMGjTIxNy8uOuBnVCp
cmW9h5og+2V/xjhj1mqm8jOVK3cu5MiRA5kyZUJQUBD8/Pzx7rvvaj5+rfXk
cf9O/syZM6f6ObZH2BkpOyOl2rIz2o+yN2Pv/61C1tzF4ebujbrNe2PGmku6
j4tSI8jOaGzYGQkhtog0mlu3bqnfTaGhociaNStmzZqFqKgovYfmcMiZyPEb
mlO8uYBp06bVe6gJIueWJzwnM/a6Zs29HDUef4JzGuN0ufDwcL2fDothZ6Ts
jJRqy85oXy7b8QgDxm9G7oIV4JzaAzUadsaUiLO6j4tSR5ed0diwMxJCbJl7
9+5h0qRJqjOGhIRg4sSJ6nPEely9elWzpzlFz2/8R/laWyX6vGnNeYdOpuY6
as95NPX4485bNHUfderU0fupeCPYGSk7I6XasjPan8t2PsbwaXtQoGR1uLi6
o/KL323jl/6aJPcl+0AOm7YLHfrMVGu1q9f7D0pVrIec+csiOGMuhGTOh7xF
KqLMR41Q8/OuaPqfkegyaCG+W3AEiyMf6P5cUWot2RmNDTsjIcTWefDgAebM
mYM8efIgICBA/b66efOm1e9H9oa8cOEC1q5di/Hjx6NPnz5o06YNatasiSJF
iqi1sPLnxx9/rPbt++abbzBu3DisWbNGfZ897yGZLm1aEy0u/n/LuTy2itqf
0eScRKfYzTBOP3SKcwZOQo/fZIeM8af08Nu3b+v9VLwR7IyUnZFSbdkZ7dPl
u55g1NyDKF6hDpxd3VG6SiN8P+/Im9/2nueY9sMFdBowH2U+aoyA4CxI7eYF
Zxd3pEzl8kJnuLt7vLh+TY+MGTMhLCwM/v5p4ZraDR+kdH7x965qPG5pfBCa
JR+q1ev44nfwGszddF3354zSN5Gd0diwMxJC7IGHDx9i+fLlKFy4sDofWfZu
tMbcOtnz8fDhwxg5ciQ+/PBDpE+fHh4eHuo10dnZGa6ururs6wwZMiBz5szq
Tx8fH/V5+Xv5Ovl6+T0q3z98+HAcOnRIjdeeqFKlipk1xy97nbxm2Cpa66bj
nz1tqU4xmmT8+ZDBwcHqvHR7h52RsjNSqi07o/0avuspxi4+gbJVm8DF1QNF
y9bCtzP3WXxbI2bsffF7sg3804eprujs7IosWbOiSZMmGDNmjNqX5tSpU+p8
Q2kqct0qXrlyRZ0598svv+CHH37A0KFDUatWLQQGBqk2Keu7QzLlQYNW/TBh
2W+qZer93FH6urIzGht2RkKIvfDo0SOsW7cOpUuXhqenJ3r06IGLFy9adFuy
9+OiRYtUX5NzraUbenl5oXjx4ujatauaP7l7926cPXtWXQ9GXx/Kn/KxfF7O
JJ47dy66deuGkiVLqu+X25EOWqlSJXVe8Y0bN6z8LCQN8lzGns8XPQcwdm9q
166d3kPVJP58xgTWQptY75yYxx+7Ob76WM6VsfRn0dZgZ6TsjJRqy85o34bv
fopJ4WfU7zeZd5ivaGUMmbQt0S0vYs/fal6krL329Q9WXTB79uzq2nHr1q2q
Kcq6BtlP/MmTJ2qtjBbyd/J+9/3799U6HXmvMiIiAs2aNfu3OQaGZEfDNgO4
pyS1O9kZjQ07IyHEnpDrse3bt6uO5+7ujo4dO+LMmTOJ/n65lpN5kfL90ipl
LmK5cuXU+85HjhzB9evXcffuXTUf8enTp5pnBsvnZZ20tE/5evm+o0ePqvXW
5cuXV7edJk0aNcdx6dKluHPnjrWegiRBztiJua441ly9GGuL5fHYKvHmM5pY
Ex33ccXrj2Yef9zu+P4H76v18/Y2fzUh2BkpOyOl2rIz2r/hu59j2qoL+Lhh
Z7h5+CJHvlLoO2a9+nxC3ye/Dxu06ot0QZmQytkVRYsWxbRp09R7z3ItKNeN
b4JcW8p1rnTKY8eOqbU7mTNnUb1Rfid/2Xs65m28ofvzR2liZGc0NuyMhBB7
Q94f/umnn9S+iW5ubmjRogVOnDiR4PfIe8Y7d+5E/fr11bpnWQvdoEEDbNq0
CX/99Zd63zmh95wTg3y/3I40R9nHUNqMzG2UeY5169bFjh071NhtEZm7GbfH
xTt/+cWfQUFBeg9VEzWfMYGWaGpuYsy5i4l5/NGfT5kqJdq3b+8Q66Tjws5I
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
PnwY1atXR2BIDvQcEaH7c0uNLTujsWFnJITYM2fPnkXjxo2RIUMG3fc3fBNk
zYvsL5k5c2b1eE6dOpXsY5Dzr02dLx173fFbGDZsWLKPLTFEz2eMNYeR502/
NuyMlJ2RUm3ZGR3LUXMOoGCJampPldWrV6u9s+0VmYcp508HBgahWv3/YMaa
S7o/v9S4sjMaG3ZGQog9I20uJCREndv8xx9/6D2cN0LeQ2/evDkCAgJUM03u
a11Zex77OiBuq3v5sU2fN22qk74Ve14j92dMGHZGys5IqbbsjA7knudo8dVo
eHr5q9e+69evJ9+LbRJx4sQJtT4mOGMe9Pp2pf7PMTWs7IzGhp2REGKvXLx4
Ec2aNVNnTM+bN8/mz5c2h3RFeRzZs2dXj+v06dPJev9t27Y12eXiOm7cuGQd
V2KJtT9jvN74ao9GnjedMOyMlJ2RUm3ZGR3HSRFnULpSQ+TMmRPh4eF2ue9O
XORaeMSIEarv1G/ZBwt/vKP780yNKTujsWFnJITYK8uWLUPu3LnRqFEjXdYZ
JwXnz5/H559/jixZsqjHl5x8+umn/zRG7TXH4pw5c5J1XInlZWd0etUVnZxM
Nkeum04YdkbKzkiptuyMjuN/hy5FUFgutZbkzJkzyfdCm8Rs374dZcuWRcES
VfHtzH26P8/UmLIzGht2RkKIPfL48WN8/fXX6ozmMWPG2OXZgKaQOY2jR49W
a6flXJY7d+4k232XLFnS5N6Mcbvjxo0bk21Mr4Op86bjrf92Ymc0BzsjZWek
VFt2RsdQzn+p16IPvLx91Z6GSXUdKWtTZs2ahY4dO6JChQooVaoU6tWrh8GD
B+OXX35Jkj1ybt++jXbt2sHXPxid+s/T/bmmxpSd0diwMxJC7JHo85mLFy+O
zZs3J8l96HFtKGzduhWlS5fGJ598gkOHDiXJfZhC1p/H7osxOl2MOYFHjhxJ
tjG9DjE7Y7zzbGJ8zP0ZE4adkbIzUqotO6NjOOWHcyhT+XPkz58fa9asSZLX
0w0bNqjrRzc3N6RKlQopUqTAu+++i/fffx8uLi4IDQ3FkCFDrN5bZP23vAcf
EJAeDVr3x+Jt93V/vqnxZGc0NuyMhBB7JCIiAnnz5kWrVq1w7tw5q9++XteG
wl9//aXOtcmWLZvaLyg5kHO6U754nAmfA/OWWoss47NFXnXG+GunX3bHl/9d
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
oH///pg1axZ2796Ny5cvW+0sQ0HmMso5if7+/qjRoBNmrfs/3Z9falzZGY0N
OyMhxF6R66mZM2cic+bMaNasmVX31knua0NB7k8eh3Q+eVxvuie5jPHlHpKx
m9GrOYzx102neO897Ny500qPiNgj7IyUnZFSbdkZHcvlu56g2Vej4O2bHh06
dFDXYtZE3gOXvX0ePnyo9sKR97Llv+Vz1np/PJr9+/ejatWqCM2cD1+PXIGI
vc90f36pcWVnNDbsjIQQe0auB5s0aaJ+j02bNs1q5wUKyXltKESfLSP7kf/+
++9vdFvy2p0ta1az5744xTn7ZfLkyVZ6NMReYWek7IyUasvO6HiOX/Yrileo
o9bHyLoSa+65nVzINaq8J+7p6YU6zb7G3I03dH9eqbFlZzQ27IyEEHtGrgUX
LVqk1rvUqFED+/bt03tIFnH48GHUrFkTWbNmxcKFC9+ol/7111/Inj27ifmK
8ecwxuyNHTp2sOIjIvYKOyNlZ6RUW3ZGxzN891N06j8PQaE5UK1aNbWvtb2x
dOlSdS2ct0hFDJ2yg/syUt1lZzQ27IyEEHtHzoPu0qULvL291Xu5N27c0HtI
r4XshShnZ3t6eqJbt26qE1rK9evX1XXmW3HmKcb9OG5zlP0m5QwcQtgZKTsj
pdqyMzqm8zfdxCeNuiGNh5d6HZQ9wO0FOfuldu3aah/xkEx50W3IYizZHqX7
c0qNLTujsWFnJITYO7KGWfakqVKlCkJDQzFv3jyrrp9OaubOnavmMb7zzjvq
jEB5LJasy75w4YK6nZhnusRbIx3zc04vP86VMydu3rqZBI+M2CPsjJSdkVJt
2RkdU5n/9/38X1Ck9Mfq/40nTJig9sqxda5du6bea0+TxgOe3mnh5uELL590
qNWoOyZH/KH780qNKzujsWFnJIQ4ArJnouypI+uFy5cvj+3bt+s9pEQhZ65U
qlQJadOmRfr06eHu7o48efKos2dknmZiOXnyJAIDA02e7RK3N8Y8Fyboxff8
+eefSfgIib3BzkjZGSnVlp3RcZUzYXqOiEDGbIXU2pCIiAib3qtRziwcNWqU
+n/5omVqYfCkbWouY5ZcxZEylStyFSyHXv9biaWRD3V/bqnxZGc0NuyMhBBH
4c6dO+jTpw98fX3V2TAnTpzQe0gJIme9yJkvXl5eatzHjh3D8OHDkTFjRrWG
Ws6ePnTokNm5jbInpY+3d4x5jK/mKzrFfF13it0b5T6kTxISE3ZGys5Iqbbs
jI6trDdu1WUM/AJC1fvW27ZtS74X4NdA+qe8v54tWzZkzlFE9cTlO59g6c6H
GLv4BKrV6wgPL394+waqc2GmRJzV/bmlxpKd0diwMxJCHAXpcefOnUOLFi3g
4eGBrl272uxcPdmDUcYn42zVqhVOnz6trhnlvMAff/wR1atXV3Mb8+XLh+nT
p+P27dsmb2flypVwcXbWnsNoQvl7FxcX7NmzJ5kfNbEH2BkpOyOl2rIzOr7z
Nt5AnWa94OHlq84Y3Lt3b/K9CCcCuV6Uc1/y58+PdEGZ0OGbGbH2Ywzf/Vzt
N9ll4ELVIGVuY57CH6LPd2uxdMcj3Z9fagzZGY0NOyMhxJGQa6+DBw+qs5tl
nmDfvn1t7nVMzqmR+Ys+Pj5qnDIfMeZ+knIei+y1OHjwYLXfpDyOli1bqn2+
YzJu3Di88+47sddCxz37JVZ7fKk0RntZV06SH3ZGys5IqbbsjI6v7NU4Y9Wf
ak6gexpPfPjhh+o9YFtYQy1rpWfOnIlcuXLB1z8QLTuPxoItt00+DlkvPWbB
UVT5tB3cPX3h4x+Mei378Pc6TRbZGY0NOyMhxNGQvRqlo8l1ocwXlP2xz549
q/ewFBcvXlTzGOVsbFmPs3nzZjXeuMjcTJnbuHHjRnz00Udwc3NDwYIF1RoZ
WR/evXv3OHstOsVZIx23Nb78upQpU6r7JEQLdkbKzkiptuyMxjBi7zNMW3UB
HzfsouY15syZU+2drbW+JDmQNTq9e/dW+3n7pw9D665jMW/zTaz46bnm4wjf
/VTNz/yq/1y172QqZ1fkK1oZ/cZswLKdj3V/nqnjys5obNgZCSGOiMwJjIyM
VGdQy+ubzBvcsWOHbudQSzfctWsXatWqpcYjZ79s2bIFjx8/TvD75HHIWvD+
/fsjQ4YMag5k1ixZ4ORkeq5izO4Ydz/GD1J+oLolIQnBzkjZGSnVlp3ROEpr
nLP+L7T4ahQCAjOpfa1l/++ff/45Wec2yrXi6tWrUbFiRbi6uiJLrmL477Bl
WLT1npp7mZjHInMbR8/7BZU+aaPOpPZNG4KGbQZg+uqLuj/P1DFlZzQ27IyE
EEdFGt3Ro0fVfo2y9jhLliwYNmwYLl26lKzjkNfRkSNHqr26Zc/F5s2bq/Nd
ZHyJQa5l7927p/ZilDNuYs1Z1FgnHXcuo1yXStckxBzsjJSdkVJt2RmNpXS8
xdvuo/+4TShYohpcU7shc+bMav+bM2fOJOnrsVz/7d+/X13Hyv+vp/HwQuUX
v5dHzz2kznt53ccicxvnbrqOjn1mITRLfjW3sWCJqhgwfjOWc24jtbLsjMaG
nZEQ4sjI/MWrV69i/PjxyJEjh+ptZcqUwcKFC5N87cvdu3exePFilCtXTr3G
SmccO3YsLl++/NrzKh88eICyZcsmoin+M8cxRn+UNdry3jshiYGdkbIzUqot
O6MxlTXG01ZeRKsuYxEclgsuLq7InTs3hgwZgj/++MOqr8PRe4136NBB7dMt
95WrQDk1h3HuhusI3/X0jR7Lkh1RGDXnIMrXaAG3ND7wCwhDo3ZDMGPNJd2f
Z+o4sjMaG3ZGQoijI2uWo6KicODAAbRt2xb+/v5q30bZ93D58uVW743SFyMi
IlCtWjU1j1LmILZp00ad9yLjkPG87u1JG305h/HlPoxOcfZgjP3xq7XTgYGB
OHXqlFUfH3Fs2BkpOyOl2rIzGlc1tzHyAcYuPIZ6LfogbWCYev86Y8aM+Pzz
z7FgwQK1ZuZ1r/MEef9ZrtfkfXG5fpQ9GJ2dXZAxW0G06zEJU1ecezmHMYG9
GF9HaZVz1l9D+17TEJIpD1K6pEbhUh9j8KRtL/7uie7PNbV/2RmNDTsjIcQo
yDWcNMVNmzahbt26ap6f9MZChQqpc1Xk7BhpepYg65plP8iePXuq25M9fOS2
P/30U2zYsAE3b940ed6LOWQ8JUqUNNEQ454n7RRvr8Y8efKoc2cIeR3YGSk7
I6XasjPS8N3P1d6Io+f/goat+yMoNAdSpXJWe+MEBwejcuXK6sy/77//HosW
LcLWrVtx4sQJtb5GOuQvv/yi9sueM2eO2lenffv2L671SiBt2pdNxsUlNbLl
KYl2PSZjUvgZLNn+INH7ML6WPz1/cdtR+N+s/ShftQlc3b2RNjATmnYYgVnr
ruj+PFP7lp3R2LAzEkKMhuyLeOPGDaxfvx6NGzdW13XOzs6qDWbPnh0NGjRA
v3791LmCK1aswJ49e9R51deuXVN/7t27Fz/88IP6ezmfRRqMnEMocxfldvz8
/NTn1q1bp74nsfswxkXOlS5WrGis/RidYs5fNHmu9EvlLGv5fkJeF3ZGys5I
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
DAu33kWvUauQq2B5NbcxS65i6Dp4sTqrWu/x0aSVndHYsDMSQoh5jNQZo5G5
jXINMG7cOGTPnh3u7u6oV6+e6o/Pnz/Xe3gkiWBnpOyMlGrLzkgt0YidMdpl
Ox5h4vLTqN2kJ7x9A+Hh5Y/q9b/CxKW/6j42mnSyMxobdkZCCDGPETujED23
cffu3aoxenh4qOY4duxYXL9+Xe/hkSSAnZGyM1KqLTsjtUQjd0YxYvczLPzx
Dr4euQI58pfBB86uyJanJLoPW4bFkQ90Hx+1vuyMxoadkRBCzGPUzhiNzG28
cuWKevxZsmRBmjRp0LBhQ+zbt49zGx0MdkbKzkiptuyM1BKN3hmjlbmNE5b9
hk8+7wYvn3Tw9E6Ljz/rionLf9d9bNS6sjMaG3ZGQggxj9E7oyBzGx88eIDI
yEh1Noy0RjkrZsKECbhx44bewyNWgp2RsjNSqi07I7VEdsZXytzGBVtuq7mM
2fOURCpnV+TIVxo9R0ZgyfYo3cdHrSM7o7FhZySEEPOwM75C5jZeunRJPSeZ
M2dWa6kbN26MAwcOqBZJ7Bt2RsrOSKm27IzUEtkZ47t050N1/nSNhp3VvEYv
n/So3biHOqda77HRN5ed0diwMxJCiHnYGWMTPbdx27ZtqFmzpjojJk+ePJg6
dSpu3Urgf8CIzcPOSNkZKdWWnZFaIjujacN3P8f8H2+h25DF6izqlKlc1dnU
vUetUh1S7/FRy2VnNDbsjIQQYh52RtM8efIEFy9exLBhwxAWFgZPT080b94c
hw8f5txGO4WdkbIzUqotOyO1RHbGhFVzGxcdR7V6HeDh5Qdvv/So07wXpvxw
TvexUctkZzQ27IyEEGIedkZtpCfev38fmzdvRvXq1dXcxnz58mHGjBm4c+eO
3sMjrwk7I2VnpFRbdkZqieyM5lVzGzfdROeBC5ApRxE1tzFP4Yro891aLN3x
SPfx0deTndHYsDMSQoh52BnNI3Mbz58/j0GDBiE0NBReXl5o1aoVjh49qvfQ
yGvAzkjZGSnVlp2RWiI7Y+JdGvkQYxYcUc+Vu6cvfPyDUb9VH0z7gc+bPcnO
aGzYGQkhxDzsjIkjem7jhg0bUKVKFbi5uaFgwYKYM2cO7t69q/fwSCJgZ6Ts
jJRqy85ILZGd8fUM3/0U8zbewFf95iAsawE1tzF/sSroP3YDlu18rPv4qHnZ
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
sXznY93Hl5yyMxobdkZCCDEPO6MxkLmNZ8+eRd++fREcHAwfHx+0a9cOx48f
13toyQY7I2VnpFRbdkZqieyMxnLJjiiMmncIH9ZsBfc0PvBNF4LPvhiIGav+
1H1sySU7o7FhZySEEPOwMxqH58+f4969e1i7di0qVqyo5jYWKVIECxcuVHMe
HR12RsrOSKm27IzUEtkZjafMbZy78Ro6fDMDIZnz4gPn1ChUsjoGTdiC5bue
6D6+pJad0diwMxJCiHnYGY3H48ePcebMGfTq1QuBgYHw8/NDx44dcerUKb2H
lqSwM1J2Rkq1ZWeklsjOaFB/eo4l26MwatYBlK/eDG7u3vBPH4bG7Ydi5trL
+o8vCWVnNDbsjIQQYh52RmMicxtlf8aVK1eiXLly6lqpRIkSWLp0KR48eKD3
8JIEdkbKzkiptuyM1BLZGY1t+K6nmLP+L7T7egqCM+ZGKufUKFK6FoZM3q7m
Peo9vqSQndHYsDMSQoh52BmNjcxtPH36NHr06IH06dMjbdq06Ny5M3777Te9
h2Z12BkpOyOl2rIzUktkZ6TRcxtHztqHMh81Rmo3L6QLyoRmHf+HWev+T//x
WVl2RmPDzkgIIeZhZyTRcxsjIiJQunRpdd1UqlQphIeHIyoqSu/hWQ12RsrO
SKm27IzUEtkZabSyN+PsdVfRpvtEBIXmhLOLO4qVq4NhU3c61NxGdkZjw85I
CCHmYWck0cjcxl9//RVdu3ZVPxNit27d1F6OjgA7I2VnpFRbdkZqieyMNKYR
e/7Gku0PMGLGXpSu1BAubp4ICM6Klp1Hq/XVeo/PGrIzGht2RkIIMQ87I4mJ
zG28c+cOli1bpvZrdHV1RdmyZdU+jg8fPtR7eG8EOyNlZ6RUW3ZGaonsjNSU
Mrdx1roraNl1LNJnyAZnV3eU/LC+6o/hu5/rPr43kZ3R2LAzEkKIedgZiSke
PXqEEydO4KuvvlJ7NsrejT179sTZs2f1HprFsDNSdkZKtWVnpJbIzki1lLmN
iyMfYNjUHSheoQ5cU3sgMDQH2nQbh7kbrus+PktlZzQ27IyEEGIedkaihcxt
vHXrFhYtWoSiRYuquY0VKlTAmjVrVIe0N9gZKTsjpdqyM1JLZGek5pS5jTPW
XEKLTqOQLjgLXFzdUaryZ/h21n5E7H2m+/heV3ZGY8POSAgh5mFnJOaQpnjs
2DF8+eWX8PPzQ1BQEPr06YPz58/rPbTXgp2RsjNSqi07I7VEdkaaGNXcxm33
MWTydhQr+ylcXD0QFJYLbbtPwryNN3Qf3+vIzmhs2BkJIcQ87IwkMTx79gw3
b97E/PnzUahQITW3sXLlytiwYYM6P8YeYGek7IyUasvOSC2RnZG+jst3PsH0
VX+iaYcRSBuYCa6pPVG2ahOMmnNAtUi9x5cY2RmNDTsjIYSYh52RvA5yFsyR
I0fwxRdfwNfXFxkyZMCAAQNw8eJFvYdmFnZGys5IqbbsjNQS2Rnp6xo9t3HQ
hC0oXOpjdUZMSKa8aN9rGub/eEv38ZmTndHYsDMSQoh52BnJ6yJzG2/cuIHZ
s2ejQIEC6jqratWq2Lx5M548eaL38DRhZ6TsjJRqy85ILZGdkVrq8p2P1c9M
o/ZD4BcQhtRuXqhQowVGzzuMFXts90xqdkZjw85ICCHmYWckliJzGw8dOoRW
rVrBx8cHoaGhGDx4MC5duqT30EzCzkjZGSnVlp2RWiI7I30TZW7jou33MGDc
JhQoXg3OLu4IzZofHfrMwoItt3UfnynZGY0NOyMhhJiHnZG8CTK38fr165g+
fTry5s2rrrlq1KiBrVu34unTp3oPLxbsjJSdkVJt2RmpJbIzUmu4bOdjTF1x
Hp99MRC+6ULh5u6DijVbY8yCo7qPLa7sjMaGnZEQQszDzkisgcxt/Pnnn9Gs
WTN4e3sjY8aMGD58OK5cuaL30P6FnZGyM1KqLTsjtUR2Rmot1dzGrffQb8x6
5CtaWc1tzJitEL7qNxcLt97VfXzRsjMaG3ZGQggxDzsjsRYyt/HatWuYMmUK
cufODTc3N9SqVQuRkZHq7/SGnZGyM1KqLTsjtUR2RmptZW7jlIizqN+yL3z9
M8DNwxdVarfDmEXHdR+byM5obNgZCSHEPOyMxJr8/fffiIqKwr59+9CoUSN4
enoiS5Ys6rX46tWruo6NnZGyM1KqLTsjtUR2RpoURux9puYwfjN6DfIU/hCp
nFMjc44i6DJooZrzqOfY2BmNDTsjIYSYh52RJAWyN6N0xQkTJiBHjhxqbmOd
OnWwa9cuPH/+XJcxsTNSdkZKtWVnpJbIzkiT0mU7HmFS+BnUadYL3n5BcPf0
RbV6HTF+6SndxsTOaGzYGQkhxDzsjCSpiJ7buGfPHjRo0AAeHh7Ili0bvv/+
e7W+OrlhZ6TsjJRqy85ILZGdkSa1am7jj3fQ69uVyFmgrJrbmDV3cXQbsgSL
t91P9vGwMxobdkZCCDEPOyNJamRuo5wHM2bMGNUZ3d3dUb9+fezduzdZ5zay
M1J2Rkq1ZWeklsjOSJNLmds4cflp1GrcA16+6eHh5Y8aDTtjwrLfknUc7IzG
hp2REELMw85IkgOZ2/jgwQPs3LkTdevWVXMbZT31+PHjcePGjWQZAzsjZWek
VFt2RmqJ7Iw0OY3Y/XJuY88R4ciet7Sa25g9byn0GL4cS7Y/SJYxsDMaG3ZG
QggxDzsjSU5kbuPly5cxatQodT5MmjRp8Pnnn2P//v1JPreRnZGyM1KqLTsj
tUR2RqqHS3c8woQlp1Dzsy7w9E6n/KRRN7WXY1LfNzujsWFnJIQQ87AzkuQm
em7j9u3bUatWLdUac+XKhUmTJuHmzZtJdr/sjJSdkVJt2RmpJbIzUr0M3/0c
C7bcxn+HLkXW3CXwgbOr2r+x17c/YGlkVJLdLzujsWFnJIQQ87AzEr148uQJ
/vzzT4wYMQIZM2ZUa6mbNGmCgwcPqhZpbdgZKTsjpdqyM1JLZGekert050OM
XXwC1et/pfZslL0bP23aE5NXnE2S+2NnNDbsjIQQYh52RqIn0XMbt2zZgho1
aqgzYvLmzYtp06bh9u3bVr0vdkbKzkiptuyM1BLZGaktKHMb5/94C10GL0Tm
nEWQMpUrcheq8OJ1f7XqkNa8L3ZGY8POSAgh5mFnJLaAzG28cOEChgwZgrCw
MHh5eaFFixb45ZdfrDa3kZ2RsjNSqi07I7VEdkZqSy6NfIixC4/hozpfwt3T
Dz5+QajX4hurvuazMxobdkZCCDEPOyOxFaQn3r9/H5s2bULVqlXh5uaGAgUK
YNasWbhz584b3z47I2VnpFRbdkZqieyM1NYM3/0U8zbfRKf+85AxWyGkcnZF
vqKV0HfMeizb8eiNb5+d0diwMxJCiHnYGYmtIXMbz507hwEDBiAkJATe3t5o
06YNjh079ka3y85I2Rkp1ZadkVoiOyO1VWVu4/fzjqDyi9d8Nw9f+KbNgIat
+2P6yotvdLvsjMaGnZEQQszDzkhskei5jevXr0flypXV3MZChQph3rx5uHfv
nkW3yc5I2Rkp1ZadkVoiOyO1ZWVu49xN19Gx72yEZimg5jYWKP4RBozfhOU7
H1t0m+yMxoadkRBCzMPOSGwZmdv4xx9/oE+fPggODoaPjw/atWuHEydOvPZt
sTNSdkZKtWVnpJbIzkjtwSU7ojB67iF8+HFLuKfxgV9AKD5vOxgz1lx67dti
ZzQ27IyEEGIedkZi6zx//lzNYVyzZg0qVKigruuKFi2KRYsWqTmPiYWdkbIz
UqotOyO1RHZGai+quY0br+HL3tORIXNepHJOjYKlamDQxC1YvutJom+HndHY
sDMSQoh52BmJvfD48WP8/vvv+PrrrxEYGAg/Pz91Pffrr78m6vvZGSk7I6Xa
sjNSS2RnpHblT8+xZHsUvp39M8pVawo3d2/4pw9Dky+HYeaaK4m6DXZGY8PO
SAgh5mFnJPaEzG28e/cuVq5cibJly6prvBIlSmDp0qV48OBBgt/LzkjZGSnV
lp2RWiI7I7VHw3c9xZz1f6F9zykIzphbzW0sWqYWhkyOVPMeE/pedkZjw85I
CCHmYWck9ojMbfztt9/QvXt3pE+fHmnTpkXnzp1x+vRpze9hZ6TsjJRqy85I
LZGdkdqtam7jA4yYuQ+lqzRCajcvBARlQfP/fIvZ665qfh87o7FhZySEEPOw
MxJ7ReY23rlzB+Hh4ShVqhRcXV1RunRpREREICoqKt7XszNSdkZKtWVnpJbI
zkjtXdmbUbpim+4TEBiaA84u7ihevi6GT9uF8N3P4309O6OxYWckhBDzsDMS
e+fRo0c4deoUunTpon6WAwICVFM8c+ZMrK9jZ6TsjJRqy85ILZGdkTqCEXv+
VnMbh03fjVIVG8DFzRMBGbKhZefv1frqmF/Lzmhs2BkJIcQ87IzEEZC5jbdv
31b7NMp+jTK3sVy5cmofR+mQAjsjZWekVFt2RmqJ7IzUkZS5jXIeTKsuY1Rn
dHZ1R4mK9TBixt5/5zayMxobdkZCCDEPOyNxJP6fveuAiurquh+xoYCg9K6C
vWJFsWKvKIot9t4w9l5R7MFYsGNFsWLvvZcYTaIxmmhiTPuTmMQUNf38sw8+
HYGhzsybcvZae1kYZt68eu++++wDTfHOnTs8zvP09OTsRvSn/vzzz0VnFIrO
KBSmQdEZhVmh6IxCSyO8jdvOPKXZq85TzfrtySF/Qa6n7j86ljYdfyw6o5VD
dEaBQCBIH6IzCiwN8Db+/PPPlJCQQMHBwextbNiwIVWuXFl0Riun6IxCoW6K
zijMCkVnFFoq4W1ce/Br6j0shvvD2OUvSHWadqHKtVqQm7un6IxWCtEZBQKB
IH2IziiwVMDbeOvWLRo8eDB5eHhQrly5UowHRWe0LorOKBTqpuiMwqxQdEah
JTPJ2/g7Ra84S9XrhpO9Q0HKlTsPvfHGGynWrkVntA6IzigQCATpQ3RGgSXj
n3/+oZ9++oni4+OpYsWKojNaOUVnFAp1U3RGYVYoOqPQGrjrwl8Ud+BL6h45
l9y9A1KMJ0VntB6IzigQCATpQ3RGgTXg+fPnPPaTumnrpuiMQqFuis4ozApF
ZxRaCxVvY/P2Q0RntGKIzigQCATpQ3RGgbUgtT4wpUuXpnlLt9HBd/9Sffwq
NDxFZxQKdVN0RmFWKDqj0NrYsc9UsrPPTzlz5hSd0QohOqNAIBCkD9EZBdaC
1HRGjBG9fQtT98GzOOtb7bGr0LAUnVEo1E3RGYVZoeiMQmsj95t29+Q+g8l1
xl69etGDBw+MN7gVGB2iMwoEAkH6EJ1RYC1ITWcMDAykQoULU177/FSldiuK
Xn6aEi+Kt9FSKTqjUKibojMKs0LRGYXWRtYZPb1S7Tft6OhIffr0odu3bxtv
gCswKkRnFAgEgvQhOqPAWpCazhgREUHvLN9MTcK6k4OTK3n5FaMekXNp/eFv
VR/HCvVP0RmFQt0UnVGYFYrOKLQ2pqUz5s6dm32OVatW5R6Ev/32m/EGugKj
QHRGgUAgSB+iMwqsBanpjOgDs//ULdp+6nsaOH4F+QeWo3x2+al6vXCKXnWO
Ei/9rfp4Vqg/is4oFOqm6IzCrFB0RqG1MS2dsWPHjjRkyBAqVKgQubm50aBB
g+jOnTvGG+wKDA7RGQUCgSB9iM4osBbo0hm53/SN/2j72ac0f+1VqtukC+V3
dCEf/xLUc1gMbTj8nepjWqF+KDqjUKibojMKs0LRGYXWxrR0xsjISLp//z4d
PHiQGjRowK+pXr06bd26lX7//XfjDXoFBoPojAKBQJA+RGcUWAvS1BlvJs2d
d138i9Yf/j/qNyaW/ALKkJ29E4U0iKC5ay5T4qV/VR/bCrNH0RmFQt0UnVGY
FYrOKLQ2pqUzKv2m//zzT9YbJ0yYQH5+fuTh4cE/u3fvnvEGvgKDQHRGgUAg
SB+iMwqsBRnRGcHdl5O8jXPXXKRaDTuSQ35n8i1cmvqOXEwbj/yg+vhWmHWK
zigU6qbojMKsUHRGobUxIzoj8O+//9Kvv/5K+/bto3r16vHra9asSTt27KCn
T58aafQr0DdEZxQIBIL0ITqjwFqQUZ1RIbyN6w59Q31GLCKfQiXJ3sGJajfq
RPPWXhVvo5lSdEahUDdFZxRmhaIzCq2NGdUZFcDb+Mknn9DYsWPJ19eXvLy8
aMSIEfTpp58aeOQrMAREZxQIBIL0ITqjwFqQWZ0RhLdx25mnNHvVeapRvx3Z
5S9IfgFlacCYZbTp+GPVx7rCzFF0RqFQN0VnFGaFojMKrY2Z1RkBeBt/+eUX
SkxMpNq1a3NP6jp16tDu3bvp2bNnBhz9CvQN0RkFAoEgfYjOKLAWZEVnVAhv
49qDX1OvtzTXi38x1hvrNO1KCzZcZy1S7TGvMGMUnVEo1E3RGYVZoeiMQmtj
VnRGBX/88QfdvXuXRo4cyfMvHx8fHp8+ePDAACNfgSEgOqNAIBCkD9EZBdaC
7OiMYJK38XeKXnGGguuGcx11oaLladC4lRR/4ifVx73C9Ck6o1Com6IzCrNC
0RmF1sbs6IwAvI1PnjzhnEbkNcLbGBoayjmO0CEFpg3RGQUCgSB9iM4osBZk
V2dUuOvCX7TmwJfUfcgc8vQNJHtHFwpt0ZPe2XiT9lyW3EZTpuiMQqFuis4o
zApFZxRaG7OrMyqApnjnzh3+HU9PT85uRH/qzz//XD8DX4FBIDqjQCAQpA/R
GQXWAn3pjKDibZwRe5Kq1gojOwcnKlK8Ig2ZFEdbTjxRfQwsTJ2iMwqFuik6
ozArFJ1RaG3Ul84IwNv4888/U0JCAgUHB7O3sWHDhnTo0CHxNpooRGcUCASC
9CE6o8BaoE+dUeGuC3/Smr2PqMvAaPLwCSAHJ1dqGNaHFm3+QLyNJkjRGYVC
3RSdUZgVis4otDbqU2dUAE3x1q1bNHjwYPLw8CB/f3+aMmUKPXr0KBsjX4Eh
IDqjQCAQpA/RGQXWAkPojCC8jVtP/0bTlxyjSiHNyM7eiQJLVqG3pm6ghJO/
qD4eFr6i6IxCoW6KzijMCkVnFFobDaEzAv/88w/99NNPFB8fT1WrVuX3b9Kk
CR09epT++uuvLI5+BfqG6IwCgUCQPkRnFFgLDKUzKtx54U9atfshdeo3ndy9
ipBjATfWs5Yk3FZ9TCxMouiMQqFuis4oTI9YV0s4/Sut3PMZzV97lSa9vZ/C
3hxJbp6FqHRQbeo3cglNW3yEYjbdoLgDX9L2s89U32ahUN80lM6o4Pnz5/TB
Bx/QgAEDyN3dnQoXLkxRUVH01VdfZet9BfqB6IwCgUDwOv7++296/Pgxffzx
x3T27FnauXMndejQgRwdHalz587c9wz/j0ziH374QdbOBBYFQ+uMIM/BzvxK
U945TEHBjSmvvRPrWsOjNrPnUe2xsbVTdEahUDdFZxSmxk3HH1PU0uPUoc8U
Klc5lNw8/MmxoDs5OLmQXf6CZJvXjt54IwflzJWb8tnlJ4f8zpwhgtd4+hSl
anXCqNdbMbRg/bvyHBRaBA2tMwLwNv7444+0fv16qlSpEn9W8+bN6eTJkzI/
UxmiMwoEAmsHnlGfffYZbdmyhdfEKlasyP3MXF1dydnZmQoUKEC2trasveBP
Jycn/n/8HNkgQUFB1K9fP/bv432gUwoE5gpj6IwK4W1cufszat97Mvs8MN9q
FjGYYrd+rPr42JopOqNQqJuiMwoV7jj3jGatPEvN2g0m38KlWDuEnljQ2YXK
l69ALVq0oN69e3Nv3EWLFvE4EXrI/PnzadSoUdS1a1dq1KgRFS9egvLnd6S8
+RzI0cmV66uh0SxKuEWJl/5W/XsKhVmhMXRGBfA23rhxg/r06UNubm4UEBBA
s2bNom+++UZvnyHIHERnFAgE1orvvvuONm/eTK1atSJfX1/WD+3s7PjvISEh
1K5dO84Zhgd/1apV/Fr8OWPGDBoyZAhFRERQzZo1+fX29vb8+z4+PtSyZUva
uHGjXp+fAoGxYEydEdx95R+uL0N2VfkqDdjnUaJcDRoVvY17Vas9TrZGis4o
FOqm6IzCHRees3cxpEEEFXTxpLz57CgwMJB69OjBY8W7d+/S999/zxlyT548
od9++42ePn3KPSygh+Dvv/76K/8MXiyMR6GRxMbGUps2bcjLy1vznvbk7l2E
mrePpIXx71PiJemZJjQvGlNnBOAbQZ1ZXFwcVahQgT83LCyMzpw5Ix4QFSA6
o0AgsDZgPLdixQqqUaMGa4NgtWrVeL35xIkT3LMMddM///wz/fLLL/T777/T
s2fPXo4P8W/8P36O1yEHBP78SZMmUfXq1dn/iBrr4OBgWrZsGX377bdqf2WB
IMMwts6ocOf5P2j5rvvUrsd4cnX3IydnD2rR4S2K3XFP9bGytVF0RqFQN0Vn
tF5iXWzBumtUv2VPcnb1pvz5nahx48aUkJBADx8+ZN0QY8V///03089eaCQY
a0KbhE4J/yPqQPPZOZCnbyBF9JpIKxIfqL4PhMKM0tg6I/Dff//xXO369eus
+7u4uFCxYsVo3rx54v8wMkRnFAgE1gKsJ2/dupXq1avHOiB8iAMHDqRz587x
ujN+jiwPPKMyC/wefh/raBcuXGC/o5+fHz9ba9euzTXZGH8KBKYOtXRGkL2N
J3+hCQv2UNlK9djbWKpCTRozZwdtO/dU9TGztVB0RqFQN0VntE6uO/QNdR0U
Td6FSpCdvQOFhobStm3beC0Z2mJWxo66AJ0SmiOyeKA3litXnvXG4mWr07Dp
m/g5qfb+EArToxo6owLo9pjbrVy5UnP9lON5X3h4OJ0/f55/JjA8RGcUCASW
Doz9rl27xjk4yOxA9iLyFC9dusS+RH176fF+eN8rV65w3iPuschzhFZz9erV
LK1zCwTGgpo6o0J4G5ft/ITadB1DLm6+VNDVi8LeHMV+R7XHzdZA0RmFQt0U
ndHKePlfmr3qHAXXCeO1r7Jly9LSpUvpiy++0Lu+mBx4b9RYo+/g2LFjydcv
qbcMaqnF6y80daqpMyrXD/R6zL26dOnCc7ESJUpQTEwMa5ACw0J0RoFAYMmA
xxBrWcjpwFoWshOPHDnCNc+GzurA+8PDeOzYMc4HQT11mTJluGZbvI0CU4Up
6Izg7kv/0JZTT2js3F1UOqgWeznKVKxD4+fvpu1nn6k+frZkis4oFOqm6IzW
Q/QqGz49ngJLViKnAgWpZ8+e9O6777J2YUh9MTmwPo08x0OHDlHDhg3J3j4/
VQ5pzj1odl+Wc01omlRbZ1SA+Rgys5B/inkY8rLat2/PfhPxfhgOojMKBAJL
BXqMjR8/nv2LRYsWpQULFnD2ImqcjQl8HrYF62fFixdnTyW2C9siEJgaTEVn
VLjj/B+0dPvH1KrzCHJ29WJ/Y3i3sdynWu0xtKVSdEahUDdFZ7QOQmMcNGE1
+RQqSYUKFeYe0aiRVrOfxJ9//kn37t3jbB4XVzdee5u25KhojUKTpKnojIDi
bYS22LFjRypYsCCVKlWKFi9ezJlXAv1DdEaBQGCJQG8WPMPgIUQe48GDB7l/
izHXn7Wh1L7AS1m/fn1eS8P2ff7556psj0CgC6amM4Los7n55M80etY27kWd
N58DlasSShPf3kc7zj1XfSxtaRSdUSjUTdEZLZ/ICh4eFU/+AWWpZMmS3L8W
fkK1xpDagP8K+gx6D3p6elFQcGOu61Z7nwmFyWlKOqMCrBNgvQC5p7i2MR/r
1KmT5FoZAKIzCgQCSwPWpZBjg7WqNm3a8NoV1oBNAdgOZEViu7B98DXC6ygQ
mApMUWdUuOPCc1q69SNq0WEoFXTxJFcPX+7BuWrvQ9XH05ZE0RmFQt0UndHy
OXXxESoVVIsCAgI5ewfr1KYE6J3Ilxs3bhy5urlTnaZdaEnCbdX3m1CoTVPU
GZXrB94P9ISJiIhgTwpyV5ctW0Y//vijKttkiRCdUSAQWBLgiUdti5eXF7Vo
0YIuXryoao1LasD2QGtEVqS7uzvXc6NvjEBgCjBlnRFkb+Pxn2jkjAQqXiaY
vY0VqjWkKe8c4hprtbfPEig6o1Com6IzWjYXxX9INeq304zPPGjOnDmc522K
gFaCXjToa+jkVJDCu47hnthq7z+hUKGp6owKMB/7+uuvWQdDrhX0RvQMvX79
ukl4l80dojMKBAJLAZ4J8fHxVLp0aapRowbXShs7izGjwLPt6NGjVKtWLc6O
xHabmh4qsE6Yus6oEPXSi7fcoqbtBpGTszu5eRbSjGmnqL5dlkDRGYVC3RSd
0XK58cgPFNZ5BDk6FaRhw4ZxBo8p6w2o87x58yb3GnR29aT+Y2I1z0bpkyY0
DZq6zggo3sazZ89yrRnqqMuXL88+ZlNdYzAXiM4oEAgsBfC/N2rUiHW7tWvX
0vPnz9XepDSBGmpsJ3KIQ0ND6cyZM2pvkkBgNjojmHjpb4o/9iMNm7aJAktV
4Z7UUxcdoZV7pEdMdig6o1Com6IzWibhlR84djmvWYWHh9N7771nFnltWKPe
vXs3ValSlYqVqcbPQLX3pVAImoPOqAC+FKwrzJ07l+eRzs7O3F8eOr4przWY
MkRnFAgElgBkHA4cOJBcXFxo2rRp9NNPP6m9SRkCcsWnTJnC9dPYfukLI1Ab
5qQzKoR/Y2H8+9S4TX9yyO9M5avUp0kx+znPUe1tM0eKzigU6qbojJbJWSvP
UfmqDahcufK0Y8cOs6oxQWYQ9BFPbx9q1LofrUi8r/r+FArNSWcEoCcii/XU
qVPUqlUr9jZWrFiR+0A9efJE7c0zO4jOKBAIzB1Yb166dCn5+vpSly5d6M6d
O2a19nT//n3q3LkzeXh4UGxsLP3xxx9qb5LAimGOOiMIb+Om44/Jt3ApcnL2
IDcPf2rfaxKt3iM9YjJL0RmFQt0UndHyiMzfsM4jqWBBF4qKijJLTeHhw4fU
rVs3rp+GL3PnhT9V369C66a56YwK4G189OgRzZo1iwICAtjD0qdPH/rggw/M
an6pNkRnFAgE5g70ekG9dFBQECUmJtI///yj9iZlCtjevXv3UtWqVal+/fqc
ESIQqAVz1RkVxu3/ikZEbaZipatyj5ig4EY0ddFh2ik9YjJM0RmFQt0UndHy
OHrWdvIPLEetW7c22x4QWHPHGLhSpUpUOaQ5zV97VfX9KrRumqvOCCjexmPH
jlGzZs3I0dGRKleuTBs2bJDenRmE6IwCgcCcgWfAhAkTyNXVlaZOnWq2mb3I
IJ48eTK5ubnxn+ZS9y2wPJi7zrjn8r/cIwY9Q6GTORZ0J3evwtRJM95ds/+R
+ttnBhSdUSjUTdEZLYvo0dyodV/y8fHl3g+m2j8wI4D+MWrUKCro7Eo9IufR
9rNPVd+/QuulOeuMCnA/gFd4+vTpVLhwYZ6nDRgwgG7fvq32ppk8RGcUCATm
DPRsRm/pxo0b04ULF8xyDVrBtWvXqEmTJrxedujQIbU3R2ClMHud8QWVHjFv
TdtIgSUrc4+YyiHNKGrpcdol9WRpUnRGoVA3RWe0LI6K3kp+AWU4vwa5O+YM
jIHhvwoJqUmVajSleXFXVN+/QuulJeiMALzCv/32Gx0+fJjnm/A2VqtWjTZv
3sz/L0gdojMKBAJzBXKvx40bx2tL8+fP53+bM7BmNmfOHPL09KSJEyeKp1Gg
CixFZ1S4/fwziom/SQ1b9yWnAm7k4RNAXQbOpLX7v1Z920yVojMKhbopOqPl
cMuJJ9Siw1DNuMubVqxYYVa9X3QBuseIESOooIs79R8dy2tuau9noXXSUnRG
BX/++Sd99tlnXHfm7+/PPTwHDx5MH3/8sdqbZpIQnVEgEJgrzp8/z3mGDRo0
4L9bAq5cucJZk3Xq1KHTp0+rvTkCK4Sl6Ywg94g59gNFTl5LRYoHUT67/FS1
VkuauewU7br4l+rbZ2oUnVEo1E3RGS2HM5efpjIV61CLFi24psQSAE8j+mWX
L1+eQlv0pBU7P1V9Pwutk5amMwKKt/HAgQM8/8R3Q13d1q1bOctL8AqiMwoE
AnNFTEwMe/+mTJlCv/76q9qboxeg1zTyJrFGtmjRIotYWxeYFyxRZ2Re/Ze2
n31GMevfo/ote5Kjkyt5+gZSt8GzOZ9L9e0zIYrOKBTqpuiMlsM+IxaSs6sX
53sbqv7x8ePHdOTIEc53a9OmDVWpUoVCQ0OpX79+lJCQQN99953eP/Pzzz+n
Tp06UZFiQTQpZr/q+1lonbREnVEBvI3379/nOZufnx95eHjwd7p3757am2Yy
EJ1RIBCYI7755hvq1asXlSpVitdtDZHLqMbYENi5cydVqFCBevfuTQ8ePDDI
ZwgEumCxOuMLJl78mzYe+Z4GTVhFhYqWZ29jcJ1wmrXyrNSXvaDojEKhborO
aBmMP/ETNWk7kAIDA3lMZ4hx5BdffEGRkZG8dmxvb0+5c+emHDlyUK5cuShv
3rxUoEABioiIoMuXL7NPSl/4559/KCoqilxc3an38Hfk2SZUhZasMwK4ZuFz
2bt3L9WrV4+/Z61atXgeZ+5ZXvqA6IwCgcAccerUKapduza1a9eOPvjgA72/
v1pjQwBrYfhe1atXp+PHj+v1vQWC9GDpOiPzhbdx3rprVLdZV8rv6ELe/sWo
59C3af3h/1N/+1Sm6IxCoW6KzmgZjNn4HvcGQ/89jOX0DeS4oS8ttAeMHcuW
LUv9+/enWbNm0ciRI7muGePKPHnyUMeOHen999/X6+ejjrN06TLUvH0krTsg
ecRC49PSdUYF8DZ+8sknPH728fEhLy8vvsbhd7RmiM4oEAjMEatWraJChQpx
v5RffvlFr++t9tgQ/WDwrMJzKi4uTq/vLRCkB6vQGV8Q2YwbDn9H/ccuJ/+A
smRn70QhoRE0Z/UFq/Z/iM4oFOqm6IyWwfHz91CR4hV5vPfo0SO9P0uR7YM+
hTlz5qQePXrQzZs3ebyKDDd4oNDbunv37ryOjfHm3Llz9ZrvBu0Ued/BdVtT
zKYbqu9vofXRWnRGAJ4TXN+7du1iHwy+c926dWnPnj30/PlztTdPFYjOKBAI
zA2obUGvL2Qzoj+gvmtd1B4bArGxseTr60szZsyw2ueTQB1Yk84I7r78H20/
+5TmxV2iWo07k72jM/kUKsm5XaivVnv71KDojEKhborOaBkcOH4luXr407Rp
0/Q+znr48CF16dKFn6UNGzaks2fPci2zNqBLHD58mHtI4HWdO3fm8aU+twHP
7uJlq9P0JcdU399C66M16YwKkLOP/tPo+Q6NDf7GsWPHsofF2iA6o0AgMDc8
efKEBg4cyNmMWDfSJ0xhbAgkJiZyRuOQIUPo66+/1ut7CwRpwdp0RoXwNq47
/C31GbWEfAuXIjsHJ6rVsCPNW3uFEi/9q/r2GZOiMwqFuik6o2UQPcBc3Ty5
556+16svXrzIvWjx/Bw9ejT9+OOPqb4O2gP6teB1derUoTNnzuhtG7AuPmjQ
IF43Gztnp+r7W2h9tEadEcA8EXPV7du381zRwcGB6tevT/v372cd0logOqNA
IDA3KGu0ISEhdOLECb2+tymMDQG8H94X3xPrYgKBsWCtOiMIb+O2c09pzurz
FNIgghzyFyS/gDLUf/RS2nT8serbZyyKzigU6qbojJbBDr0nk5eXL61evVrv
z9EDBw5w78A33niDa1505Xh/9dVX1K1bN37Oon8Essf1BXzmqFGjyM2zEA2f
Hq/6/hZaH61VZ1QATfGjjz6ioUOHcg0e+lJPmjSJ57HWANEZBQKBuQHewfDw
cGrcuDFdunRJr+9tCmND4N1336WmTZtyn+sbN27o9b0FgrRgzTqjQngb1x78
mnoPjyHvQiXI3qEg1W7yJi1Y/y7tvvKP6ttnaIrOKBTqpuiMlsF2PcaTj68v
rV+/Xu/P0cePH9N7771H58+f5/GiLuDnoaGh/JxFb8EPP/xQr9sxbtw4cvPw
paFT1qu+v4XWR2vXGQHUxP3888/c0z44OJi9jchNRV0c+sdYMkRnFAgE5gaM
w1q1akUtWrSga9eu6fW9TWVsiN4yLVu2ZEJzFAiMBdEZk8jexjO/06yVZ6lG
vXCyd3Ai/8ByNGDcCoo/8ZPq22dIis4oFOqm6IyWwYieE8nHx5fWrl2r9+co
6rChL/z9998616sx3kSGm52dHdna2tL06dP13tcQuXBuHv701rSNqu9vofVR
dMZXgLfx1q1bnGXg4eHBvUynTp1qkB5UpgLRGQUCQVZw/fr1FLmFxgLu061b
t6ZmzZrR1atX9frepjI2RO8Z6KhhYWGsewoExoLojK9z14W/KG7/V9Qjch55
+RUjh/zOVK95d4rZ+B5rkWpvnyEoOqNQqJuiM1oG2/WYQD6+frRu3TqjPV8V
fPrppzR48GAqWLAgP29Ru4Kxnr5zIhU/41tTN6i+v4XWR9EZXwfmlz/99BNt
2rSJa+ewX1C7duzYMfrrr7/U3jy9Q3RGgUCQWXz55ZeUN28+Klu2LB09etTo
nw/vIPS35s2b693PmB6MNTbUp58Rz7Xx48fTnj17WCMVCNKC6IwpqXgbZy47
RdVqh3GPmCLFgmjwxDW0+eTPqm+fvik6o1Com6IzWgZZZ/TxNarOiN4s0BjQ
GyJv3ryc0YOeg6dPn+b1bX1DdEahmhSdMXWgv/0HH3xA/fv3J3d3dypSpAjN
mDEjzTo6c4TojAKBILPo0aMH/c8m6Tlho2HTps3o9u3bRvt8NXRGY48N9akz
4lmmHCvoR9CHBw4aSFsStli0X1+QNYjOqJu7LvxJa/Y/oq6DZ5GHTyDld3Sh
Bq1608L492nPZcvpSS06o1Com6Izmh+3nv6Vlu/6lKJXnKERM7awP710UG1y
dXWjVatWGfy5inEi+vu1a9eOXFxcKGfOnJrPduXaGPSJMISXCWvMeH948JtF
DKZpS47Skm13aPOpJ1aRMyxUn6Iz6gauT/QaxTpHxYoVeR+hju3kyZMW420U
nVEgEGQG8O5BY/vf/17oEC/0xpy5clJkZCT7wfUJ1C7jPgwdE95J5OgMGzaM
ihUrxjof+kMbEmqMDQHop02aNKEKFSrQvHnz6Ny5c/T555/T06dPM/1eS5fG
vnasXh67F8Q6Wvfu3Wnnzp0G+CYCc4PojGkT3satZ3+jqKXHqXJIC7Kzd6KA
kpUocsp62qKZv6m9ffqg6IxCoW6KzmhaRN+uDYe/o4WbbtLkmAM0cPxK6tB7
Cq8BVazemPwDypKLmzc5FnAje0cXvmfnzeegGc/loty5c9PChQsN+kyFloJ8
nYCAAMqTJw/n7WCdHH0gnjx5YrAMIrz3gAEDNM/zNyiPbT7WG7EPnF29yK9I
aQqq1ojqa/ZRxz5TaciE1TR10WFalHCb84cTL1nOuplQPYrOmD7gbUS/z969
e/P8MjAwkGbPnk3ffPON2puWbYjOKBAIMoO6deu+/qywef3vbq5utHz58gyP
m5CLizrsy5cvs861aNEi1jmga+CzihcvTp6ennzvRa2yo6Mj5cuXj3LkyMF9
u5BpYSioNTYEsJ6FPta5cuXi3mTOzs7k5uZGfn5+vO6FPjio38azKD4+nrXQ
+/fvp6pDtm/f/sXxsUl5zLQIn6pAIDpjxrjzwp+0es8X1Ln/DHL3LkKOTm7U
qHU/Wrzllurbll2KzigU6qbojMYlMitW7v6MZq86T6Oit1LPt96mVp2HU0iD
DlSyfE32ljs5u5ODkyvZ5S9I+ezyk21eO8qdx5b1RDfPQlS8TDDVCG1HLToM
pa5D5tDw6fEU1nkEubr70qRJk+i3334zyPMUa/OdOnXisSvW6CtXrsz9raEh
GLrXLMaEHTp0IB//EtSk7UBq3WUU1WyUtM/wzMJ+yp3blvdVXvv85KDZd9Ah
C7p4kk+hklSuSn0KbdGD2veaRIPGraRJMQdo0eYPaNPRx5R46W/Vzwuh6VN0
xowB88kffviB1qxZw/4S7C/0ITh79qxBauaMBdEZBQJBRoF8v9T0KZtU/l2u
XLmXetydO3fo+PHjPLaKjo7mXluoe8Z4y9/fn7Mp4BUsUKAAa2rQEaHp4d/Q
GaE3QueA/gEdcsuWLfz7WPPZtm2bQb6rmmNDAN+rTJky1KBBAx4DDxkyhJ85
2A4vLy/uQYP6bXt7e3JycnqpQ/r6+vIzCt57rGNjfzsVcNJxvGyS/v5CU4qL
izP49xKYPkRnzDjZ23j6N5q6+AhVrN6EfTJFS1elYdM3UcLpX1XfvqxSdEah
UDdFZ9QfoVdtOvYDvbPlQ5ryziHOvO3Udxo1bN2XKoU0o0JFy5OLuy85FnTn
nApk40I7hD8PGhn8ib6FS1GFqg2ofvMeFNFzAvUbE0vj5++hBRuu06q9D2n9
4f+jjZrPgE9vy8lfWLfcce45TVywl4qWqkq9evWiBw8e6P1ZCp0P67fKeBbj
OOTYwL+k70zv1IA6mHr16rG+umD9u/xM2nz8J94X2Cer9zzkfTR+/m7qN2oJ
hXcbS7WbvMn15J4+Rfl5Bq0WOiQ0SWi4jk6u5OTiQV7+xahspbpUr2lXatd9
vGafL+P9uXDDDdp4+HtKvPiX6ueWUH2Kzphx4J6AewOyslBjhnkxavfmz59v
tvtJdEaBQJARQFsrVqx46j5G7VrcZP8PHyDGV4oXEboY9DFoifApBgUFvdTE
kIELrevIkSPcUxp5uN999x33Lvn55585IxF+PXggp02bRh4eHrRkyRK9j9fU
HhsCqOPB/pk5cyb3sgZRk471LjxvsI0XLlyghIQEfgbheR0eHk5Vq1YlHx+f
lzok9nNqWnBquiP2Oz7HWN9RYJoQnTHzhLcRfhvUn7l7FuY5cdO2g2jx1o9U
37asUHRGoVA3RWfMOLeffcpa35w1F2n0rO3Ue/g77Kur1bgzlYKe5RfIuhX0
K/jp4KtTvIi2ee1ZY8TaTXDd1tQsYgh1GzSL3pq2kaJiT9CSbR/T2oNfc830
puOPuSfX1lO/8mfuPP9HkucujdzcRQm3KLhOGGtx8A3pExgzY0yLMSQYFRXF
YzdD1sEkx4YNG6ho0aLU+s1RrOWm2AdX/+V9hH217dzTJB1Ssw/hV1x/5P9o
jebeH7PpBk18ex/1H7uM++bUbdaNylauR95+xVnz5eNk+0qHhKfUydmDPH2L
sV5Zp/GbFN5tDOuY4+ftZl0TGieyjtU+N4WGp+iMmQf8i99//z2tWLGC8/Qx
d27bti3P+Yx5/9AHRGcUCASpAVoTNKd79+5xDW/Xrl116FQ2L/98TcvS0huh
WZQqVYomT55M27dv50xF6GTffvst62bQz/BZv//+O2t5yDxELmNawPgJ6zyj
Ro3i99AXTGFsCC0VGZTwem7cuDHV1+D44FkEzRWvhwarrUNibf7SpUs0cODA
VHXg5LojPJuoTcfzAD7Kxo0bc1bI1KlT2ccPDRIZmdB70zs2AvOG6IxZI3L1
MU+bvPAgla/agOddxctWp5EzE9jzqPb2ZYaiMwqFuik6YxJxz4NHcPHW2zRt
8REaMmktde4fRU00943KtVpQkeIVydXD/6UX0V7bi5jHlnVF70IlqGzlUPbF
te02lvWocXMTad66q7Ryz2dJXsQjKb2Iuy78le1eJnivlh3f4p7TqFfRJzDG
7dixIz9L+/Xrx/naxlzDxTh6/Pjx5OziTgPGLMvavtLSIaHdauuQ0HbX7PuS
66jxzBswbgXXV6POunyV+prjWpJ1RxxnHO98dg6a45+kQ+J8QK076rdrNezI
unOfEYto7JxdmuN+jbVjfKba57cw+xSdMWvAveLZs2d05coVHn+jZq1EiRLs
QYEGaS4QnVEgsE5gDAKd7/r167R3715atmwZTZw4kX186K9SunRpvjegFhd6
W3LdwcYmpR8uue6YPA8QedvQvdDjOLvjLWiVqCmGFzK7/Zi1ofbYEIB3EvmL
2VljxzZDG0X/Gl15jKwNv/gZ6tPxvWvWrEmFCxfm+nX4OeGLxFoa/KjQIVGz
Dc0Y+x7nCrTjlStX0sGDB7kPOHr2mNt6m+B1iM6YPWJ+tCLxAUX0nMhzbOSG
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
qsLFy2vg+BjH72dEO+mMiIj20hk9C/OacMaMGSpatKi137fZGzsrya7nkWYv
xgEDzPfiw/Tqq69aZwsCAMD1YfZkDAkJ+eP/61zn/++2+lCuP5pjmTJlNH/+
fKfHBS+CzuiZvrJ4j6rXuT/brgnJrueH588HrNu4naZGfuX4/YxoJ50REdFe
OqPn8cknn+i+++5TjRo1tG7duiy9rex6Hrl9+3bVr1/fcuvWrVlyGwAAbmHO
nDkX/H+d66LWmOuSt5tuBJBR6Iyeqbme+J9dhyooKMy6zjirz+3LjueH8fHx
1tdbYHCouvSdzDXT6BXSGRER7aUzeh7JyckaOXKktfZv6NChOn78eJbdllln
aM6b+fnnn3Xy5MksucbOfD4vvviiQkNDrc/H3A4AAFwf5nG6fPmIi//PvqQL
nffmm2/WDz/84PTI4EXQGT3XEVM3qOwdta19vOPi4rL06yA7nh9u3LhRd911
lyrWaKRxc+Icv38RMyKdERHRXjqjZ7Jjxw5rf63sWNOY1Wzbtk0NGjRQrVq1
rHMS2S8MAOD6WblixSXrFi/sjRevaWzTpo3T44KXQWf0XJduPmWdBxMYFKLR
o0fr1KlTTn+5XDemXVprGc99Lo8+MVbLtpx2/P5FzIh0RkREe+mMnklSUpJ1
XUzevHnVt2/fbNnzOyswzyPNvozBwcEaMWKETpw44fRIAABeS1pamipUqHDZ
voxXbI5/yaWdO3c6PTJ4GXRGD3ZXml6cvlnlK9dVzZo1re/deivn92WsUqup
xr/xvvW5OX7/ImZAOiMior10Rs/liy++UKtWrVSkSBFrH3/z+tLbWLZsmXXG
dLNmzfT++++zlhEA4AYw/xdcuPfinz9e+vO/qGbNO50eF7wQOqNnu3x7gtr3
HK3gkLx68sknrfOavY3vvvvOOmM6JCy/Hn/2NS3fluj4/YqYUemMiIj20hk9
l9TUVC1YsEDlypVT06ZNvW5dyt69e9W6dWurk86ePdtaowkAANeH+f/YrHE/
3xQvWsOY6/L1jOb7PADXCp3R830t6hvd1fCfypcvn6ZPn26dP+8tmFnHjh2r
0NAwNWrZTTNX7Hf8/kS8FumMiIj20hk9G3MGjLnuOCQkRH369NGBAwecHilD
HDt2zJo7KCjIq6/7BgDwBFJSUlSvbl3lumTN4pX6orFEiRLW96oArhU6o+cb
syNFz42PVYmyVa19vN955x2nv2wyTFRUlHW9dNk77tKwKevOfS5cL43eJZ0R
EdFeOqNnY64zNtdPP/TQQ9b50xMnTvT4fb/N+dJTp05V4cKFdf/992vXrl1e
ec03AICn0K9fv4v3ZLygL15pXePcuXOdHhm8FDqjd7hsS7za9xqrkDwFrfOe
9uzZ4/SXji3m+WDz5s0Vlq+wegyYocj3zjh+PyJeq3RGRER76Yyej1mTsnbt
WtWuXVslS5bUwoULrZbnqZz/XnWlSpUUHR3t0bMCAHg6r7322h/d5/LzXnJd
0htzqWzZsnxvB64bOqP3+Mbqn9Wk9RPyDwiyrnnx5L0av/32W3Xu3Fn+/oFq
3eE5zVt72PH7D/F6pDMiItpLZ/QOzN6Gr7/+usqUKaOqVatq1apVHvk6cuPG
japXr57+9re/qVatWtavAQDg+njjjTf017/+9YrnSV/5jOm/aPXq1U6PDV4M
ndF7jH0/VVMW79Wd97RWUFCwhg8friNHjjj9JXQZ5rWE2UPHz89P/kFh6v7M
VC3fylpG9E7pjIiI9tIZvQdzvfS4ceOs65GrV6+ut956y9qzy1NYv3697rnn
HgUHB6tAgQLWj+bXpjV6YhMFAPBkFi9ebDXGK50l/WdrvPjt5ppEgBuBzuhd
xsSlaNSMLapQrYFCQ0M1bNgwj3ru/tNPP1n7Ppj9uoNC8ikgMEz5CpVUr8Gv
a9mW047ff4jXKp0REdFeOqN3Yc5XefHFF1WwYEHr2rhZs2bpxIkTjs6UkJCg
+fPnW9dJm+e4gwcP1ieffKKBAwdaZ6PWrFnTWn/JmQQAABkjclmkbr75b+ms
XbygAeX688eAgECvOSsMPBc6o/cZtT1Jw15dr4jKdc89DgSoe/fu1t7eTmOe
C7Zv395ax1i1VjMNn7pBPZ6bpYLh5c699iiqbv2nasmmE47ff4jXIp0REdFe
OqN3Yc6F+e2336xzVkqXLm2dQ/3444/rs88+c2Se//znP9a1MPnz51fRokU1
YcIE/fLLL1ZTNNfujBgxwmqiZr/GyMhI6/pvAABPIj4+Xvv27bNeE3/88cf6
/vvvHT1va+nSpdbeE5euYcx16dnSF7Qg04ViYmMcmxlyDnRG7zQqLlFj58Sp
+t0t5HvuOX2dOnWsPbLPnDmT7V9Dp0+ftr7/bK698fE9N0vjf2nCvI+sHrps
a7z6jlik8FKVrPWNHZ4cpwUbjjp+/yFmVDojIqK9dEbvxDxvXLdunRo1amT9
3ZmON23aNKvxZQemdZp9w2rUqCEfHx/dfffdWrFihfXa3LRQw/kmatpjeHi4
tf5y3rx5jjznBQAwmPXXa9as0YiRI/Tggw+qeLFilzWV895yyy2qVr2aevbs
aT3effrpp1m+LttcK/2/xphOW0xnXeOgQYOydC5wD3RG7zU6LlnTo/fpgXbP
KCQ0v/LkyaOuXbtq9+7d2bJ/jbmNnTt3ql27dtb1LaF5C6ltt2GaFbvfmu38
nGZvxufGx6pURE35B4Sdey0yVG+uPeT4/YeYEemMiIj20hm9F7M28LvvvtPI
kSNV7NxrZXNdSv369bVkyRKr72UFpiPGxMSoSZMmCgwMVKFChfTcc8/pyy+/
THet4smTJzV9+nTrDBszp/m5k2uFAMB9nF97bR63Ll4TeMF1ybn+bHe50ul8
Zg15ly5dtHbt2kxfn23W/5zfjzG928916dznfmzTpg174EKmQWf0bmN3pGrx
xuNWx7u9yj3WesKSJUtae9l89dVXf3wvODMxf6b5Pox53WCe55nbrFKrqYZM
Xqslm09Y59VcOufy7Qka/uo6RVS+R763BemB9s9o9ls/OH7/IdpJZ0REtJfO
6N2Y15bm+pQdO3boscces753bfbmMeevmPWN5vq/zHhOafbxNut57r33Xut1
tjnj5ZFHHtGWLVusjmj3Gtdcl2jWMlaoUME6I+bll1/OshYKAHAes8bbrOf5
q1kjmOvCXpfrir3x/O+ld5bzhR/n7++vRzs8qg0bNtzwOscZM2bopptuuqbb
NzZr3oz9KCBToTPmDJdvS9TsFd+ra78pKlLiduvaE7Pfjnlub54zZsa1Jea5
nXkeaPbvKVGihHLn9lGJslXVc9AszXnrgHWd9NVmNL8/ZtY2q0n6+Pqraesn
ND36P47fd4hXk86IiGgvnTFnYM6dNt1u06ZN1uuBsLAw6++0SJEi1vmj5pzq
999/P8PrCM3zT7NP2aRJk/TAAw/8sV7SrAUy1xqa6w6PHj2q5OTkDM9orleM
iopStWrVrPnMOszsus4bANyHOQfB7A970ZrF850u15/rFy9dy3jp+Sq5Lup8
V1gHee7jzGPt8OHD9cMPP1zznC+99NLvXefabr9BgwbW4ypAZkJnzDnG7jyr
ZVvi9VrkV3r0iTEqFF5OuXPntr5fbPZO7NOnj7WH488//5yh70mb9zGPcWYP
2SeeeEKVK1e2vu986625FV6qorr0nWR1wsj3zli3nZEZo7cnWXs31qzXSrl9
/HVP8456dclnjt93iOlJZ0REtJfOmLMw3c/0xg8++ECjRo2y9k80fdDX19d6
LmjOajHPC82+jm3btlWvXr00YMAA9e7d23odYdYrVqlSxdpP0TwPNR9nvgdu
PmbIkCHW98BNX7ze9TOJiYlWozT7kwcFBVnXXJu1kgAAmYlpjGZ/sMva4iX7
Gl7Y9S5cK/jHx/3RIi/9mFyX9UDzo1mT2KxZM7399tu2axzNa/bBgwdf1+3X
qXM3e91ClkBnzHmaa6mXbTmtGTHf6ukRC1WrwUMKDs2nW2+91boGJl++fNYe
2ua5mfnestkbon///urXr586d+6sFi1a6K677rLex7yvWcttPjY0T0Hd3aSd
nh0TqVkrv7ea5pWukbbT7N04ecle68/K7euvWvUfttqj0/cb4pWkMyIi2ktn
zJmY17fmemqzXvCjjz6y9kTs1KmTtZbQ9MN//OMfluacA/Nc0Wh+/fe//93q
f5UqVbL28Z4yZYq1DtJ8HZi1kGbd5I1iGqW5zsY0TfP81nydmX0mAQAyA/O4
V6RokcvWAv5xPvNVz1b53/uld93ylfrkxa3yz58XDQ/XuLFjdeTIkctmNI+D
HTt2vK7br1WrlrVfBUBWQGfMuZo1hsu3JmjRhmPWusOB42P0QPtnVbFGI4Xl
Dz/3nDC39Tzw//7v//54bmh+bt52y625lbdgcVW+s4ladxykwRNXaUbst1q0
6TfrGu2Mrl9Mz5gdKXrt3EwNW3a19musUquZRs/e5vh9hnipdEZERHvpjDkf
0xzNupfjx49br3cPHjyoffv2WecPmmtmTFd88sknreukzVkJ5voZ837m/c3H
ZcX5qmbd5a5du9SyZUvr++Lme+fmLBkAgBvl/vvuu/KaxUuvPf7jmuk/z365
4vnOuS79uPT+vCtcn31OsybcnEFz6NAhaz7TCM2a8uu5fbOmiMYIWQmd0R2a
Lhi1LVFLNp/Ugg1H9eba/1r7OU5Z+pkee/oVFShSVtXuuk+DJqzU1KWfW2e0
vPnOf7Vw/a/Wx5i9FW+0LV5qzI60czP8oOZtnpJfQKgiqtTT8KkbrmuNJGJW
SWdERLSXzuhOzPV6ph9OnDjRugbG7A9mfp0V5xCmh1kbuWfPHuv6bdMazbky
pn0CAFwv5nrljLTAjP1eOtdKX3FN5NXXSprbMOvHzX65Zk359dy+uVY6o3vs
AlwvdEYXuyvNanqDJ76tEuWqqdED3TRzxXfZ2vnMbc1dc1CtOz6nwOC8KlW+
hp6fsNJa7+j4/YP4Pp0RETEj0hndzSuvvKL8+fNb5z87gWmbX331lbX/jzlj
xuwBtHPnTkdmAQDvx6z3y0gHvFLbu+J5K7bm+uPHi6/Rztzbr1evHo0RsgU6
I74waY1Klquue1s9bq1jzO7bN+sk579zRI90H6GQsEIKL3mH+o9aZq2/dPq+
QaQzIiLaS2d0N053RoNpjfv377fOpDHrfBo2bKh33303W9dWAoD3Y/aDuLD7
2e/HmOuP65TN/4EVKlSwzrwqWqSotR/Z1frihdc357rkz7ye27+4N17ceMy5
MvHx8U7fveAS6IzodGc0mta4aNMxdeozQXkKFFP+ImX05JC5WrY13vH7B90t
nRER0V46o7vxhM5oSEtLs/aFNK9v8uTJo9q1a2v16tVZsjckAORMJk2aZH/9
8e9dL3fu3OrRo4f1OPP9999f9n0Ns4esOUNrxowZ6tz5MeXNm/fyPzfX1Rri
1W//4kaZ/rkvrR9qbZ0ZA5Bd0BnREzqj5a40ay/IxwfOUIEiZayzah5/9jXr
bU7fR+he6YyIiPbSGd2Np3RGg3mdb86JHTZsmAoUKGCtK4qKirJe7wMA2NG6
desrrje8tO+Zs6+u9dwp872Qbdu2Wf8vmsdMu7Z4tdvP0DXZ597fnEfN91og
u6Ezosd0xt9dtiVefYYtsK6fDg7Nr05PvayFG485Phe6UzojIqK9dEZ340md
0WBa47FjxzR+/HgVLVpU5cqV04IFC5SQkOD0aADg4ZSPKJ/utcv/637/+/nU
qVNv6HZM+zPnzTzwwAO6+eab/2yHf7TEq9/+X3Jd8j5X6Iw9e/Zk7whwBDoj
elpnNEZuO6MB46JVsnx1+QWGWXs3mjOynZ4L3SedERHRXjqju/G0zmgwr61P
nDhhtYBSpUqpePHimjlzpk6fPu30aADgwZg9FzJylos5eyqzOHz4sJ5++uk/
9lTM6Fkyl/7eH7/+vVWa67TnzZtHa4Rsh86IntgZjcu3J2jIK2tVrtLd8vEL
0oOPDtTrbx1wfC50l3RGRER76YzuxhM743lMV5w7d64iIiJUqFAha9bjx487
PRYAeCjmemi7nmfWF5r9GW4U81hkHp/ubXyv/vrXv2a4J/7lon6T6/c1j3+u
a8x14e+de3v16tW0a9euTLh3ADIGnRE9tTMazZnTo2a8p0o1Gyv3bYFq1qa3
ZsR86/hc6B7pjIiI9tIZ3Y0nd0aDuV46MjJSVatWtdYqjR49WkeOHHF6LADw
QMy+rqbN5bqg013p3JWNGzde859t1hV+/PHHGjVqlOrUqaOb/37zJb3wz/WI
drdv2yLPv/33j73pppvUrVs3HvsgW6Azoid3RmP09iRNmPuBatRtqdw+/mpw
/2N6ddkXjs+F7pDOiIhoL53R3Xh6ZzQkJiZae6GZM6iDg4M1ePBgHTx40Omx
AMDDqFGjZvrXLl/Q+0qUKKE333xT+/fv18mTJ639Fo1mjaJ52wcffKD169dr
9uzZ6t27t+rVq6egwMCrni2d3vXSV7r9K/76or0br9weAwMDNH36dOtMGoCs
gs6Int4ZjdFxyZq88FPVafSIfHz9z/3YVhMX/NvxuTDnS2dERLSXzuhuvKEz
GpKSkvTuu++qYcOGCggIUN++fa0eAABwnl69nrxsLeDl561cvo/ildYkml//
sedirkt+/0rnuVzyPll5+7Vq1dK+ffucvrshh0JnRG/ojMaYuBRNW/61GrTo
It/bglTtrhYaNyfO8bkwZ0tnRES0l87obrylMxqSk5O1c+dO3X///fL391f3
7t319ddfOz0WAHgIq1at+n3/w1y6dH3gFb3a713Vy8+I/nPdYvbcvvk/Ozo6
2um7HHIgdEb0ls5ojNmRplmx+9Xs4SflFxCiClXra+S0TYrdydcqZo10RkRE
e+mM7sabOqMhJSVFu3fv1sMPPyw/Pz+1a9dOe/bscXosAPAAzB4LoaGhF5+l
ktFmeNnaxEuvX05vHeLlv3e12y9VqpQefPBB6zzpG71904ImTJjg9N0OOQw6
I3pTZzTGvp+qN1b9pAfaPyv/oDwqffudGjzxbcXsSHF8Nsx50hkREe2lM7ob
b+uMBrOP2hdffKGOHTta11C3atXK2k8NAGDYsGEZWoeY6wr7IOa69H2vut7w
koaY6+pNMyQkVJMnT7bWZRtOnDih/v376+9///sN3/748eMdvtchJ0FnRG/r
jEazfnHeusNq222YgsMKKrx0JT07Zrmitic5PhvmLOmMiIj20hndjTd2RoNp
jd9++6169OhhnQ3TuHFjvffee9aZsADgXky/M+dOX3HdYa4rrTW8eh/MdX59
4QVnR1++bvHi27jw98qUKaOZM2cqPj7+ivN+/fU3atKkyQ3dvjmPetGiRdl8
T0NOhc6I3tgZjaY1Ltx4TB17j1dY/nAVLFpWTw2dp8j3zjg+G+Yc6YyIiPbS
Gd2Nt3ZGgzlz9cCBA+rXr5/CwsJUp04drV27lrNYAVxOXFycbr3l1gvWBOa6
uNld0u9yXXIGi+3Z0Vd424W/Z7pfwwYNtXr16gx/72PNufctXbr0dd/+rbfe
au0pAXCj0BnRWzuj5a40Ldl8Qt2enaYChUsrT4Hi6jlwppZuPuX8bJgjpDMi
ItpLZ3Q33twZDaYpHj58WC+88IL1eVStWlWxsbHWPo4A4F7M+fR+fv4XXSOd
sf0ar36tcq7L1kH++WdWqlTJuobZfP/jejD7S5qP9/X1va7bL1u2rBISEjL5
ngS3QWdEr+6Mv7tsy2n1HvKmihS/XSFhhfRYn0nWWken50Lvl86IiGgvndHd
eHtnNJj1Qr/++qvGjBmjIkWKKCIiwrqG0LxmBwD3Ys6jr1ixYrprAK90vfOf
6wnPr4FMr03m0t/+9lfVqFFDQ4cOtfaMzSx++ukntW3bVrly3XTV2891hfkH
Dx6caXOAO6EzYk7ojEZzvbTZo7FE2WrW+TDteozS/Hd+cXwu9G7pjIiI9tIZ
3U1O6IwG0xrNvmzmnIUSJUqoZMmSmjNnTrp7ogGAO0hKStK0adOsx7m/XLqu
8ZJzVnJd9rY/3+987yuYv4A6dOigJUuW6OjRo1k6+6ZNm1SsWLGLbv+y7njJ
5/CPf/xDX331VZbOBTkbOiPmlM5oXL414dzns1plK94lX/8QPdRpkHU2tdNz
ofdKZ0REtJfO6G5ySmc8z+nTp62+WL58eRUuXFhTpkyx+iMAuBuzx8Inn3xi
ncnSqVMnlStXTnny5LH+77vppr/qb3/7m7XHoTlD5vbbb1fdunX14IMPWv8P
Tp8+XZs3b9ahQ4eyfW7z+NWsWbOLro++tIdeuq6xQYMG2T4n5BzojJiTOqMx
aluiXnztXVWs3kg+voG67599NHPFd47Phd4pnRER0V46o7vJaZ3RcObMGWut
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
pgkTJig8PFxly5bVvHnzdObMGadHAwDwaOiMSGfEnOryrWf03PhYlYqoKf+A
sHOvg4fqzbWHrunPoDMiItpLZ3Q3dEbIyZw8eVLTp09X6dKlVaxYMevnp06d
cnosAACPhc6IdEbMyZpzYIa/uk4Rle+R721BeqD9M9f0dU5nRES0l87obuiM
kNOJj4+31jJWqFBBBQoUsL7WzVpHAAC4HDoj0hkxpxu1PUljZm1TlVpN5ePr
r6YP9dL06H0Z+lg6IyKivXRGd0NnBDeQkJCgqKgoVatWTWFhYXrxxRf1yy+/
OD0WAIDHQWdEOiO6wejtSZow7yPVrNdKuX38dU/zTnp1yWe2H0dnRES0l87o
buiM4BYSExO1Zs0a1alTR0FBQRo0aJB++uknp8cCAPAo6IxIZ0S3GB2XrMlL
9uruJu2U29dfteo/bLXHq30MnRER0V46o7uhM4KbSEpK0pYtW3TvvfcqICDA
eoz77rvvnB4LAMBjoDMinRHdZMyOFL0W9Y0atuxq7ddYpVYzjZ69Ld33pzMi
ItpLZ3Q3dEZwG8nJydq1a5datmwpf39/de3aVV9++aXTYwEAeAR0RqQzotuM
2ZGm2St+UPM2T8kvIFQRVepp+NQNin0/9bL3pTMiItpLZ3Q3dEZwIykpKdqz
Z4/atm1rtcZHHnlEu3fvdnosAADHoTMinRHdqGmKc9ccVOuOAxUYnFelImro
+ZffstY7Xvh+dEZERHvpjO6GzghuJTU1VV999ZU6d+6swMBAtWjRQjt37nR6
LAAAR6EzIp0R3WrszrOa/84veqT7CIXkKajwkhXVf9QyRW1L/ON97DrjJ/tO
KXpbvOOfCyKik9IZ3Q2dEdyMaY379+/XE088oeDgYDVs2FCbN2/W2bNnnR4N
AMAR6IxIZ0Q3a1rjok3H1KnPBOUpUEwFipTRk0PmatnW/7VDu8740stT9Pgz
U7Vk0wnHPxdERKekM7obOiO4nbS0NOvc6WeeeUZ58uRR7dq1tXr1aqtBAgC4
DToj0hnR9e5K05LNJ/X4wBlWZwzLH67uA16z3mbXGc1jaFBIPnV4cpwWbDjq
/OeCiOiAdEZ3Q2cEkLV+8fDhwxo6dKgKFCigypUrKyoqyjozBgDATdAZkc6I
+D+XbYlXn2ELFF7yDgWH5lenp17Wqh2/XbUzLoxco7IVaso/IOzc6+yhenPt
Icc/D0TE7JbO6G7ojAD/w7TGY8eOady4cSpatKjKlSunBQsWKCEhwenRAACy
DToj0hkR/zRy2xkNGBtt/ZvwCwxT96dG6ot9h9N9DP3s+0S9OG2dIirXk+9t
QXqg/TP8O0JE10lndDd0RoA/Ma3xxIkTmjp1qkqVKqUSJUpo1qxZOn36tNOj
AQBkC3RGpDMiXuzy7Qka8spalat0t/wCgjR9+sx0H0PNedMrdiRpzKytqnxn
E+X29VfTh3ppevQ+xz8PRMTsks7obuiMAJdjuuLcuXMVERGhQoUKWf9Ojh8/
7vRYAABZDp0R6YyIl2vOnB41Y4sq1bj3qq+bTGd8+6Ozit6epAnzPlLNeq2U
28df9zTvpFeXfOb454GImB1erTO2b99eO3bs0Lfffos51BdeeEFhYWEaNGiQ
47MgepKfffaZJk+ebLVG82/EvPb+6KOPHJ8LETEr7dq162XPB+mM7pLOiHhl
TTucumiXdnz4hW1ntN4/LlmTl+zV3U3aWesaazV4SBPnf+z454GImNVerTPe
csstCg4OVmhoKOZQfXx8dNNNN1k/Oj0Loqfp7++vm2++2Vrbkzt3bh4PETHH
e+utt9IZXS6dETF9N36Sop+PpqTbGTdu/1LPT4jVs2MiLfu/uETte45WeKlK
uvnv/1BIWCHd988+emZ05B/vg4iY06xep4Vuuumvl10jg4iIiIhYu3ZtDRo+
SYPHO/+8FbPe+vd1stZelY6oqc5PTXB8HkSnNdc7x8QlW51x815d9bzp0WMn
WC3R59y/ofPemvs2/e1vN1uPp+Y19z/+79aLfh8RMadpvq/i9PNXRERERPRM
//73v8vH5zbHn7Ni9vj3f9xitRDTRf4vt6/j8yA6bbseL2rp5lMZ6owr1sSp
69Mv69Enxlzmw50Hq3iZKn88tt5RvaH+9fjIK74vIqI3W65iHcefvyIiIiKi
Z3rHHXeoU/e+6tzb+eetmPXeUb2Rbr75HypYtKyaPfyk4/MgOu3ome8pantS
hjrj5z8kK3pbvJZtOX2ZSzef1OtvHVDbbsMUGJxX+QqX1JMvzNXCjceu+P6I
iN5q646DFBKaR76+vo4/j0VEREREz7JNmzaKWfdvrdjh/PNWzHqfHbNc4aUr
q/59nTU18kvH50F02vONMSOd8cJzYK5k7M6zWrTpmDr1maA8BYqpQJEy6j3k
TUW+F+/43pOIiJmlOQcmb/4CeuaZZ7R+/Xp0mT169FBQUJC6d+/u+CyI3uLy
5cvVunVr67yEsmXLasyYMVq3bp3jcyEiZoaLFi1S/fr1Vb58eY0fP16ffvqp
9n53mnNgXCLnwCCm7412RstdaVqy+aQeHzjD6oxh+cPVY8B0621Of36IiJmh
6YwheQqqzwvTte7jZHSZj/d/WUEh+dSt73jHZ0H0Ftd+mKiFa39Qq3b95B8U
ptsr1dKoaau05qNEx2dDRLxRF67Zp/pN26rcHbU0fsY6bdidorX/TtPKD+iM
bpDOiJi+mdIZf3fZlnj1GbZA4SXvUHBofnV66mXrGmqnP0dExBvVdMbgsELq
NWi2Vp77NbrLLn0nWZ3RrN13ehZEb9Jc9zLvnf+qzWMvKOjcc8MS5arpuZdi
rfMInZ4NEfFGnPPWD6rbuJ3K3lFbI1/bZL3N6eermH3SGRHTNzM7ozFy2xkN
GBtt/ZvzCwzTI91HaN7aw45/noiIN+L5zthz0GzHZ8Hs93xn7PzUBMdnQfQ2
TWtcuP6otUd4WN4iKlw8Qn1HLtLy7QmOz4aIeL3O/r0zlrmjtkZM2+T4PJi9
0hkR0zezO6PRPG8c8spalat0t3z8gvVgh4HWeTFOf66IiNcrndHd0hkRb9Bd
aVr87nF17TtZeQsWV75CJfXE83OsfcMdnw0R8TqkM7pbOiNi+mZFZzRGbUvU
qBlbVKnGvfLx9VfzNr01I+Zbxz9fRMTrkc7obumMiJnj0s2nrL5YKLy8QvMW
Udd+r1r90em5EBGvVTqju6UzIqZvVnVGY/T2JI2fu0vV726p3D7+anB/F726
7AvHP2dExGuVzuhu6YyImeeyrfHqO3KxwktXUuC5f1cdeo3VgnVHHZ8LEfFa
pDO6WzojYvpmZWc0Rscla/LCT1Wn0SPWusY6jdpq0oLdjn/eiIjXIp3R3dIZ
ETPX5VsTNGjCSpW+/U75BYTqn12GaO7qQ47PhYiYUemM7pbOiJi+Wd0ZjTFx
KZq2/Gs1uP8x+d4WpKp17te4OXGOf+6IiBmVzuhu6YyIme/ybYkaPnWDbq9y
j3Kfe37Y8l/9NXvF947PhYiYEemM7pbOiJi+2dEZjTE70jRzxX41faiXfP1D
VKFaA418bZN1BqHT9wEiop10RndLZ0TMGqO2J2ns7O2qUquZcvv6q8mDPfVa
1DeOz4WIaCed0d3SGRHTN7s6ozF2R6peX/WTHmj/rPyD8qjM7bX0wsS3FbMj
xfH7ARHxatIZ3S2dETHrjN6erIlvfqw772lt7eddr1kHTV6y1/G5EBGvJp3R
3dIZEdM3Ozuj0axfnLfu8P9es4cWVLHSlTVgbJR1ZozT9wUiYnrSGd0tnREx
azX7eU9Z+pnqNn3U2s+71j0P6eU3P3R8LkTE9KQzuls6I2L6ZndnNJrWuHDj
MXXsPV5h+cNVMLyc+gybr+Vbzzh+fyAiXkk6o7ulMyJmveb6lunR/1GjB7rJ
xy9IlWs11ZhZ2xyfCxHxStIZ3S2dETF9neiMlrvStGTzCXV7dpoKFC6tvAWK
q8dzM7V08ynH7xNExEulM7pbOiNi9mj2856z8kfd3/Zp+QWGKaJyXQ1/db1i
3091fDZExAulM7pbOiNi+jrWGX932ZbT6j3kTRUufrtCzr2Gf+zpiVq06TfH
7xdExAulM7pbOiNi9mma4tzVh/RQp0EKDM6nkuWra9CElYqJS3Z8NkTE89IZ
3S2dETF9ne6Mxsj3zuiZMZEqXraqdT5Mux6jNP+dXxy/bxARz0tndLd0RsTs
1eyxM3/9Ef3r8RcVkqewwkvcof4vLtXybYmOz4aIaKQzuls6I2L6ekJnNC7f
mnDu3+rbKnvHXbrNL1gPdXpeb6z62fH7BxHRSGd0t3RGxOzXtEZzjYu51iVP
geLKX6S0nnzhDS3bGu/4bIiIdEZ3S2dETF9P6YzGqG2JGvnau7qjekP5+AZa
e/PMXLHf8fsIEZHO6G7pjIjOuWTLSWsP7wJFyyosX1F1f2aatce303Mhorul
M7pbOiNi+npSZzRGbU/S+NffV7W7Wii3j78ateymqZFfOX4/IaK7pTO6Wzoj
orMu2xKvp4cvVHjJita/xY5PjtfC9b86Phciulc6o7ulMyKmr6d1RmN0XLIm
Ltytuxr+U7l9/VSn8b80aeEnjt9XiOhe6Yzuls6I6LyR285o4PgYlSpfwzqL
um234Xpz7X8dnwsR3Smd0d3SGRHT1xM7ozEmLkXTln6pe5p3Uu7bAlWjbku9
9MYux+8vRHSndEZ3S2dE9AyXb0/Q0MnvqHzluvLxC1KrRwdozqofHZ8LEd0n
ndHd0hkR09dTO6MxZkeKZsZ+pyate8rXP1gVazTSqOmbtWJnmuP3GyK6Szqj
u6UzInqOZj/v0TO3qtKdTZTb119NH+ql6dH7HJ8LEd0lndHd0hkR09eTO6Mx
dkeqXl/1k1q2629dI2POox7yyhrF7KA1ImL2SWd0t3RGRM8yenuSXnrzA9Ws
28raz7v+fZ01Zennjs+FiO6Rzuhu6YyI6evpndEYu/Os5q35r9o89sK513n5
VbxMVQ0cF209x3T6/kNEd0hndLd0RkTP0+znPWXxp7r73n/Jx9ff2td74vx/
Oz4XIrpDOqO7pTMipq83dEajaY0L1x/Vo0+MUVjeoipULEJPj1io5VsTHJ8N
EXO+dEZ3S2dE9EzNHjuvRX2jhi26WPs1Vq3dXGNnb3d8LkTM+dIZ3S2dETF9
vaUzWu5K0+J3j6trvynKW6ik8hYsbr3mX7bltPOzIWKOls7obumMiJ6r2Utn
1srv1ezh3vILCNXtVe7R8KkbFPt+quOzIWLOlc7obumMiOnrVZ3xd5duPqVe
g19XoWLlFZqnsLr2e0WLNx53fC5EzLnSGd0tnRHRszVN8Y3VP1vnT/sH5VHp
2+/U8xNXWesdnZ4NEXOmdEZ3S2dETF9v7IzGZVvj1e/FJSpWurICg/Na11PP
/3/27gOsqiPh//h/S3YT4cKVjogFULH3hgXF3nvvGltQY++9t2jEXkFEejPG
3hGwZLPJZuOmlzXVaOxiz+/PTF7fN5vNydXrheHe+Z3n+TybqJHhJIvD98yZ
OXxZ+biIyDGxM+qNnZGo4BN77EQf/AG9hs2TX68DylTFpMWJSOZ+3kSUB9gZ
9cbOSGTMXjujIPZmnPHaHpStXE++JyPOiYnc/63ycRGR42Fn1Bs7I5F9kPt5
H72KQWNWwtsvEP4ly+HVOVFIPHVH+diIyLGwM+qNnZHImD13RiHp9L3cr+tH
UblWU5hc3NGxzwRsTf9S+biIyLGwM+qNnZHIjpx7jLgTNzB8ygb4lQiGd9FA
jJi6Se67o3xsROQw2Bn1xs5IZMzeO6Mg3ocRZwuKMwadTWa07DJSnj2oelxE
5DjYGfXGzkhkf8Q5ga/O2YkSpSrnfv32z/3/7yq51lH1uIjIMbAz6o2dkciY
I3RGISXzAVZF/x0hTbrCydmMRm36IyL2PeXjIiLHwM6oN3ZGIvuUeDoHk5cm
o1T5WjC7e6PPiAXYeeCS8nERkf1jZ9QbOyORMUfpjEJK1gNExF9A4zYD4Gxy
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
7zvl4yKivMHOqDd2RiJj7IzWSc16iPVJH6Fp+yEwubijZsP2WLYtS/m4iChv
sDPqjZ2RiJ5G0ul7mLfuCCrVCINT7vywY5+J2Jr+pfJxEZHtsTPqjZ2RyBg7
o/VSsx9jc/oXaN1tFExmT1Su1RQLNhyTZxCqHhsR2RY7o97YGYnoaSVn3sfS
rZmoUa8NnExmtOryCjYkf6x8XERkW+yMemNnJDLGzvh80rIfYfver9Gp32SY
3X1QtlI9zFr1JlKzHyofGxHZDjuj3tgZiehZpGQ+wKqotxES1lXu5924zQCs
ifun8nERke2wM+qNnZHIGDvj8xPrF3ceuvRzh/DyR2BwdUxZmizPjFE9NiKy
DXZGvbEzEtGzEvt5R8S/j0at+8v9vOuFdcNrUW8pHxcR2QY7o97YGYmMsTPa
hmiNMUevYuCY5fD2C4B/QHmMnRuNpIwc5WMjoufHzqg3dkYisoZ4v2Vjyido
3mkYnF3dUb1eayzZclr5uIjo+bEz6o2dkcgYO6MNnXuMuBM3MGzyehQtHgzf
okEYOW0z4k/cUj82Inou7Ix6Y2ckImuJ/bzF96Dteo2Fq5s3KlZvhHlrDyPt
7CPlYyMi67Ez6o2dkcgYO6PtJZy8jTGzo1A8qBI8vYthyLhV2H3smvJxEZH1
2Bn1xs5IRM9DNMXI/d+i68BpcPPwRekKtTF95R6kZj1QPjYisg47o97YGYmM
sTPmjcRTOZi0JBFB5WrK82H6jlyE6IM/KB8XEVmHnVFv7IxE9LzEHjvRhy+j
z4iF8PQpjoBSVTBxYTySTt9TPjYienbsjHpjZyQyxs6Yd5Iy7uZ+/XkT5ao0
gIurB7oNmoEde79RPi4ienbsjHpjZyQiWxCtUbzjIt518SkaBL8SwRg9awcS
Mu4oHxsRPRt2Rr2xMxIZY2fMW8mn72HBhuOoUrsZnE1uaN9rHDanf6F8XET0
bNgZ9cbOSES2FHfyptzDu2jJcvAuUhLDJ62Xe3yrHhcRPT12Rr2xMxIZY2fM
e8mZ97F8+1nUatABTs5mNO84DOsSP1Q+LiJ6euyMemNnJCJbSzh5B+PmxSCg
dFX59WXg6OWIOfyj8nER0dNhZ9QbOyORMXbG/JGS9QCrYt5Bg2Y94WRyRcOW
fbA65l3l4yKip8POqDd2RiLKC4mnczB1eSrKVKgjz6LuNWweog58r3xcRGQZ
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
GYn1SR8qv39ERtgZ9cbOSET2TOx9OGlxAoLK1pDnP/cdufh/n/HGn7qF4VM2
wD+gPDw8PDFy5Ei88847yMnJybO++OtLfBzx8d577z288sor8PL2gV+xMhgx
eQNij15Xfv+Ifgs7o97YGYmMsTM6npSsB1gT90+Etuor1zXWa9pNtseZq95E
uSoN4ObmgVGjRsl3pMXeiyquJ/PJjIwMuR+42PsntEVvrI55V/n9I/ot7Ix6
Y2ckInuXlHE3dy64V57L52r2RPfBM7Eu8UP0D18Cz9w/34LLlsXGjRvlmX/5
+fz5l5f4uGL/xi1btshn0WLfxv7hS60645Aor7Ez6o2dkcgYO6NjEu+/bEj+
GM06DoXJxR3FgyrJvXm8fYtgwYIFcj2hqjnkLy+xtvGDDz6Q58S4mgvLPcDX
/WL9JVFBwc6oN3ZGInIE4gzpBeuPoUqtpnA2uck1g2J9Y506dZCampqvaxh/
7xLj2LNnD0Lq1ZOtcdDY1Yg7cUP5/SP6JXZGvbEzEhljZ3RcqdmPsTX93/Jr
30uFnOHu7iEbo3hOXRDmkE8u0Ts//fRTDBo0CK5mN3ToPR7b3/hK+f0j+iV2
Rr2xMxKRo0jOvI+lW7Plft5//OOfUKtWLaSlpcl9EgvSJd652bt3L0JCQuBT
NBBj5kTJsau+f0RPsDPqjZ2RyBg7o2MTX/PC2g6Ak5MTJkyYIPfZLkiN8ckl
zp/5xz/+gc6dO8PVzRsDx6zkc2sqUNgZ9cbOSESORLw/XapcTZQqVQpRUVHy
7OeCeInWuHPnTlSoUFF+Pz/79f3K7x3RE+yMemNnJDLGzui4Ek/dQd+RC2W3
69evn9yPMS/Pk37eS5xHLc6ibtiwIYoWD8bERfFyTabq+0gksDPqjZ2RiBzF
2oR/oX7zXvD29sHy5ctx48YN1VPA371u376NZcuWoai/P+o17cG9vKnAYGfU
GzsjkTF2RsclzhUsUaoSQkNDZb8rCPsxWrrEc+utW7eiTJkyqFGvDZZvP6v8
PhIJ7Ix6Y2ckIkcQe+wGug2aAdfCnhg9ejQuXrxYIN9z+fUl9hUPDw+HubA7
ug2eieiDl5XfSyJ2Rr2xMxIZY2d0TGvi3kdIk64oXryEPLOvoO2583vXtWvX
MHnyZLi5e6JzvymIOvC98vtJxM6oN3ZGInIE4+bvRtGS5dCqVWtkZWUV6Pdc
fnmJFvrWW2+hdevWcq/G8bmfB995IdXYGfXGzkhkjJ3R8SRl5KD38Pko7OaF
cePG4dtvv82/iaANLjGXFHs1dujQIXcuGYQJC2ORdob/DZJa7Ix6Y2ckInu3
Nu6CfAYdEBCIyMhIPHjwQPWU75kusb+OGHdw2bIICeuK1bveUX5PSW/sjHpj
ZyQyxs7oeOZGHELZyvXQqFEjHD9+3G6eVf/yEnPJ7du3o0yZYDRs2QcR8ReU
31fSGzuj3tgZiciepWQ9wIBRS2F298arr75qd8+gn1xXrlzBmDFj5LP0gWOW
IyHjjvJ7S/piZ9QbOyORMXZGxxJ7/Do69B4PD08vrFixAnfu3Mm/yZ+Nr++/
/x7Dhg3L/d7eB69M3YTU3Dmy6vtL+mJn1Bs7IxHZs2XbslC1dnPUqVsXBw4c
sMtn0OIS77wcPnwY9evXR+WaTbB4c4bye0v6YmfUGzsjkTF2Rscya/U++fWu
Xbt2ch8be77EHDg5ORlVq1aV5wtGxL6n/P6SvtgZ9cbOSET2Sqxl7DtiIQq7
eWP27Nm4fv266inec13iGfqMGTPg7uGF/uFLuKaRlGFn1Bs7I5ExdkbHIfZl
7Dpwmpx3vfbaa3Z19ovRdfnyZQwfPhye3n54dVYk0s9wz29Sg51Rb+yMRGSv
xD6GtRq0Q926dXHw4EG7OF/a0nX06FHUr98ANeq1wfLI88rvMemJnVFv7IxE
xtgZHcfK3HlWtbot0bhxY5w8eTL/Jnt5eIm5cFRUFMqUKYNWXcOxbe9F5feZ
9MTOqDd2RiKyV69M3Qxv3xIYP348fvjhB9VTO5tcN2/elPtMunv65v65vIXn
BZIS7Ix6Y2ckMsbO6DjCp22R88hJkybJfbLz4vrkk09k9xN7cDdt2hQNGzZE
jx49sGjRInlGdF7s93PhwgV06tQJwZVCMG/dEeX3mfTEzqg3dkYiskcxh39E
yy4jUbJkSURHR+fJPE3F3FA8hxafT3BwMNp0H4Xte79Wfq9JP+yMemNnJDLG
zugYEk7eRrueY1GsWDFERkbmyTsxhw4dkvNHV1dXFCpUCC+88AL+/Oc/469/
/SucnZ0RGBiIxYsXy/NbbHk9ePAA06aJ98G9MXLKRr47TUqwM+qNnZGI7JE4
/6VyraZo27Ytzp8/b9P5mbhUzQ3FJRqm2I+8YvXGWLTplPJ7TfphZ9QbOyOR
MXZGx7Am7n3UCe0o35k+deqUzedyYj+f0NBQOX8sXLgwwsLC5LrJefPmybWG
np6e+OMf/whfX1+sW7cOOTk5Nv344jl56dKl0bHvREQfvqz8fpN+2Bn1xs5I
RPbo1TnRKFKsNCZMmGDzd11Uzw3FeTDi3Wkv32IYOzda+b0m/bAz6o2dkcgY
O6NjEOdMl8r9Ojd48GB89tlnNp3HXbp0CSNGjJDzyOLFi2PNmjX47rvv5N44
t2/fxtWrV7Fr1y5UrlwZf/jDH9C+fXubn3Ut2mmjRo0Q0rQ7Xue506QAO6Pe
2BmJyB71Gb4AHp4+iIiIsOn7ywVhbije3Vm9ejV8fYvIc6dTMu8rv9+kF3ZG
vbEzEhljZ3QMo2Zuh7dfIGbOnIlbt27ZdB4n3okJCQnB//t//0/uvSPmkb9+
L1s8oxbPysV8s0qVKti7d69Nx/Dpp5/KvX7KVW2ABRuOK7/fpB92Rr2xMxKR
vYk/cQttuo1CqVKlkJCQYNN5WUGYG4pLfF4VKlSQewdFHfhe+T0nvbAz6o2d
kcgYO6NjGDhmOTw8feVzXVvvzbhz5045R3VycpLPq42eh69YsQLu7u5yj8iY
mBibjuHatWsYPnw4igWUx9TlqcrvN+mHnVFv7IxEZG+27b2Ixq36oU6dOrIL
2vIqCHNDcR09ehQNGjRAo9b9sSH5I+X3nPTCzqg3dkYiY+yMjqHny3Pg6+uH
LVu22HwOJ/bfGTZsGMLDw5GZmfmbv+bhw4eYPHmy3Pu7YsWKSE9Pt+kYHj16
hPHjx8O7SEmMn79b+f0m/bAz6o2dkYjszbrEDxAS1hnNmjUznL9ZexWEuaG4
xNk2LVu2RN3GnbE65l3l95z0ws6oN3ZGImPsjI6h68DpKFrUX541bevr3r17
uH79Om7cuCHPfv6tS8w3n7w/06dPH3zwwQc2H8fUqVPh5eOPV+fsVH6/ST/s
jHpjZyQieyP2s67dsD3atGlj87OmC8rc8N1335VnTtdq0BavRb2l/J6TXtgZ
9cbOSGSMndExdBs0I886429dYq4onkuL8wNffvlllC1bFn/5y1/kuzn79u2T
z7BtfU2ZMoWdkZRhZ9QbOyMR2ZuI2H+idmgHtG7dGufOnbP5vOzXl4q54Tvv
vIO2bduiZsN2WLnzb8rvOemFnVFv7IxExtgZHUN+d8aVK1fC398fLi4uePHF
F/GnP/0JlSpVQmJionzGnRfX/3XGaOX3m/TDzqg3dkYisjf53RlVzA3/rzO2
Z2ekfMfOqDd2RiJj7IyOoevAafnaGbdu3YpatWrlfsyici4p3okR5wnWrFkT
sbGxNj/zWlzTpk2TnXHMnCjl95v0w86oN3ZGIrI3a2Lek/0tL96b/q1Lxdzw
yXvTNevzvWnKf+yMemNnJDLGzugYegyZjSJF/OUcLz+uO3fu4PLly/j+++/x
/vvvy2fY5cqVk3t9izMFd+zYYXj2oDWXOEN74sSJ8PIpjnHzYpTfb9IPO6Pe
2BmJyN5ExF9AnUad0aJFC2RnZ9tsTmZ05ffcUFxvvfUWWrVqhTqhHbEq+u/K
7znphZ1Rb+yMRMbYGR1D//Al8PTyRUREhE3nb09ziTmjmFuKxlm6dGn88Y9/
xKBBg/DJJ5/Y7GOIZ+CvvPIKipYoiylLk5Xfb9IPO6Pe2BmJyN5s2fMlQlv0
Qb169XD06FGbzcme5sqPuaG4Tp48iUaNGqFhy77yfG3V95z0ws6oN3ZGImPs
jI7hlamb4eVbAvPmzUNOTo7N5m9iz+4ff/wR33zzDa5du4ZHjx4Z/lrx7Lpj
x47yPZnmzZsjKyvLZuP48ssv5VmFZSrWxdy1h5Xfb9IPO6Pe2BmJyN7EHr0m
v/8V57GkpKTYbE5WUOaG4kpNTUWVKlXQums4duz9Wvk9J72wM+qNnZHIGDuj
Y5i2PA0BZaphxIgRuHjxos3mb1999RVGjhwJb29veXbgv/71L8Nfe+nSJQwe
PFjOJcPCwpCRkWGzcZw5c0bOT2vzvRhShJ1Rb+yMRGRv0s78hO5DZsHL2web
Nm2y2ZysoMwNxbV+/Xq5H2Tv4fORlHFX+T0nvbAz6o2dkcgYO6NjWBX1NmqE
tJZ71Jw9e9Zm87fbt28jPDxczg8bNGiA48ePG/7aDz74AF26dJG/tmfPnrhw
4YLNxhEfH4/y5cujTffRiNz/rfL7TfphZ9QbOyMR2aNXpm+Bd5EAzJgxAzdu
3LDJnKygzA0fPHiAyZMnw9PLD+EztiH93GPl95v0ws6oN3ZGImPsjI5h97Fr
aNllBAIDAxEXF2ezOZw4f2Xx4sVwdXWF2WzGmjVrcP/+/d/8dWIPnpIlS8q5
pDiz5cqVKzYbw/z58+Hu4YUh41YhNeuh8vtN+mFn1Bs7IxHZowXrj6F8lQbo
1q0b3nvvPZvNy1TPDcX10Ucfyc+Le+qQKuyMemNnJDLGzugYxLsxQ8a9Dk9v
P8yZM0eem2Kr69y5c/Kswj/84Q+yY65bt07ux/Pkunr1KrZs2YLKlSvjT3/6
E2rWrIl9+/bZ7EzBzz//HL1790ZAmaqY8dobyu816YmdUW/sjERkjyL3fYew
toMQHByM5ORkm8zLxKV6biguseek+P2btB+MTamfKb/XpB92Rr2xMxIZY2d0
HAs3nkCFaqFo27Ytzp8/b7N5nHgvRcwfixUrJs8LdHFxkc+mxbsy4oy/UqVK
yWfaf/7zn+Hl5YXXX39dvlNjq0vMi8U8MqztQGxM+UT5fSY9sTPqjZ2RiOxR
WvYjDBq7Eh5eRTB79mybvTutem547949TJ8+Xb7rIr4+p2Q9UH6vST/sjHpj
ZyQyxs7oOGKPX5f7F3r7+GDz5s02fWYs5obiTL969erJ+aR4fi3mjoL46xde
eEGe07J3717cvHnTZh9XrMucMGFC7jzSG8MmruM8kpRhZ9QbOyMR2aslWzJQ
qUYYmjZtiszMTJvN0VTNDcX1ZD2leL6+cONx5feY9MTOqDd2RiJj7IyOQ7w7
PXFRPEoEVUKfPn1+9/w/ay7x7FicMXjy5En5LsysWbMwb948REVFITs7G99+
++1v7s/zPNfhw4fl/LVa3ZZYvj1b+T0mfbEz6o2dkYjsVcLJ2+jcf4pc+7dy
5UrcvXvXZvM0FXPDR48eYdmyZfDy8kbXgdMRc/Sq8ntMemJn1Bs7I5ExdkbH
EnngOzTt8DJ8fYvI+Z6Yi9nyEnt6P3z4UM5RxVpD8Sxb/LX4MfFztrzEs+9J
kybBzd0TA0YtQ0LGHeX3l/TFzqg3dkYislvnHmPOmgMIrhQi1xdmZWXZdL6W
n3NDcYm1jK1atcr9/r5W7vf5++RzduX3mLTEzqg3dkYiY+yMjiXt7CNMWpyI
gNJV0KFDB/ztb3+z+fwuvy7xLk7VqlVRo15rrNhxTvm9Jb2xM+qNnZGI7Fn8
iVvoMmCqfHYr1htev35d9TTPqisnJ0fuM+nu7oFug2cg5uiPyu8t6YudUW/s
jETG2Bkdz+4jV9G+97jcuaQHFixYYJdzyS+++AIDBgyQ52ePmLwBSafvKb+v
pDd2Rr2xMxKRXTv3GEu3Z6NK7eaoWLEi0tPTVU/1rLr27NmDGjVqoHKtJli8
6RTXMpJS7Ix6Y2ckMsbO6HjEnGvp1szcOVhTlCtXTp7XnBfvreTVJfbx+Xnf
HS/UCe2IVdFvK7+nROyMemNnJCJ7l5J5H8MmroW3X0m5j/f777+vesr3TNcn
n3yCvn37opCTCT1eni2fq6u+p6Q3dka9sTMSGWNndEzJuXPJkVM2wtc/CB07
drSr96fT0tJQvXp1eXbhiy86ISSsK5ZtO4PU7MfK7yvpi51Rb+yMROQIIt/8
Vn5PLN47Fu9PX716VfW076kuse/j3Llzc8ftjj/kzg/N7j7o0n8qNqd9rvye
kr7YGfXGzkhkjJ3RcUUfvoz2vcbBXNgd48aNk+cBFvTr7bfflvtKevn4o3W3
cNRr2g0mF3f4lyyPoRMiEH3wsvL7SnpiZ9QbOyMROQKxj/eybVmoWrs5SpQo
gcjISDx48ED19O93r8ePH2PHjh0oXbo0KtdsIveZFGfavFTIhEq5fz9z1V4k
Zd5Vfm9JP+yMemNnJDLGzui4xPvTa+PeR72wrvD09JLvIhfkvRr//e9/Y9iw
YTCb3dCp32Rse+MrRO7/Nvf7+zUoWqIsnE1mNGzeG8sjz8t5sur7S3phZ9Qb
OyMROQrx/vT4+btRolQl1KxZE/v27SvQ++vs378f9erVg3/Jshg7bxfiTtzA
uvgLaNtjNNw8fODp4y/PhNmy50vl95b0ws6oN3ZGImPsjI4tNesh5q87ggrV
QuVz661bt+Lu3bv5Nzl8yuvKlSuYOnWqfB+mUev+WJtwQbZE0UoTTt7Goi0Z
qNukK5xc3FA8sKI8GybmMM8YpPzDzqg3dkYiciTxuXOrAaOXw8u3GFq2bInM
zEzVU8HfvM6ePYu2bdvCw9MXA8csR+zx63L8Yi8dsT/j+AWxKF2hjlzbWKV2
M8x+fT/PDqR8w86oN3ZGImPsjI4vOXe+JeZhAaWroFSpUti+fTvu3LmTf5NE
C9cPP/yAGTNmyHNfatRrLc+wEX30l59DStYD7Nj3jfwev0jx0rI3Nm7VD6t2
/o1nDVK+YGfUGzsjETma6IM/oHO/ySjs5oU2bdogKytL9ZTwPy7RGMVeOq5m
N7kXo3jHJf3Mf+7VnZRxFxGx/0Srrq/A1d0bXr4lcv+8no1tey4qv7/k+NgZ
9cbOSGSMnVEPiafuYNTM7SgWWB7FihXDkiVLcOnSpfybLBr99/XRRxgxYgTc
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
/R+0cU2F
    "], {{0, 1044}, {1306, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{348.5744791666663, Automatic},
  ImageSizeRaw->{1306, 1044},
  PlotRange->{{0, 1306}, {0, 1044}}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"b7192fac-0db3-4656-b2ec-c2398165bcd5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQV4VGfzxfvv1xaNEA8hEIK7uxPc3YO7u0NxKwR3C+6B4u5SahRKXahS
2tIWKNACped/zyRLAyQkgc3e3c28z/P7+rVAcvOy9955z8ycydi+T4POL7/0
0ksDkhv/06DdkAr9+7cb1tDd+JfGvQd069K7U8fqvQd26tKpf/H2/zP+o9cr
L72U9tWXXjL+8RJ06dKlS5cuXbp06dKlS5cuXbp06dKlS5cuXbp06dKlS5cu
Xbp06dKlS5cuXbp06dKlS5cuXbp06dKlS5cuXbp06dKly4nWlV+AEx8BRy8p
SYWD7/2NFRGX0HfEHFSsUh+ZMmVB2rRpE0S2nHlQu2E7jJiyCuv3f4XDHzww
/edSlBeh/6j5KFYqBONmbkn077V27xdo3m4Ago17L2fu/Og7fDZ2nPzF9D1I
ygwetxS58hTAwDGLTL8WRVEUM9h55nfMXH4EbbuOROGiZREYmD5BsWG6dIEo
WLQMWncehhlLD+LN07+Z/jMpyouw9dhVhHYaihr1QrFg/VuJ+r2OXHyI2atO
IKRaQ+NeSocSZatg8vxdOPDuX6bvQ1Jl5vKjKFOxlvEZGIItR34w/XoUxZ44
//m/+PVm7DrjZz8Ce975F2++BcXJCd9zFT1GLEW+IiHw8PRDylQucHV1Q758
+dGiRQsMHToUYWFhWLduHY4cOYIPPvgA7777Lvbt24fw8HBMnToV/fv3R/36
9ZE5cxakMv58qtTu8PELRMmQRhgxYyc2HLlh+s+pKM9D885jjc9yBrlHEvt7
RZy5b9yPP6HTgDlIlzEnUru4o2yV5pi28jy2v/WP6XuRFOnYfyY8vdOiXd/p
pl+LoiiKreA7Z+a6D9Cw9RAEZ8mH1G6eSJEiFXx9/VChQgV06dIFY8aMwcKF
CxEREYEzZ87g4sWLOHv2LLZv345FixbJr3ft2tX4/RXlz/HP8+sEZc6D+q0G
YtbqC4g4d9/0n1VREsqynd+iQvVQ5CpQFuMXHEnU77XDYOupvzB308eo1bQ3
PLz84W2csRq3G44lb14xfS+SIqNn7UXW3MVQrUFXLNv1renXoyj2xLHLwLU/
nq0z7n73X3m2Kc7Jqn0/o9uQhciWp7jogh4enggJCcGMGTNER/zll1/wxx9/
4M8//8SdO3fw999/4/79+3j48CH++ecf+f9//fWX/NqtW7fw+++/4+rVqzh+
/DhGjBiBQoUKwcXFDa5uXihcqiaGT38TG4/9afrPrSgJoVmnMfDyTY/uw5fa
5PttP/cvNh2/g8lLTqF0SBO4uHogfabc6DJoPtYcum76fiQ1LDpj+z7TTb8W
RVGUROfcQ8xafwm1mvWBX7rMSJ4iFTIEBSE0NBQbN27EF198gevXr+PmzZu4
ffs27t69i3v37uHBgwcSH/Kf/Hf+d/46fx9//5dffolNmzahbdu2CMqYESlS
poZv2oyo2aQnZq79ABFnH5r/sytKPFm681uUr9YKOfKXxrj5R2zyPXmPrDv0
OwaM34BsuYsb95AL8herLJrXllN/m74nSYlRM/cia65iqNqgq3wWzL4eRbEn
jn2oOmNSZdPx2xg8eQvyFg4RfZH9L7169cK5c+ckFqRuSB3xeRdjTGqT165d
w549e9CoUSN4ennDzd1HarOon2w7fc/0fVCU+GBrndHCtjP3sWLPj6JvBWTI
ilSuHihXvRWmr3pXtEiz9yWpoDqjoihJBdZotegyDumCcooOyHzx3Llz8fnn
n+PGjRuSb/7333+fKzbkn+Of59eh5jh//nwULlzEiENdEJA+G5p1fB1Ltl8x
fQ8UJT6YoTNa2HLyL8xZ/yGqN+oOd09f+PinR9OOo1XvsiGqMypK7KjOmDSZ
ve4iqtTpaLyX/ODj64eOHTtJjwvzzdQHrb2Y0/7tt9+wa9cu1KhRE27uaeAf
kAnNO4/Bsl3fmb4fihIXZumMJLK28TYmLjqOEuUbILWLB4Ky5EP3oYux9vDv
pu9NUkB1RkVRnB3qFkOmbkOeQuVFX8yVO7f45VAPZF0i6xStuag58uteuXIF
s2bNQp48ecSzJ1eBMpIH53vP7D1RlGdhps5IIs4+wNqDv6Hv2DXIkrOo3D8F
S1TDmDkHsFVrORId1RkVJXZUZ0xabDn9F/qPXy9eEswdV61aFbt375Ze58TQ
F59c1Bt/+uknLF26FAUKFDTeh64oUrYOJi0+qb0yil1jps5oYdvp+1i++3u0
6TUV/oFZ4eLqiZCabTFzzQXpcTN7j5wZ1RkVRXFmlu/6AY3bjYC38Z7z8/NH
nz59xIebvS3W1hefXNQb+X0+/PBD9OvXDwEB6eBhPG8btR2GpTu+MX1vFCU2
zNYZLTBHMHPtRVSt3wVuHr7wTRssNcmMGc3eI2dGdUZFiR3VGZMO6w/fQNte
U8UHJ336DBg3bhy+/vpr0f5suRhP0s/xwoUL6NChAzw9vZEpeyEMmrRJfUUU
u8UedEZiqW2k3zg1+lQu7gjOVgA9Ry7HuiN/mL5PzorqjIqiOCtzN1xGhZpt
xEOnZKlS2LJli/hyv4h3zvMsfj/21Wzbtg2lS5c2rscV5aqHim+j2XukKDFh
LzojYW0j/bt7jw6XcxVrG4uUqmlc12H1qUokVGdUlNhRnTFpsP7oDbTqOkFm
kxUqVBgbNmyQmS2JnaN+1mI8+fPPP2PKlCnImDEYgcG50H/8Oq3zV+wSe9EZ
LTBmXPbmd2jVbSL80mWCi7sXKtXpKJ4IWttofVRnVBTFGZm99pJ4Zru4uqFV
q1Yy/4/+iWYufn/monk99NkpVakxwla/Z/peKcqT2JPOaGHzqbuYuep9Iybs
ALc0PjLHKbT7JPH6NvvanA3VGRUldlRndH5YS88zsrdfBpQpU0b6pM2OIS2L
tY3UO+kDnjVrNsm/cR719rf+MX3fFCU69qYzEtY2cnb72LkHUbhUDalFyZyj
MHqPXoUNR26afn3OhOqMiqI4G4u2f4VKdTvC1S0NunXrhs8++8wmHjrxWcxF
f/XVV+jatSvSpPEUzWTe5k9N3zNFiY496owk4swDrN7/K3qMWIbgrPmRIrUr
ipWtKz7fEWfum359zoLqjIoSO6ozOjfUIfqNW4f0mXLLPL+IiAib90nHZ3Eu
9YwZMxAUlBEFileVWdRm752iRMcedUYLrAFe8uY34sXjGxAsM93p0cNeOLOv
zVlQnVFRFGdizYHraNB6CFzdPNGuXTt88sknNu+Tjmux54YzaNq2bQsXdw80
bDMUK/f8ZPreKYoFe9UZhfMPsfnEXcwIfwchNdsY95A30qbPira9piF8n95H
1kB1RkWJHdUZnZsJC48hb5EQZMqUGcuWLZO5fva6OI962LBh8Pb2kbz1wi2f
mb5/imLBnnVGElnbeAujZ+0TrZ4zlhj79Bu7FhuM/2729Tk6qjMqiuIsMDfV
qf9s450WiNq1a+PcuXN2pzFaFrXG9957D3Xq1IGHlx86D5yLTSfvmL6HikLs
WmeMgrWNqw78jG7DFiFD5rwSH5ao0MD063IGVGdUlNhRndF5Wbzja4TUbgcv
L2+MHz9eZkrb82IP9ZUrVyRv7Z7GG626TdC5FordYO86owWeHxdv/xpNO46G
j3+QzB2s0bgH5m/8xPRrc2RUZ1QUxVmgP02WnEWlz2XHjh24f/++2SHgMxd7
uXft2oXixUsgOEt+DH9jh/oQK3aBI+iMgtQ23sEbK87L9aZ280STDiMxYcFR
bNM+6udGdUZFiR3VGZ2TLSfvIrTbRNEYONOZfSfU8ex9MW996tQpVKpUCeky
ZJcZ1KzTMns/FcVRdEZCf1PWMI4M2418RStJ7jpbnpIYOHGjzKo2+/ocEdUZ
FUVxBhZs/hRlq7SAf0AA5syZgzt37pgd+sVr0Vd89uzZ4q9TpnIzmV9j9l4q
isPojFFQUwzfdw1dBs1H8hSp4B+YGa17TMbKvVdNvzZHRHVGRYkd1RmdkxEz
diJLrqIoW7YsDh48aLf9MDEt5tWXLFmCLFmzomRII8xce8H0/VQUR9IZLWw9
9TcWbvsSjdoOh7dfINw9/VCraR/MV0+CBKM6o6Iojg5z0C27jIebhw969uyJ
77//3uyQL0Hr559/Ro8ePZDGuH7Oz91wTOedKebiaDojYf0GvQcq1mqHoCz5
JBddvFw9TFh8AhFnH5h+fY6E6oyKEjuqMzofy3f9gMr1OsHX319yv/bsyRjb
+vXXXyUGZizZpucUmalr9r4qSRtH1BmJ1DYeuYnh03cgT6EKEk/mzFcagydv
UY+rBKA6o6Iojs7oWXuRLU8JlC9fHkeOHJEeEkda7Ms5ceIEKlasiEzZCxln
/D2m76mStHFEndECvaneCH8b5Wu0hqubFwIyZEW73jOk3tHsa3MUVGdUlNhR
ndH56Dlymcycbd26NT777DPbBYBWXIwljx49inLlyiFHPr67D5u+r0rSxlF1
RgusbVyw9XPUDx0ML59AeHinRd2WA7Bw2xemX5sjoDqjoiiOzOqDv6JG417w
9vFFWFiYQ+ague7du4c33ngD/gHpUKtpb8mtm723StLFkXVGwj7qVft+Rrch
C5Ehcx6kSu2OkhUbY8rS01rbGA9UZ1SU2FGd0bmgZlCmagtkzZoN69atc6h+
6SfXX3/9hbFjx8Lb2xdNO4zSmTCKqTi6zki2n/0H64/ewNBp25CrQFmkTOmC
3AXLGf8eIf7gZl+fPaM6o6Iojgxr2Nkj2bBhI3zwwQdmh3gvtD799FM0atRI
fLz5c5m9t0rSxdF1RsI+asaA01a8hXLGGZIzYtIF5ZC4Z/X+X0y/PntGdUZF
iR3VGZ2LniOXSy1jly5d8O2339ou6Eukde7cOVSuXBk5C5TB+AWO+f5WnANn
0BktbDn1N+Zt/hR1W/YX7czLJwANQofInGqzr81eUZ1RURRHZe3h31GzSS/4
+6fFggUL7H6+dFyLOfR58+YhQ1AQajfrgxV7fjR9j5WkiTPojBYiZ8T8hI4D
5yIwY06kcnGXmUvUHyPO6nz3mFCdUVFiR3VG54F+GpXrdkLGjMFYvXq1w/nu
xLQ4X3DUqFHw8vJB217TsOX0X6bvs5I0cSadkTBmZI3woMmbkT1vKaRI6YK8
RSrKDKktJ/U+exLVGRVFcVRen7PfeM6XRL169fDee++ZHdpZZV2+fFl+nsw5
CovvpNl7rCRNnElnJJYZMeybLlW5KVxcPZA+U250GTQPaw5cN/367A3VGRUl
dlRndB4YZ2XNXRyNGzfGpUuXbBfsJfLas2cPihUrhlKVmmLO+g9N32claeJs
OqMFavdzN30sPlceXv7wNn7Gxu2GY8n2K6Zfmz2hOqOiKI4IZ4G16joBnp6+
mDx5snjSOMN68OABxo8fDy9vX7TuMVnzY4opOJvOaIG1jawT7tAvDAFB2ZHa
xR1lq7WUuTF8pph9ffaC6oyKEjuqMzoPjLM8ouJI1gEmxrp+/Tr2798vvon1
69dHkSJFZO5f586dsWHDBvz8889W/57Xrl1Du3btxIdnyJStpu+zkjRxVp2R
SG3jod8xYPwGZMtdXGob8xerLLkL9libfX32gOqMiqI4IvTDoOdagYIFsWvX
LqvHaFxmxIZczEMXLVZM9A/my8zeayXp4aw6I5HaxuO3MWnxCZSs0AipXTyQ
IXNedBuyCGsP/mb69dkDqjMqSuyozugc0E+jUp0OyJUrF7Zt25Yo8Rz9Hnv1
6gVfX1+kTp0ar732Gv73v//h1VdfRYoUKZAmTRqppaSnojV7tvm1pk6dCl8/
f7TpOQVbT98zfb+VpIcz64wWWA/CmuHqjbrD3dMXPv5BaNpxtMZOb6nOqCiK
YzJ61j7pdWnVqpXMT7H2Mis2tHzvli1bIjh7QYwK2236XitJD2fWGS1sO31f
5rq36z0NadNnhYurJyrUbIOw1e+JFmn29ZmJ6oyKEjuqMzoH05aflfqjunXr
Jor3ztdff42uXbvC1dVVYsc8efLIrJlJkyZhwIAByJcvn8SVyZIlQ7Nmzaw+
yzAiIgIFChRA1fpd9DmumEJS0BlJxNkHkqfuO3YNsuQsipSpXFCwRDWMmXMg
SWv8qjMqiuKI0FfNyzdQag3v3r1r1djM7NiQ82BGjhwJL28/dB26yPS9VpIe
SUFnJJbaxgkLj6FYuboyIyY4awH0GLFMvL7Nvj6zUJ1RUWJHdUbnYPDkLVLL
zpzy1atXrRrHcYWFhcHHxwevvPIK2rZtiwsXLuDmzZu4ffs2bt26hY8//hht
2rSRPDbjTdYf8testaid1qhRA0VK18T0lW+bvt9K0iOp6IwWWNs4c+1F0fbd
PHzhmzYYLbqMw/Ld35t+bWagOqOiKI4GPTEathkK/7QBWLZsGf7991+rxWVc
ZseGXEuWLEFQUEY07TAaG4/9afqeK0mLpKIzWth2+h6W7foOoT0mwS9dZri6
eSGkdnsjXvwAO84lvZnUqjMqSuyozugcdBk0H96+gZg4cSLu3btn1Rjum2++
kX6b//u//0PlypVx4sQJySFHX+yF2bdvH0qWLCm/r0WLFhJfWmv98MMPaN26
tdRXvT57n+n7rSQ9kprOSFjbuObQdfQeHY5M2QtJbWORUjWNWPqwxJpmX58t
UZ1RURRHg8/vKvU6S53hjh07rBaTcdlDbMi1c+dOFCpUCNWMc/6yN78zfc+V
pEVS0xkJaxs3nvgT4+YdQuFStZAqtbvEiL1GrcT6ozdMvz5bojqjosSO6ozO
QWj3ifDxTYt58+ZZNX7jOnPmDCpVqoSXXnoJgwYNwm+//Rbj72P/TPPmzeX3
lStXDsePH7faNdy5cwc9e/YUX5BBkzabvt9K0iMp6owWNp+6i5mr3hcPWLc0
PpLDDu0+SWYRmn1ttkJ1RkVRHI3F279C2SrNUbZsWRw7dsxqMRmXPcSGXKdO
nZKZM/w55238yPQ9V5IWSVFntEAvnaU7vkXLruPhG5AJbu4+ktegz7fZ12Yr
VGdUlNhRndE5aNJ+JNKmDZS+GGuv3bt3y+zAl19+WXpeYvPxttQcMpYsU6YM
jh49arVrYK8P41gfvwzoO2aN6futJD2Sss5IIs48wOr9v4oXT3DW/EiR2hXF
ytbFxEXHjV+7b/r1JTaqMyqK4mjM2XgZxcvXQ7Vq1WQOizWXPcSGXPTVqVmz
pnjGcS6F2XuuJC2Sss5IpLbx2J/i4V2oZHWpbWTvGc9qG47dMv36EhvVGRUl
dlRndA4atR2GdIGBCA8Pt2r8xnX9+nWJ45gzZrwY27LklBlLcrbgpUuXrHod
w4YNg49fIHq/Hm76fitJj6SuMwrnH2LzibuYEf4OQmq2gYu7t9QYt+01TWbe
m359iYjqjIqiOBqz115CkbJ1UKtWLbz99ttWjcnsJTa8ePEiateujSKla8m7
yew9V5IWSV1ntMDaxiXbr6BZxzHwTZtRfL2rN+yOOU5eY6w6o6LEjuqMzkHj
diOQLl0gVqxYYdX4jYu1hPTcefDgQaz5asab/fv3R6pUqZA8eXKZa0gvcGuu
IUOGiM7Yd8xq0/dbSXqozvgfrG1cdeBndBu2SOZPpUzlihIVGmDyklPi6Wj2
9SUGqjMqiuJozN7wIYqXqytz9M6fP2/VmMxeYkPOnqGOSj11+qp3Td9zJWmh
OuN/bH/rH6lhHDVzD/IXqyyxYbbcxdF//HqnndGkOqOixI7qjM6B1DOmC8TK
lSutGr/FZ33xxRfo0aMHPDw8xOe7fv36kuO29lxDrWdUzER1xieQ2sY7eGPF
eYmxU7t5IiAoO9r1DcOqfT+bf31WRnVGRVEcjcSsZ4xr2So2ZD1jnTp1tJ5R
MQXVGZ9m66m/sSjiK6mBod+Vu6cvajbphXmbPzX92qyN6oyKEjuqMzoHjdsN
t7nOeOvWLaxZs0bmCKZIkUI8ejhzkF7jzG9be7Ge0dsvEH1eX2X6fitJD9UZ
Y2bbmfsI33dNZt6nD84t3jylKjXG1GXnEHH2oenXZy1UZ1QUxdGYtf6S+OjS
v9Da9YyxLVvHhpZ6xqJlams9o2JzVGeMmcjaxpsYMX0n8hauKLWNOfKVwsBJ
m7Dp+G3Tr89aqM6oKLGjOqNjQJ/ddUf+wNxNH2Ps3IPoNXolWnadIN4XxcrW
gY9/ENJ4eGDRokVWj+GeXIwTOS+wUaNG8PLywiuvvAJvb2/pjfnoo49w//59
q39Pfs1+/fohefKUyFe0Epp2GI3uw5dg9Ky9Mtds7cHfnErTUOwP1Rljh8+n
TSfvYOqyMyhTuRlcXD0RmDEXOg2YI7NjzL4+a6A6o6Io9ogl1xO2+n2MmLET
3YYsktmAIbXbI2f+Mkjt5oWQkBDxSUzMZUZsyPXWW2+hSpUq8Dbez2WqtkBo
90kyg2LCwqNYuO0Lp+3XVOwD1RmfDWsbeR82bD3UiKED4eHljzot+mPB1s9N
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
FSV2krrOGN0/mzVw3YdGak/svyhQrArSZ8otPRVP1SImTyGeiPzv7Gthv0Wl
Oh0i55MYX0N8AddckGeOxImsRTwUcy2iNX4O5q5Zg+fr64fFixdbNY/MfHWz
Zs3EG7Fz5864cuWKzfLUXHfv3hUfcW/jHcRelhfdM9EhT98TLXejRYc8FKVD
7voh8swwZ7/UlDbr9Doq1e2AAsWrymeBfe3Jojwxkz/SIb3kHEG9OVvu4uKZ
VJt6ct/pGDRpk8zGWLrzOzkbmP15V54f1RmfH9YCL9v5PUJ7TpHzIPv/qO/P
Wn3BYXyxVGdUlKTF5lN3JYabuuyc1N60j9KeOGuEPjb+6bPC3SuyFpGaE/PK
llpE/tPLiB2z5CyC4uXqokajHgjtPhF9Xl+FsfMOYc7GjyXeiF6LuCGGWkRr
/ByMb6l7VqpUyaqzYMyODbk4Q7tq1aoSg09b/tYL7ZPokMa+c//pGSd56mg6
5NId30jfEn176KHesPUQlI2Pb4/xGWFNf6RvTygatRmGzoMXYMT0NzFz1ftY
ve8XRKhvj8OiOuPzw/MYn30DJm5Atjwl5FzFPkB6SPCcbPb1xQfVGRUldpxd
Z2Rt4KIn/LPrNO/7qFfiWf7Z0rPiHyTPvpIVG4nXS9te09B/3Dqpz1m45TOs
3B1Zi7iGtYiHY6hFPG+7MzR9Hzkvhn0rP/zwg9XiuEOHDqFUqVJwdXWVWHLz
5s3YunXrM+HMwV9++cUq3/+dd95B9erVZcbLpMUnEn0f6Vf8nw75p/y9WnRI
9ijN2/hR5MzvUSvRoss4VKnXWXreg7LkE92ZGjR1SH5+WL/AOgbRIY3PEr04
S1SoL/Ww/CwNGL9B6lqZv+P5wuz7RYkd1RlfDEttI733C5epLWey4GwFJXfA
e8zs64sL1RkVxXmg3x41pMj3+QHjfb5C5oNUa9ANRY3nU6bshaRn2VKLyJxi
8lT/+SIyXqQXC/v9qDE0CB2CjgPnylyDaSvOY/H2r8Vvhd6Law9H9aqc+FP6
Apl3saXfH5+7jHv9/PyxdOlSq2mBZseGXMyrZ8iQQfRfxmmJupdGPP+UDmnp
l9l/Dct2fouwNZEzv8W3p+1wlK/RGnno25M+WzTfnv90yOi+PbnEt6clGrQe
jM7GZ0nqWle9q749do7qjC8O6zDmbrgscwt4P/DZS69ZavtmX1tcqM6oKLHj
yDpjpH/2r9KXMGrmnsf9s0tWR1CWSP9s9xj9s1M85Z/NGcXR/bP5fLPUIrJn
ZcNz9qzYCvoWcq5M0aJFsX//fqvFcexZZhxHf++UKVM+6pF5FjVq1MDJkyet
8v3nz5+PwMBA1DPiyNUHEzmOjAc8HzDmY62D6JDG+YE979SbqTvP2/wJxi84
InULrbpNQLWG3VCkdC0EZysgmjY/f9QiZSZiNB3S2y+DnG2Kla0r71p6KrFP
n5o2tXJ+9sz+2ZMyqjNaB2r4jMVaGPeGb7pMcs6i9/6s9ZdMvzYLvKc5h5R5
DdYxsZeR9UDMQRU03i2dBszBwImbMHHhcczf+AnWH/7D7t4HipKUYS0MfVLo
a0Ltj7pNg9ZDRA+gNhgQlF169ZgbpA8f8x7/zQlJJTkFvo+pOVbjjOIu40WL
lNkgxnn4US3igf9qEak9SS3iGevVIlqF8w+NeCQyD921a1d8++23VonNzI4N
qVdS3/RLF4y+Y9aYv+fRdMgY/cOjfHt4XpHeqfYjjbNHW+QrUkn6rp/27fF4
3LcnXynx9azXcqD0dVt8e5j/3qq+PaahOqN14L3DszZrebLmKir3QMESVaW/
zF4+3/JeMZ791P/pi8A8OXsZI98XBaXvmzUo9G5lHTl90ezl2hXFDOxZZ7T4
Z09aehoDJ21Ch74zUbfFgHj6Z6cWXxzmGJ70z6YGRC0oLv9sW9YiWgNqXy27
jDNiZ1/xyfnzzz9fOI6jz86wYcPw2muv4aWXXoo3ZcqUwdGjR1/4+3/zzTcI
DQ1FugzZxXvH9DgyHkTqkPelbiG6Dsm6Br5zqF9MXBTp9dla5o73EG0xU/bC
cu5JHqWDiw5pnH3Yr0+tnBpXcNYColmy5oIaJmtY+XmmPye/l6P0oDoiqjNa
D97H/LyyLrhQqRryOc+co4ho8/SWsPX1UMPnvCd651JXYJ17pFdGZB0T3y2v
vppM+gP5T8a/zBHw3uTv8/XPKLNhW3efhGnLzsn50uw9VhRnhc+PdYdvSBw3
bt5heW6EGveevEvL1UXmnEWkFyXSN9tyD//ni8h7l/FjroLlpAea805Zr8yc
An1OFkZ8iZV7omoRo/tmn4qqRTzreLOHxcO7UmPkypUL27dvd/jYkGvHjh0o
WLCg/Fz0uzF7j+NDvHx76PU5YimadXxdNIwCxasgMDgevj3svQppFOkD3zcM
gyZtlp5/zkd0lB5UR0R1RuvCWp7Zay9Jfifys51R5qPyc2zra+F5bsmb34jH
LesV6bkbvQcyhXglpJBcy/9eeeXRDKnotcqZcxSW2hHmBXiP6+x6JSlhls4Y
k392i85jUbV+lyj/7AJx+meny0jf5YrSl/CYf/bKt5/tn336vtPe5+wPZ66+
XLly0p9ijXXz5k38+OOPCeLXX3/F33///cLfe+XKlcicObP4ZS6K+Mr0/bUG
PCOxHpafRX4m+dlkXxXPNOyP4WygyYtPSp9/m15TUZMzh8o3kJ5r+j1FaumP
65DUOli7y95t6ja8j9jTzbwavaA4l5L6jSPotPaK6ozWh+etJdu/kdkJMk/L
+BwzlmO9kC2+P++1tsY9Rg8Nfm++Y9zc3JE/fwE0adIEffv2xeTJk7FixQrs
2bNH6nD27duH8PBwmXFK39gWLVqgcOHCSJPGQ+5Jvq/oycb32dxNn+gcUkVJ
IJzjxpwcZ6EMe2O7EdvNlxiPs1I4M4WzU1g/Er0WUXyzozQYnu0YQ/JdSF8T
3os9Ry6TWJN106wrC9//RC3i8TsyH2TbmX+c8j3J3Dln19Hnul+/fvjpp58c
Ojb8448/0KdPH5mjzfpyfmbM3mNrEF/fnp6jVsjnukq9TtK/RZ943g+vJfvP
tyd1XL49EzbIHHSel/j9zP7ZHRXVGa0Pn1f83Pd+fZXUYDBPVNh4no8zzjO2
8BDguWz49Dclh8F7J1KDSI2MGTOKjxfrqEeNGoV58+Zhy5YtOHbsmORP6B0x
Z84cjBgxAp06dULlypURGJhe/izvR86Tokfr67P3R9aG2MFeK0piklg6I2u5
6FUybfnZx/yz6T1Cz2R6lUjPymP+2f/1rFj8s1nnVb1Rd7TqNtF43oTb3D/b
0WCs0LTDKHh4+mL06NESiznq+uKLL+QMz7qDvmNWJ5l5fTHrkL+LZk4dkj3U
k5edxqCJm6T+qnbzvuIfyhk03n6BSJ7Sch9F6pA8hzH+5LksQ6bcKFi8KirV
6SgzbjjrZsyc/cY99ZHcR86qv1sD1RkTB37eNxy/JX0mnLfE/DDr0PuNW5do
cdii7V+heecxMtuJ8R/nZ9WuXVs8Gj744APpx+Oz89atW7h9+zb++usv3L9/
Hw8ePJB/8t/v3Lkjv87fx7Pz5cuXxfusYcOG8A8IkK/L9xx7NVl3lVTfSYry
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
kya6b8+YOVG+PUYMmpTqqML3/4yqDbrA3zjLLly4UHqQHXUxDz158mSZld2g
9RD5rJi9v2Zhmb3H3uMYZ+/lKPxis/e2R5u9d1hn770oqjMqFqiJ0CfgjfC3
pa6D3qScA50qKq5krWPatGmlh6ZgwYIoU6YMSpUqhbx580qe288vsv/azc0N
KVOmhLdvoPQS9BixHPM2fiz3Kt+tZv+civI8JEhnjItoOiTPcY90yAORXuTM
w7EvkxoatZHG7UagQs22yFskRGr1qTsyzuR7kzokfeOoQ/K9ynpJxrulqzRH
/VaD0Invz6nbMG3l21ix96rkFczeS2vBd3/9VgONZ5OvzFKJ7ZzrKIv14/Pm
zUOGDEGRNY17nLemMXIO31eYtPgkBk7YEOscvphqEdm/wjgy+hy+Nr2mynz5
mObwMbdlj3P4FMURoDbB+5U1HOx/oV8xa4RSpXaRnLSHh4fklAMDA5EjRw7x
ryhbtqz8k//O/85f5+/j70+ZKrXMkK7VtA9Gzdwt7zt+fT2/KY5IQnXGuHjK
P/xYlA4Z1S/Del/WaQ2eslX0f/r2lKrcNNK3xz+jvB9j8u2hDvlo7kTtSN8e
5t34DubX3HTSufwhqRvR96RZs2bizeDo67333pN8ehYnr2mMPntv6LTtUkuR
oNl7Xv4xzN5bLjPmOWdxuc7esymqMypPwvuM7zaez+h3zGc1cwX0BucZkDVX
6YNziq+jt28AgrPmE68rvmfpg9Gub5jMveB7i+9G5gA0flQcHavqjPGAfZmR
MxHviEYiOmTUTES+J2evjZxxxutp2nG0ETe2f+Q5Rz8RyzuXeTzm75jXow7p
G5AJ2fOURMlKTeR+7dAvTLywpi1/S76u9KvZwX7HB/bLch5ptWrVcPbsWdsF
fIm4GA/TKzfSp3Gv6Xv8fJ/dx+fw9TQ+o807vY7K9TrJHD7G/vTIpidV6ifn
8BmfW2qL/Bw/OYdveFTdLn0Jos/h2+Cgc/gUxZHgfcV3EnUP3n/TV76NXiOW
o3H7kahctxOKlqmNbHmKwz9dJnh4+sI/IBjZchdDYeO/09+U+TK+r+ibQ08C
3rf8enq/Ko6MtXXGuIiPb49oNFMjfXvqhw5G2SotkLNAGfESSZXK9ZEOyRxe
asucGvpDZisofW3Vo+ZWcDYac3esaWZe1+y9ji+MmRnf+vr6Y/78+Q5dy2hZ
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
6+w/fj2CsxeEh3damZu95sB10/dPURRFUZTYUZ3R8aDWuGDr56jeqDvSePjI
HOo33ngDP/30k01jQ67vv/8eY8aMQaZMmcSPsX7rwVi0/Svx6+b8mmnL30LR
MnWRKrW7zDmct/lT0/dPUeKL6oyKoihxozqjY7Ll1N+Su65ct6PEk+nTp0ef
Pn1w+fJl/Pvvv4keQ37++ecYOnSoeEW6uqVB+RqheGPFeWw5+bgXI/99+PQd
0ivjlsYHzTqOxso9P5m+f4qiKIqixIzqjI5JxNmHWL3/F3QZsgAZMueGq6sr
qlSpgh07duD27duJHhveunULGzZsQLly5ZA6dWpkyl5Q/H7WHLqO7Wf/eXSd
9BwPW3sBZSo3QyoXN5St1lJiWrP3T1Hig+qMiqIocaM6o+PCvPCag7+i/7h1
yJ6npBHTuSBnzpwYNWqU6ICJoTd+8803mDx5MvLlyycxZOYchdFz5HLRDhk3
xnSd1ETHzjuEvIUrIpWrJ+q1HIilO74xff8URVEURXka1RkdF/aTbD5xB9NX
vi29yqwn9PHxQaNGjaT35e7du1aPDalh7ty5E7Vr14aXlxc8vfxQs0kv0RI3
n7qLHecePnWdrL+cv/ETVKzVzogNPVC8fD3JV5u9f4oSF6ozKoqixI3qjA7O
+YdSM7gw4ku06TUNgcE5Rf9jv0zXrl1x6NAh3Lx584Xixzt37kh/NOslc+fO
LV+f812adx6LuZs+NuLZuxLXPus62SczZelpFC5VE6lc3FG9YXfp7zF9/xRF
URRFeQzVGR0f5n7XHv4dI2bsQqHSNaX3hHpjtWrVsGjRIskbv0g+mn/2iy++
wJw5cxASEgJvb2/je3iiZMVGGDPnANYd+UPy4c+6Rv764u1fS6+3i7sXChSv
gokLj8WoSyqKvaA6o6IoStyozugccN4gZ8TM3fQRWnSbgMCMOZEyZSp4enoi
b968aNeuHZYuXYr3338/Tt2ReelLly7J/OjOnTujQIECkp9OmTIl0qbPLDMC
2d+y8dif0qMT32vcdvo+wsLfkxiUnjwVarbB7A0fmr53iqIoiqL8h+qMzsPW
U38jfN81DJ68BYVKVoOrq7v0U2fIkAHVq1eXOX4HDhzA1atXnzk35sGDB+K7
uHfvXrz++uuoVKkSAgMD5WtRwyxeri5GzNiJVQd+kdxyfK+P/dTLd/2Aeq0G
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
+/x1xofGjFXH7oM1e80H1p8HANhCZ3QbnRGQVm77Uf1HzFaZChcrtlQF3TZs
ulZu3Wt9LwCwgc7oNjojIO/8loenPaea9a5QocLR6nTDPZq75kO/nXH48BEK
D49Sm863aXrS29afBwDYQGd0G50ROCZx2z4NHrNM8ZVre38meg+aqGWbvrW+
FwAUNDqj2+iMwDHJ6Yc0bm666l12lcIjonTltf21fP07p+2Mm7a/oWZtrleh
rB/ftG1PTVn+qvXnAQAFjc7oNjoj8LvVO/Zr+PhU774wkdGx6t5vjBZt+ML6
XgBQkOiMbqMzAr9LST+sSUteVqMruqhQeJTadb5J6Xte99kZ3/roiGYnv6Ur
2vdWeES0Gja7RhMW7rH+PACgINEZ3UZnBE6WlH5AD07ZqOoJzRQeGaNrbrpP
89Z+ZH0vACgodEa30RmBk6XsPKynV72p5u17KaJwtJ56aorPzmjuN/33F49q
dtr7atvlDkVEFVXtS9vo0VnbtGZXpvXnAgAFgc7oNjojcKrkHQf12OwXVKfh
lSpUOErtr7tTs1Lfs74XABQEOqPb6IzAqVIzjmh2ynu6MuvPxbTpM07bGf/x
z1+UlnFU89d+4l3X0Zwjc3GtyzX6qfVZvw6tEUDoozO6jc4I5Cwl/ZCeWPSi
d76LOU+mVYebNW3Vm9b3AoD8Rmd0G50RyJlphKs2/U9vvvuF385ofnzarl+0
eP0X3v2qY4qVVqWL63nX5zHvMW0/FwDIT3RGt9EZAd+882RWvKambW7wrv99
eatumrTkX9b3AoD8RGd0G50R8O351zL12XeZueqMhmmNyzZ9o5sGPK7YkhVU
tmINDX54uXedHtvPBQDyC53RbXRG4PTMeTIzkt9Rq6v7etdrrHdZR42bm2F9
LwDIL3RGt9EZAd+2vq7T3m86e2f07MnUiud/0K33PK2SZSurVJaBWV97J277
2frzAYD8QGd0G50R8M+cJzPnmQ/V/rpBiixSXDXrXZH1tfdm7zNq27sBQF6j
M7qNzgj4dkad8Vertv6kAaPmq2zF6ipesrzXHVds/sH6cwKAvEZndBudEcid
tN1HtWDdp979p6NiSqhKzUYaOWmtd7yj7d0AIC/RGd1GZwR889cZX3//gFZt
/U7LNn97qk3fZr2X/ET975upuPhq3jV5zPvKmSnv5PzjASBIXdXtLv31gnD1
Gjje+i4oeN36jvbucdGj3xjruwCBbumz32hm0n/Uodvd3nGNpctXUf8Rc7Ro
wxfWdwPgn/ms4OlVb+jJpS/riQW79Pic7Ro7Y4t3z6eZKe9qycavrO8YCCYv
+7cateiiilUSdN+4JOv7oGANeXi54i+spWbte2ny8let7wPYtvqFfVqzKzNX
nXH8E0+pZFwlRcXE+mT64p/P/Yv+9Kc/6a9//Zv3nvJ0Px4Ags1fLyiksLAw
/a1QYeu7oOBd8Ldw77//BX+LsL4LEAwio4//uTlH55zzZ+/vTvNttvcC8LvI
qGK6ILywzj//Ap37l/P05z+fq3Oy/syar+lOEnbsf8N+++cw78eed/5fvZ8f
Ge3m137ma17zGpyb9XVwocLR1vdBwTreQMyfH/oHEKteA8f9di1Ff51x5rwV
atCkgy6pd4VfxUuUO+n/k0rGVc7VzwOAQHf877dSpUqpVq1acEzx4sX57w+c
gZo1a6po0aK/vTeMiorSRRddZH0vwFU1atRQmTJxuuCCC05qiNmb4rGuGHba
7ws7/s9hYYqOjnbuz3ZcXJzOO++8394f1K9fX5c2aq7aDey/b0XBfW1gOnOZ
8hdb3wew7c4HFh47pjFX503v16rnv9PS577xy5wPM3b6FtVt3D7rz9t5atzy
ek2YvztXPxcAAtk1N92rYsVLeF8j/+Uvf4Fjzjnn2PEdf/7zn63vAgSb439+
DPPP5557rvWdABeZP3thJzTDY/8cduoxiyd+26/HL554LOMp3fG3X+vYn3Hb
z7OgmPcEprEef3/QrVs3Jf5jt5K3fWv9fSvy3z2PrFT8RXXUrN1NmrzsFev7
ALYlbt/3273/zuY+MDlJST+sSUteVqMrunjXsmrW/iY9veI169ehBICzYe4D
E1uylAoXLnzq+UQAAACBLvuxi7/KqTf+KfuxjL9+34nHOP72835rkTn8HIfc
cMMNWv/CW9r4Su6/dkbw4j4wgG953RmNlJ2H9fSqN722b65b0KjFNZq46CXr
zxUAzhSdEQAABL0Tjj08frxi2Enfn703+vp1wk7+eaAzOobOCPiWH53RSM04
opkp76lN59sUHhmjhEZt9djsF367/wwABBM6IwAACFbZm+BJxzCe9scfP2c6
7LdvD8upQYbl/DguoTO6hc4I+JZfndFIzcjUvGc+Usfug717DFZPaKaHnn7W
+3bbzxsA/gg6IwAACG6nP1bxdI3Q9/dlb5U5XL/REXRGt9AZAd/yszMaabuP
auG6z9W1z0jFFCvl/Vm8/4k1St152PpzB4DcOl1nvOmmm5SRkaF3330XIWrU
qFGKjY3ViBEjrO8ChIqtW7eqS5cuOv/889WiRQulpqZa3wkIJfPmzcvW/rKd
63xKB8zpnjC+e2Nujl0097Xes2eP9dcir/Xt25fO6Dg6I+BbfndGw9xzZumm
r9Wz/yPe/d/LX3iJd3+mpPQD1p8/AOTG6TrjoEGD9Pnnn+uXX35BiHrqqadU
qlQpPfnkk9Z3AULFkSNH9Pbbb+vmm29WkSJFdPXVV3uf2WRmZlrfDQgFXbt2
9dEEf++O/q/HGJbjedK5uefL8Z/30EMPWX8t8tqwYcN+u9c0ndFNdEbAt4Lo
jIZpjcu3fK9bBk9SibhKKlOuiu58YIF372vbrwEA+HO6znjXXXfpiy++8P0X
KRP0Yzpj6dKlvc7IMEzezdGjR/XBBx9owIABKlq0qFq1auUd52i+jmcY5szn
8OHDx96zhOX2/OXfm9mfz/2zSpQoofj4eFWpUkW1atVSQkKCKsZXVGRk5Kk/
N+w03THr++Li4rw/66E09957L53RcXRGwLeC6ozHrdz2o/qPmKO4CtUUW6qC
+g2dppVb9lp/HQDgdOiMbg+dkWHyb8zxi5988ol3fJBpG5dddpnWr1/vfTvD
MGc2//rXv3J9vGG9evU0c+ZM/fOf/9Snn37qHWt8ujHnDQ8YMFB/+9vfTrpf
zOl65vbt2wvomRfM0BlBZwR8K+jOaCRu26fBDy9X/EW1vWs29rpzvJY+9431
1wIAfKEzuj10RobJ3zHHL3755Zd68MEHVaZMGe/YqeTkZO+YLIZh/visWrXq
1/tEZ7ueYtgJXTDrf8uVL68DBw6c0WNs2LBB55xzTg7HMB67DuSJjzdy5Mg8
foZ2h84IOiPgm43OeNz0pLfVtE0P/eUv56vRFV00Zdmr1l8PAMgJndHtoTMy
TMGM6Y3r1q1TgwYNFBER4d2D6auvvrK9FsME3UyfPt3nNRVPvFajuZfd2Yy5
l1PYKccznnoOdbNmzfLomQXG0BlBZwR8s9kZU3Ye1tMrXlPTNjcoPCJKl7fq
pklL/mX9NQGA7OiMbg+dkWEKbg4ePKi1a9eqcePGKlasmB544AF99tlnttdi
mKCayZMn/94TT3M+8+DBg8/qcdasWXPyrx/2e8c88fHN9VdDaeiMoDMCvtns
jEZqxhHNSH5Hra7uq/DIGNW7rKPGzc2w/roAwInojG4PnZFhCnYOHTqkzZs3
q2XLloqOjtbQoUP1v//9z/ZaDBM0M378eJ/3efm9BYZ5vexsZu/evSf0ttPd
uzpM3377bR49O/tDZwSdEfDNdmc0UjMyNeeZD9X+ukGKLFJcNetdoYenb/bu
UW379QEAg87o9tAZGabgx1ybMSMjQ1dddZWioqLUv39/vfPOO7bXYpigmEcf
fTSH86ZP/ee8uG6iuZ/0iQ3T17GTL7/8ch48s8AYOiPojIBvgdAZjbTdR7Vg
3ae65qb7FBVTQlVqNtKoSWu94x1tv0YAQGd0e+iMDGNnzH1vzX1zu3bt6rVG
cy25119/3fZaDBPw89BDD53Q/cJO/edf7zdt7r10ttOkSZNf7119Ync79THX
rV939k8sQIbOCDoj4FugdEbDHL+4ZONX6t5vjIrGllX8RXV07+OrlZx+yPrr
BMBtdEa3h87IMPbGtMY333zTa4xFihTRtddeq5deesn2WgwT0GOua+rzeEav
jx3z8MMPn/VjXX/99TmeJ53925YuXZoHzywwhs4IOiPgWyB1RsO0xmWbv1Pv
QRMVW7qi4ipcrLseXKzVL+y3/loBcBed0e2hMzKM3Tl69Kjee+893XbbbYqJ
iVHbtm21fft27/7UDMOcOmPGjMmx+2W/R4vpkWc7ffv2zfExsj/+rFmz8uCZ
BcbQGUFnBHwLtM7o2ZOplVv36vZ7Z6hMuSoqUaaibh8+S6u2/mT99QLgJjqj
20NnZBj7k5mZqY8//lhDhgxR8eLF1bRpUz377LPetzMMc/KMGzfu1GMKw049
xvC+++4768fq3bu3j2synvx4U6dNy4NnFhhDZwSdEfAtIDvjrxK3/ay7Ry9W
+QsvUdHYOPW5e5J3rKPt1wyAe+iMbg+dkWECY0xTNH/fmntXlCpVSg0aNNCa
NWu8c6sZhvl9Jk+a5PvYwrDfj2kcPHjwWT9Wt27djv2aYSf/2tkffxqdESGE
zgj4Fsid0Vi9Y7/ufTxZF15cX1Exsbrh9ke0+Nkvrb9uANxCZ3R76IwMEzhj
zpX+5ptvvPvplitXTjVr1tTKlSt18OBB26sxTMDM1KlTT7kuY07NccCAgWf9
WJ07dz71GpA5XBdy3rx5efDMAmPojKAzAr4Femc0krYfyPpzvE7VajdRRFQx
del9v+av/cT6awfAHXRGt4fOyDCBNaY1/vDDD96fzQsvvFAXXXSR5s+fr337
9tlejWECYhYsWHDCecs53Af6tzbW86wfq127dif9+mGnPO6x/01MTMyDZxYY
Q2cEnRHwLRg6o5G846AemblVtS9trfCIaHXodrdmp71vfS8AbqAzuj10RoYJ
zPnpp580Z84cXXzxxSpfvrx3XubevXttr8Uw1ueZZ575tfmder70ia688sqz
fqx6dev5vD7jiY+/ZcuWPHhmgTF0RtAZAd+CpTMayemHNGHBbjVoerUKRUSp
dadbNW31W9b3AhD66IxuD52RYQJ39u/fr+XLl6t27dren9MJEybo22+/tb0W
w1id9PT00/bF4+rXr39Wj2OOLY6MjPQeI+y3+01nv//Msf9966238ujZ2R86
I+iMgG/B1BmNlJ2HNWX5q2rSurvXGpu26aHJy/5tfS8AoY3O6PbQGRkmsOfA
gQPe/WAaNmzo3Yv6oYce4u9lxukxTe/EvpjzcY1hiq8Qf1aP89577+V4TnZY
tr55zjnneH9OQ2XojKAzAr4FW2c0Unce0YzVb+uKDjerUOFo7/jGCfN3W98L
QOiiM7o9dEaGCfwx94HZtGmTmjdvrujoaK8DfPTRR7bXYhgr89VXX/nufyf8
+wUXXOAdk3ims2jRIp/3fTnx8c11VENp6IygMwK+BWNnNFIzjmj2mvfVrusA
794wteq30iMznlfarsDbFUDwozO6PXRGhgmOOXTokHbs2KG2bdsqKipKAwcO
9I63YhjXJjMzU+ef/9cc7/+c/Zzmjz/++Iwf5/d7TYed9l7T1113XR4+O/tD
ZwSdEfAtWDujkZZx1LvvdOcbhykqJlZVL7lMoyevU2pGpvXdAIQWOqPbQ2dk
mOCZw4cP65///KeuvfZarzX27t1bb7zxhu21GKbAp0qVqqe9XuJx27ZtO6Nf
/5NPPtF5552X43GTJ7fGME2ZMiWPn53doTOCzgj4Fsyd0TDHLy7e8KW69R2t
osVLq2LVurpvXIpS0g9Z3w1A6KAzuj10RoYJrjly5IjXFnv27Om1RnMs1csv
v2x7LYYp0OnQ4aqTu2JYTudQ/0lz5849o19/0J2DFObrGpAnNsesHxNqrZ/O
CDoj4Fuwd0bDtMZlm75Vr4HjFVsqXmUrVtfgMcuUtP2A9d0AhAY6o9tDZ2SY
4JujR4/qnXfe0a233updr7F9+/bePXgZxpUx70/+FJbzMYbH+59pg8OGDfvD
v/aLL76oc88995RjGMOy39s66/Hj48/uXjOBOHRG0BkB30KhM3r2ZGrllr3q
N3SqSpe9SCXjKumO++do1daf7O8GIOjRGd0eOiPDBOeYa9T973//8/6eLlas
mFq0aKHnnnvO+3aGCfWZOnXqqR0wh3tBt27d+g/9ul9//bXXDn22xWzHNY4a
NSqfnqG9oTOCzgj4FjKd8VeJW3/WoFELVK5iDRUrEae+QyZr+Zbvre8FILjR
Gd0eOiPDBO+YpvjZZ59pxIgRKlmypBo2bKi1a9d6xzsyTCjP5s2bs3XAnI9t
jC0Rm+tf09zHun79+iedJ529M/52/nTWt5/3l/PO6j4zgTp0RtAZAd9CrTMa
q1/Yr6GPJqpS1bqKiimhG+94TEs2fm19LwDBi87o9tAZGSa455dffvGOwRo7
dqzKli2r2rVrKzEx0bs/NcOE6pjf86ec0xyW7d7QvzbCzz/7zO+v9/bbb6vi
r8cxhvm4v3T2+8706dOnAJ5pwQ+dEXRGwLdQ7IyGuTbjqCfXquoljRUZVUzX
3TxKC9Z9an0vAMGJzuj20BkZJvjHtMbvv//e+3NcsWJFVa1aVYsWLdL+/ftt
r8Yw+TZlypT5tQeees/pE79948aNp/111qxZoyJFipxyf5eTf62Tj2e84IK/
6sMPPyygZ1qwQ2cEnRHwLVQ7o5G846DGTt+iWvVbqlDhaHXsMURz0j6wvheA
4ENndHvojAwTOvPTTz9p1qxZXmc015ibOXOm920ME4pz1VVXZbvfdE7HH/5J
kyc/lePPf/edd9WubbsTemL2+1WHnXCM5MndbcyYhwv42Rbc0BlBZwR8C+XO
aCSnH9L4ebtU9/IOCo+I0pVZfw9MT/qP9b0ABBc6o9tDZ2SY0Jp9+/Zp6dKl
qlWrlne818SJE/Xdd9/ZXoth8nzMdUlP6othJ18/8fi/33bbbSf9vC+//FJD
hgzR+eef7+Ne1b7PmzYSEhJC+roEdEbQGQHfQr0zGik7D2vS0n+pccuuKhQR
paZtb9SUZa9Z3wtA8KAzuj10RoYJvTlw4IBSUlLUoEEDxcbGetduNG2FYUJp
lixZcvK9WbIfi/jrvzdr1sz78eaajqahhYeH/3bvmLBfu+Jv96vO6bjIsN9/
3ejoaL333nuWn3n+Dp0RdEbANxc6o5G684imJv6fmrfvpfCIaDVsfo0mLnzR
+l4AggOd0e2hMzJMaM7Bgwe1YcMGNW3aVDExMRo+fHhI3huXcXdefPHFE96z
hPk8f/pvF/xND4wapYiICJ/nVud87OLJre28887X888/b/tp5/vQGUFnBHxz
pTMaqRlHNCv1v97fBYUji6pOwyv12KxtWrMr0/puAAIbndHtoTMyTOiOObfz
hRdeUJs2bRQVFaVBgwbpv//9r+21GCZP5scff9Q555xz8rGJ2e/j4qND5tQW
c7rfy3F/+ctflJSUZPspF8jQGUFnBHxzqTMaqRmZmrf2I13dY4gio2NVrXYT
PThlo/fttncDELjojG4PnZFhQnsOHz6sPXv2qFOnToqMjNQtt9yi//u//7O9
FsPkyZj//wrLqSd693DxfYzjb20yh+/Lfs+X4wYMGOBdjyDUr3dKZwSdEfDN
tc5opO0+qkUbPtd1N49STLFSuvDi+hoxIc27jqPt3QAEJjqj20NnZJjQnyNH
jui1115Tjx49vOMau3fvrldeecX2Wgxz1nPZZZf5vF9Ljuc/h2VvijkcC5nt
uMjs3fHcc89Vly5dvHOof/nlF9svQZ4PnRF0RsA3FzujkbbrFy197hvdeMdj
Kl6yvMpVqql7xq5QUvoB67sBCDx0RreHzsgwbszRo0f1n//8xzue0dzLomPH
jsrIyLC9VlCPua/Izp07NX/+fA0fPkK33nqrrr/+erVr187rXzVr1lT16tVP
UaNGjZP+OSGhri5teKmaNGmili1bqlOnzurfv793/565c+fqH//4h9544w3v
2FTm5OnZs2fO11zMfpxiWPa26MeJ9672jo3M+ce1bt1aH374oe2XIU+Hzgg6
I+Cbq53RMK1xxeYf1HfIFJWMq6TSZS/SgJHzlLjtZ+u7AQgsdEa3h87IMO6M
aY2miQwcOFBFixb1mlaoHpOVH/PBBx9o1qxZuq5rV8WVLnNquwo7oUtlO3f3
WPc68TzesGw/1s9xeFnMfZKvvLKtnnjiCe941MzMTNsvifW5//77C+z1P/Zz
jx37eOLjmesRrFmzxvZLkWdDZwSdEfDN5c543KqtP2nAyLkqG19NsSXLq9/Q
qVrx/A/W9wIQOOiMbg+dkWHcGtOmPv30U68llChRQo0bN9a6deu8BsmcOua+
OY8//rhq1Kxx2i51/Nza091L5NTzdXP4dx/n9Z7a0P6kivHxmjZtmn7++Wfb
L5O1mTNnjrXX/0TnhJ3j/bcIhaEzgs4I+EZnPCZx+z4NGbtC8RfV8a7Z2Gvg
eO+8att7AQgMdEa3h87IMO6NOX7xq6++0kMPPaQyZcooISFBycnJnJf765jX
x7RXc7znSeffnnAura8u5a9n/emkfhN2QsPK3sl+/fZcPH6xYsX08MMP69vv
vrX90hX4PPvss9Zf/xN//RUrVth+Sc566IygMwK+0Rl/l7T9gO5/Yo2q1Gyk
yCLF1a3vaC1c97n1vQDYR2d0e+iMDOPmmJZm7ptrzsGNj49XtWrVtHTpUh04
cMD2atZm//79mjV7tqpWrarfz7XNdhxbjl0xLIcWlUOn8nGMna/j7v7o4//t
b3/TA6Mf8J6HK2OuWxkor78RHhHuHQMbzENnBJ0R8I3OeLKkHQc1Zuom1ajb
QhGFY9S55zD+3gBAZ3R86IwM4+6Y1vjjjz9q+vTpqlKliipVqqTZs2frp59+
sr1agc6+ffu8c6PNcYHHO1KO7ek0xy76Ol/X53GPp/xaJ3ess3l8cz61uXeM
C2N+/wba63/llVfaflnOauiMoDMCvtEZT5WcfkiPzd2huo3bq1BElNp2GaCZ
Ke9a3wuAPXRGt4fOyDCM6WyLFi3y7o9ctmxZTZ48Wd9/f5o30SEy5lqV8+bN
U1xc3CnHxJl//+2afyfdNyR7k8rp3iInHguX/X4jp15HMPsxcXn1+J06ddLH
H39i+2XO94mKigq419+czx2sQ2cEnRHwjc6Ys5T0w5q4+J9q1LyLLgiPUour
emvqyjes7wXADjqj20NnZBjGjDlfOikpSfXq1fPuD/Poo49613AM1Vm7dq2q
V6/u8/i00zv1XiC/Hzf36zX/Tnuerf/j4/Lq8WNiYrRhwwbbL3e+To0aNfLs
9T/nnHO8e7Gb65aGhxc649e/ebPmtl+WMx46I+iMgG90Rt9Sdh722mLTtjd6
xzU2uqKL1x5t7wWg4NEZ3R46I8Mwx+fgwYPe/U8uv/xyr7WMHDnSuzd1KI25
dl779u1zcWxatn7k8zi4U78v+8/JVTPMx8f/85//rFGjRoXsPcXbtm2b69f/
6quv1k033aThw4frqSlPefc/2rVrl959913veqXmGNcTx9zLOyMjw3s/FFui
RK5f/7BzwvTee+9ZekXObuiMoDMCvtEZTy8144hmpLyr1p36KTwyRnUbt9Pj
c3ZY3wtAwaIzuj10RoZhTpxDhw7p+eefV6tWrVSkSBENHjxYH3zwge21znpM
QzX3ZL7ggguOtaAcrsMXlr0dnfZ4w2wNK+wPNEVLj3/FFS315Zdf2v5PkefT
t2/fXD3/s/3/OXMtgWbNmuX69Z84cWIePcOCHToj6IyAb3RG/1IzMr2/Ozp0
u9u7D3WNhObevWLSdh+1vhuAgkFndHvojAzDZJ/Dhw97x3h17NjRu/Zdv379
9Pbbb9te64znueee04UXXnjCvYhP7ESn71Nhx48vPOHexScetxYREaFGjRp5
r9GUKVO0cuVKrV+/Xjt27NCrr76q119/3fPaa6/99s/mHsmvv/6G97+vZf37
Sy+9pN27d+uFF17wdl2xYoV3jcxhw4Z5fadWrVo699xzc3z8U3b2cx+TCytV
ColufOI89NBDuXr+ppmf7ezdu1dxWf+fmZvX3xw3G4xDZwSdEfCNzpg7piku
XP+ZuvQeoeiiJVW5egPdP/EZpe48bH03APmPzuj20BkZhslpjhw5on//+9+6
/vrrvdZoOoPpZsE0X3/9tXre2FMnndd6Yof6tR2Gndgaw3wfY2j+2Vy/r0GD
Bho/frzXXs09uwtiTN9KTEz07mV8YgM6bXP87ZjIk5+/+Tv/3XfeKZC9C2Jm
z5mTq+ffo0ePPHk804Bz8/oXLVosTx6voIfOCDoj4BudMffSdv2iJZu+1g23
j1WxEuUUX7mWhj66Skk7DlrfDUD+ojO6PXRGhmF8jbme31tvvaU+ffp451B3
7txZe/bssb1WrsYcV1isWHGdeI5y7q6XmLNKlSp5femTT+zfv/mVV17xmpl3
jGNO90HOfkxmDs/f3Ff8448/tv1U8mTMPX1y8/xbtWqdJ49nrlma8/Gwpz5+
ML7GdEbQGQHf6Ix/jGmNy7d8rz53T1KJMpVUunwV3Tl6oRK377O+G4D8Q2d0
e+iMDMOcbkxrfP/993XHHXd494Zp06aNtm3bVmDH8f3R+fzzz70e6vdcaB/n
u/5+POOxztLk8iZKS0s75f4ggTBvvvmmmjdvfvL+uXD8+Zv7NJvjJIN9zH1a
cvP869Spk2ePWb58hZN/H/l4fHOt02AbOiPojIBvdMYzs3Lbj+o/YrbKVLhY
saXjdfu9M7Ry64/W9wKQP+iMbg+dkWEYf2MamzmOb+jQoYqNjfXuR71hw4aA
am+mey5atEjR0dEntZ/s50SfdNxZWA797ddva926tXfNxEAf87yXLl2qEiVK
5NhO/T3/a6+9NmCbcW7nnXfeybktZnv+5cqXy7PHvOqqq/z33azvW7x4cZ49
ZkENnRF0RsA3OuOZS9y2T4PHLFN85doqWry0+gyaqGWbvrW+F4C8R2d0e+iM
DMPkZkyLMvcqHj16tPd3Rt26dZWamurdM8b2vPOfd3TFFVf4bYlhOZzXeuKx
i0ZCQoJ3L5Zgm++++867b8+ZPH9z/5pgnm+//TZXLTm8UHiePeYdA+7I+fjY
bI//9NSpefaYBTV0RtAZAd/ojGdn9f+zdx7QUZVrGzUqKiQhIT0QkpCE3nvv
SJEiglSlNwHhSruAIL3jBaX33kuC9CYlVEGKdEWkCfxIb6H7/LwfRlLmZMIw
yZmZ8+y19sKEZOabIStz3POVHVHoMTxcnQvj5uGLBq37Y9a6/9N9XJRS68rO
aGzYGQkhiUVaozSdYcOGITg4WK27nTdvHh49eqTLeOR++/Xrj5QpU5pshrHX
RzslOPfMP62/eiz2PLdPxi7n07zctzHxj/+DDz5Q+3DaK/K4303xbqL+/aOi
oqxynz169IjdMzV+/oYOHWqV+0tO2BkpOyOl2rIzvrlLdz5E3+/XI0f+MnBx
80Stxt0xbdUF3cdFKbWe7IzGhp2REPI6SNORPf3GjBmDTJkyIWPGjJg6dSru
37+frOP44YcfEBoaqr1mVWtddJw/U6RIoV7rHGGfwmi2bt0KV1fXRD3+6L+T
tfD23Fh9fHwS9e9/4cIFq9zfwIEDNc64jn3/vXv3tsr9JSfsjJSdkVJt2Rmt
47IdjzBk8nbkK1oZzqk9ULVuB0wK/133cVFKrSM7o7FhZySEWIJ0xenTpyNH
jhwICgpSa29v376d5PcrZ378e/aJqbXACcxZ/LcL/dNQihUrps5udkQiIyNf
tsYEHn/0514+h05YsGCB3sO2mOzZsyfq3//gwYNWub9Ro0Yl6uevU6dOVrm/
5ISdkbIzUqotO6P1XL7zMUbO2oeiZWrB2cUdH1ZvjnGLjus+Lkrpm8vOaGzY
GQkhliJrUBctWqT2NPT391frqa9fv54k9yV9sUqVKvHWqsY8J1przayTU+yP
3d3dMXnyZJs6xyYpkHmNqVKlivf443WxfwwICEj2eanWonSZ0on699+4caNV
7k9+fhLz89eqVSur3F9yws5I2Rkp1Zad0bou3/UEYxYcQelKn8HF1R0lP6yP
0bMP6j4uSumbyc5obNgZCSFvguyRuHLlShQvXhze3t745ptvcPnyZavctjSv
adOmoUiRIv/2otiNLP65JjH72avW9OrrPvnkE6uNzx6Q847fijPn7tUcxvjz
/exxna8g52Yn5t9f9uC0BjKXNzE/f82bN7fK/SUn7IyUnZFSbdkZrW/47qcY
v+xXVPi4pdqvsWCJGhg2dbfu46KUWi47o7FhZySEvCmPHz/G5s2bUaFCBXh4
eKBr1644f/68Rbcl+yQumD9fdSNnZ+f4bTGWpvqZ6bWz3l5eWLJkiZUfuX0g
jcjkPEYTz5ecqXPu3Dm9h/zafPHFFwn++0cr5+RYA9UZE/Hzx85I7VF2Rkq1
ZWdMGsN3P8eUH86hat2OcEvjg1wFy2PA+M2I2MPnklJ7lJ3R2LAzEkKswZMn
T7Br1y5Uq1ZNrUtu27YtfvvtN7PfJ2uXDxw4oM7lLVuuLN57771Y607jdsZX
ewzG/XvtuWUNGjTAtWvXkuFZsE2k3YaEhJicwxi/NzqhdZvWeg/5tRk0aFAC
PTr6MTrhyy+/tMr9veyM5n/+WrRoYZX7S07YGSk7I6XasjMmnRF7n2HGmkvq
/Gl3Tz9kyVUMvUetUvMd9R4bpfT1ZGc0NuyMhBBr8fTpU3XORp06dVRrbNy4
MY4ePRrv606dOoUJEyaoOYuenp6xeld0D9LaT9BkK4vuPf90sujvlfNpVq1a
pcMzYXvI2va4z7Gp3ii+l+I9nDlzRu8hvxYzZ86M9+8fb17ji48//vhjq9zf
tGnTzf78ycfNmnE+I7U/2Rkp1ZadMWmV+Ytz1v+FBq37w8s3ECGZ8+G/Q5dg
2c7Huo+NUpp42RmNDTsjIcSaSGs8fvy4aoxp0qRRLXH//v3//v3hw4dfNaCY
XSbOORoxz9eIdaaHqXl4cZpZihQp0KVzZ9y7d0/HZ8L2qFix4qvnyszz37Rp
U72H+1r8+OOPsX52Yv1cxPhZyZcvn1Xu79/5jKbmMsa4f66bpvYoOyOl2rIz
Jr3SGudtvommHb+Fb7pQpM+QDf/pOxtLtkfpPjZKaeJkZzQ27IyEEGvz7Nkz
/P7772jTpo2aryjnREdGRuLvv/9W66Q9vbxMrt91inder1OMFhZ3HmPshhT9
p5xHIy2TxOfEiRP/rEs3vX465nMsrTYx695tBRmr6fmvsX9WfHx8rHJ/06fP
MPnzF1d2RmqPsjNSqi07YzL503Ms3HoHX/x3AgKCssAvIBRf9JiERVvv6T82
SqlZ2RmNDTsjISQpkJ544cIFdOrUSbWd0qVLY8OGDerzsq46wb30nLTXTZvq
Y2qNdGAg5s+fr1om0Ub2J0zonJSYz3+HDh30Hm6iiYqKUm0s1nzXOHNh5XG9
/fbb6mvflOj5jLGeS6e34t1/C3ZGaoeyM1KqLTtj8rp423181Wc2gjPmhpdv
ejT7apSa66j3uCilCcvOaGzYGQkhSYU0RXkN6dWrF9KmTYvChQtjxYoVmDBh
/L9zEp3+6T/Rc89Mni8da410bL29vdXvL2u0IyPw559/qjOlE/P8u7m54f79
+3oPOdHIz4LmWuYYWmOe5r+d0cTPZcz753xGao+yM1KqLTtj8rtkRxT+O3QZ
MmYrBHdPX3z2xSDM3nBV93FRSrVlZzQ27IyEkKRE5hdev34dgwcPVuey5MqV
C6NHjzbRZUypsVb6hX5+fhg+fDj3YLSAzp07J/r5nzx5st7DTTSy96LWXM2Y
j3HLli1vfF8zZsww/bMZ5/7ZGak9ys5IqbbsjPq4NPLhi99Na5A9bym4unvj
06ZfY/qqP3UfF6XUtOyMxoadkRCS1EhrvH37tuqLYWFhyJw5Mzw9PBNsQVrt
q0D+/GouGecvWs6VK1fg4uycqOc/d+7ceg830chZ0nHnwJrqgHI29Zsybdq0
OO07zlr/f+6/RYsWb/7Akhl2RsrOSKm27Iz6uWzHIwyauBV5i1SEi6sHqtf/
CpMj/tB9XJTS+LIzGht2RkJIciFzD6dMmYJs2bLBxcXlZZsxMf8s7pkvwcHB
qn3wfBfr0a5du0Q//wcOHNB7uIlC7T0Zo/tFrweP2xwHDhz4xvc1duxYjSYe
+/5lTPYGOyNlZ6RUW3ZGfV228zFGzNiLwqVqwNnFHRVrtsa4JSd1HxelNLbs
jMaGnZEQkpzIPEQ5r0XWUMfcyy7u/MVChQqhf//+qnHxbBfrc/To0QSf/5jz
8vr27av3cBPFsGHDNNd/x3w80litcl9OpuZNxrZnz55WeGTJCzsjZWekVFt2
Rv1dvusJRs87jBIV68HZ1R2lKzVUH+s9LkrpK9kZjQ07IyEkuXn48GG8/e0C
0geoveykQV69elXvIRqC0qVKaTeyGGcn58+fX++hJopJkya9mmMYt//F+Lhu
3bpvfF9ytlFCfTH6/gcNGmSFR5a8sDNSdkZKtWVntA3Ddz1V8xjLV28O59Qe
KFz6Y4yYvlf3cVFKX8rOaGzYGQkhevDo0SPUqlVL7dUo5xpL27hw4YLewzIU
CxcuRELnMr/a09AJly9f1nu4ZlmwYIHJtcuvut/L//6w4odvfF9fvbg+itku
nWK1zFf3L6+x9gY7I2VnpFRbdkbbMXz3U0xe8Qc+qtNenQ2Tp3BFDJq4BRF7
+PxTqrfsjMaGnZEQohePHz/Gjh07UKVKFbi7u6u97H7//Xe9h2UYZL/M9997
L/Yeg3HmAUavq548xfbPnV6zZk2izhIqXrz4G99XtWrV4jxPTvHuU/5bzoux
N9gZKTsjpdqyM9qWEbufqXOnP2nUDe6evsiauwT6jF6D8N3PdR8bpUaWndHY
sDMSQvTkyZMn+Pnnn1G7dm3VGps1a4bjx4/rPSzDUKlS5X/aYtxO5hRr/0Fr
rDVOaqRZx1u/HG89uBMKFiz4RvcjP7Pys2qqy8Z1w4YNVnp0yQc7I2VnpFRb
dkbbU+Yvzl53FfVb9oGXTzqEZi2A7sOWY/nOx7qPjVKjys5obNgZCSF68/Tp
Uxw7dgyff/656jfStOzljGN7Z8yYsZrz/mLucShnfts6+/bti7GvpJPJc1rk
7woUKPBG9yNzFE2uL4+1r+XL+//zzz+t9OiSD3ZGys5IqbbsjLaptMZ5G2+g
0ZfD4Js2AwJDc6BT/3lYGvlQ97FRakTZGY0NOyMhxBZ49uwZfvvtN7Rq1Qoe
Hh5qXequXbv0HpbDc/r06Th7MWqvObb1PRr37dtvcu1y3HmHb9IZpWXKfqIJ
zZuM/m97aLOmYGek7IyUasvOaMP+9BwLfryD1l3HIl1gZvinD0O7r6dg0dZ7
+o+NUoPJzmhs2BkJIbbC8+fPcf78efXa4+3tjXLlymHz5s3q8yTp8PX1jTcn
Tz7+d8/Bfz5esWKF3kNNkP37fzYxF9Mp3p+WdMYTJ06gbdu2eP/99+M0WRP/
/c/9t2vXLgkeZdLDzkjZGSnVlp3R9l289T469p6BoNCc8PZLj5adR2P+j7d0
HxelRpKd0diwMxJCbAlpijJvrmfPnvD390fRokWxatUqNd+RJA1xzzTRUv5N
bJn9+/f/c760E+LOz4xpQp1R1vDLWuc9e/ao86tbt26NwMBA7XXS8eZNvrp/
2S/SHmFnpOyMlGrLzmgfLtkeha6DFyMsawG4e/qhUbshmLP+mu7jotQosjMa
G3ZGQoit8ffff+PatWsYOHCgajx58+bF4sWL1fnUxPoMGjTIxNy8uOuBnVCp
cmW9h5og+2V/xjhj1mqm8jOVK3cu5MiRA5kyZUJQUBD8/Pzx7rvvaj5+rfXk
cf9O/syZM6f6ObZH2BkpOyOl2rIz2o+yN2Pv/61C1tzF4ebujbrNe2PGmku6
j4tSI8jOaGzYGQkhtog0mlu3bqnfTaGhociaNStmzZqFqKgovYfmcMiZyPEb
mlO8uYBp06bVe6gJIueWJzwnM/a6Zs29HDUef4JzGuN0ufDwcL2fDothZ6Ts
jJRqy85oXy7b8QgDxm9G7oIV4JzaAzUadsaUiLO6j4tSR5ed0diwMxJCbJl7
9+5h0qRJqjOGhIRg4sSJ6nPEely9elWzpzlFz2/8R/laWyX6vGnNeYdOpuY6
as95NPX4485bNHUfderU0fupeCPYGSk7I6XasjPan8t2PsbwaXtQoGR1uLi6
o/KL323jl/6aJPcl+0AOm7YLHfrMVGu1q9f7D0pVrIec+csiOGMuhGTOh7xF
KqLMR41Q8/OuaPqfkegyaCG+W3AEiyMf6P5cUWot2RmNDTsjIcTWefDgAebM
mYM8efIgICBA/b66efOm1e9H9oa8cOEC1q5di/Hjx6NPnz5o06YNatasiSJF
iqi1sPLnxx9/rPbt++abbzBu3DisWbNGfZ897yGZLm1aEy0u/n/LuTy2itqf
0eScRKfYzTBOP3SKcwZOQo/fZIeM8af08Nu3b+v9VLwR7IyUnZFSbdkZ7dPl
u55g1NyDKF6hDpxd3VG6SiN8P+/Im9/2nueY9sMFdBowH2U+aoyA4CxI7eYF
Zxd3pEzl8kJnuLt7vLh+TY+MGTMhLCwM/v5p4ZraDR+kdH7x965qPG5pfBCa
JR+q1ev44nfwGszddF3354zSN5Gd0diwMxJC7IGHDx9i+fLlKFy4sDofWfZu
tMbcOtnz8fDhwxg5ciQ+/PBDpE+fHh4eHuo10dnZGa6ururs6wwZMiBz5szq
Tx8fH/V5+Xv5Ovl6+T0q3z98+HAcOnRIjdeeqFKlipk1xy97nbxm2Cpa66bj
nz1tqU4xmmT8+ZDBwcHqvHR7h52RsjNSqi07o/0avuspxi4+gbJVm8DF1QNF
y9bCtzP3WXxbI2bsffF7sg3804eprujs7IosWbOiSZMmGDNmjNqX5tSpU+p8
Q2kqct0qXrlyRZ0598svv+CHH37A0KFDUatWLQQGBqk2Keu7QzLlQYNW/TBh
2W+qZer93FH6urIzGht2RkKIvfDo0SOsW7cOpUuXhqenJ3r06IGLFy9adFuy
9+OiRYtUX5NzraUbenl5oXjx4ujatauaP7l7926cPXtWXQ9GXx/Kn/KxfF7O
JJ47dy66deuGkiVLqu+X25EOWqlSJXVe8Y0bN6z8LCQN8lzGns8XPQcwdm9q
166d3kPVJP58xgTWQptY75yYxx+7Ob76WM6VsfRn0dZgZ6TsjJRqy85o34bv
fopJ4WfU7zeZd5ivaGUMmbQt0S0vYs/fal6krL329Q9WXTB79uzq2nHr1q2q
Kcq6BtlP/MmTJ2qtjBbyd/J+9/3799U6HXmvMiIiAs2aNfu3OQaGZEfDNgO4
pyS1O9kZjQ07IyHEnpDrse3bt6uO5+7ujo4dO+LMmTOJ/n65lpN5kfL90ipl
LmK5cuXU+85HjhzB9evXcffuXTUf8enTp5pnBsvnZZ20tE/5evm+o0ePqvXW
5cuXV7edJk0aNcdx6dKluHPnjrWegiRBztiJua441ly9GGuL5fHYKvHmM5pY
Ex33ccXrj2Yef9zu+P4H76v18/Y2fzUh2BkpOyOl2rIz2r/hu59j2qoL+Lhh
Z7h5+CJHvlLoO2a9+nxC3ye/Dxu06ot0QZmQytkVRYsWxbRp09R7z3ItKNeN
b4JcW8p1rnTKY8eOqbU7mTNnUb1Rfid/2Xs65m28ofvzR2liZGc0NuyMhBB7
Q94f/umnn9S+iW5ubmjRogVOnDiR4PfIe8Y7d+5E/fr11bpnWQvdoEEDbNq0
CX/99Zd63zmh95wTg3y/3I40R9nHUNqMzG2UeY5169bFjh071NhtEZm7GbfH
xTt/+cWfQUFBeg9VEzWfMYGWaGpuYsy5i4l5/NGfT5kqJdq3b+8Q66Tjws5I
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
PnwY1atXR2BIDvQcEaH7c0uNLTujsWFnJITYM2fPnkXjxo2RIUMG3fc3fBNk
zYvsL5k5c2b1eE6dOpXsY5Dzr02dLx173fFbGDZsWLKPLTFEz2eMNYeR502/
NuyMlJ2RUm3ZGR3LUXMOoGCJampPldWrV6u9s+0VmYcp508HBgahWv3/YMaa
S7o/v9S4sjMaG3ZGQog9I20uJCREndv8xx9/6D2cN0LeQ2/evDkCAgJUM03u
a11Zex77OiBuq3v5sU2fN22qk74Ve14j92dMGHZGys5IqbbsjA7knudo8dVo
eHr5q9e+69evJ9+LbRJx4sQJtT4mOGMe9Pp2pf7PMTWs7IzGhp2REGKvXLx4
Ec2aNVNnTM+bN8/mz5c2h3RFeRzZs2dXj+v06dPJev9t27Y12eXiOm7cuGQd
V2KJtT9jvN74ao9GnjedMOyMlJ2RUm3ZGR3HSRFnULpSQ+TMmRPh4eF2ue9O
XORaeMSIEarv1G/ZBwt/vKP780yNKTujsWFnJITYK8uWLUPu3LnRqFEjXdYZ
JwXnz5/H559/jixZsqjHl5x8+umn/zRG7TXH4pw5c5J1XInlZWd0etUVnZxM
Nkeum04YdkbKzkiptuyMjuN/hy5FUFgutZbkzJkzyfdCm8Rs374dZcuWRcES
VfHtzH26P8/UmLIzGht2RkKIPfL48WN8/fXX6ozmMWPG2OXZgKaQOY2jR49W
a6flXJY7d+4k232XLFnS5N6Mcbvjxo0bk21Mr4Op86bjrf92Ymc0BzsjZWek
VFt2RsdQzn+p16IPvLx91Z6GSXUdKWtTZs2ahY4dO6JChQooVaoU6tWrh8GD
B+OXX35Jkj1ybt++jXbt2sHXPxid+s/T/bmmxpSd0diwMxJC7JHo85mLFy+O
zZs3J8l96HFtKGzduhWlS5fGJ598gkOHDiXJfZhC1p/H7osxOl2MOYFHjhxJ
tjG9DjE7Y7zzbGJ8zP0ZE4adkbIzUqotO6NjOOWHcyhT+XPkz58fa9asSZLX
0w0bNqjrRzc3N6RKlQopUqTAu+++i/fffx8uLi4IDQ3FkCFDrN5bZP23vAcf
EJAeDVr3x+Jt93V/vqnxZGc0NuyMhBB7JCIiAnnz5kWrVq1w7tw5q9++XteG
wl9//aXOtcmWLZvaLyg5kHO6U754nAmfA/OWWoss47NFXnXG+GunX3bHl/9d
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
oH///pg1axZ2796Ny5cvW+0sQ0HmMso5if7+/qjRoBNmrfs/3Z9falzZGY0N
OyMhxF6R66mZM2cic+bMaNasmVX31knua0NB7k8eh3Q+eVxvuie5jPHlHpKx
m9GrOYzx102neO897Ny500qPiNgj7IyUnZFSbdkZHcvlu56g2Vej4O2bHh06
dFDXYtZE3gOXvX0ePnyo9sKR97Llv+Vz1np/PJr9+/ejatWqCM2cD1+PXIGI
vc90f36pcWVnNDbsjIQQe0auB5s0aaJ+j02bNs1q5wUKyXltKESfLSP7kf/+
++9vdFvy2p0ta1az5744xTn7ZfLkyVZ6NMReYWek7IyUasvO6HiOX/Yrileo
o9bHyLoSa+65nVzINaq8J+7p6YU6zb7G3I03dH9eqbFlZzQ27IyEEHtGrgUX
LVqk1rvUqFED+/bt03tIFnH48GHUrFkTWbNmxcKFC9+ol/7111/Inj27ifmK
8ecwxuyNHTp2sOIjIvYKOyNlZ6RUW3ZGxzN891N06j8PQaE5UK1aNbWvtb2x
dOlSdS2ct0hFDJ2yg/syUt1lZzQ27IyEEHtHzoPu0qULvL291Xu5N27c0HtI
r4XshShnZ3t6eqJbt26qE1rK9evX1XXmW3HmKcb9OG5zlP0m5QwcQtgZKTsj
pdqyMzqm8zfdxCeNuiGNh5d6HZQ9wO0FOfuldu3aah/xkEx50W3IYizZHqX7
c0qNLTujsWFnJITYO7KGWfakqVKlCkJDQzFv3jyrrp9OaubOnavmMb7zzjvq
jEB5LJasy75w4YK6nZhnusRbIx3zc04vP86VMydu3rqZBI+M2CPsjJSdkVJt
2RkdU5n/9/38X1Ck9Mfq/40nTJig9sqxda5du6bea0+TxgOe3mnh5uELL590
qNWoOyZH/KH780qNKzujsWFnJIQ4ArJnouypI+uFy5cvj+3bt+s9pEQhZ65U
qlQJadOmRfr06eHu7o48efKos2dknmZiOXnyJAIDA02e7RK3N8Y8Fyboxff8
+eefSfgIib3BzkjZGSnVlp3RcZUzYXqOiEDGbIXU2pCIiAib3qtRziwcNWqU
+n/5omVqYfCkbWouY5ZcxZEylStyFSyHXv9biaWRD3V/bqnxZGc0NuyMhBBH
4c6dO+jTpw98fX3V2TAnTpzQe0gJIme9yJkvXl5eatzHjh3D8OHDkTFjRrWG
Ws6ePnTokNm5jbInpY+3d4x5jK/mKzrFfF13it0b5T6kTxISE3ZGys5Iqbbs
jI6trDdu1WUM/AJC1fvW27ZtS74X4NdA+qe8v54tWzZkzlFE9cTlO59g6c6H
GLv4BKrV6wgPL394+waqc2GmRJzV/bmlxpKd0diwMxJCHAXpcefOnUOLFi3g
4eGBrl272uxcPdmDUcYn42zVqhVOnz6trhnlvMAff/wR1atXV3Mb8+XLh+nT
p+P27dsmb2flypVwcXbWnsNoQvl7FxcX7NmzJ5kfNbEH2BkpOyOl2rIzOr7z
Nt5AnWa94OHlq84Y3Lt3b/K9CCcCuV6Uc1/y58+PdEGZ0OGbGbH2Ywzf/Vzt
N9ll4ELVIGVuY57CH6LPd2uxdMcj3Z9fagzZGY0NOyMhxJGQa6+DBw+qs5tl
nmDfvn1t7nVMzqmR+Ys+Pj5qnDIfMeZ+knIei+y1OHjwYLXfpDyOli1bqn2+
YzJu3Di88+47sddCxz37JVZ7fKk0RntZV06SH3ZGys5IqbbsjI6v7NU4Y9Wf
ak6gexpPfPjhh+o9YFtYQy1rpWfOnIlcuXLB1z8QLTuPxoItt00+DlkvPWbB
UVT5tB3cPX3h4x+Mei378Pc6TRbZGY0NOyMhxNGQvRqlo8l1ocwXlP2xz549
q/ewFBcvXlTzGOVsbFmPs3nzZjXeuMjcTJnbuHHjRnz00Udwc3NDwYIF1RoZ
WR/evXv3OHstOsVZIx23Nb78upQpU6r7JEQLdkbKzkiptuyMxjBi7zNMW3UB
HzfsouY15syZU+2drbW+JDmQNTq9e/dW+3n7pw9D665jMW/zTaz46bnm4wjf
/VTNz/yq/1y172QqZ1fkK1oZ/cZswLKdj3V/nqnjys5obNgZCSGOiMwJjIyM
VGdQy+ubzBvcsWOHbudQSzfctWsXatWqpcYjZ79s2bIFjx8/TvD75HHIWvD+
/fsjQ4YMag5k1ixZ4ORkeq5izO4Ydz/GD1J+oLolIQnBzkjZGSnVlp3ROEpr
nLP+L7T4ahQCAjOpfa1l/++ff/45Wec2yrXi6tWrUbFiRbi6uiJLrmL477Bl
WLT1npp7mZjHInMbR8/7BZU+aaPOpPZNG4KGbQZg+uqLuj/P1DFlZzQ27IyE
EEdFGt3Ro0fVfo2y9jhLliwYNmwYLl26lKzjkNfRkSNHqr26Zc/F5s2bq/Nd
ZHyJQa5l7927p/ZilDNuYs1Z1FgnHXcuo1yXStckxBzsjJSdkVJt2RmNpXS8
xdvuo/+4TShYohpcU7shc+bMav+bM2fOJOnrsVz/7d+/X13Hyv+vp/HwQuUX
v5dHzz2kznt53ccicxvnbrqOjn1mITRLfjW3sWCJqhgwfjOWc24jtbLsjMaG
nZEQ4sjI/MWrV69i/PjxyJEjh+ptZcqUwcKFC5N87cvdu3exePFilCtXTr3G
SmccO3YsLl++/NrzKh88eICyZcsmoin+M8cxRn+UNdry3jshiYGdkbIzUqot
O6MxlTXG01ZeRKsuYxEclgsuLq7InTs3hgwZgj/++MOqr8PRe4136NBB7dMt
95WrQDk1h3HuhusI3/X0jR7Lkh1RGDXnIMrXaAG3ND7wCwhDo3ZDMGPNJd2f
Z+o4sjMaG3ZGQoijI2uWo6KicODAAbRt2xb+/v5q30bZ93D58uVW743SFyMi
IlCtWjU1j1LmILZp00ad9yLjkPG87u1JG305h/HlPoxOcfZgjP3xq7XTgYGB
OHXqlFUfH3Fs2BkpOyOl2rIzGlc1tzHyAcYuPIZ6LfogbWCYev86Y8aM+Pzz
z7FgwQK1ZuZ1r/MEef9ZrtfkfXG5fpQ9GJ2dXZAxW0G06zEJU1ecezmHMYG9
GF9HaZVz1l9D+17TEJIpD1K6pEbhUh9j8KRtL/7uie7PNbV/2RmNDTsjIcQo
yDWcNMVNmzahbt26ap6f9MZChQqpc1Xk7BhpepYg65plP8iePXuq25M9fOS2
P/30U2zYsAE3b940ed6LOWQ8JUqUNNEQ454n7RRvr8Y8efKoc2cIeR3YGSk7
I6XasjPS8N3P1d6Io+f/goat+yMoNAdSpXJWe+MEBwejcuXK6sy/77//HosW
LcLWrVtx4sQJtb5GOuQvv/yi9sueM2eO2lenffv2L671SiBt2pdNxsUlNbLl
KYl2PSZjUvgZLNn+INH7ML6WPz1/cdtR+N+s/ShftQlc3b2RNjATmnYYgVnr
ruj+PFP7lp3R2LAzEkKMhuyLeOPGDaxfvx6NGzdW13XOzs6qDWbPnh0NGjRA
v3791LmCK1aswJ49e9R51deuXVN/7t27Fz/88IP6ezmfRRqMnEMocxfldvz8
/NTn1q1bp74nsfswxkXOlS5WrGis/RidYs5fNHmu9EvlLGv5fkJeF3ZGys5I
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
DAu33kWvUauQq2B5NbcxS65i6Dp4sTqrWu/x0aSVndHYsDMSQoh5jNQZo5G5
jXINMG7cOGTPnh3u7u6oV6+e6o/Pnz/Xe3gkiWBnpOyMlGrLzkgt0YidMdpl
Ox5h4vLTqN2kJ7x9A+Hh5Y/q9b/CxKW/6j42mnSyMxobdkZCCDGPETujED23
cffu3aoxenh4qOY4duxYXL9+Xe/hkSSAnZGyM1KqLTsjtUQjd0YxYvczLPzx
Dr4euQI58pfBB86uyJanJLoPW4bFkQ90Hx+1vuyMxoadkRBCzGPUzhiNzG28
cuWKevxZsmRBmjRp0LBhQ+zbt49zGx0MdkbKzkiptuyM1BKN3hmjlbmNE5b9
hk8+7wYvn3Tw9E6Ljz/rionLf9d9bNS6sjMaG3ZGQggxj9E7oyBzGx88eIDI
yEh1Noy0RjkrZsKECbhx44bewyNWgp2RsjNSqi07I7VEdsZXytzGBVtuq7mM
2fOURCpnV+TIVxo9R0ZgyfYo3cdHrSM7o7FhZySEEPOwM75C5jZeunRJPSeZ
M2dWa6kbN26MAwcOqBZJ7Bt2RsrOSKm27IzUEtkZ47t050N1/nSNhp3VvEYv
n/So3biHOqda77HRN5ed0diwMxJCiHnYGWMTPbdx27ZtqFmzpjojJk+ePJg6
dSpu3Urgf8CIzcPOSNkZKdWWnZFaIjujacN3P8f8H2+h25DF6izqlKlc1dnU
vUetUh1S7/FRy2VnNDbsjIQQYh52RtM8efIEFy9exLBhwxAWFgZPT080b94c
hw8f5txGO4WdkbIzUqotOyO1RHbGhFVzGxcdR7V6HeDh5Qdvv/So07wXpvxw
TvexUctkZzQ27IyEEGIedkZtpCfev38fmzdvRvXq1dXcxnz58mHGjBm4c+eO
3sMjrwk7I2VnpFRbdkZqieyM5lVzGzfdROeBC5ApRxE1tzFP4Yro891aLN3x
SPfx0deTndHYsDMSQoh52BnNI3Mbz58/j0GDBiE0NBReXl5o1aoVjh49qvfQ
yGvAzkjZGSnVlp2RWiI7Y+JdGvkQYxYcUc+Vu6cvfPyDUb9VH0z7gc+bPcnO
aGzYGQkhxDzsjIkjem7jhg0bUKVKFbi5uaFgwYKYM2cO7t69q/fwSCJgZ6Ts
jJRqy85ILZGd8fUM3/0U8zbewFf95iAsawE1tzF/sSroP3YDlu18rPv4qHnZ
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
sXznY93Hl5yyMxobdkZCCDEPO6MxkLmNZ8+eRd++fREcHAwfHx+0a9cOx48f
13toyQY7I2VnpFRbdkZqieyMxnLJjiiMmncIH9ZsBfc0PvBNF4LPvhiIGav+
1H1sySU7o7FhZySEEPOwMxqH58+f4969e1i7di0qVqyo5jYWKVIECxcuVHMe
HR12RsrOSKm27IzUEtkZjafMbZy78Ro6fDMDIZnz4gPn1ChUsjoGTdiC5bue
6D6+pJad0diwMxJCiHnYGY3H48ePcebMGfTq1QuBgYHw8/NDx44dcerUKb2H
lqSwM1J2Rkq1ZWeklsjOaFB/eo4l26MwatYBlK/eDG7u3vBPH4bG7Ydi5trL
+o8vCWVnNDbsjIQQYh52RmMicxtlf8aVK1eiXLly6lqpRIkSWLp0KR48eKD3
8JIEdkbKzkiptuyM1BLZGY1t+K6nmLP+L7T7egqCM+ZGKufUKFK6FoZM3q7m
Peo9vqSQndHYsDMSQoh52BmNjcxtPH36NHr06IH06dMjbdq06Ny5M3777Te9
h2Z12BkpOyOl2rIzUktkZ6TRcxtHztqHMh81Rmo3L6QLyoRmHf+HWev+T//x
WVl2RmPDzkgIIeZhZyTRcxsjIiJQunRpdd1UqlQphIeHIyoqSu/hWQ12RsrO
SKm27IzUEtkZabSyN+PsdVfRpvtEBIXmhLOLO4qVq4NhU3c61NxGdkZjw85I
CCHmYWck0cjcxl9//RVdu3ZVPxNit27d1F6OjgA7I2VnpFRbdkZqieyMNKYR
e/7Gku0PMGLGXpSu1BAubp4ICM6Klp1Hq/XVeo/PGrIzGht2RkIIMQ87I4mJ
zG28c+cOli1bpvZrdHV1RdmyZdU+jg8fPtR7eG8EOyNlZ6RUW3ZGaonsjNSU
Mrdx1roraNl1LNJnyAZnV3eU/LC+6o/hu5/rPr43kZ3R2LAzEkKIedgZiSke
PXqEEydO4KuvvlJ7NsrejT179sTZs2f1HprFsDNSdkZKtWVnpJbIzki1lLmN
iyMfYNjUHSheoQ5cU3sgMDQH2nQbh7kbrus+PktlZzQ27IyEEGIedkaihcxt
vHXrFhYtWoSiRYuquY0VKlTAmjVrVIe0N9gZKTsjpdqyM1JLZGek5pS5jTPW
XEKLTqOQLjgLXFzdUaryZ/h21n5E7H2m+/heV3ZGY8POSAgh5mFnJOaQpnjs
2DF8+eWX8PPzQ1BQEPr06YPz58/rPbTXgp2RsjNSqi07I7VEdkaaGNXcxm33
MWTydhQr+ylcXD0QFJYLbbtPwryNN3Qf3+vIzmhs2BkJIcQ87IwkMTx79gw3
b97E/PnzUahQITW3sXLlytiwYYM6P8YeYGek7IyUasvOSC2RnZG+jst3PsH0
VX+iaYcRSBuYCa6pPVG2ahOMmnNAtUi9x5cY2RmNDTsjIYSYh52RvA5yFsyR
I0fwxRdfwNfXFxkyZMCAAQNw8eJFvYdmFnZGys5IqbbsjNQS2Rnp6xo9t3HQ
hC0oXOpjdUZMSKa8aN9rGub/eEv38ZmTndHYsDMSQoh52BnJ6yJzG2/cuIHZ
s2ejQIEC6jqratWq2Lx5M548eaL38DRhZ6TsjJRqy85ILZGdkVrq8p2P1c9M
o/ZD4BcQhtRuXqhQowVGzzuMFXts90xqdkZjw85ICCHmYWckliJzGw8dOoRW
rVrBx8cHoaGhGDx4MC5duqT30EzCzkjZGSnVlp2RWiI7I30TZW7jou33MGDc
JhQoXg3OLu4IzZofHfrMwoItt3UfnynZGY0NOyMhhJiHnZG8CTK38fr165g+
fTry5s2rrrlq1KiBrVu34unTp3oPLxbsjJSdkVJt2RmpJbIzUmu4bOdjTF1x
Hp99MRC+6ULh5u6DijVbY8yCo7qPLa7sjMaGnZEQQszDzkisgcxt/Pnnn9Gs
WTN4e3sjY8aMGD58OK5cuaL30P6FnZGyM1KqLTsjtUR2Rmot1dzGrffQb8x6
5CtaWc1tzJitEL7qNxcLt97VfXzRsjMaG3ZGQggxDzsjsRYyt/HatWuYMmUK
cufODTc3N9SqVQuRkZHq7/SGnZGyM1KqLTsjtUR2RmptZW7jlIizqN+yL3z9
M8DNwxdVarfDmEXHdR+byM5obNgZCSHEPOyMxJr8/fffiIqKwr59+9CoUSN4
enoiS5Ys6rX46tWruo6NnZGyM1KqLTsjtUR2RpoURux9puYwfjN6DfIU/hCp
nFMjc44i6DJooZrzqOfY2BmNDTsjIYSYh52RJAWyN6N0xQkTJiBHjhxqbmOd
OnWwa9cuPH/+XJcxsTNSdkZKtWVnpJbIzkiT0mU7HmFS+BnUadYL3n5BcPf0
RbV6HTF+6SndxsTOaGzYGQkhxDzsjCSpiJ7buGfPHjRo0AAeHh7Ili0bvv/+
e7W+OrlhZ6TsjJRqy85ILZGdkSa1am7jj3fQ69uVyFmgrJrbmDV3cXQbsgSL
t91P9vGwMxobdkZCCDEPOyNJamRuo5wHM2bMGNUZ3d3dUb9+fezduzdZ5zay
M1J2Rkq1ZWeklsjOSJNLmds4cflp1GrcA16+6eHh5Y8aDTtjwrLfknUc7IzG
hp2REELMw85IkgOZ2/jgwQPs3LkTdevWVXMbZT31+PHjcePGjWQZAzsjZWek
VFt2RmqJ7Iw0OY3Y/XJuY88R4ciet7Sa25g9byn0GL4cS7Y/SJYxsDMaG3ZG
QggxDzsjSU5kbuPly5cxatQodT5MmjRp8Pnnn2P//v1JPreRnZGyM1KqLTsj
tUR2RqqHS3c8woQlp1Dzsy7w9E6n/KRRN7WXY1LfNzujsWFnJIQQ87AzkuQm
em7j9u3bUatWLdUac+XKhUmTJuHmzZtJdr/sjJSdkVJt2RmpJbIzUr0M3/0c
C7bcxn+HLkXW3CXwgbOr2r+x17c/YGlkVJLdLzujsWFnJIQQ87AzEr148uQJ
/vzzT4wYMQIZM2ZUa6mbNGmCgwcPqhZpbdgZKTsjpdqyM1JLZGekert050OM
XXwC1et/pfZslL0bP23aE5NXnE2S+2NnNDbsjIQQYh52RqIn0XMbt2zZgho1
aqgzYvLmzYtp06bh9u3bVr0vdkbKzkiptuyM1BLZGaktKHMb5/94C10GL0Tm
nEWQMpUrcheq8OJ1f7XqkNa8L3ZGY8POSAgh5mFnJLaAzG28cOEChgwZgrCw
MHh5eaFFixb45ZdfrDa3kZ2RsjNSqi07I7VEdkZqSy6NfIixC4/hozpfwt3T
Dz5+QajX4hurvuazMxobdkZCCDEPOyOxFaQn3r9/H5s2bULVqlXh5uaGAgUK
YNasWbhz584b3z47I2VnpFRbdkZqieyM1NYM3/0U8zbfRKf+85AxWyGkcnZF
vqKV0HfMeizb8eiNb5+d0diwMxJCiHnYGYmtIXMbz507hwEDBiAkJATe3t5o
06YNjh079ka3y85I2Rkp1ZadkVoiOyO1VWVu4/fzjqDyi9d8Nw9f+KbNgIat
+2P6yotvdLvsjMaGnZEQQszDzkhskei5jevXr0flypXV3MZChQph3rx5uHfv
nkW3yc5I2Rkp1ZadkVoiOyO1ZWVu49xN19Gx72yEZimg5jYWKP4RBozfhOU7
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
qHU/Wrzllurbll2KzigU6qbojMYlMitW7v6MZq86T6Oit1LPt96mVp2HU0iD
DlSyfE32ljs5u5ODkyvZ5S9I+ezyk21eO8qdx5b1RDfPQlS8TDDVCG1HLToM
pa5D5tDw6fEU1nkEubr70qRJk+i3334zyPMUa/OdOnXisSvW6CtXrsz9raEh
GLrXLMaEHTp0IB//EtSk7UBq3WUU1WyUtM/wzMJ+yp3blvdVXvv85KDZd9Ah
C7p4kk+hklSuSn0KbdGD2veaRIPGraRJMQdo0eYPaNPRx5R46W/Vzwuh6VN0
xowB88kffviB1qxZw/4S7C/0ITh79qxBauaMBdEZBQJBRoF8v9T0KZtU/l2u
XLmXetydO3fo+PHjPLaKjo7mXluoe8Z4y9/fn7Mp4BUsUKAAa2rQEaHp4d/Q
GaE3QueA/gEdcsuWLfz7WPPZtm2bQb6rmmNDAN+rTJky1KBBAx4DDxkyhJ85
2A4vLy/uQYP6bXt7e3JycnqpQ/r6+vIzCt57rGNjfzsVcNJxvGyS/v5CU4qL
izP49xKYPkRnzDjZ23j6N5q6+AhVrN6EfTJFS1elYdM3UcLpX1XfvqxSdEah
UDdFZ9QfoVdtOvYDvbPlQ5ryziHOvO3Udxo1bN2XKoU0o0JFy5OLuy85FnTn
nApk40I7hD8PGhn8ib6FS1GFqg2ofvMeFNFzAvUbE0vj5++hBRuu06q9D2n9
4f+jjZrPgE9vy8lfWLfcce45TVywl4qWqkq9evWiBw8e6P1ZCp0P67fKeBbj
OOTYwL+k70zv1IA6mHr16rG+umD9u/xM2nz8J94X2Cer9zzkfTR+/m7qN2oJ
hXcbS7WbvMn15J4+Rfl5Bq0WOiQ0SWi4jk6u5OTiQV7+xahspbpUr2lXatd9
vGafL+P9uXDDDdp4+HtKvPiX6ueWUH2Kzphx4J6AewOyslBjhnkxavfmz59v
tvtJdEaBQJARQFsrVqx46j5G7VrcZP8PHyDGV4oXEboY9DFoifApBgUFvdTE
kIELrevIkSPcUxp5uN999x33Lvn55585IxF+PXggp02bRh4eHrRkyRK9j9fU
HhsCqOPB/pk5cyb3sgZRk471LjxvsI0XLlyghIQEfgbheR0eHk5Vq1YlHx+f
lzok9nNqWnBquiP2Oz7HWN9RYJoQnTHzhLcRfhvUn7l7FuY5cdO2g2jx1o9U
37asUHRGoVA3RWfMOLeffcpa35w1F2n0rO3Ue/g77Kur1bgzlYKe5RfIuhX0
K/jp4KtTvIi2ee1ZY8TaTXDd1tQsYgh1GzSL3pq2kaJiT9CSbR/T2oNfc830
puOPuSfX1lO/8mfuPP9HkucujdzcRQm3KLhOGGtx8A3pExgzY0yLMSQYFRXF
YzdD1sEkx4YNG6ho0aLU+s1RrOWm2AdX/+V9hH217dzTJB1Ssw/hV1x/5P9o
jebeH7PpBk18ex/1H7uM++bUbdaNylauR95+xVnz5eNk+0qHhKfUydmDPH2L
sV5Zp/GbFN5tDOuY4+ftZl0TGieyjtU+N4WGp+iMmQf8i99//z2tWLGC8/Qx
d27bti3P+Yx5/9AHRGcUCASpAVoTNKd79+5xDW/Xrl116FQ2L/98TcvS0huh
WZQqVYomT55M27dv50xF6GTffvst62bQz/BZv//+O2t5yDxELmNawPgJ6zyj
Ro3i99AXTGFsCC0VGZTwem7cuDHV1+D44FkEzRWvhwarrUNibf7SpUs0cODA
VHXg5LojPJuoTcfzAD7Kxo0bc1bI1KlT2ccPDRIZmdB70zs2AvOG6IxZI3L1
MU+bvPAgla/agOddxctWp5EzE9jzqPb2ZYaiMwqFuik6YxJxz4NHcPHW2zRt
8REaMmktde4fRU00943KtVpQkeIVydXD/6UX0V7bi5jHlnVF70IlqGzlUPbF
te02lvWocXMTad66q7Ryz2dJXsQjKb2Iuy78le1eJnivlh3f4p7TqFfRJzDG
7dixIz9L+/Xrx/naxlzDxTh6/Pjx5OziTgPGLMvavtLSIaHdauuQ0HbX7PuS
66jxzBswbgXXV6POunyV+prjWpJ1RxxnHO98dg6a45+kQ+J8QK076rdrNezI
unOfEYto7JxdmuN+jbVjfKba57cw+xSdMWvAveLZs2d05coVHn+jZq1EiRLs
QYEGaS4QnVEgsE5gDAKd7/r167R3715atmwZTZw4kX186K9SunRpvjegFhd6
W3LdwcYmpR8uue6YPA8QedvQvdDjOLvjLWiVqCmGFzK7/Zi1ofbYEIB3EvmL
2VljxzZDG0X/Gl15jKwNv/gZ6tPxvWvWrEmFCxfm+nX4OeGLxFoa/KjQIVGz
Dc0Y+x7nCrTjlStX0sGDB7kPOHr2mNt6m+B1iM6YPWJ+tCLxAUX0nMhzbOSG
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
qsLFy2vg+BjH72dEO+mMiIj20hk9C/OacMaMGSpatKi137fZGzsrya7nkWYv
xgEDzPfiw/Tqq69aZwsCAMD1YfZkDAkJ+eP/61zn/++2+lCuP5pjmTJlNH/+
fKfHBS+CzuiZvrJ4j6rXuT/brgnJrueH588HrNu4naZGfuX4/YxoJ50REdFe
OqPn8cknn+i+++5TjRo1tG7duiy9rex6Hrl9+3bVr1/fcuvWrVlyGwAAbmHO
nDkX/H+d66LWmOuSt5tuBJBR6Iyeqbme+J9dhyooKMy6zjirz+3LjueH8fHx
1tdbYHCouvSdzDXT6BXSGRER7aUzeh7JyckaOXKktfZv6NChOn78eJbdllln
aM6b+fnnn3Xy5MksucbOfD4vvviiQkNDrc/H3A4AAFwf5nG6fPmIi//PvqQL
nffmm2/WDz/84PTI4EXQGT3XEVM3qOwdta19vOPi4rL06yA7nh9u3LhRd911
lyrWaKRxc+Icv38RMyKdERHRXjqjZ7Jjxw5rf63sWNOY1Wzbtk0NGjRQrVq1
rHMS2S8MAOD6WblixSXrFi/sjRevaWzTpo3T44KXQWf0XJduPmWdBxMYFKLR
o0fr1KlTTn+5XDemXVprGc99Lo8+MVbLtpx2/P5FzIh0RkREe+mMnklSUpJ1
XUzevHnVt2/fbNnzOyswzyPNvozBwcEaMWKETpw44fRIAABeS1pamipUqHDZ
voxXbI5/yaWdO3c6PTJ4GXRGD3ZXml6cvlnlK9dVzZo1re/deivn92WsUqup
xr/xvvW5OX7/ImZAOiMior10Rs/liy++UKtWrVSkSBFrH3/z+tLbWLZsmXXG
dLNmzfT++++zlhEA4AYw/xdcuPfinz9e+vO/qGbNO50eF7wQOqNnu3x7gtr3
HK3gkLx68sknrfOavY3vvvvOOmM6JCy/Hn/2NS3fluj4/YqYUemMiIj20hk9
l9TUVC1YsEDlypVT06ZNvW5dyt69e9W6dWurk86ePdtaowkAANeH+f/YrHE/
3xQvWsOY6/L1jOb7PADXCp3R830t6hvd1fCfypcvn6ZPn26dP+8tmFnHjh2r
0NAwNWrZTTNX7Hf8/kS8FumMiIj20hk9G3MGjLnuOCQkRH369NGBAwecHilD
HDt2zJo7KCjIq6/7BgDwBFJSUlSvbl3lumTN4pX6orFEiRLW96oArhU6o+cb
syNFz42PVYmyVa19vN955x2nv2wyTFRUlHW9dNk77tKwKevOfS5cL43eJZ0R
EdFeOqNnY64zNtdPP/TQQ9b50xMnTvT4fb/N+dJTp05V4cKFdf/992vXrl1e
ec03AICn0K9fv4v3ZLygL15pXePcuXOdHhm8FDqjd7hsS7za9xqrkDwFrfOe
9uzZ4/SXji3m+WDz5s0Vlq+wegyYocj3zjh+PyJeq3RGRER76Yyej1mTsnbt
WtWuXVslS5bUwoULrZbnqZz/XnWlSpUUHR3t0bMCAHg6r7322h/d5/LzXnJd
0htzqWzZsnxvB64bOqP3+Mbqn9Wk9RPyDwiyrnnx5L0av/32W3Xu3Fn+/oFq
3eE5zVt72PH7D/F6pDMiItpLZ/QOzN6Gr7/+usqUKaOqVatq1apVHvk6cuPG
japXr57+9re/qVatWtavAQDg+njjjTf017/+9YrnSV/5jOm/aPXq1U6PDV4M
ndF7jH0/VVMW79Wd97RWUFCwhg8friNHjjj9JXQZ5rWE2UPHz89P/kFh6v7M
VC3fylpG9E7pjIiI9tIZvQdzvfS4ceOs65GrV6+ut956y9qzy1NYv3697rnn
HgUHB6tAgQLWj+bXpjV6YhMFAPBkFi9ebDXGK50l/WdrvPjt5ppEgBuBzuhd
xsSlaNSMLapQrYFCQ0M1bNgwj3ru/tNPP1n7Ppj9uoNC8ikgMEz5CpVUr8Gv
a9mW047ff4jXKp0REdFeOqN3Yc5XefHFF1WwYEHr2rhZs2bpxIkTjs6UkJCg
+fPnW9dJm+e4gwcP1ieffKKBAwdaZ6PWrFnTWn/JmQQAABkjclmkbr75b+ms
XbygAeX688eAgECvOSsMPBc6o/cZtT1Jw15dr4jKdc89DgSoe/fu1t7eTmOe
C7Zv395ax1i1VjMNn7pBPZ6bpYLh5c699iiqbv2nasmmE47ff4jXIp0REdFe
OqN3Yc6F+e2336xzVkqXLm2dQ/3444/rs88+c2Se//znP9a1MPnz51fRokU1
YcIE/fLLL1ZTNNfujBgxwmqiZr/GyMhI6/pvAABPIj4+Xvv27bNeE3/88cf6
/vvvHT1va+nSpdbeE5euYcx16dnSF7Qg04ViYmMcmxlyDnRG7zQqLlFj58Sp
+t0t5HvuOX2dOnWsPbLPnDmT7V9Dp0+ftr7/bK698fE9N0vjf2nCvI+sHrps
a7z6jlik8FKVrPWNHZ4cpwUbjjp+/yFmVDojIqK9dEbvxDxvXLdunRo1amT9
3ZmON23aNKvxZQemdZp9w2rUqCEfHx/dfffdWrFihfXa3LRQw/kmatpjeHi4
tf5y3rx5jjznBQAwmPXXa9as0YiRI/Tggw+qeLFilzWV895yyy2qVr2aevbs
aT3effrpp1m+LttcK/2/xphOW0xnXeOgQYOydC5wD3RG7zU6LlnTo/fpgXbP
KCQ0v/LkyaOuXbtq9+7d2bJ/jbmNnTt3ql27dtb1LaF5C6ltt2GaFbvfmu38
nGZvxufGx6pURE35B4Sdey0yVG+uPeT4/YeYEemMiIj20hm9F7M28LvvvtPI
kSNV7NxrZXNdSv369bVkyRKr72UFpiPGxMSoSZMmCgwMVKFChfTcc8/pyy+/
THet4smTJzV9+nTrDBszp/m5k2uFAMB9nF97bR63Ll4TeMF1ybn+bHe50ul8
Zg15ly5dtHbt2kxfn23W/5zfjzG928916dznfmzTpg174EKmQWf0bmN3pGrx
xuNWx7u9yj3WesKSJUtae9l89dVXf3wvODMxf6b5Pox53WCe55nbrFKrqYZM
Xqslm09Y59VcOufy7Qka/uo6RVS+R763BemB9s9o9ls/OH7/IdpJZ0REtJfO
6N2Y15bm+pQdO3boscces753bfbmMeevmPWN5vq/zHhOafbxNut57r33Xut1
tjnj5ZFHHtGWLVusjmj3Gtdcl2jWMlaoUME6I+bll1/OshYKAHAes8bbrOf5
q1kjmOvCXpfrir3x/O+ld5bzhR/n7++vRzs8qg0bNtzwOscZM2bopptuuqbb
NzZr3oz9KCBToTPmDJdvS9TsFd+ra78pKlLiduvaE7Pfjnlub54zZsa1Jea5
nXkeaPbvKVGihHLn9lGJslXVc9AszXnrgHWd9NVmNL8/ZtY2q0n6+Pqraesn
ND36P47fd4hXk86IiGgvnTFnYM6dNt1u06ZN1uuBsLAw6++0SJEi1vmj5pzq
999/P8PrCM3zT7NP2aRJk/TAAw/8sV7SrAUy1xqa6w6PHj2q5OTkDM9orleM
iopStWrVrPnMOszsus4bANyHOQfB7A970ZrF850u15/rFy9dy3jp+Sq5Lup8
V1gHee7jzGPt8OHD9cMPP1zznC+99NLvXefabr9BgwbW4ypAZkJnzDnG7jyr
ZVvi9VrkV3r0iTEqFF5OuXPntr5fbPZO7NOnj7WH488//5yh70mb9zGPcWYP
2SeeeEKVK1e2vu986625FV6qorr0nWR1wsj3zli3nZEZo7cnWXs31qzXSrl9
/HVP8456dclnjt93iOlJZ0REtJfOmLMw3c/0xg8++ECjRo2y9k80fdDX19d6
LmjOajHPC82+jm3btlWvXr00YMAA9e7d23odYdYrVqlSxdpP0TwPNR9nvgdu
PmbIkCHW98BNX7ze9TOJiYlWozT7kwcFBVnXXJu1kgAAmYlpjGZ/sMva4iX7
Gl7Y9S5cK/jHx/3RIi/9mFyX9UDzo1mT2KxZM7399tu2axzNa/bBgwdf1+3X
qXM3e91ClkBnzHmaa6mXbTmtGTHf6ukRC1WrwUMKDs2nW2+91boGJl++fNYe
2ua5mfnestkbon///urXr586d+6sFi1a6K677rLex7yvWcttPjY0T0Hd3aSd
nh0TqVkrv7ea5pWukbbT7N04ecle68/K7euvWvUfttqj0/cb4pWkMyIi2ktn
zJmY17fmemqzXvCjjz6y9kTs1KmTtZbQ9MN//OMfluacA/Nc0Wh+/fe//93q
f5UqVbL28Z4yZYq1DtJ8HZi1kGbd5I1iGqW5zsY0TfP81nydmX0mAQAyA/O4
V6RokcvWAv5xPvNVz1b53/uld93ylfrkxa3yz58XDQ/XuLFjdeTIkctmNI+D
HTt2vK7br1WrlrVfBUBWQGfMuZo1hsu3JmjRhmPWusOB42P0QPtnVbFGI4Xl
Dz/3nDC39Tzw//7v//54bmh+bt52y625lbdgcVW+s4ladxykwRNXaUbst1q0
6TfrGu2Mrl9Mz5gdKXrt3EwNW3a19musUquZRs/e5vh9hnipdEZERHvpjDkf
0xzNupfjx49br3cPHjyoffv2WecPmmtmTFd88sknreukzVkJ5voZ837m/c3H
ZcX5qmbd5a5du9SyZUvr++Lme+fmLBkAgBvl/vvuu/KaxUuvPf7jmuk/z365
4vnOuS79uPT+vCtcn31OsybcnEFz6NAhaz7TCM2a8uu5fbOmiMYIWQmd0R2a
Lhi1LVFLNp/Ugg1H9eba/1r7OU5Z+pkee/oVFShSVtXuuk+DJqzU1KWfW2e0
vPnOf7Vw/a/Wx5i9FW+0LV5qzI60czP8oOZtnpJfQKgiqtTT8KkbrmuNJGJW
SWdERLSXzuhOzPV6ph9OnDjRugbG7A9mfp0V5xCmh1kbuWfPHuv6bdMazbky
pn0CAFwv5nrljLTAjP1eOtdKX3FN5NXXSprbMOvHzX65Zk359dy+uVY6o3vs
AlwvdEYXuyvNanqDJ76tEuWqqdED3TRzxXfZ2vnMbc1dc1CtOz6nwOC8KlW+
hp6fsNJa7+j4/YP4Pp0RETEj0hndzSuvvKL8+fNb5z87gWmbX331lbX/jzlj
xuwBtHPnTkdmAQDvx6z3y0gHvFLbu+J5K7bm+uPHi6/Rztzbr1evHo0RsgU6
I74waY1Klquue1s9bq1jzO7bN+sk579zRI90H6GQsEIKL3mH+o9aZq2/dPq+
QaQzIiLaS2d0N053RoNpjfv377fOpDHrfBo2bKh33303W9dWAoD3Y/aDuLD7
2e/HmOuP65TN/4EVKlSwzrwqWqSotR/Z1frihdc357rkz7ye27+4N17ceMy5
MvHx8U7fveAS6IzodGc0mta4aNMxdeozQXkKFFP+ImX05JC5WrY13vH7B90t
nRER0V46o7vxhM5oSEtLs/aFNK9v8uTJo9q1a2v16tVZsjckAORMJk2aZH/9
8e9dL3fu3OrRo4f1OPP9999f9n0Ns4esOUNrxowZ6tz5MeXNm/fyPzfX1Rri
1W//4kaZ/rkvrR9qbZ0ZA5Bd0BnREzqj5a40ay/IxwfOUIEiZayzah5/9jXr
bU7fR+he6YyIiPbSGd2Np3RGg3mdb86JHTZsmAoUKGCtK4qKirJe7wMA2NG6
desrrje8tO+Zs6+u9dwp872Qbdu2Wf8vmsdMu7Z4tdvP0DXZ597fnEfN91og
u6Ezosd0xt9dtiVefYYtsK6fDg7Nr05PvayFG485Phe6UzojIqK9dEZ340md
0WBa47FjxzR+/HgVLVpU5cqV04IFC5SQkOD0aADg4ZSPKJ/utcv/637/+/nU
qVNv6HZM+zPnzTzwwAO6+eab/2yHf7TEq9/+X3Jd8j5X6Iw9e/Zk7whwBDoj
elpnNEZuO6MB46JVsnx1+QWGWXs3mjOynZ4L3SedERHRXjqju/G0zmgwr61P
nDhhtYBSpUqpePHimjlzpk6fPu30aADgwZg9FzJylos5eyqzOHz4sJ5++uk/
9lTM6Fkyl/7eH7/+vVWa67TnzZtHa4Rsh86IntgZjcu3J2jIK2tVrtLd8vEL
0oOPDtTrbx1wfC50l3RGRER76YzuxhM743lMV5w7d64iIiJUqFAha9bjx487
PRYAeCjmemi7nmfWF5r9GW4U81hkHp/ubXyv/vrXv2a4J/7lon6T6/c1j3+u
a8x14e+de3v16tW0a9euTLh3ADIGnRE9tTMazZnTo2a8p0o1Gyv3bYFq1qa3
ZsR86/hc6B7pjIiI9tIZ3Y0nd0aDuV46MjJSVatWtdYqjR49WkeOHHF6LADw
QMy+rqbN5bqg013p3JWNGzde859t1hV+/PHHGjVqlOrUqaOb/37zJb3wz/WI
drdv2yLPv/33j73pppvUrVs3HvsgW6Azoid3RmP09iRNmPuBatRtqdw+/mpw
/2N6ddkXjs+F7pDOiIhoL53R3Xh6ZzQkJiZae6GZM6iDg4M1ePBgHTx40Omx
AMDDqFGjZvrXLl/Q+0qUKKE333xT+/fv18mTJ639Fo1mjaJ52wcffKD169dr
9uzZ6t27t+rVq6egwMCrni2d3vXSV7r9K/76or0br9weAwMDNH36dOtMGoCs
gs6Int4ZjdFxyZq88FPVafSIfHz9z/3YVhMX/NvxuTDnS2dERLSXzuhuvKEz
GpKSkvTuu++qYcOGCggIUN++fa0eAABwnl69nrxsLeDl561cvo/ildYkml//
sedirkt+/0rnuVzyPll5+7Vq1dK+ffucvrshh0JnRG/ojMaYuBRNW/61GrTo
It/bglTtrhYaNyfO8bkwZ0tnRES0l87obrylMxqSk5O1c+dO3X///fL391f3
7t319ddfOz0WAHgIq1at+n3/w1y6dH3gFb3a713Vy8+I/nPdYvbcvvk/Ozo6
2um7HHIgdEb0ls5ojNmRplmx+9Xs4SflFxCiClXra+S0TYrdydcqZo10RkRE
e+mM7sabOqMhJSVFu3fv1sMPPyw/Pz+1a9dOe/bscXosAPAAzB4LoaGhF5+l
ktFmeNnaxEuvX05vHeLlv3e12y9VqpQefPBB6zzpG71904ImTJjg9N0OOQw6
I3pTZzTGvp+qN1b9pAfaPyv/oDwqffudGjzxbcXsSHF8Nsx50hkREe2lM7ob
b+uMBrOP2hdffKGOHTta11C3atXK2k8NAGDYsGEZWoeY6wr7IOa69H2vut7w
koaY6+pNMyQkVJMnT7bWZRtOnDih/v376+9///sN3/748eMdvtchJ0FnRG/r
jEazfnHeusNq222YgsMKKrx0JT07Zrmitic5PhvmLOmMiIj20hndjTd2RoNp
jd9++6169OhhnQ3TuHFjvffee9aZsADgXky/M+dOX3HdYa4rrTW8eh/MdX59
4QVnR1++bvHi27jw98qUKaOZM2cqPj7+ivN+/fU3atKkyQ3dvjmPetGiRdl8
T0NOhc6I3tgZjaY1Ltx4TB17j1dY/nAVLFpWTw2dp8j3zjg+G+Yc6YyIiPbS
Gd2Nt3ZGgzlz9cCBA+rXr5/CwsJUp04drV27lrNYAVxOXFycbr3l1gvWBOa6
uNld0u9yXXIGi+3Z0Vd424W/Z7pfwwYNtXr16gx/72PNufctXbr0dd/+rbfe
au0pAXCj0BnRWzuj5a40Ldl8Qt2enaYChUsrT4Hi6jlwppZuPuX8bJgjpDMi
ItpLZ3Q33twZDaYpHj58WC+88IL1eVStWlWxsbHWPo4A4F7M+fR+fv4XXSOd
sf0ar36tcq7L1kH++WdWqlTJuobZfP/jejD7S5qP9/X1va7bL1u2rBISEjL5
ngS3QWdEr+6Mv7tsy2n1HvKmihS/XSFhhfRYn0nWWken50Lvl86IiGgvndHd
eHtnNJj1Qr/++qvGjBmjIkWKKCIiwrqG0LxmBwD3Ys6jr1ixYrprAK90vfOf
6wnPr4FMr03m0t/+9lfVqFFDQ4cOtfaMzSx++ukntW3bVrly3XTV2891hfkH
Dx6caXOAO6EzYk7ojEZzvbTZo7FE2WrW+TDteozS/Hd+cXwu9G7pjIiI9tIZ
3U1O6IwG0xrNvmzmnIUSJUqoZMmSmjNnTrp7ogGAO0hKStK0adOsx7m/XLqu
8ZJzVnJd9rY/3+987yuYv4A6dOigJUuW6OjRo1k6+6ZNm1SsWLGLbv+y7njJ
5/CPf/xDX331VZbOBTkbOiPmlM5oXL414dzns1plK94lX/8QPdRpkHU2tdNz
ofdKZ0REtJfO6G5ySmc8z+nTp62+WL58eRUuXFhTpkyx+iMAuBuzx8Inn3xi
ncnSqVMnlStXTnny5LH+77vppr/qb3/7m7XHoTlD5vbbb1fdunX14IMPWv8P
Tp8+XZs3b9ahQ4eyfW7z+NWsWbOLro++tIdeuq6xQYMG2T4n5BzojJiTOqMx
aluiXnztXVWs3kg+voG67599NHPFd47Phd4pnRER0V46o7vJaZ3RcObMGWut
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
pgkTJig8PFxly5bVvHnzdObMGadHAwDwaOiMSGfEnOryrWf03PhYlYqoKf+A
sHOvg4fqzbWHrunPoDMiItpLZ3Q3dEbIyZw8eVLTp09X6dKlVaxYMevnp06d
cnosAACPhc6IdEbMyZpzYIa/uk4Rle+R721BeqD9M9f0dU5nRES0l87obuiM
kNOJj4+31jJWqFBBBQoUsL7WzVpHAAC4HDoj0hkxpxu1PUljZm1TlVpN5ePr
r6YP9dL06H0Z+lg6IyKivXRGd0NnBDeQkJCgqKgoVatWTWFhYXrxxRf1yy+/
OD0WAIDHQWdEOiO6wejtSZow7yPVrNdKuX38dU/zTnp1yWe2H0dnRES0l87o
buiM4BYSExO1Zs0a1alTR0FBQRo0aJB++uknp8cCAPAo6IxIZ0S3GB2XrMlL
9uruJu2U29dfteo/bLXHq30MnRER0V46o7uhM4KbSEpK0pYtW3TvvfcqICDA
eoz77rvvnB4LAMBjoDMinRHdZMyOFL0W9Y0atuxq7ddYpVYzjZ69Ld33pzMi
ItpLZ3Q3dEZwG8nJydq1a5datmwpf39/de3aVV9++aXTYwEAeAR0RqQzotuM
2ZGm2St+UPM2T8kvIFQRVepp+NQNin0/9bL3pTMiItpLZ3Q3dEZwIykpKdqz
Z4/atm1rtcZHHnlEu3fvdnosAADHoTMinRHdqGmKc9ccVOuOAxUYnFelImro
+ZffstY7Xvh+dEZERHvpjO6GzghuJTU1VV999ZU6d+6swMBAtWjRQjt37nR6
LAAAR6EzIp0R3WrszrOa/84veqT7CIXkKajwkhXVf9QyRW1L/ON97DrjJ/tO
KXpbvOOfCyKik9IZ3Q2dEdyMaY379+/XE088oeDgYDVs2FCbN2/W2bNnnR4N
AMAR6IxIZ0Q3a1rjok3H1KnPBOUpUEwFipTRk0PmatnW/7VDu8740stT9Pgz
U7Vk0wnHPxdERKekM7obOiO4nbS0NOvc6WeeeUZ58uRR7dq1tXr1aqtBAgC4
DToj0hnR9e5K05LNJ/X4wBlWZwzLH67uA16z3mbXGc1jaFBIPnV4cpwWbDjq
/OeCiOiAdEZ3Q2cEkLV+8fDhwxo6dKgKFCigypUrKyoqyjozBgDATdAZkc6I
+D+XbYlXn2ELFF7yDgWH5lenp17Wqh2/XbUzLoxco7IVaso/IOzc6+yhenPt
Icc/D0TE7JbO6G7ojAD/w7TGY8eOady4cSpatKjKlSunBQsWKCEhwenRAACy
DToj0hkR/zRy2xkNGBtt/ZvwCwxT96dG6ot9h9N9DP3s+0S9OG2dIirXk+9t
QXqg/TP8O0JE10lndDd0RoA/Ma3xxIkTmjp1qkqVKqUSJUpo1qxZOn36tNOj
AQBkC3RGpDMiXuzy7Qka8spalat0t/wCgjR9+sx0H0PNedMrdiRpzKytqnxn
E+X29VfTh3ppevQ+xz8PRMTsks7obuiMAJdjuuLcuXMVERGhQoUKWf9Ojh8/
7vRYAABZDp0R6YyIl2vOnB41Y4sq1bj3qq+bTGd8+6Ozit6epAnzPlLNeq2U
28df9zTvpFeXfOb454GImB1erTO2b99eO3bs0Lfffos51BdeeEFhYWEaNGiQ
47MgepKfffaZJk+ebLVG82/EvPb+6KOPHJ8LETEr7dq162XPB+mM7pLOiHhl
TTucumiXdnz4hW1ntN4/LlmTl+zV3U3aWesaazV4SBPnf+z454GImNVerTPe
csstCg4OVmhoKOZQfXx8dNNNN1k/Oj0Loqfp7++vm2++2Vrbkzt3bh4PETHH
e+utt9IZXS6dETF9N36Sop+PpqTbGTdu/1LPT4jVs2MiLfu/uETte45WeKlK
uvnv/1BIWCHd988+emZ05B/vg4iY06xep4Vuuumvl10jg4iIiIhYu3ZtDRo+
SYPHO/+8FbPe+vd1stZelY6oqc5PTXB8HkSnNdc7x8QlW51x815d9bzp0WMn
WC3R59y/ofPemvs2/e1vN1uPp+Y19z/+79aLfh8RMadpvq/i9PNXRERERPRM
//73v8vH5zbHn7Ni9vj3f9xitRDTRf4vt6/j8yA6bbseL2rp5lMZ6owr1sSp
69Mv69Enxlzmw50Hq3iZKn88tt5RvaH+9fjIK74vIqI3W65iHcefvyIiIiKi
Z3rHHXeoU/e+6tzb+eetmPXeUb2Rbr75HypYtKyaPfyk4/MgOu3ome8pantS
hjrj5z8kK3pbvJZtOX2ZSzef1OtvHVDbbsMUGJxX+QqX1JMvzNXCjceu+P6I
iN5q646DFBKaR76+vo4/j0VEREREz7JNmzaKWfdvrdjh/PNWzHqfHbNc4aUr
q/59nTU18kvH50F02vONMSOd8cJzYK5k7M6zWrTpmDr1maA8BYqpQJEy6j3k
TUW+F+/43pOIiJmlOQcmb/4CeuaZZ7R+/Xp0mT169FBQUJC6d+/u+CyI3uLy
5cvVunVr67yEsmXLasyYMVq3bp3jcyEiZoaLFi1S/fr1Vb58eY0fP16ffvqp
9n53mnNgXCLnwCCm7412RstdaVqy+aQeHzjD6oxh+cPVY8B0621Of36IiJmh
6YwheQqqzwvTte7jZHSZj/d/WUEh+dSt73jHZ0H0Ftd+mKiFa39Qq3b95B8U
ptsr1dKoaau05qNEx2dDRLxRF67Zp/pN26rcHbU0fsY6bdidorX/TtPKD+iM
bpDOiJi+mdIZf3fZlnj1GbZA4SXvUHBofnV66mXrGmqnP0dExBvVdMbgsELq
NWi2Vp77NbrLLn0nWZ3RrN13ehZEb9Jc9zLvnf+qzWMvKOjcc8MS5arpuZdi
rfMInZ4NEfFGnPPWD6rbuJ3K3lFbI1/bZL3N6eermH3SGRHTNzM7ozFy2xkN
GBtt/ZvzCwzTI91HaN7aw45/noiIN+L5zthz0GzHZ8Hs93xn7PzUBMdnQfQ2
TWtcuP6otUd4WN4iKlw8Qn1HLtLy7QmOz4aIeL3O/r0zlrmjtkZM2+T4PJi9
0hkR0zezO6PRPG8c8spalat0t3z8gvVgh4HWeTFOf66IiNcrndHd0hkRb9Bd
aVr87nF17TtZeQsWV75CJfXE83OsfcMdnw0R8TqkM7pbOiNi+mZFZzRGbUvU
qBlbVKnGvfLx9VfzNr01I+Zbxz9fRMTrkc7obumMiJnj0s2nrL5YKLy8QvMW
Udd+r1r90em5EBGvVTqju6UzIqZvVnVGY/T2JI2fu0vV726p3D7+anB/F726
7AvHP2dExGuVzuhu6YyImeeyrfHqO3KxwktXUuC5f1cdeo3VgnVHHZ8LEfFa
pDO6WzojYvpmZWc0Rscla/LCT1Wn0SPWusY6jdpq0oLdjn/eiIjXIp3R3dIZ
ETPX5VsTNGjCSpW+/U75BYTqn12GaO7qQ47PhYiYUemM7pbOiJi+Wd0ZjTFx
KZq2/Gs1uP8x+d4WpKp17te4OXGOf+6IiBmVzuhu6YyIme/ybYkaPnWDbq9y
j3Kfe37Y8l/9NXvF947PhYiYEemM7pbOiJi+2dEZjTE70jRzxX41faiXfP1D
VKFaA418bZN1BqHT9wEiop10RndLZ0TMGqO2J2ns7O2qUquZcvv6q8mDPfVa
1DeOz4WIaCed0d3SGRHTN7s6ozF2R6peX/WTHmj/rPyD8qjM7bX0wsS3FbMj
xfH7ARHxatIZ3S2dETHrjN6erIlvfqw772lt7eddr1kHTV6y1/G5EBGvJp3R
3dIZEdM3Ozuj0axfnLfu8P9es4cWVLHSlTVgbJR1ZozT9wUiYnrSGd0tnREx
azX7eU9Z+pnqNn3U2s+71j0P6eU3P3R8LkTE9KQzuls6I2L6ZndnNJrWuHDj
MXXsPV5h+cNVMLyc+gybr+Vbzzh+fyAiXkk6o7ulMyJmveb6lunR/1GjB7rJ
xy9IlWs11ZhZ2xyfCxHxStIZ3S2dETF9neiMlrvStGTzCXV7dpoKFC6tvAWK
q8dzM7V08ynH7xNExEulM7pbOiNi9mj2856z8kfd3/Zp+QWGKaJyXQ1/db1i
3091fDZExAulM7pbOiNi+jrWGX932ZbT6j3kTRUufrtCzr2Gf+zpiVq06TfH
7xdExAulM7pbOiNi9mma4tzVh/RQp0EKDM6nkuWra9CElYqJS3Z8NkTE89IZ
3S2dETF9ne6Mxsj3zuiZMZEqXraqdT5Mux6jNP+dXxy/bxARz0tndLd0RsTs
1eyxM3/9Ef3r8RcVkqewwkvcof4vLtXybYmOz4aIaKQzuls6I2L6ekJnNC7f
mnDu3+rbKnvHXbrNL1gPdXpeb6z62fH7BxHRSGd0t3RGxOzXtEZzjYu51iVP
geLKX6S0nnzhDS3bGu/4bIiIdEZ3S2dETF9P6YzGqG2JGvnau7qjekP5+AZa
e/PMXLHf8fsIEZHO6G7pjIjOuWTLSWsP7wJFyyosX1F1f2aatce303Mhorul
M7pbOiNi+npSZzRGbU/S+NffV7W7Wii3j78ateymqZFfOX4/IaK7pTO6Wzoj
orMu2xKvp4cvVHjJita/xY5PjtfC9b86Phciulc6o7ulMyKmr6d1RmN0XLIm
Ltytuxr+U7l9/VSn8b80aeEnjt9XiOhe6Yzuls6I6LyR285o4PgYlSpfwzqL
um234Xpz7X8dnwsR3Smd0d3SGRHT1xM7ozEmLkXTln6pe5p3Uu7bAlWjbku9
9MYux+8vRHSndEZ3S2dE9AyXb0/Q0MnvqHzluvLxC1KrRwdozqofHZ8LEd0n
ndHd0hkR09dTO6MxZkeKZsZ+pyate8rXP1gVazTSqOmbtWJnmuP3GyK6Szqj
u6UzInqOZj/v0TO3qtKdTZTb119NH+ql6dH7HJ8LEd0lndHd0hkR09eTO6Mx
dkeqXl/1k1q2629dI2POox7yyhrF7KA1ImL2SWd0t3RGRM8yenuSXnrzA9Ws
28raz7v+fZ01Zennjs+FiO6Rzuhu6YyI6evpndEYu/Os5q35r9o89sK513n5
VbxMVQ0cF209x3T6/kNEd0hndLd0RkTP0+znPWXxp7r73n/Jx9ff2td74vx/
Oz4XIrpDOqO7pTMipq83dEajaY0L1x/Vo0+MUVjeoipULEJPj1io5VsTHJ8N
EXO+dEZ3S2dE9EzNHjuvRX2jhi26WPs1Vq3dXGNnb3d8LkTM+dIZ3S2dETF9
vaUzWu5K0+J3j6trvynKW6ik8hYsbr3mX7bltPOzIWKOls7obumMiJ6r2Utn
1srv1ezh3vILCNXtVe7R8KkbFPt+quOzIWLOlc7obumMiOnrVZ3xd5duPqVe
g19XoWLlFZqnsLr2e0WLNx53fC5EzLnSGd0tnRHRszVN8Y3VP1vnT/sH5VHp
2+/U8xNXWesdnZ4NEXOmdEZ3S2dETF9v7IzGZVvj1e/FJSpWurICg/Na11PP
/3/27gOsqiPh//h/S3YT4cKVjogFULH3hgXF3nvvGltQY++9t2jEXkFEejPG
3hGwZLPJZuOmlzXVaOxiz+/PTF7fN5vNydXrheHe+Z3n+TybqJHhJIvD98yZ
OXxZ+biIyDGxM+qNnZGo4BN77EQf/AG9hs2TX68DylTFpMWJSOZ+3kSUB9gZ
9cbOSGTMXjujIPZmnPHaHpStXE++JyPOiYnc/63ycRGR42Fn1Bs7I5F9kPt5
H72KQWNWwtsvEP4ly+HVOVFIPHVH+diIyLGwM+qNnZHImD13RiHp9L3cr+tH
UblWU5hc3NGxzwRsTf9S+biIyLGwM+qNnZHIjpx7jLgTNzB8ygb4lQiGd9FA
jJi6Se67o3xsROQw2Bn1xs5IZMzeO6Mg3ocRZwuKMwadTWa07DJSnj2oelxE
5DjYGfXGzkhkf8Q5ga/O2YkSpSrnfv32z/3/7yq51lH1uIjIMbAz6o2dkciY
I3RGISXzAVZF/x0hTbrCydmMRm36IyL2PeXjIiLHwM6oN3ZGIvuUeDoHk5cm
o1T5WjC7e6PPiAXYeeCS8nERkf1jZ9QbOyORMUfpjEJK1gNExF9A4zYD4Gxy
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
7zvl4yKivMHOqDd2RiJj7IzWSc16iPVJH6Fp+yEwubijZsP2WLYtS/m4iChv
sDPqjZ2RiJ5G0ul7mLfuCCrVCINT7vywY5+J2Jr+pfJxEZHtsTPqjZ2RyBg7
o/VSsx9jc/oXaN1tFExmT1Su1RQLNhyTZxCqHhsR2RY7o97YGYnoaSVn3sfS
rZmoUa8NnExmtOryCjYkf6x8XERkW+yMemNnJDLGzvh80rIfYfver9Gp32SY
3X1QtlI9zFr1JlKzHyofGxHZDjuj3tgZiehZpGQ+wKqotxES1lXu5924zQCs
ifun8nERke2wM+qNnZHIGDvj8xPrF3ceuvRzh/DyR2BwdUxZmizPjFE9NiKy
DXZGvbEzEtGzEvt5R8S/j0at+8v9vOuFdcNrUW8pHxcR2QY7o97YGYmMsTPa
hmiNMUevYuCY5fD2C4B/QHmMnRuNpIwc5WMjoufHzqg3dkYisoZ4v2Vjyido
3mkYnF3dUb1eayzZclr5uIjo+bEz6o2dkcgYO6MNnXuMuBM3MGzyehQtHgzf
okEYOW0z4k/cUj82Inou7Ix6Y2ckImuJ/bzF96Dteo2Fq5s3KlZvhHlrDyPt
7CPlYyMi67Ez6o2dkcgYO6PtJZy8jTGzo1A8qBI8vYthyLhV2H3smvJxEZH1
2Bn1xs5IRM9DNMXI/d+i68BpcPPwRekKtTF95R6kZj1QPjYisg47o97YGYmM
sTPmjcRTOZi0JBFB5WrK82H6jlyE6IM/KB8XEVmHnVFv7IxE9LzEHjvRhy+j
z4iF8PQpjoBSVTBxYTySTt9TPjYienbsjHpjZyQyxs6Yd5Iy7uZ+/XkT5ao0
gIurB7oNmoEde79RPi4ienbsjHpjZyQiWxCtUbzjIt518SkaBL8SwRg9awcS
Mu4oHxsRPRt2Rr2xMxIZY2fMW8mn72HBhuOoUrsZnE1uaN9rHDanf6F8XET0
bNgZ9cbOSES2FHfyptzDu2jJcvAuUhLDJ62Xe3yrHhcRPT12Rr2xMxIZY2fM
e8mZ97F8+1nUatABTs5mNO84DOsSP1Q+LiJ6euyMemNnJCJbSzh5B+PmxSCg
dFX59WXg6OWIOfyj8nER0dNhZ9QbOyORMXbG/JGS9QCrYt5Bg2Y94WRyRcOW
fbA65l3l4yKip8POqDd2RiLKC4mnczB1eSrKVKgjz6LuNWweog58r3xcRGQZ
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
GYn1SR8qv39ERtgZ9cbOSET2TOx9OGlxAoLK1pDnP/cdufh/n/HGn7qF4VM2
wD+gPDw8PDFy5Ei88847yMnJybO++OtLfBzx8d577z288sor8PL2gV+xMhgx
eQNij15Xfv+Ifgs7o97YGYmMsTM6npSsB1gT90+Etuor1zXWa9pNtseZq95E
uSoN4ObmgVGjRsl3pMXeiyquJ/PJjIwMuR+42PsntEVvrI55V/n9I/ot7Ix6
Y2ckInuXlHE3dy64V57L52r2RPfBM7Eu8UP0D18Cz9w/34LLlsXGjRvlmX/5
+fz5l5f4uGL/xi1btshn0WLfxv7hS60645Aor7Ez6o2dkcgYO6NjEu+/bEj+
GM06DoXJxR3FgyrJvXm8fYtgwYIFcj2hqjnkLy+xtvGDDz6Q58S4mgvLPcDX
/WL9JVFBwc6oN3ZGInIE4gzpBeuPoUqtpnA2uck1g2J9Y506dZCampqvaxh/
7xLj2LNnD0Lq1ZOtcdDY1Yg7cUP5/SP6JXZGvbEzEhljZ3RcqdmPsTX93/Jr
30uFnOHu7iEbo3hOXRDmkE8u0Ts//fRTDBo0CK5mN3ToPR7b3/hK+f0j+iV2
Rr2xMxKRo0jOvI+lW7Plft5//OOfUKtWLaSlpcl9EgvSJd652bt3L0JCQuBT
NBBj5kTJsau+f0RPsDPqjZ2RyBg7o2MTX/PC2g6Ak5MTJkyYIPfZLkiN8ckl
zp/5xz/+gc6dO8PVzRsDx6zkc2sqUNgZ9cbOSESORLw/XapcTZQqVQpRUVHy
7OeCeInWuHPnTlSoUFF+Pz/79f3K7x3RE+yMemNnJDLGzui4Ek/dQd+RC2W3
69evn9yPMS/Pk37eS5xHLc6ibtiwIYoWD8bERfFyTabq+0gksDPqjZ2RiBzF
2oR/oX7zXvD29sHy5ctx48YN1VPA371u376NZcuWoai/P+o17cG9vKnAYGfU
GzsjkTF2RsclzhUsUaoSQkNDZb8rCPsxWrrEc+utW7eiTJkyqFGvDZZvP6v8
PhIJ7Ix6Y2ckIkcQe+wGug2aAdfCnhg9ejQuXrxYIN9z+fUl9hUPDw+HubA7
ug2eieiDl5XfSyJ2Rr2xMxIZY2d0TGvi3kdIk64oXryEPLOvoO2583vXtWvX
MHnyZLi5e6JzvymIOvC98vtJxM6oN3ZGInIE4+bvRtGS5dCqVWtkZWUV6Pdc
fnmJFvrWW2+hdevWcq/G8bmfB995IdXYGfXGzkhkjJ3R8SRl5KD38Pko7OaF
cePG4dtvv82/iaANLjGXFHs1dujQIXcuGYQJC2ORdob/DZJa7Ix6Y2ckInu3
Nu6CfAYdEBCIyMhIPHjwQPWU75kusb+OGHdw2bIICeuK1bveUX5PSW/sjHpj
ZyQyxs7oeOZGHELZyvXQqFEjHD9+3G6eVf/yEnPJ7du3o0yZYDRs2QcR8ReU
31fSGzuj3tgZiciepWQ9wIBRS2F298arr75qd8+gn1xXrlzBmDFj5LP0gWOW
IyHjjvJ7S/piZ9QbOyORMXZGxxJ7/Do69B4PD08vrFixAnfu3Mm/yZ+Nr++/
/x7Dhg3L/d7eB69M3YTU3Dmy6vtL+mJn1Bs7IxHZs2XbslC1dnPUqVsXBw4c
sMtn0OIS77wcPnwY9evXR+WaTbB4c4bye0v6YmfUGzsjkTF2Rscya/U++fWu
Xbt2ch8be77EHDg5ORlVq1aV5wtGxL6n/P6SvtgZ9cbOSET2Sqxl7DtiIQq7
eWP27Nm4fv266inec13iGfqMGTPg7uGF/uFLuKaRlGFn1Bs7I5ExdkbHIfZl
7Dpwmpx3vfbaa3Z19ovRdfnyZQwfPhye3n54dVYk0s9wz29Sg51Rb+yMRGSv
xD6GtRq0Q926dXHw4EG7OF/a0nX06FHUr98ANeq1wfLI88rvMemJnVFv7IxE
xtgZHcfK3HlWtbot0bhxY5w8eTL/Jnt5eIm5cFRUFMqUKYNWXcOxbe9F5feZ
9MTOqDd2RiKyV69M3Qxv3xIYP348fvjhB9VTO5tcN2/elPtMunv65v65vIXn
BZIS7Ix6Y2ckMsbO6DjCp22R88hJkybJfbLz4vrkk09k9xN7cDdt2hQNGzZE
jx49sGjRInlGdF7s93PhwgV06tQJwZVCMG/dEeX3mfTEzqg3dkYiskcxh39E
yy4jUbJkSURHR+fJPE3F3FA8hxafT3BwMNp0H4Xte79Wfq9JP+yMemNnJDLG
zugYEk7eRrueY1GsWDFERkbmyTsxhw4dkvNHV1dXFCpUCC+88AL+/Oc/469/
/SucnZ0RGBiIxYsXy/NbbHk9ePAA06aJ98G9MXLKRr47TUqwM+qNnZGI7JE4
/6VyraZo27Ytzp8/b9P5mbhUzQ3FJRqm2I+8YvXGWLTplPJ7TfphZ9QbOyOR
MXZGx7Am7n3UCe0o35k+deqUzedyYj+f0NBQOX8sXLgwwsLC5LrJefPmybWG
np6e+OMf/whfX1+sW7cOOTk5Nv344jl56dKl0bHvREQfvqz8fpN+2Bn1xs5I
RPbo1TnRKFKsNCZMmGDzd11Uzw3FeTDi3Wkv32IYOzda+b0m/bAz6o2dkcgY
O6NjEOdMl8r9Ojd48GB89tlnNp3HXbp0CSNGjJDzyOLFi2PNmjX47rvv5N44
t2/fxtWrV7Fr1y5UrlwZf/jDH9C+fXubn3Ut2mmjRo0Q0rQ7Xue506QAO6Pe
2BmJyB71Gb4AHp4+iIiIsOn7ywVhbije3Vm9ejV8fYvIc6dTMu8rv9+kF3ZG
vbEzEhljZ3QMo2Zuh7dfIGbOnIlbt27ZdB4n3okJCQnB//t//0/uvSPmkb9+
L1s8oxbPysV8s0qVKti7d69Nx/Dpp5/KvX7KVW2ABRuOK7/fpB92Rr2xMxKR
vYk/cQttuo1CqVKlkJCQYNN5WUGYG4pLfF4VKlSQewdFHfhe+T0nvbAz6o2d
kcgYO6NjGDhmOTw8feVzXVvvzbhz5045R3VycpLPq42eh69YsQLu7u5yj8iY
mBibjuHatWsYPnw4igWUx9TlqcrvN+mHnVFv7IxEZG+27b2Ixq36oU6dOrIL
2vIqCHNDcR09ehQNGjRAo9b9sSH5I+X3nPTCzqg3dkYiY+yMjqHny3Pg6+uH
LVu22HwOJ/bfGTZsGMLDw5GZmfmbv+bhw4eYPHmy3Pu7YsWKSE9Pt+kYHj16
hPHjx8O7SEmMn79b+f0m/bAz6o2dkYjszbrEDxAS1hnNmjUznL9ZexWEuaG4
xNk2LVu2RN3GnbE65l3l95z0ws6oN3ZGImPsjI6h68DpKFrUX541bevr3r17
uH79Om7cuCHPfv6tS8w3n7w/06dPH3zwwQc2H8fUqVPh5eOPV+fsVH6/ST/s
jHpjZyQieyP2s67dsD3atGlj87OmC8rc8N1335VnTtdq0BavRb2l/J6TXtgZ
9cbOSGSMndExdBs0I886429dYq4onkuL8wNffvlllC1bFn/5y1/kuzn79u2T
z7BtfU2ZMoWdkZRhZ9QbOyMR2ZuI2H+idmgHtG7dGufOnbP5vOzXl4q54Tvv
vIO2bduiZsN2WLnzb8rvOemFnVFv7IxExtgZHUN+d8aVK1fC398fLi4uePHF
F/GnP/0JlSpVQmJionzGnRfX/3XGaOX3m/TDzqg3dkYisjf53RlVzA3/rzO2
Z2ekfMfOqDd2RiJj7IyOoevAafnaGbdu3YpatWrlfsyici4p3okR5wnWrFkT
sbGxNj/zWlzTpk2TnXHMnCjl95v0w86oN3ZGIrI3a2Lek/0tL96b/q1Lxdzw
yXvTNevzvWnKf+yMemNnJDLGzugYegyZjSJF/OUcLz+uO3fu4PLly/j+++/x
/vvvy2fY5cqVk3t9izMFd+zYYXj2oDWXOEN74sSJ8PIpjnHzYpTfb9IPO6Pe
2BmJyN5ExF9AnUad0aJFC2RnZ9tsTmZ05ffcUFxvvfUWWrVqhTqhHbEq+u/K
7znphZ1Rb+yMRMbYGR1D//Al8PTyRUREhE3nb09ziTmjmFuKxlm6dGn88Y9/
xKBBg/DJJ5/Y7GOIZ+CvvPIKipYoiylLk5Xfb9IPO6Pe2BmJyN5s2fMlQlv0
Qb169XD06FGbzcme5sqPuaG4Tp48iUaNGqFhy77yfG3V95z0ws6oN3ZGImPs
jI7hlamb4eVbAvPmzUNOTo7N5m9iz+4ff/wR33zzDa5du4ZHjx4Z/lrx7Lpj
x47yPZnmzZsjKyvLZuP48ssv5VmFZSrWxdy1h5Xfb9IPO6Pe2BmJyN7EHr0m
v/8V57GkpKTYbE5WUOaG4kpNTUWVKlXQums4duz9Wvk9J72wM+qNnZHIGDuj
Y5i2PA0BZaphxIgRuHjxos3mb1999RVGjhwJb29veXbgv/71L8Nfe+nSJQwe
PFjOJcPCwpCRkWGzcZw5c0bOT2vzvRhShJ1Rb+yMRGRv0s78hO5DZsHL2web
Nm2y2ZysoMwNxbV+/Xq5H2Tv4fORlHFX+T0nvbAz6o2dkcgYO6NjWBX1NmqE
tJZ71Jw9e9Zm87fbt28jPDxczg8bNGiA48ePG/7aDz74AF26dJG/tmfPnrhw
4YLNxhEfH4/y5cujTffRiNz/rfL7TfphZ9QbOyMR2aNXpm+Bd5EAzJgxAzdu
3LDJnKygzA0fPHiAyZMnw9PLD+EztiH93GPl95v0ws6oN3ZGImPsjI5h97Fr
aNllBAIDAxEXF2ezOZw4f2Xx4sVwdXWF2WzGmjVrcP/+/d/8dWIPnpIlS8q5
pDiz5cqVKzYbw/z58+Hu4YUh41YhNeuh8vtN+mFn1Bs7IxHZowXrj6F8lQbo
1q0b3nvvPZvNy1TPDcX10Ucfyc+Le+qQKuyMemNnJDLGzugYxLsxQ8a9Dk9v
P8yZM0eem2Kr69y5c/Kswj/84Q+yY65bt07ux/Pkunr1KrZs2YLKlSvjT3/6
E2rWrIl9+/bZ7EzBzz//HL1790ZAmaqY8dobyu816YmdUW/sjERkjyL3fYew
toMQHByM5ORkm8zLxKV6biguseek+P2btB+MTamfKb/XpB92Rr2xMxIZY2d0
HAs3nkCFaqFo27Ytzp8/b7N5nHgvRcwfixUrJs8LdHFxkc+mxbsy4oy/UqVK
yWfaf/7zn+Hl5YXXX39dvlNjq0vMi8U8MqztQGxM+UT5fSY9sTPqjZ2RiOxR
WvYjDBq7Eh5eRTB79mybvTutem547949TJ8+Xb7rIr4+p2Q9UH6vST/sjHpj
ZyQyxs7oOGKPX5f7F3r7+GDz5s02fWYs5obiTL969erJ+aR4fi3mjoL46xde
eEGe07J3717cvHnTZh9XrMucMGFC7jzSG8MmruM8kpRhZ9QbOyMR2aslWzJQ
qUYYmjZtiszMTJvN0VTNDcX1ZD2leL6+cONx5feY9MTOqDd2RiJj7IyOQ7w7
PXFRPEoEVUKfPn1+9/w/ay7x7FicMXjy5En5LsysWbMwb948REVFITs7G99+
++1v7s/zPNfhw4fl/LVa3ZZYvj1b+T0mfbEz6o2dkYjsVcLJ2+jcf4pc+7dy
5UrcvXvXZvM0FXPDR48eYdmyZfDy8kbXgdMRc/Sq8ntMemJn1Bs7I5ExdkbH
EnngOzTt8DJ8fYvI+Z6Yi9nyEnt6P3z4UM5RxVpD8Sxb/LX4MfFztrzEs+9J
kybBzd0TA0YtQ0LGHeX3l/TFzqg3dkYislvnHmPOmgMIrhQi1xdmZWXZdL6W
n3NDcYm1jK1atcr9/r5W7vf5++RzduX3mLTEzqg3dkYiY+yMjiXt7CNMWpyI
gNJV0KFDB/ztb3+z+fwuvy7xLk7VqlVRo15rrNhxTvm9Jb2xM+qNnZGI7Fn8
iVvoMmCqfHYr1htev35d9TTPqisnJ0fuM+nu7oFug2cg5uiPyu8t6YudUW/s
jETG2Bkdz+4jV9G+97jcuaQHFixYYJdzyS+++AIDBgyQ52ePmLwBSafvKb+v
pDd2Rr2xMxKRXTv3GEu3Z6NK7eaoWLEi0tPTVU/1rLr27NmDGjVqoHKtJli8
6RTXMpJS7Ix6Y2ckMsbO6HjEnGvp1szcOVhTlCtXTp7XnBfvreTVJfbx+Xnf
HS/UCe2IVdFvK7+nROyMemNnJCJ7l5J5H8MmroW3X0m5j/f777+vesr3TNcn
n3yCvn37opCTCT1eni2fq6u+p6Q3dka9sTMSGWNndEzJuXPJkVM2wtc/CB07
drSr96fT0tJQvXp1eXbhiy86ISSsK5ZtO4PU7MfK7yvpi51Rb+yMROQIIt/8
Vn5PLN47Fu9PX716VfW076kuse/j3Llzc8ftjj/kzg/N7j7o0n8qNqd9rvye
kr7YGfXGzkhkjJ3RcUUfvoz2vcbBXNgd48aNk+cBFvTr7bfflvtKevn4o3W3
cNRr2g0mF3f4lyyPoRMiEH3wsvL7SnpiZ9QbOyMROQKxj/eybVmoWrs5SpQo
gcjISDx48ED19O93r8ePH2PHjh0oXbo0KtdsIveZFGfavFTIhEq5fz9z1V4k
Zd5Vfm9JP+yMemNnJDLGzui4xPvTa+PeR72wrvD09JLvIhfkvRr//e9/Y9iw
YTCb3dCp32Rse+MrRO7/Nvf7+zUoWqIsnE1mNGzeG8sjz8t5sur7S3phZ9Qb
OyMROQrx/vT4+btRolQl1KxZE/v27SvQ++vs378f9erVg3/Jshg7bxfiTtzA
uvgLaNtjNNw8fODp4y/PhNmy50vl95b0ws6oN3ZGImPsjI4tNesh5q87ggrV
QuVz661bt+Lu3bv5Nzl8yuvKlSuYOnWqfB+mUev+WJtwQbZE0UoTTt7Goi0Z
qNukK5xc3FA8sKI8GybmMM8YpPzDzqg3dkYiciTxuXOrAaOXw8u3GFq2bInM
zEzVU8HfvM6ePYu2bdvCw9MXA8csR+zx63L8Yi8dsT/j+AWxKF2hjlzbWKV2
M8x+fT/PDqR8w86oN3ZGImPsjI4vOXe+JeZhAaWroFSpUti+fTvu3LmTf5NE
C9cPP/yAGTNmyHNfatRrLc+wEX30l59DStYD7Nj3jfwev0jx0rI3Nm7VD6t2
/o1nDVK+YGfUGzsjETma6IM/oHO/ySjs5oU2bdogKytL9ZTwPy7RGMVeOq5m
N7kXo3jHJf3Mf+7VnZRxFxGx/0Srrq/A1d0bXr4lcv+8no1tey4qv7/k+NgZ
9cbOSGSMnVEPiafuYNTM7SgWWB7FihXDkiVLcOnSpfybLBr99/XRRxgxYgTc
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
/R+0cU2F
    "], {{0, 1044}, {1306, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{348.5744791666663, Automatic},
  ImageSizeRaw->{1306, 1044},
  PlotRange->{{0, 1306}, {0, 1044}}]], "Output",
 CellChangeTimes->{3.772879571565897*^9, 3.772907869353251*^9, 
  3.772968615947962*^9, 3.7730589632929296`*^9, 3.773059062951619*^9, 
  3.773150144341042*^9, 3.7732446946773787`*^9, 3.7733468845224123`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"ac6a9a79-6087-4dd8-a00e-3ad6bca579f4"]
}, Open  ]],

Cell["\<\
These are our labels for alpha and beta.  We use the exact same methods to \
find the coordinates that were used for V3E5L0N1T1_1.  \
\>", "Text",
 CellChangeTimes->{{3.7727350513588457`*^9, 
  3.772735122670938*^9}},ExpressionUUID->"54dfc02e-f7ed-4495-bac2-\
524f27f64cab"],

Cell["\<\
We want the distance between w1 and w2 to be exactly 1 to get a self tangency:\
\>", "Text",
 CellChangeTimes->{{3.7727197675139513`*^9, 3.7727197733316708`*^9}, {
  3.7727198559301453`*^9, 
  3.772719875414104*^9}},ExpressionUUID->"14f867e9-5e44-48cf-98b1-\
5eabaf46436c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Beta]", "/", "2"}], "]"}], "*", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], "-", 
           RowBox[{"\[Alpha]", "/", "2"}], "+", 
           RowBox[{"ArcCos", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox["2"]}], ")"}]}], "]"}], "+", 
           RowBox[{"Pi", "/", "2"}], "-", 
           RowBox[{"\[Beta]", "/", "2"}]}], "]"}]}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "/", "2"}], "]"}]}], ")"}]}], ")"}], "^", "2"}],
     "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Beta]", "/", "2"}], "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", 
         RowBox[{"\[Alpha]", "/", "2"}], "+", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}], "]"}], "+", 
         RowBox[{"Pi", "/", "2"}], "-", 
         RowBox[{"\[Beta]", "/", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.772719895646756*^9, 3.772719918482823*^9}, {
  3.772721484515283*^9, 3.7727215004573803`*^9}, {3.772721870502953*^9, 
  3.772721881604466*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"eb425463-592d-4ae7-b0d4-cf7c260e5c08"],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{"4", "-", 
    RowBox[{"2", " ", 
     SqrtBox["2"]}], "-", 
    RowBox[{"Cos", "[", "\[Alpha]", "]"}], "-", 
    RowBox[{"Cos", "[", "\[Beta]", "]"}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Alpha]", "-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Beta]", "-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], "-", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Alpha]", "+", "\[Beta]", "-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.772719921643553*^9, 3.772721502520866*^9, 
  3.772721885415462*^9, 3.772879571718316*^9, 3.7729078694921293`*^9, 
  3.7729686161434193`*^9, 3.7730589635893908`*^9, 3.773059063159134*^9, 
  3.7731501445191107`*^9, 3.773244694811247*^9, 3.773346884892058*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"f1f52e77-0b70-48dd-a1bf-2703c5f5bef8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"4", "-", 
        RowBox[{"2", " ", 
         SqrtBox["2"]}], "-", 
        RowBox[{"Cos", "[", "\[Alpha]", "]"}], "-", 
        RowBox[{"Cos", "[", "\[Beta]", "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "-", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Beta]", "-", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], "-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]", "-", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}]}], ")"}]}], "\[Equal]", 
     "1"}], ",", "\[Beta]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7727199391465473`*^9, 3.772719960344919*^9}, 
   3.772721514120111*^9, {3.772721893005999*^9, 3.772721924272499*^9}, {
   3.772721957606731*^9, 3.772721958473184*^9}, {3.7727220050065603`*^9, 
   3.772722006713735*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9e168390-79c8-4bc8-ab8e-8b649016683d"],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,3,1,25401240961842372176,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7727220084173803`*^9, 3.772879571836974*^9, 
  3.772907869622911*^9, 3.772968616298403*^9, 3.773058963791758*^9, 
  3.7730590632880163`*^9, 3.773150144795735*^9, 3.773244694965447*^9, 
  3.7733468851353617`*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"90336593-2026-4165-bbfc-a215e0f8c00d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"37", "-", 
          RowBox[{"26", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "62"}], "+", 
             RowBox[{"44", " ", 
              SqrtBox["2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"25", "-", 
             RowBox[{"18", " ", 
              SqrtBox["2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"12", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "11"}], "+", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "22"}], "+", 
             RowBox[{"16", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"5", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "11"}], "+", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "22"}], "+", 
             RowBox[{"16", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"218", "-", 
                RowBox[{"152", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "598"}], "+", 
                   RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"56", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "41"}], "+", 
                   RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"1270", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"898", " ", 
                 SqrtBox["2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"253", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"174", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"486", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"344", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"269", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"190", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
             ")"}]}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "11"}], "+", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}]}]], " ", 
             RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"37", "-", 
         RowBox[{"26", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "62"}], "+", 
            RowBox[{"44", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"25", "-", 
            RowBox[{"18", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"12", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "11"}], "+", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
         RowBox[{"8", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "22"}], "+", 
            RowBox[{"16", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
         RowBox[{"5", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "11"}], "+", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "22"}], "+", 
            RowBox[{"16", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"218", "-", 
               RowBox[{"152", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "598"}], "+", 
                  RowBox[{"423", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"56", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "41"}], "+", 
                  RowBox[{"29", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"1270", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"898", " ", 
                SqrtBox["2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"253", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"174", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"486", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"344", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"269", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"190", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
            ")"}]}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"7", "-", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "11"}], "+", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}]}]], " ", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"37", "-", 
          RowBox[{"26", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "62"}], "+", 
             RowBox[{"44", " ", 
              SqrtBox["2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"25", "-", 
             RowBox[{"18", " ", 
              SqrtBox["2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"12", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "11"}], "+", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"8", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "22"}], "+", 
             RowBox[{"16", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"5", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "11"}], "+", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"4", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "22"}], "+", 
             RowBox[{"16", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"218", "-", 
                RowBox[{"152", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "598"}], "+", 
                   RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"56", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "41"}], "+", 
                   RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"1270", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"898", " ", 
                 SqrtBox["2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"253", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"174", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"486", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"344", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"269", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"190", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
             ")"}]}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"4", " ", 
             SqrtBox["2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"4", " ", 
                SqrtBox["2"]}]}], ")"}], " ", 
             RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "11"}], "+", 
               RowBox[{"8", " ", 
                SqrtBox["2"]}]}]], " ", 
             RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"37", "-", 
         RowBox[{"26", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "62"}], "+", 
            RowBox[{"44", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"25", "-", 
            RowBox[{"18", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"12", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "11"}], "+", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
         RowBox[{"8", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "22"}], "+", 
            RowBox[{"16", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
         RowBox[{"5", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "11"}], "+", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "22"}], "+", 
            RowBox[{"16", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"218", "-", 
               RowBox[{"152", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "598"}], "+", 
                  RowBox[{"423", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"56", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "41"}], "+", 
                  RowBox[{"29", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"1270", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"898", " ", 
                SqrtBox["2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"253", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"174", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"486", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"344", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"269", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"190", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
            ")"}]}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"7", "-", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "11"}], "+", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}]}]], " ", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
      "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.772719961424871*^9, 3.772721523564701*^9, {3.772721901546879*^9, 
   3.7727219314619503`*^9}, {3.772721994951194*^9, 3.772722009181188*^9}, 
   3.77287957579793*^9, 3.7729078743037977`*^9, 3.772968620230913*^9, 
   3.773058968626614*^9, 3.773059066989052*^9, 3.773150148815324*^9, 
   3.773244698356094*^9, 3.7733468876730433`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"a5accec6-d3cc-4271-9184-dcf9086bf57f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           SqrtBox["2"]}], "-", 
          RowBox[{"Cos", "[", "\[Alpha]", "]"}], "-", 
          RowBox[{"Cos", "[", "\[Beta]", "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "-", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Beta]", "-", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Alpha]", "+", "\[Beta]", "-", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}]}], ")"}]}], 
       "\[Equal]", "1"}], ",", "\[Beta]"}], "]"}], "]"}], "/.", 
   RowBox[{"\[Alpha]", "\[Rule]", ".7"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7727199644270697`*^9, 3.772719971021048*^9}, {
  3.772721556236773*^9, 3.7727216010494204`*^9}, {3.772722044493733*^9, 
  3.772722044952894*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f308d889-83b6-404f-baf0-3a95fca36a37"],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,4,2,25401240961842372176,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.772721560564363*^9, 3.772721603116375*^9, 
  3.772722046132984*^9, 3.772879575970261*^9, 3.772907874489194*^9, 
  3.772968620432308*^9, 3.773058968814185*^9, 3.77305906717911*^9, 
  3.773150149266107*^9, 3.773244698523735*^9, 3.773346887875704*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"cd2d0ae2-fa70-4dfc-863d-a1f9798b5a44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"-", "1.7859069770328402`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", "1.7859069770328402`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"-", "0.7487720002913207`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", "0.7487720002913207`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.772719971384206*^9, {3.772721530716117*^9, 3.7727215613507547`*^9}, 
   3.772721603143058*^9, 3.772722046161683*^9, 3.772879576095121*^9, 
   3.7729078747825212`*^9, 3.7729686204538183`*^9, 3.773058968837384*^9, 
   3.773059067244302*^9, 3.773150149291379*^9, 3.7732446985973043`*^9, 
   3.773346887894992*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a70c0e10-11c1-453a-88d4-d78504bf0b52"]
}, Open  ]],

Cell["\<\
Both angles can\[CloseCurlyQuote]t be acute, because that would cause circles \
to overlap.  Also, notice that there is symmetry between the first and second \
solutions; if \[Beta] is negative then \[Alpha] will have a positive lower \
bound and then if \[Beta] is positive then \[Alpha] will have a negative \
lower bound.  We will choose the second solution.  \
\>", "Text",
 CellChangeTimes->{{3.772723642020998*^9, 3.772723665706719*^9}, {
  3.772724079513672*^9, 
  3.772724229056937*^9}},ExpressionUUID->"cd0900e2-032e-41bc-a3f4-\
93b73a61973d"],

Cell[TextData[{
 "So",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"37", "-", 
         RowBox[{"26", " ", 
          SqrtBox["2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "62"}], "+", 
            RowBox[{"44", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"25", "-", 
            RowBox[{"18", " ", 
             SqrtBox["2"]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"12", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "11"}], "+", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
         RowBox[{"8", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "22"}], "+", 
            RowBox[{"16", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
         RowBox[{"5", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "11"}], "+", 
            RowBox[{"8", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
         RowBox[{"4", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "22"}], "+", 
            RowBox[{"16", " ", 
             SqrtBox["2"]}]}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{"218", "-", 
               RowBox[{"152", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "598"}], "+", 
                  RowBox[{"423", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"56", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "41"}], "+", 
                  RowBox[{"29", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"1270", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"898", " ", 
                SqrtBox["2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"253", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"174", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"486", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"344", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"269", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"190", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
            ")"}]}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"7", "-", 
           RowBox[{"4", " ", 
            SqrtBox["2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", 
               SqrtBox["2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "11"}], "+", 
              RowBox[{"8", " ", 
               SqrtBox["2"]}]}]], " ", 
            RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
      "]"}]}], "}"}]}]],
  CellChangeTimes->{3.772719961424871*^9},ExpressionUUID->
  "2d8d1782-e3fe-45b6-b89e-36bcb0bd8dd7"],
 "}"
}], "Text",
 CellChangeTimes->{{3.7727200423384247`*^9, 3.772720063102785*^9}, {
  3.77272164747542*^9, 3.772721655821295*^9}, {3.772723206181395*^9, 
  3.7727232061817913`*^9}, {3.772724474797517*^9, 
  3.772724474797991*^9}},ExpressionUUID->"f0fd063a-9b94-46c2-8b58-\
0e41b6ac020b"],

Cell[CellGroupData[{

Cell["Circle Centers and Radii", "Section",
 CellChangeTimes->{{3.5801358843541727`*^9, 3.5801358938578777`*^9}, {
   3.580135983361384*^9, 3.580136022519301*^9}, {3.5801360744318657`*^9, 
   3.580136129319181*^9}, {3.5801361649266577`*^9, 3.580136172638129*^9}, 
   3.580137288315072*^9, {3.738968272803437*^9, 
   3.738968275929782*^9}},ExpressionUUID->"58eac1c0-3dea-4423-bd3e-\
40f227e6c6e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centers", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", 
         RowBox[{"\[Alpha]", "/", "2"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", 
         RowBox[{"\[Alpha]", "/", "2"}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", 
         RowBox[{"\[Alpha]", "/", "2"}], "+", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", 
         RowBox[{"\[Alpha]", "/", "2"}], "+", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.580136177308535*^9, 3.580136179171814*^9}, {
   3.580136503069532*^9, 3.5801365242670403`*^9}, {3.5801366092985077`*^9, 
   3.5801366187932167`*^9}, {3.580136774719491*^9, 3.580136834214714*^9}, {
   3.581161189563879*^9, 3.5811611910179033`*^9}, {3.581162246230188*^9, 
   3.581162252420905*^9}, {3.5811807277212677`*^9, 3.581180728369059*^9}, {
   3.581249304247542*^9, 3.581249309950296*^9}, {3.581856430167595*^9, 
   3.581856435324327*^9}, 3.581856579444117*^9, 3.581949050188841*^9, 
   3.5821221276386747`*^9, {3.603189551629287*^9, 3.603189565643222*^9}, {
   3.603189609482428*^9, 3.603189613652946*^9}, {3.603189654579599*^9, 
   3.6031896669609737`*^9}, {3.6031897190835533`*^9, 3.603189750743*^9}, {
   3.60318982076628*^9, 3.603189864251156*^9}, {3.603189957383436*^9, 
   3.603190014106585*^9}, {3.603190354461308*^9, 3.603190379460342*^9}, {
   3.603190446796294*^9, 3.603190471082831*^9}, {3.603200136461424*^9, 
   3.603200145356838*^9}, {3.6032005524535427`*^9, 3.6032005583856363`*^9}, {
   3.603200610604084*^9, 3.6032006170171556`*^9}, {3.603208864215802*^9, 
   3.603208871415516*^9}, {3.603208907883963*^9, 3.6032089230664883`*^9}, {
   3.603209737765788*^9, 3.60320975335511*^9}, {3.603209799325831*^9, 
   3.603209818266766*^9}, {3.6032098728099117`*^9, 3.6032098944195213`*^9}, {
   3.603209931632629*^9, 3.603209962125792*^9}, {3.60321001694599*^9, 
   3.603210027245778*^9}, {3.603396922774719*^9, 3.6033969253858356`*^9}, {
   3.6041600565318604`*^9, 3.604160063466571*^9}, {3.604160129468203*^9, 
   3.604160137516892*^9}, {3.604160410525029*^9, 3.604160459437255*^9}, {
   3.607702577464778*^9, 3.6077026859072313`*^9}, 3.607702718438018*^9, {
   3.607702766704297*^9, 3.607702771123233*^9}, {3.607702834349827*^9, 
   3.6077028704958897`*^9}, {3.607702905106476*^9, 3.6077029340880127`*^9}, {
   3.607721314063161*^9, 3.607721331170704*^9}, {3.607722031413314*^9, 
   3.607722055343772*^9}, {3.607723019202793*^9, 3.6077230193706284`*^9}, {
   3.607723088833664*^9, 3.6077230930652037`*^9}, {3.607784137394079*^9, 
   3.607784138297284*^9}, {3.607784172536047*^9, 3.607784172808009*^9}, {
   3.607784207071515*^9, 3.6077842073342943`*^9}, {3.64658685271181*^9, 
   3.646586901304575*^9}, 3.646589213022106*^9, {3.647265327583839*^9, 
   3.647265377526716*^9}, {3.6472654478218307`*^9, 3.647265449933269*^9}, {
   3.647265600839241*^9, 3.64726560406954*^9}, {3.647265654927711*^9, 
   3.6472656552034407`*^9}, {3.647337189780779*^9, 3.6473371922980137`*^9}, {
   3.647358754940711*^9, 3.6473587802026157`*^9}, {3.647358815060773*^9, 
   3.64735891891053*^9}, {3.647359323051045*^9, 3.647359323266325*^9}, {
   3.647359490142714*^9, 3.6473594903490458`*^9}, {3.708339128276898*^9, 
   3.708339146748768*^9}, {3.7083392046218233`*^9, 3.70833929546239*^9}, {
   3.70833936380539*^9, 3.708339366708869*^9}, {3.7083395305425997`*^9, 
   3.708339542692808*^9}, {3.709911219850903*^9, 3.709911310528606*^9}, {
   3.709911376635076*^9, 3.7099114017832193`*^9}, {3.7099364229736023`*^9, 
   3.709936479710487*^9}, {3.709936521319626*^9, 3.7099365413560467`*^9}, {
   3.70993658303992*^9, 3.709936720300333*^9}, {3.709936845411962*^9, 
   3.709936851785589*^9}, {3.709937394994767*^9, 3.7099373977707977`*^9}, {
   3.709985555814768*^9, 3.709985557252273*^9}, {3.7099966850636806`*^9, 
   3.70999668531816*^9}, {3.7389680487355833`*^9, 3.7389680751162853`*^9}, {
   3.738968139577276*^9, 3.738968177908936*^9}, {3.73896821544709*^9, 
   3.7389682177506027`*^9}, {3.7396342045450773`*^9, 3.739634210032503*^9}, {
   3.771591731498231*^9, 3.771591733191414*^9}, {3.771591798885579*^9, 
   3.771591811660029*^9}, {3.771593244657754*^9, 3.7715932519509783`*^9}, {
   3.7715969956827793`*^9, 3.771597030737811*^9}, 3.771603014909193*^9, {
   3.7716030729844017`*^9, 3.7716031029867992`*^9}, {3.771604858510186*^9, 
   3.771604862970064*^9}, {3.7716151081096287`*^9, 3.7716151143637543`*^9}, {
   3.7716172447750607`*^9, 3.7716172498684483`*^9}, {3.771797157888875*^9, 
   3.7717972123934517`*^9}, 3.772719702791616*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"56b426ba-7978-4852-a10a-3cd4eae9172c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       FractionBox["\[Alpha]", "2"], "]"}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{"Cos", "[", 
       FractionBox["\[Alpha]", "2"], "]"}], 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        FractionBox["\[Alpha]", "2"], "-", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["\[Alpha]", "2"], "-", 
        RowBox[{"ArcCos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["2"]}], ")"}]}], "]"}]}], "]"}], 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.738968228490417*^9, 3.738969457891824*^9, 3.7389697815496817`*^9, 
   3.739634211347806*^9, {3.771597007519848*^9, 3.771597031089299*^9}, 
   3.771597147887142*^9, 3.771603109748917*^9, 3.771603230209684*^9, {
   3.771604864621407*^9, 3.7716048751801767`*^9}, 3.771615116703053*^9, 
   3.7716172501637497`*^9, 3.771622749389048*^9, 3.7716243239861727`*^9, 
   3.771767582189125*^9, 3.7717972189120293`*^9, 3.771799085627952*^9, 
   3.771882713257772*^9, 3.772061039442058*^9, 3.77272008580365*^9, 
   3.7727208915151577`*^9, 3.772879576262842*^9, 3.772885206147038*^9, 
   3.772891483100237*^9, 3.772907874823058*^9, 3.77296862049496*^9, 
   3.7730589689003363`*^9, 3.773059067287359*^9, 3.773150149448176*^9, 
   3.7732446986465607`*^9, 3.773346887954504*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0abe955f-cf47-4509-97f0-74c435bd1502"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lattice Vectors", "Section",
 CellChangeTimes->{{3.5801372743016376`*^9, 3.5801373048748693`*^9}, {
  3.580137407171616*^9, 
  3.5801374162247047`*^9}},ExpressionUUID->"dd1d0949-4425-489a-9138-\
ef893592d4c8"],

Cell["We are working this flat torus", "Text",
 CellChangeTimes->{{3.582369864772891*^9, 3.5823699271444187`*^9}, {
  3.582369973496118*^9, 3.5823699970297337`*^9}, {3.738969423090049*^9, 
  3.738969436681583*^9}, {3.7715975872130003`*^9, 3.771597588982992*^9}, {
  3.771603132939183*^9, 
  3.77160313547442*^9}},ExpressionUUID->"200ae999-c74e-4e08-bfe2-\
f7fa1b43f45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"latticeVectors", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "/", "2"}], "]"}]}], ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ArcCos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"37", "-", 
               RowBox[{"26", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "62"}], "+", 
                  RowBox[{"44", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"25", "-", 
                  RowBox[{"18", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"12", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"8", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"5", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"4", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
                  ")"}]}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"7", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                 RowBox[{"2", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                  RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}],
             "]"}], ")"}], "/", "2"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "-", 
          RowBox[{"\[Alpha]", "/", "2"}], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], ")"}]}], "]"}], "+", 
          RowBox[{"Pi", "/", "2"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"37", "-", 
                RowBox[{"26", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "62"}], "+", 
                   RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"25", "-", 
                   RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"5", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
                   ")"}]}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"7", "-", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
               ")"}]}], "]"}], ")"}], "/", "2"}]}], "]"}]}], ",", 
       RowBox[{"2", "*", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ArcCos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"37", "-", 
               RowBox[{"26", " ", 
                SqrtBox["2"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "62"}], "+", 
                  RowBox[{"44", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"25", "-", 
                  RowBox[{"18", " ", 
                   SqrtBox["2"]}]}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"12", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"8", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
               RowBox[{"5", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "11"}], "+", 
                  RowBox[{"8", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
               RowBox[{"4", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "22"}], "+", 
                  RowBox[{"16", " ", 
                   SqrtBox["2"]}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
                  ")"}]}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"7", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["2"]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                 RowBox[{"2", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                  RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}],
             "]"}], ")"}], "/", "2"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], "-", 
          RowBox[{"\[Alpha]", "/", "2"}], "+", 
          RowBox[{"ArcCos", "[", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox["2"]}], ")"}]}], "]"}], "+", 
          RowBox[{"Pi", "/", "2"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"37", "-", 
                RowBox[{"26", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "62"}], "+", 
                   RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"25", "-", 
                   RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"5", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
                   ")"}]}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"7", "-", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
               ")"}]}], "]"}], ")"}], "/", "2"}]}], "]"}]}]}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7727239586041183`*^9, 3.772723982439905*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0c4eaee0-0906-4beb-a970-1a075586bce9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Edges", "Section",
 CellChangeTimes->{{3.581161568527853*^9, 
  3.581161585574769*^9}},ExpressionUUID->"8c1dc234-14dc-4eeb-9527-\
a7c0cd7c55bc"],

Cell["\<\
Here we store the edges a list {i,j,m,n} where center[[i]] is connected to \
center[[j]] + m*latticeVectors[[1]] + n*latticeVectors[2]]
center[[i]] is *always* in the fundamental domain ****the last two numbers \
are winding numbers****\[LineSeparator]\t\
\>", "Text",
 CellChangeTimes->{{3.581161595486527*^9, 3.5811616304139853`*^9}, {
   3.581161665677293*^9, 3.5811617412920313`*^9}, 3.581162242261799*^9, {
   3.581247308234243*^9, 3.581247324583816*^9}, {3.5817831634296637`*^9, 
   3.581783166961875*^9}, {3.738969798091196*^9, 3.738969813400868*^9}, {
   3.771706689824682*^9, 3.771706708949882*^9}, {3.771770398255272*^9, 
   3.77177041972334*^9}},ExpressionUUID->"e7a21d8e-f617-4378-a5da-\
9dc2d5a1e93e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"edges", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1", ",", "0"}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "*)"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.581161747323979*^9, 3.581161777837888*^9}, {
   3.581179208843933*^9, 3.58117924274809*^9}, 3.581181365997052*^9, {
   3.581249342236608*^9, 3.5812493456365433`*^9}, 3.5818566103947773`*^9, 
   3.581949096185699*^9, 3.582122155172645*^9, {3.7389695169453783`*^9, 
   3.738969553568454*^9}, {3.7717976801942177`*^9, 3.771797682903027*^9}, {
   3.771797766491952*^9, 3.7717977665252123`*^9}, {3.7717978690325108`*^9, 
   3.771797922567711*^9}, {3.771798088432259*^9, 3.771798088831314*^9}, 
   3.7727202320520153`*^9, {3.772720298980875*^9, 3.7727203307820873`*^9}, 
   3.772720595465335*^9, {3.772968699985886*^9, 3.7729687155850573`*^9}, {
   3.773059045001998*^9, 3.773059056097918*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],

Cell[CellGroupData[{

Cell["\<\
Check the edge lengths are all 2rs= Sqrt[2]-1 or \
rs+rb=Sqrt[2]rb=Sqrt[2]/2=1/Sqrt[2]\
\>", "Subsection",
 CellChangeTimes->{{3.5811792593456697`*^9, 3.581179272400176*^9}, {
  3.738969559839985*^9, 3.738969575322688*^9}, {3.771598081340612*^9, 
  3.771598085444192*^9}, {3.771604075139793*^9, 3.77160408016324*^9}, {
  3.771617272380292*^9, 
  3.771617292132626*^9}},ExpressionUUID->"13c39ee2-5a3a-466d-965d-\
7a6d5f6b780b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "edges", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P1", ":=", " ", 
     RowBox[{
      RowBox[{"centers", "[", 
       RowBox[{"[", 
        RowBox[{"edges", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"P2", ":=", " ", 
     RowBox[{"centers", "[", 
      RowBox[{"[", 
       RowBox[{"edges", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Edge \>\"", ",", "i", ",", "\"\<: Length is \>\"", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"P1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"P2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", "\[LessEqual]", "\[Alpha]", "\[LessEqual]", " ", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], "]"}]}], "]"}], 
    ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.581179295446331*^9, 3.581179352609571*^9}, {
   3.581179384265609*^9, 3.5811794135767803`*^9}, {3.5811794673296432`*^9, 
   3.581179567921268*^9}, {3.58118010572506*^9, 3.5811801497103157`*^9}, {
   3.581180260610394*^9, 3.581180261131735*^9}, {3.5811803102623568`*^9, 
   3.581180349154674*^9}, {3.5811804523957653`*^9, 3.581180454488806*^9}, {
   3.581180488851935*^9, 3.5811805057442503`*^9}, {3.581180549545892*^9, 
   3.581180573366247*^9}, {3.5811811710286903`*^9, 3.581181171490512*^9}, {
   3.5811813056653357`*^9, 3.581181353392084*^9}, 3.581242444414118*^9, 
   3.581242610726717*^9, {3.581949105825959*^9, 3.5819491081768417`*^9}, {
   3.581949361163632*^9, 3.581949361955078*^9}, {3.58212215863743*^9, 
   3.582122164868064*^9}, {3.738969584524962*^9, 3.738969584955559*^9}, {
   3.738969666208755*^9, 3.738969673635594*^9}, {3.7715977979175987`*^9, 
   3.771597830642771*^9}, {3.771597980732808*^9, 3.771597986444655*^9}, {
   3.771598046811739*^9, 3.771598052074088*^9}, {3.771598191968363*^9, 
   3.771598218647225*^9}, 3.7716032382556562`*^9, {3.771603296654491*^9, 
   3.771603298043535*^9}, {3.7716033527504587`*^9, 3.771603358182477*^9}, {
   3.771603418205394*^9, 3.77160345686306*^9}, {3.771603537270556*^9, 
   3.771603559998033*^9}, {3.771604884658742*^9, 3.7716048887173233`*^9}, {
   3.772119083258698*^9, 3.7721190916143723`*^9}, {3.7727207071216516`*^9, 
   3.7727207279773073`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 1, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.77179793966847*^9, 3.771798115611391*^9, 
   3.771799096299089*^9, 3.771882724912863*^9, 3.772061051582697*^9, 
   3.7721190930076113`*^9, 3.772720116194624*^9, 3.772720237292356*^9, 
   3.772720334794354*^9, 3.772720599155465*^9, 3.772720729193719*^9, 
   3.772720899730113*^9, 3.772721766234321*^9, 3.7727223293996077`*^9, 
   3.772723294488645*^9, 3.7727237725336933`*^9, 3.772723870071476*^9, 
   3.772723990393943*^9, 3.772879576708939*^9, 3.7728852220299683`*^9, 
   3.772891492624619*^9, 3.772907874888019*^9, 3.7729686205804567`*^9, 
   3.7729687187834167`*^9, 3.773058969000637*^9, 3.7730590673686733`*^9, 
   3.7731501499847803`*^9, 3.773244698731526*^9, 3.773346888062891*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"2dfbd219-01c7-4ea9-a053-f02cb53f289f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 2, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.77179793966847*^9, 3.771798115611391*^9, 
   3.771799096299089*^9, 3.771882724912863*^9, 3.772061051582697*^9, 
   3.7721190930076113`*^9, 3.772720116194624*^9, 3.772720237292356*^9, 
   3.772720334794354*^9, 3.772720599155465*^9, 3.772720729193719*^9, 
   3.772720899730113*^9, 3.772721766234321*^9, 3.7727223293996077`*^9, 
   3.772723294488645*^9, 3.7727237725336933`*^9, 3.772723870071476*^9, 
   3.772723990393943*^9, 3.772879576708939*^9, 3.7728852220299683`*^9, 
   3.772891492624619*^9, 3.772907874888019*^9, 3.7729686205804567`*^9, 
   3.7729687187834167`*^9, 3.773058969000637*^9, 3.7730590673686733`*^9, 
   3.7731501499847803`*^9, 3.773244698731526*^9, 3.773346888074937*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"8f832de3-08b5-49a7-a6bb-2927484cb240"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   SqrtBox[
    RowBox[{"3", "-", 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]}]]}],
  SequenceForm[
  "Edge ", 3, ": Length is ", (3 - 2 2^Rational[1, 2])^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.77179793966847*^9, 3.771798115611391*^9, 
   3.771799096299089*^9, 3.771882724912863*^9, 3.772061051582697*^9, 
   3.7721190930076113`*^9, 3.772720116194624*^9, 3.772720237292356*^9, 
   3.772720334794354*^9, 3.772720599155465*^9, 3.772720729193719*^9, 
   3.772720899730113*^9, 3.772721766234321*^9, 3.7727223293996077`*^9, 
   3.772723294488645*^9, 3.7727237725336933`*^9, 3.772723870071476*^9, 
   3.772723990393943*^9, 3.772879576708939*^9, 3.7728852220299683`*^9, 
   3.772891492624619*^9, 3.772907874888019*^9, 3.7729686205804567`*^9, 
   3.7729687187834167`*^9, 3.773058969000637*^9, 3.7730590673686733`*^9, 
   3.7731501499847803`*^9, 3.773244698731526*^9, 3.773346888142005*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"69102a70-60d8-4587-8d39-380f70f4034b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 4, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.77179793966847*^9, 3.771798115611391*^9, 
   3.771799096299089*^9, 3.771882724912863*^9, 3.772061051582697*^9, 
   3.7721190930076113`*^9, 3.772720116194624*^9, 3.772720237292356*^9, 
   3.772720334794354*^9, 3.772720599155465*^9, 3.772720729193719*^9, 
   3.772720899730113*^9, 3.772721766234321*^9, 3.7727223293996077`*^9, 
   3.772723294488645*^9, 3.7727237725336933`*^9, 3.772723870071476*^9, 
   3.772723990393943*^9, 3.772879576708939*^9, 3.7728852220299683`*^9, 
   3.772891492624619*^9, 3.772907874888019*^9, 3.7729686205804567`*^9, 
   3.7729687187834167`*^9, 3.773058969000637*^9, 3.7730590673686733`*^9, 
   3.7731501499847803`*^9, 3.773244698731526*^9, 3.773346888149122*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"4d93127a-fbdd-4daf-a97f-b2874661eb48"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Edge \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\": Length is \"\>", "\[InvisibleSpace]", 
   FractionBox["1", 
    SqrtBox["2"]]}],
  SequenceForm["Edge ", 5, ": Length is ", 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.771598052965075*^9, 3.7715980881123867`*^9, {3.771598202563739*^9, 
   3.771598219135578*^9}, 3.771603238865822*^9, 3.771603301081992*^9, 
   3.771603354798306*^9, 3.771603561467083*^9, 3.771604889164613*^9, 
   3.771614684458531*^9, 3.771614723947538*^9, 3.771615128194331*^9, 
   3.771617267199251*^9, 3.7716227502562532`*^9, 3.77162432520298*^9, 
   3.7717675823037043`*^9, 3.77179793966847*^9, 3.771798115611391*^9, 
   3.771799096299089*^9, 3.771882724912863*^9, 3.772061051582697*^9, 
   3.7721190930076113`*^9, 3.772720116194624*^9, 3.772720237292356*^9, 
   3.772720334794354*^9, 3.772720599155465*^9, 3.772720729193719*^9, 
   3.772720899730113*^9, 3.772721766234321*^9, 3.7727223293996077`*^9, 
   3.772723294488645*^9, 3.7727237725336933`*^9, 3.772723870071476*^9, 
   3.772723990393943*^9, 3.772879576708939*^9, 3.7728852220299683`*^9, 
   3.772891492624619*^9, 3.772907874888019*^9, 3.7729686205804567`*^9, 
   3.7729687187834167`*^9, 3.773058969000637*^9, 3.7730590673686733`*^9, 
   3.7731501499847803`*^9, 3.773244698731526*^9, 3.773346888154928*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"76696f61-e4eb-487f-8249-11b45c29c914"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that we didn\[CloseCurlyQuote]t include the self-tangency from w1 to w2  \
because I didn\[CloseCurlyQuote]t know how to describe it in the edges, but \
our substitution of \[Beta] guarantees such a self tangency.  \
\>", "Text",
 CellChangeTimes->{{3.772720749799574*^9, 
  3.772720820526923*^9}},ExpressionUUID->"501a0c14-48e0-46ca-9ccb-\
fe49c16cecf6"],

Cell["Yes!", "Text",
 CellChangeTimes->{{3.738969710949356*^9, 
  3.738969711596074*^9}},ExpressionUUID->"44713034-9149-4e18-aea8-\
b2757e3281a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packing Visualization", "Section",
 CellChangeTimes->{{3.5811614691633863`*^9, 3.581161498320479*^9}, {
  3.5812608794354057`*^9, 
  3.5812608803693533`*^9}},ExpressionUUID->"84c54b26-f298-4444-9ec8-\
58440b22b9ee"],

Cell["\<\
Here we visualize the packing and the fundamental domain to help determine \
the value of the parameters for which this is a packing graph.\
\>", "Text",
 CellChangeTimes->{{3.581161529243552*^9, 3.58116155007941*^9}, {
  3.581431617395529*^9, 
  3.581431638872754*^9}},ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-\
bdaf155f4274"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"10", ",", 
                  RowBox[{"-", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}]}], 
        RowBox[{"(*", 
         RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "Pi", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "31"}], "+", 
          RowBox[{"22", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           RowBox[{"1245", "-", 
            RowBox[{"880", " ", 
             SqrtBox["2"]}]}]]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "13"}], "+", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]}]], "]"}], ",", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         FractionBox["2", "41"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "51"}], "+", 
           RowBox[{"38", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            RowBox[{"5", " ", 
             RowBox[{"(", 
              RowBox[{"737", "-", 
               RowBox[{"480", " ", 
                SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"AnimationRunning", " ", "\[Rule]", " ", "False"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.581180824186262*^9, 3.5811808987974043`*^9}, 
   3.5812426341496763`*^9, {3.5812428812130423`*^9, 3.5812429341543503`*^9}, {
   3.581242984843346*^9, 3.5812430741219807`*^9}, {3.5812431287383547`*^9, 
   3.581243135743741*^9}, {3.5812473656144733`*^9, 3.5812473732061653`*^9}, {
   3.5812474374292707`*^9, 3.581247473907415*^9}, {3.581247505756896*^9, 
   3.5812475150029573`*^9}, {3.5812475479941683`*^9, 3.581247552706957*^9}, {
   3.5812475932850027`*^9, 3.581247600929019*^9}, {3.5812478520379763`*^9, 
   3.5812478573165827`*^9}, {3.581248067842428*^9, 3.5812480862360897`*^9}, {
   3.581248222177985*^9, 3.581248233458312*^9}, {3.581248384125928*^9, 
   3.581248402652212*^9}, {3.581248625800804*^9, 3.581248690334828*^9}, {
   3.581248833096355*^9, 3.5812488441877327`*^9}, {3.5812493253259697`*^9, 
   3.58124932808727*^9}, {3.581249362565637*^9, 3.581249381904962*^9}, {
   3.5812535181081867`*^9, 3.581253545706283*^9}, {3.5812536017645884`*^9, 
   3.581253629665406*^9}, {3.581253666648903*^9, 3.581253771795062*^9}, {
   3.581253892391712*^9, 3.5812538938364058`*^9}, {3.581254011947888*^9, 
   3.581254015235166*^9}, {3.5812542188329983`*^9, 3.581254261150659*^9}, {
   3.581254332240678*^9, 3.581254367846857*^9}, {3.581254500545721*^9, 
   3.5812547422051477`*^9}, {3.581254930572299*^9, 3.581254996760075*^9}, {
   3.581255074308731*^9, 3.581255166665844*^9}, {3.581255256680236*^9, 
   3.581255330983355*^9}, {3.581255397943749*^9, 3.5812554139734983`*^9}, {
   3.581256003564808*^9, 3.581256005175725*^9}, {3.5812561759913483`*^9, 
   3.581256295933*^9}, {3.58125638872497*^9, 3.581256414849011*^9}, {
   3.581256501384528*^9, 3.581256505097643*^9}, 3.581256537795217*^9, {
   3.581256626052237*^9, 3.5812566747215357`*^9}, {3.5812568590378523`*^9, 
   3.581256907194375*^9}, {3.581256959105625*^9, 3.581256979201212*^9}, {
   3.5812570178650227`*^9, 3.581257061806126*^9}, {3.5812571535181637`*^9, 
   3.5812571856360693`*^9}, {3.581257217869177*^9, 3.58125728617*^9}, {
   3.5812575986228857`*^9, 3.581257652067379*^9}, {3.581257705164557*^9, 
   3.581257726570807*^9}, {3.581257905889045*^9, 3.581257915671493*^9}, {
   3.5812579582253933`*^9, 3.581258016285577*^9}, {3.58125804725069*^9, 
   3.58125807827873*^9}, {3.5812582272199917`*^9, 3.581258503027114*^9}, {
   3.5812585494944353`*^9, 3.5812585568532867`*^9}, {3.5812586202609997`*^9, 
   3.581258620388369*^9}, {3.5812586663638973`*^9, 3.581258677585264*^9}, {
   3.581258724524333*^9, 3.581258730408498*^9}, {3.581258844723407*^9, 
   3.58125887310649*^9}, {3.581258924841276*^9, 3.581258961174138*^9}, {
   3.581258992857445*^9, 3.581259029903624*^9}, {3.581259074647087*^9, 
   3.5812591072668657`*^9}, {3.5812591426372213`*^9, 
   3.5812591450507383`*^9}, {3.581259181396778*^9, 3.581259181513996*^9}, {
   3.581259219837489*^9, 3.581259271592852*^9}, {3.581259448526546*^9, 
   3.581259481007943*^9}, {3.5812595477160797`*^9, 3.581259589490211*^9}, {
   3.5812596518096657`*^9, 3.5812596891404*^9}, {3.581259761045887*^9, 
   3.581259768693335*^9}, {3.581259809900445*^9, 3.5812598264496927`*^9}, {
   3.581259885568445*^9, 3.581259889639741*^9}, {3.5812599261246634`*^9, 
   3.581259926659635*^9}, {3.58126013800604*^9, 3.581260146929427*^9}, {
   3.5812601829290037`*^9, 3.581260292192834*^9}, {3.581260947643346*^9, 
   3.5812609596106462`*^9}, {3.581263566266234*^9, 3.581263573232663*^9}, {
   3.581332503624165*^9, 3.581332522801099*^9}, {3.581332557339148*^9, 
   3.581332572749958*^9}, {3.581332612431754*^9, 3.581332773568388*^9}, {
   3.5813328219613037`*^9, 3.581332980532728*^9}, {3.581333642221835*^9, 
   3.5813336496906977`*^9}, {3.581431425701377*^9, 3.581431484315411*^9}, {
   3.5816099744511147`*^9, 3.581609996432809*^9}, {3.5816100888174334`*^9, 
   3.581610089070348*^9}, {3.581610121856133*^9, 3.5816101219752083`*^9}, {
   3.5816101556235123`*^9, 3.581610155958583*^9}, {3.58161019999949*^9, 
   3.581610200326291*^9}, {3.58167385380202*^9, 3.5816738664729223`*^9}, {
   3.581673953056587*^9, 3.581673955198401*^9}, {3.581674136386159*^9, 
   3.58167413978489*^9}, {3.5816878802857723`*^9, 3.581687882282056*^9}, {
   3.581855466920761*^9, 3.581855642518496*^9}, 3.581855703984426*^9, {
   3.581855786596148*^9, 3.581855866184493*^9}, {3.581856641947521*^9, 
   3.581856656111063*^9}, {3.581856935157813*^9, 3.5818569445569887`*^9}, {
   3.581857006027275*^9, 3.58185703022123*^9}, {3.581857123808751*^9, 
   3.581857197094022*^9}, {3.581857274157933*^9, 3.58185731779801*^9}, {
   3.5819426776944942`*^9, 3.5819426803027163`*^9}, {3.581942844823635*^9, 
   3.581942847239024*^9}, {3.581944353890791*^9, 3.581944355752987*^9}, {
   3.58194917007652*^9, 3.581949190497978*^9}, {3.581949371385427*^9, 
   3.581949379305963*^9}, {3.58194946090628*^9, 3.5819495163196363`*^9}, {
   3.581949573938567*^9, 3.581949599944652*^9}, {3.581949729382389*^9, 
   3.581949777920323*^9}, {3.581949911516973*^9, 3.5819499136354733`*^9}, {
   3.582114084861143*^9, 3.582114107567999*^9}, {3.5821141736269503`*^9, 
   3.582114195015759*^9}, {3.582114226871348*^9, 3.582114230291051*^9}, {
   3.582122206520812*^9, 3.5821222903393497`*^9}, {3.582737411012321*^9, 
   3.582737427519579*^9}, 3.582737460319375*^9, {3.738969834417027*^9, 
   3.73896985266467*^9}, {3.738969939336814*^9, 3.738969945694798*^9}, {
   3.738970010391162*^9, 3.7389701517352753`*^9}, 3.738970262597353*^9, {
   3.7716147588094*^9, 3.771614770182129*^9}, {3.771615143165704*^9, 
   3.77161518979923*^9}, {3.771615236734894*^9, 3.7716153995456247`*^9}, {
   3.771615483489748*^9, 3.771615507641163*^9}, 3.7716155427082357`*^9, {
   3.771617311210657*^9, 3.771617350296811*^9}, {3.771621482253394*^9, 
   3.771621494135892*^9}, {3.771621537619253*^9, 3.771621571702239*^9}, {
   3.771621614008807*^9, 3.771621721740313*^9}, {3.771628016346718*^9, 
   3.7716280192162523`*^9}, {3.7727208319874487`*^9, 3.772720832362195*^9}, {
   3.772721800354648*^9, 3.772721820911139*^9}, {3.772722155726961*^9, 
   3.772722157064794*^9}, 3.772724266886464*^9, {3.772724713433473*^9, 
   3.772724730669752*^9}, {3.772724801907936*^9, 3.772724813910317*^9}, {
   3.7727256334288282`*^9, 3.7727256374521008`*^9}, 3.772725790083158*^9, {
   3.7727258847959023`*^9, 3.772725885061363*^9}, {3.772885240618271*^9, 
   3.7728852409908857`*^9}, 3.7728916364298964`*^9, {3.772891731243524*^9, 
   3.772891747444377*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 3.0101342486471787`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], Pi, "\[Alpha]"}, 
      ArcCos[
      2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
        22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^Rational[1, 2])], 
      Pi + Rational[-1, 2] 
       ArcCos[Rational[2, 41] (-51 + 
          38 2^Rational[1, 2] + (5 (737 - 480 2^Rational[1, 2]))^
           Rational[1, 2])]}}, Typeset`size$$ = {540., {266., 274.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$2236$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$2236$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{0, 10}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{10, -10}, {0, 0}]]}}], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`a$$, Pi, "\[Alpha]"}, 
         ArcCos[
         2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
           22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^
            Rational[1, 2])], Pi + 
         Rational[-1, 2] 
          ArcCos[Rational[2, 41] (-51 + 
             38 2^Rational[1, 2] + (5 (737 - 480 2^Rational[1, 2]))^
              Rational[1, 2])], AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{606., {321., 329.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7728852459019527`*^9, 3.772891496892911*^9, 
  3.772891639815123*^9, 3.7728917623325377`*^9, 3.7729078749808702`*^9, 
  3.772968620662005*^9, 3.7729687662846518`*^9, 3.773059067465424*^9, 
  3.773150150300063*^9, 3.773244698812138*^9, 3.7733468884317713`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"b313c762-5c97-4de7-be47-97aaeb1254ee"]
}, Open  ]],

Cell["\<\
Our bounds are between when \[Alpha] = Pi and when \[Beta] = Pi.  However, \
because of symetry we can examine when \[Alpha] = Pi.\
\>", "Text",
 CellChangeTimes->{{3.772724410908222*^9, 3.772724485632509*^9}, {
  3.772725279455879*^9, 3.772725283143846*^9}, {3.772725332515871*^9, 
  3.772725461048594*^9}, {3.772885295942848*^9, 
  3.7728853028832703`*^9}},ExpressionUUID->"546fbb8a-85e6-4b81-a5f4-\
58b26d2ba1db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"\[Beta]", "==", 
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"37", "-", 
        RowBox[{"26", " ", 
         SqrtBox["2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "62"}], "+", 
           RowBox[{"44", " ", 
            SqrtBox["2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"25", "-", 
           RowBox[{"18", " ", 
            SqrtBox["2"]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"12", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "11"}], "+", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}]}]], " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
        RowBox[{"8", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "22"}], "+", 
           RowBox[{"16", " ", 
            SqrtBox["2"]}]}]], " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
        RowBox[{"5", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "11"}], "+", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "22"}], "+", 
           RowBox[{"16", " ", 
            SqrtBox["2"]}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              FractionBox["\[Alpha]", "2"], "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"218", "-", 
              RowBox[{"152", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "598"}], "+", 
                 RowBox[{"423", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"56", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "41"}], "+", 
                 RowBox[{"29", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
              RowBox[{"1270", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"898", " ", 
               SqrtBox["2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"253", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"174", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"486", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"344", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"269", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
              RowBox[{"190", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}], 
           ")"}]}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"7", "-", 
          RowBox[{"4", " ", 
           SqrtBox["2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"4", " ", 
              SqrtBox["2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "11"}], "+", 
             RowBox[{"8", " ", 
              SqrtBox["2"]}]}]], " ", 
           RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
     "]"}]}], "/.", 
   RowBox[{"\[Alpha]", "\[Rule]", "Pi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7727244914802923`*^9, 3.772724515077479*^9}, {
  3.7727245717355328`*^9, 3.7727245744667463`*^9}, {3.772725470824518*^9, 
  3.772725488232032*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e32aa1b2-55a2-482b-a630-17d58cff8604"],

Cell[BoxData[
 RowBox[{"\[Beta]", "\[Equal]", 
  RowBox[{"ArcCos", "[", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "31"}], "+", 
       RowBox[{"22", " ", 
        SqrtBox["2"]}], "+", 
       SqrtBox[
        RowBox[{"1245", "-", 
         RowBox[{"880", " ", 
          SqrtBox["2"]}]}]]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "13"}], "+", 
     RowBox[{"8", " ", 
      SqrtBox["2"]}]}]], "]"}]}]], "Output",
 CellChangeTimes->{3.7727245697384768`*^9, 3.77272464650246*^9, 
  3.772725490493166*^9, 3.772879577237104*^9, 3.772907875120963*^9, 
  3.772968620812479*^9, 3.773059067613797*^9, 3.773150150423457*^9, 
  3.773244698948785*^9, 3.7733468886905823`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"aa2f9491-6165-4a29-aeb1-6716e708b00f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Beta]", "\[Equal]", 
   RowBox[{"ArcCos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "31"}], "+", 
        RowBox[{"22", " ", 
         SqrtBox["2"]}], "+", 
        SqrtBox[
         RowBox[{"1245", "-", 
          RowBox[{"880", " ", 
           SqrtBox["2"]}]}]]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "13"}], "+", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}]}]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772725514386581*^9, 3.7727255172491207`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"24222d7c-3bf2-4c4e-8cc1-5bfb0b0150ef"],

Cell[BoxData[
 RowBox[{"\[Beta]", "\[Equal]", "2.878675843704429`"}]], "Output",
 CellChangeTimes->{3.772725517614162*^9, 3.772879577307851*^9, 
  3.772907875179997*^9, 3.772968620879404*^9, 3.77305906766784*^9, 
  3.773150150474042*^9, 3.773244698997937*^9, 3.7733468887530622`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"0f3270d0-4dd7-458c-9787-d0c2e39c8fbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "Pi"}], "-", "\[Alpha]"}], ")"}], "/", "2"}], "==", " ", 
     
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], ")"}]}], "]"}]}], "]"}], 
   ",", "\[Alpha]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7727256627540083`*^9, 3.772725763986787*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3568413b-90b7-4c27-b5da-27c5befd4f13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"True", "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          SqrtBox["2"]]}], "]"}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.77272576625358*^9, 3.7728795773749447`*^9, 
  3.772907875253681*^9, 3.772968620996767*^9, 3.7730590677342453`*^9, 
  3.773150150534453*^9, 3.773244699045369*^9, 3.77334688888276*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"962ba1e8-d002-418c-b9fc-6b12de425617"]
}, Open  ]],

Cell[TextData[{
 "However, our bounds are not ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"ArcCos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "31"}], "+", 
        RowBox[{"22", " ", 
         SqrtBox["2"]}], "+", 
        SqrtBox[
         RowBox[{"1245", "-", 
          RowBox[{"880", " ", 
           SqrtBox["2"]}]}]]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "13"}], "+", 
      RowBox[{"8", " ", 
       SqrtBox["2"]}]}]], "]"}], ",", "Pi"}]],
  CellChangeTimes->{{3.581180824186262*^9, 3.5811808987974043`*^9}, 
    3.5812426341496763`*^9, {3.5812428812130423`*^9, 
    3.5812429341543503`*^9}, {3.581242984843346*^9, 3.5812430741219807`*^9}, {
    3.5812431287383547`*^9, 3.581243135743741*^9}, {3.5812473656144733`*^9, 
    3.5812473732061653`*^9}, {3.5812474374292707`*^9, 3.581247473907415*^9}, {
    3.581247505756896*^9, 3.5812475150029573`*^9}, {3.5812475479941683`*^9, 
    3.581247552706957*^9}, {3.5812475932850027`*^9, 3.581247600929019*^9}, {
    3.5812478520379763`*^9, 3.5812478573165827`*^9}, {3.581248067842428*^9, 
    3.5812480862360897`*^9}, {3.581248222177985*^9, 3.581248233458312*^9}, {
    3.581248384125928*^9, 3.581248402652212*^9}, {3.581248625800804*^9, 
    3.581248690334828*^9}, {3.581248833096355*^9, 3.5812488441877327`*^9}, {
    3.5812493253259697`*^9, 3.58124932808727*^9}, {3.581249362565637*^9, 
    3.581249381904962*^9}, {3.5812535181081867`*^9, 3.581253545706283*^9}, {
    3.5812536017645884`*^9, 3.581253629665406*^9}, {3.581253666648903*^9, 
    3.581253771795062*^9}, {3.581253892391712*^9, 3.5812538938364058`*^9}, {
    3.581254011947888*^9, 3.581254015235166*^9}, {3.5812542188329983`*^9, 
    3.581254261150659*^9}, {3.581254332240678*^9, 3.581254367846857*^9}, {
    3.581254500545721*^9, 3.5812547422051477`*^9}, {3.581254930572299*^9, 
    3.581254996760075*^9}, {3.581255074308731*^9, 3.581255166665844*^9}, {
    3.581255256680236*^9, 3.581255330983355*^9}, {3.581255397943749*^9, 
    3.5812554139734983`*^9}, {3.581256003564808*^9, 3.581256005175725*^9}, {
    3.5812561759913483`*^9, 3.581256295933*^9}, {3.58125638872497*^9, 
    3.581256414849011*^9}, {3.581256501384528*^9, 3.581256505097643*^9}, 
    3.581256537795217*^9, {3.581256626052237*^9, 3.5812566747215357`*^9}, {
    3.5812568590378523`*^9, 3.581256907194375*^9}, {3.581256959105625*^9, 
    3.581256979201212*^9}, {3.5812570178650227`*^9, 3.581257061806126*^9}, {
    3.5812571535181637`*^9, 3.5812571856360693`*^9}, {3.581257217869177*^9, 
    3.58125728617*^9}, {3.5812575986228857`*^9, 3.581257652067379*^9}, {
    3.581257705164557*^9, 3.581257726570807*^9}, {3.581257905889045*^9, 
    3.581257915671493*^9}, {3.5812579582253933`*^9, 3.581258016285577*^9}, {
    3.58125804725069*^9, 3.58125807827873*^9}, {3.5812582272199917`*^9, 
    3.581258503027114*^9}, {3.5812585494944353`*^9, 3.5812585568532867`*^9}, {
    3.5812586202609997`*^9, 3.581258620388369*^9}, {3.5812586663638973`*^9, 
    3.581258677585264*^9}, {3.581258724524333*^9, 3.581258730408498*^9}, {
    3.581258844723407*^9, 3.58125887310649*^9}, {3.581258924841276*^9, 
    3.581258961174138*^9}, {3.581258992857445*^9, 3.581259029903624*^9}, {
    3.581259074647087*^9, 3.5812591072668657`*^9}, {3.5812591426372213`*^9, 
    3.5812591450507383`*^9}, {3.581259181396778*^9, 3.581259181513996*^9}, {
    3.581259219837489*^9, 3.581259271592852*^9}, {3.581259448526546*^9, 
    3.581259481007943*^9}, {3.5812595477160797`*^9, 3.581259589490211*^9}, {
    3.5812596518096657`*^9, 3.5812596891404*^9}, {3.581259761045887*^9, 
    3.581259768693335*^9}, {3.581259809900445*^9, 3.5812598264496927`*^9}, {
    3.581259885568445*^9, 3.581259889639741*^9}, {3.5812599261246634`*^9, 
    3.581259926659635*^9}, {3.58126013800604*^9, 3.581260146929427*^9}, {
    3.5812601829290037`*^9, 3.581260292192834*^9}, {3.581260947643346*^9, 
    3.5812609596106462`*^9}, {3.581263566266234*^9, 3.581263573232663*^9}, {
    3.581332503624165*^9, 3.581332522801099*^9}, {3.581332557339148*^9, 
    3.581332572749958*^9}, {3.581332612431754*^9, 3.581332773568388*^9}, {
    3.5813328219613037`*^9, 3.581332980532728*^9}, {3.581333642221835*^9, 
    3.5813336496906977`*^9}, {3.581431425701377*^9, 3.581431484315411*^9}, {
    3.5816099744511147`*^9, 3.581609996432809*^9}, {3.5816100888174334`*^9, 
    3.581610089070348*^9}, {3.581610121856133*^9, 3.5816101219752083`*^9}, {
    3.5816101556235123`*^9, 3.581610155958583*^9}, {3.58161019999949*^9, 
    3.581610200326291*^9}, {3.58167385380202*^9, 3.5816738664729223`*^9}, {
    3.581673953056587*^9, 3.581673955198401*^9}, {3.581674136386159*^9, 
    3.58167413978489*^9}, {3.5816878802857723`*^9, 3.581687882282056*^9}, {
    3.581855466920761*^9, 3.581855642518496*^9}, 3.581855703984426*^9, {
    3.581855786596148*^9, 3.581855866184493*^9}, {3.581856641947521*^9, 
    3.581856656111063*^9}, {3.581856935157813*^9, 3.5818569445569887`*^9}, {
    3.581857006027275*^9, 3.58185703022123*^9}, {3.581857123808751*^9, 
    3.581857197094022*^9}, {3.581857274157933*^9, 3.58185731779801*^9}, {
    3.5819426776944942`*^9, 3.5819426803027163`*^9}, {3.581942844823635*^9, 
    3.581942847239024*^9}, {3.581944353890791*^9, 3.581944355752987*^9}, {
    3.58194917007652*^9, 3.581949190497978*^9}, {3.581949371385427*^9, 
    3.581949379305963*^9}, {3.58194946090628*^9, 3.5819495163196363`*^9}, {
    3.581949573938567*^9, 3.581949599944652*^9}, {3.581949729382389*^9, 
    3.581949777920323*^9}, {3.581949911516973*^9, 3.5819499136354733`*^9}, {
    3.582114084861143*^9, 3.582114107567999*^9}, {3.5821141736269503`*^9, 
    3.582114195015759*^9}, {3.582114226871348*^9, 3.582114230291051*^9}, {
    3.582122206520812*^9, 3.5821222903393497`*^9}, {3.582737411012321*^9, 
    3.582737427519579*^9}, 3.582737460319375*^9, {3.738969834417027*^9, 
    3.73896985266467*^9}, {3.738969939336814*^9, 3.738969945694798*^9}, {
    3.738970010391162*^9, 3.7389701517352753`*^9}, 3.738970262597353*^9, {
    3.7716147588094*^9, 3.771614770182129*^9}, {3.771615143165704*^9, 
    3.77161518979923*^9}, {3.771615236734894*^9, 3.7716153995456247`*^9}, {
    3.771615483489748*^9, 3.771615507641163*^9}, 3.7716155427082357`*^9, {
    3.771617311210657*^9, 3.771617350296811*^9}, {3.771621482253394*^9, 
    3.771621494135892*^9}, {3.771621537619253*^9, 3.771621571702239*^9}, {
    3.771621614008807*^9, 3.771621721740313*^9}, {3.771628016346718*^9, 
    3.7716280192162523`*^9}, {3.7727208319874487`*^9, 3.772720832362195*^9}, {
    3.772721800354648*^9, 3.772721820911139*^9}, {3.772722155726961*^9, 
    3.772722157064794*^9}, 3.772724266886464*^9, {3.772724713433473*^9, 
    3.772724730669752*^9}, {3.772724801907936*^9, 3.772724813910317*^9}, {
    3.7727256334288282`*^9, 3.7727256374521008`*^9}, 3.772725790083158*^9, {
    3.7727258847959023`*^9, 3.772725885061363*^9}, {3.772885240618271*^9, 
    3.7728852409908857`*^9}},ExpressionUUID->
  "d870e482-e358-43e7-b7f0-ddb5bf082a16"],
 " because these give us duplicate packings.  So we want to take half.  "
}], "Text",
 CellChangeTimes->{{3.77289152430597*^9, 
  3.7728915517516203`*^9}},ExpressionUUID->"5212699b-78f0-4721-aaf2-\
e1e9be8e40aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Pi", "-", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "31"}], "+", 
          RowBox[{"22", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           RowBox[{"1245", "-", 
            RowBox[{"880", " ", 
             SqrtBox["2"]}]}]]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "13"}], "+", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]}]], "]"}]}], ")"}], "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.772891567595841*^9, 3.7728915925399942`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b9a10a46-e16c-486f-bf24-b0593dc5f4fa"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"ArcCos", "[", 
   RowBox[{
    FractionBox["2", "41"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "51"}], "+", 
      RowBox[{"38", " ", 
       SqrtBox["2"]}], "+", 
      SqrtBox[
       RowBox[{"5", " ", 
        RowBox[{"(", 
         RowBox[{"737", "-", 
          RowBox[{"480", " ", 
           SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.772891582620875*^9, 3.772891593656671*^9}, 
   3.7729078760575933`*^9, 3.772968621771172*^9, 3.773059068655428*^9, 
   3.773150151367495*^9, 3.77324469979459*^9, 3.773346889691105*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"0615a87c-cfb7-45c0-a800-fb0896bd55ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Pi", "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"ArcCos", "[", 
     RowBox[{
      FractionBox["2", "41"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "51"}], "+", 
        RowBox[{"38", " ", 
         SqrtBox["2"]}], "+", 
        SqrtBox[
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{"737", "-", 
            RowBox[{"480", " ", 
             SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.772891598617923*^9, 3.772891611884729*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"4e34178c-3bc6-47f1-911c-648c5bb3dd60"],

Cell[BoxData[
 RowBox[{"\[Pi]", "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"ArcCos", "[", 
    RowBox[{
     FractionBox["2", "41"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "51"}], "+", 
       RowBox[{"38", " ", 
        SqrtBox["2"]}], "+", 
       SqrtBox[
        RowBox[{"5", " ", 
         RowBox[{"(", 
          RowBox[{"737", "-", 
           RowBox[{"480", " ", 
            SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.772891613781026*^9, 3.772907876311227*^9, 
  3.772968622010901*^9, 3.773059069060938*^9, 3.773150151721799*^9, 
  3.773244699971508*^9, 3.773346889805221*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"0904754f-bb3a-4f24-91c3-84fa128895eb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locally Maximally Dense", "Section",
 CellChangeTimes->{{3.581260403324943*^9, 
  3.581260416970201*^9}},ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-\
4479b3290d12"],

Cell["\<\
We have to determine for which values of \[Alpha] and \[Beta] the packing is \
locally maximally dense. To be locally maximally dense (Following Connelly, \
Rigid Circle and Sphere Packings, Page 51, Theorem 6.1)
\t1. The packing graph is rigid as a bar framework
\t2. Have a proper stress that is non-zero on every member\
\>", "Text",
 CellChangeTimes->{{3.581260429083231*^9, 3.5812604817289133`*^9}, {
   3.58126058732162*^9, 3.581260703477894*^9}, 3.581268014437296*^9, {
   3.5814318394491863`*^9, 
   3.5814318439886436`*^9}},ExpressionUUID->"587b476a-42fe-4314-b5c2-\
430cf24c7bba"],

Cell[CellGroupData[{

Cell["Rigid as bar framework", "Subsection",
 CellChangeTimes->{{3.581260714629937*^9, 
  3.5812607219085903`*^9}},ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-\
64a93ed30112"],

Cell["\<\
To be rigid as a bar framework we need to establish a rigid ordering of the \
circles. The numbering of the circles in the picture above is a rigid \
ordering of the packing disks -- See Lemma 6.2 in the Connelly paper on Rigid \
Sphere and Circle Packings. Note: The first is held fixed. \
\>", "Text",
 CellChangeTimes->{{3.581260731787973*^9, 3.5812607589713097`*^9}, {
   3.5812608183726873`*^9, 3.581260869033848*^9}, {3.5812610404711943`*^9, 
   3.581261082093595*^9}, {3.581261148357283*^9, 3.581261161924177*^9}, {
   3.581261657149426*^9, 3.5812617281290483`*^9}, {3.581431878214656*^9, 
   3.581431907148754*^9}, {3.581855928252591*^9, 3.581855931761685*^9}, {
   3.58185743689495*^9, 3.58185744076795*^9}, 3.582737698397448*^9, {
   3.7389702310916567`*^9, 
   3.7389702492335567`*^9}},ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-\
8abc959f8dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proper Stress", "Subsection",
 CellChangeTimes->{{3.5812611912691*^9, 
  3.5812611942035923`*^9}},ExpressionUUID->"31f2c795-42a7-4371-8bcc-\
f26ae4f35c51"],

Cell[TextData[{
 "Assign a scalar to each edge of the packing and collect those scalars in a \
vector called \[Omega]. We need to solve the linear algebra problem where the \
sum of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Omega]", "i"], " "}], TraditionalForm]],ExpressionUUID->
  "265e01f6-c0c7-45d6-8073-68c578121df4"],
 "times the vector from vertex j is zero. "
}], "Text",
 CellChangeTimes->{{3.581261204171701*^9, 3.5812613230015697`*^9}, {
   3.581263036291751*^9, 3.581263094625066*^9}, {3.581268035307197*^9, 
   3.581268049563353*^9}, {3.581268089331314*^9, 3.581268099474876*^9}, {
   3.581857691357902*^9, 3.581857713432221*^9}, {3.581952177554405*^9, 
   3.581952182271495*^9}, 
   3.582227123258224*^9},ExpressionUUID->"dad468d2-f604-44ad-83e4-\
8184a0b76de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Translate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Union", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Dashing", "[", "1", "]"}], ",", "Black", ",", 
             RowBox[{"Line", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"centers", "[", 
                   RowBox[{"[", 
                    RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                  "+", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                   RowBox[{"latticeVectors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", "Edges", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], " ", 
               "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"latticeVectors", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                   RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "}"}], 
              "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Fundamental", " ", "Domain"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsolutePointSize", "[", "5", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"centers", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], "]"}]}], 
           "}"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Circle", " ", "Centers"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"i", ",", "Medium"}], "]"}], ",", 
             RowBox[{
              RowBox[{"centers", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
             RowBox[{"Offset", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"-", "30"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Label", " ", "Circle", " ", "Centers"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightOrange", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightGreen", ",", 
             
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", ".5", "]"}], ",", 
             RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "LightRed", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"centers", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                  RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
               RowBox[{
                RowBox[{"1", "/", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}]}], 
              "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"(*", "Circles", "*)"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Alpha]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "10"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Beta]\>\"", ",", "Small"}], "]"}], ",", 
              RowBox[{
               RowBox[{"centers", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                 RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", 
              RowBox[{"Offset", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"10", ",", 
                  RowBox[{"-", "10"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "}"}]}], 
          "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{"Angle", " ", "Markers", " ", "Labels"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Subscript", "[", 
                RowBox[{"\"\<\[Omega]\>\"", ",", "i"}], "]"}], ",", "Large", 
               ",", "Red"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", 
                 RowBox[{"centers", "[", 
                  RowBox[{"[", 
                   RowBox[{"edges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
                 "+", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"edges", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "*", 
                  RowBox[{"latticeVectors", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
                RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}]}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"Label", " ", "Edges", " ", "With", " ", "Stresses"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
       " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"j", "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "]"}], "/.", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Alpha]", "\[Rule]", "a"}], ",", 
            RowBox[{"\[Beta]", "\[Rule]", "b"}]}], "}"}]}], ",", "1"}], 
        "]"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "the", " ", "translation", " ", "vectors"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "}"}]}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"Restrict", " ", "the", " ", "plot", " ", "window"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "Pi", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "31"}], "+", 
          RowBox[{"22", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           RowBox[{"1245", "-", 
            RowBox[{"880", " ", 
             SqrtBox["2"]}]}]]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "13"}], "+", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]}]], "]"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"AnimationRunning", " ", "\[Rule]", " ", "False"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7716156219304457`*^9, 3.7716156657824917`*^9}, {
   3.7716173605794477`*^9, 3.7716173832972507`*^9}, 3.771621836404307*^9, {
   3.771621868006282*^9, 3.771621889572094*^9}, {3.771628026520009*^9, 
   3.7716280285750093`*^9}, {3.772725845418502*^9, 3.772725876654314*^9}, {
   3.772885327249175*^9, 3.77288532904422*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], Pi, "\[Alpha]"}, 
      ArcCos[
      2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
        22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^Rational[1, 2])], 
      Pi}}, Typeset`size$$ = {540., {266., 274.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`a$2998$$ =
     0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$2998$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[
        Translate[
         Union[
          Table[{Thick, 
            Dashing[1], Black, 
            Line[
             ReplaceAll[{
               Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]], 
               Part[$CellContext`centers, 
                 Part[$CellContext`edges, $CellContext`i, 2]] + 
               Part[$CellContext`edges, $CellContext`i, 3] 
                Part[$CellContext`latticeVectors, 1] + 
               Part[$CellContext`edges, $CellContext`i, 4] 
                Part[$CellContext`latticeVectors, 
                  2]}, {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b}]]}, {$CellContext`i, 1, 
            Length[$CellContext`edges]}], {{Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}, {Thick, Dashed, Blue, 
            Arrow[{{0, 0}, 
              ReplaceAll[
               
               Part[$CellContext`latticeVectors, 
                2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}]}]}}, {{
            AbsolutePointSize[5], 
            Point[
             
             ReplaceAll[$CellContext`centers, {$CellContext`\[Alpha] -> \
$CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}]]}}, 
          Table[
           Text[
            Style[$CellContext`i, Medium], 
            ReplaceAll[
             
             Part[$CellContext`centers, $CellContext`i], {$CellContext`\
\[Alpha] -> $CellContext`a$$, $CellContext`\[Beta] -> $CellContext`b}], 
            Offset[{10, -30}, {0, 0}]], {$CellContext`i, 1, 
            Length[$CellContext`centers]}], {{
            Opacity[0.5], 
            EdgeForm[Thick], LightOrange, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               1], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1/2]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightGreen, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}, {
            Opacity[0.5], 
            EdgeForm[Thick], LightRed, 
            Disk[
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], (1/2) (Sqrt[2] - 1)]}}, {{
            Text[
             Style["\[Alpha]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               2], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{0, 10}, {0, 0}]]}, {
            Text[
             Style["\[Beta]", Small], 
             ReplaceAll[
              
              Part[$CellContext`centers, 
               3], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 
             Offset[{10, -10}, {0, 0}]]}}, 
          Table[
           Text[
            Style[
             Subscript["\[Omega]", $CellContext`i], Large, Red], 
            ReplaceAll[(1/2) (Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 1]] + 
              Part[$CellContext`centers, 
                Part[$CellContext`edges, $CellContext`i, 2]] + 
              Part[$CellContext`edges, $CellContext`i, 3] 
               Part[$CellContext`latticeVectors, 1] + 
              Part[$CellContext`edges, $CellContext`i, 4] 
               Part[$CellContext`latticeVectors, 
                 2]), {$CellContext`\[Alpha] -> $CellContext`a$$, \
$CellContext`\[Beta] -> $CellContext`b}]], {$CellContext`i, 1, 
            Length[$CellContext`edges]}]], 
         Flatten[
          ReplaceAll[
           
           Table[$CellContext`i 
             Part[$CellContext`latticeVectors, 1] + $CellContext`j 
             Part[$CellContext`latticeVectors, 2], {$CellContext`i, -2, 2, 
             1}, {$CellContext`j, -2, 2, 
             1}], {$CellContext`\[Alpha] -> $CellContext`a$$, $CellContext`\
\[Beta] -> $CellContext`b}], 1]], PlotRange -> {{-1, 3}, {-1, 3}}], 
      "Specifications" :> {{{$CellContext`a$$, Pi, "\[Alpha]"}, 
         ArcCos[
         2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
           22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^
            Rational[1, 2])], Pi, AnimationRunning -> False, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{606., {321., 329.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771615655908786*^9, 3.771615666273397*^9}, {
   3.771617374972508*^9, 3.7716173837753553`*^9}, 3.771621837663521*^9, {
   3.77162186934744*^9, 3.7716218908703737`*^9}, 3.771622750542183*^9, 
   3.771624325486567*^9, 3.771628029048644*^9, 3.771767582724186*^9, 
   3.772725848483921*^9, 3.7727258951365023`*^9, 3.772879577454959*^9, 
   3.772885331240184*^9, 3.772907876384637*^9, 3.772968622136715*^9, 
   3.77305906932449*^9, 3.773150151785159*^9, 3.773244700030262*^9, 
   3.773346889913795*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"c8c418f6-e5b0-4f68-913d-e87272a3fdcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equations", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"Start", " ", "with", " ", "the", " ", "zero", " ", "equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[Omega]", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initialize", " ", "a", " ", "vector", " ", "of", " ", 
    SubscriptBox["\[Omega]", "i"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "centers", "]"}]}], ",", " ", 
   RowBox[{"i", "++"}], ",", " ", 
   RowBox[{"(*", 
    RowBox[{"i", " ", "is", " ", "the", " ", "center", " ", "number"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{"Length", "[", "edges", "]"}]}], ",", " ", 
     RowBox[{"j", "++"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"j", " ", "is", " ", "the", " ", "edge", " ", "number"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "1"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "starting", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "-", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}], " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"edges", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "2"}], "]"}], "]"}], "\[Equal]", "i"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "center", " ", "i", " ", "is", " ", "the", " ", "ending", " ", 
          "point", " ", "of", " ", "edge", " ", "j"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"equations", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
         RowBox[{
          RowBox[{"equations", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"centers", "[", 
               RowBox[{"[", 
                RowBox[{"edges", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], 
             "+", 
             RowBox[{"centers", "[", 
              RowBox[{"[", 
               RowBox[{"edges", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], " ", "]"}], "]"}], 
             "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "3"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"edges", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "4"}], "]"}], "]"}], "*", 
              RowBox[{"latticeVectors", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"stresses", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "equations", "]"}], "\[Equal]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "centers", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], ",", "w"}], "]"}], "]"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.5812631262417994`*^9, 3.5812631393932133`*^9}, {
   3.5812632927362833`*^9, 3.581263433806449*^9}, {3.5812635111903543`*^9, 
   3.581263539604899*^9}, {3.581263643734518*^9, 3.581263818173723*^9}, {
   3.581263893704818*^9, 3.581263906457028*^9}, {3.581263976775078*^9, 
   3.581264003472631*^9}, {3.58126411114087*^9, 3.5812641340833797`*^9}, {
   3.58126426449689*^9, 3.581264271542542*^9}, {3.581264376993701*^9, 
   3.5812643859040203`*^9}, {3.581265058156464*^9, 3.581265086954626*^9}, {
   3.581265130320315*^9, 3.581265189671144*^9}, 3.581265270566058*^9, {
   3.581265302363521*^9, 3.581265302850205*^9}, {3.5812653512370853`*^9, 
   3.5812653665051527`*^9}, {3.581265742732229*^9, 3.581265792107946*^9}, {
   3.581266490644244*^9, 3.5812665010853853`*^9}, {3.5812665623037663`*^9, 
   3.581266614361026*^9}, 3.5812666979728537`*^9, {3.581266853790249*^9, 
   3.581266950054287*^9}, {3.581267109579549*^9, 3.581267113595233*^9}, {
   3.581856054653139*^9, 3.581856144183853*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "2"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "3"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "4"], "\[Rule]", "0"}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "5"], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7396342706707497`*^9, 3.771615696582738*^9, 
  3.771617392249407*^9, 3.77162275126501*^9, 3.771624326199301*^9, 
  3.771767583702835*^9, 3.772725955953887*^9, 3.772879638947167*^9, 
  3.772885398587084*^9, 3.772907945766123*^9, 3.7729686814463053`*^9, 
  3.773059128382577*^9, 3.773150209348236*^9, 3.773244758828919*^9, 
  3.773346944519834*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"5a911073-5955-4611-8582-67f7f971fc41"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"yuck", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"equations", " ", "/.", " ", "stresses"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"check", " ", "the", " ", "solutions"}], ",", " ", 
    RowBox[{
    "Should", " ", "output", " ", "all", " ", "zeros", " ", "but", " ", "I", 
     " ", 
     RowBox[{"don", "'"}], "t", " ", "think", " ", "Mathematica", " ", "can", 
     " ", "simplify", " ", "it"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.581266970558997*^9, 3.5812670086486597`*^9}, {
  3.5812670428585978`*^9, 3.581267107111579*^9}, {3.58126782408628*^9, 
  3.581267830337071*^9}, {3.771615712767864*^9, 3.7716157178887*^9}, {
  3.771624832402663*^9, 3.77162484486832*^9}, {3.771625069500388*^9, 
  3.771625108040539*^9}, {3.771625188009901*^9, 3.771625188461938*^9}, {
  3.771627084687838*^9, 3.771627086697544*^9}, {3.771627137607338*^9, 
  3.7716271381130447`*^9}, {3.7716273773006067`*^9, 3.7716273909517603`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"yuck", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", " ", 
       RowBox[{"5", 
        RowBox[{"Pi", "/", "6"}]}]}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", 
       RowBox[{"5", 
        RowBox[{"Pi", "/", "6"}]}]}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716270898778353`*^9, 3.771627100106181*^9}, {
  3.7716271494801493`*^9, 3.7716271956636047`*^9}, {3.771627309304491*^9, 
  3.7716273644223213`*^9}, {3.771627430852413*^9, 3.7716274393317947`*^9}, {
  3.771627554739901*^9, 3.771627593479425*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"079eff23-d452-4b8a-b102-2477f53b339f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7716275766061087`*^9, 3.771627594127445*^9}, 
   3.77176758953078*^9, 3.7728796390468616`*^9, 3.772907946207789*^9, 
   3.772968681535171*^9, 3.7730591287534723`*^9, 3.7731502095450573`*^9, 
   3.773244759022045*^9, 3.773346945036478*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"5600f607-fc46-4289-b94d-945a3dddaaed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"guts", " ", ":=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Union", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "i"], "/.", "stresses"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "first", " ", "list", " ", "all", " ", "of", " ", "the", " ", 
          "right", " ", "hand", " ", "sides", " ", "of", " ", "all", " ", 
          "the", " ", "stresses"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "edges", "]"}]}], "}"}]}], "]"}], "/.", 
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "\[Rule]", "1"}]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7716167421291027`*^9, 3.7716167736440973`*^9}, {
  3.771624666657902*^9, 3.77162466689053*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"b861794b-5dc4-4f62-a8af-a6aa1633b81c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"guts", ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "31"}], "+", 
          RowBox[{"22", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           RowBox[{"1245", "-", 
            RowBox[{"880", " ", 
             SqrtBox["2"]}]}]]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "13"}], "+", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]}]], "]"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771616758899276*^9, 3.771616778140399*^9}, {
   3.771624700169651*^9, 3.771624723760776*^9}, {3.77162586895288*^9, 
   3.7716258722505913`*^9}, 3.772885366091258*^9, {3.772885432110528*^9, 
   3.772885481240522*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"e19a6967-7441-4af8-aa7e-13ca11c722cc"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxNxwtIE1AAheFpvrK5pbK1oeJE3EayUrNabM2pbS6iRFtmaYjiSFeRykZh
DsVqkwZW5mxl0kLDCLV0Q9NSWgYqaE58pGlMcxYUaBFS5qAHhOce+Dl8EXnn
01WeFArl8N/+vYcyNN7g6yul/N/y1EJpO+F3J5rts4RtOXGpMX5wwRmFeoaw
o1JjifaHLe3DVAcVltB1S6wguC1DK6gOg4dmRcGJfLj3WXBCXxzsirjsES6B
Owdf5vYq4BfrpswEJXxXX2Yy5sCRqbFFDDXsbNQtVGrhlD3mr4IK2MB5LWu8
Bv+qM8S6TTDrEPt5jQVWG5NmqS1wbaQuMa0LLly7Khu3wyVZ3HnhCMxdr2XN
vYUDePWf8hbhkccdbusyLDxrfpK0Bk91M9ZsXn4bDpflzufTYSm/L8DJhk23
O8bEUYQPaHdN74QHdaPRx0XwBE2ktshh43uNnJcGa4Xy7pvZsP/Y0tC+0/BF
ex2npRhmS5wBnjpY9XPVbDLALklTD/UWTOvnlNob4MD7beXSR3CK70RIoxXm
tw4cS+6D9zvTuQND8PbCFTFjEn4Vc/KbxQlXX8kWb/0CezMFUb2rsPI3TRlP
2bzhKU0V+/oWeBPfUcZjwk3M6OEMwnJvfYiecNUHUY+LMK2h+ceDbTArqLwk
lA3vcAsKAkPh0c9VXVLCRTOLPkWErZ13Hr4hLCz2XjSGwckf5075hMOuib2t
uwnr+2vc+YQHLYr6fsJHsmzTFRx45SCd/5TwDaH6gpPwOIPDlETAGq9LqnOE
md8nbfcIdy3EeA0TznQYj64T/gNnoOos
       "]]},
     Annotation[#, "Charting`Private`Tag$3320#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], None},
  AxesOrigin->NCache[{
     ArcCos[
     2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
       22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^Rational[1, 2])], 
     0}, {2.878675843704429, 0}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      ArcCos[
      2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
        22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^Rational[1, 2])], 
      Pi}, {-1., 1.}}, {{2.878675843704429, 3.141592653589793}, {-1., 1.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.771616782954821*^9, 3.771624201559512*^9, 3.771624565405014*^9, {
   3.771624650515085*^9, 3.771624730466136*^9}, 3.771625877064026*^9, 
   3.771767594623402*^9, 3.772879639248424*^9, 3.772885474096689*^9, 
   3.7728856705237923`*^9, 3.772907946619625*^9, 3.772968681670395*^9, 
   3.773059128996705*^9, 3.773150209655582*^9, 3.77324475910893*^9, 
   3.773346945435822*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"b5a54609-6b0c-41c6-851b-b0e1dff1e4f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moduli Space Of Locally Maximally Dense Packings", "Section",
 CellChangeTimes->{{3.581268199842701*^9, 3.5812682055518713`*^9}, {
  3.581268252471168*^9, 
  3.581268267583231*^9}},ExpressionUUID->"1367c9d9-3697-4765-9fd2-\
49fbdfafea09"],

Cell["\<\
Determine the Torus Angle and Ratio for the packings that are locally \
maximally dense. \
\>", "Text",
 CellChangeTimes->{{3.5812682787135897`*^9, 3.581268350581593*^9}, {
   3.581333395348236*^9, 3.581333608702343*^9}, {3.5813336764078617`*^9, 
   3.581333687180387*^9}, {3.581333851570097*^9, 3.581333902825006*^9}, {
   3.5814180211148233`*^9, 3.581418038876515*^9}, 
   3.581943351425103*^9},ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-\
5dfd369c5feb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusAngleFromVectors", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"VectorAngle", "[", 
     RowBox[{
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"latticeVectors", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Alpha]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"22", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"1245", "-", 
              RowBox[{"880", " ", 
               SqrtBox["2"]}]}]]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "13"}], "+", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]}]], "]"}], "<", "\[Alpha]", "<", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           FractionBox["2", "41"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "51"}], "+", 
             RowBox[{"38", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              RowBox[{"5", " ", 
               RowBox[{"(", 
                RowBox[{"737", "-", 
                 RowBox[{"480", " ", 
                  SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.58133303742656*^9, 3.581333043881184*^9}, {
   3.5813331557765102`*^9, 3.58133317227901*^9}, {3.581333205989634*^9, 
   3.581333234053957*^9}, {3.581333325533258*^9, 3.5813333760116377`*^9}, {
   3.581606424512455*^9, 3.5816064282642384`*^9}, {3.582114890721849*^9, 
   3.5821148908686647`*^9}, {3.582214278216044*^9, 3.582214279067687*^9}, {
   3.5837630857623653`*^9, 3.583763115245988*^9}, {3.771616195483326*^9, 
   3.7716162056791077`*^9}, {3.771625759558325*^9, 3.7716257619713907`*^9}, {
   3.7727259765532913`*^9, 3.772726015571151*^9}, 3.772726269970273*^9, {
   3.7728855096989117`*^9, 3.772885510000814*^9}, 3.772891680628005*^9, {
   3.772891785870488*^9, 3.772891802383254*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],

Cell[BoxData[
 RowBox[{"ArcCos", "[", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"ArcCos", "[", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox["2"]}], ")"}]}], "]"}]}], "+", 
           RowBox[{"Conjugate", "[", 
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"37", "-", 
                RowBox[{"26", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "62"}], "+", 
                   RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"25", "-", 
                   RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"5", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["\[Alpha]", "2"], "]"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
               ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"7", "-", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
               ")"}]}], "]"}], "]"}]}], ")"}]}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"37", "-", 
              RowBox[{"26", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "62"}], "+", 
                 RowBox[{"44", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"25", "-", 
                 RowBox[{"18", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"12", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"8", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"5", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"4", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Alpha]", "2"], "]"}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"218", "-", 
                  RowBox[{"152", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"56", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"1270", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"898", " ", 
                   SqrtBox["2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"253", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"174", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"486", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"344", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"269", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"190", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"7", "-", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
           "]"}], "]"}]}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "-", 
                RowBox[{"2", " ", 
                 RowBox[{"ArcCos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["2"]}], ")"}]}], "]"}]}], "+", 
                RowBox[{"ArcCos", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"37", "-", 
                    RowBox[{"26", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "62"}], "+", 
                    RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"25", "-", 
                    RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"12", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"8", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"5", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"7", "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
                   ")"}]}], "]"}]}], ")"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"ArcCos", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"37", "-", 
                  RowBox[{"26", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "62"}], "+", 
                    RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"25", "-", 
                    RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"12", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"8", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"5", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], " ", 
                   RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"7", "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
                 ")"}]}], "]"}]}], "]"}]}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"ArcCos", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"37", "-", 
                  RowBox[{"26", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "62"}], "+", 
                    RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"25", "-", 
                    RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"12", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"8", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"5", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"4", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], " ", 
                   RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
                 ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"7", "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
                 ")"}]}], "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "-", 
                RowBox[{"2", " ", 
                 RowBox[{"ArcCos", "[", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SqrtBox["2"]}], ")"}]}], "]"}]}], "+", 
                RowBox[{"ArcCos", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"37", "-", 
                    RowBox[{"26", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "62"}], "+", 
                    RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"25", "-", 
                    RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"12", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"8", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"5", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Alpha]", "2"], "]"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"(", 
                    RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"7", "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
                   ")"}]}], "]"}]}], ")"}]}], "]"}]}], "]"}], "2"]}], ")"}]}],
       ")"}]}], ")"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.5823033248738623`*^9, 3.582740215715782*^9, 3.583353102654016*^9, 
   3.5836983098533697`*^9, 3.583763082705551*^9, 3.583763120942039*^9, 
   3.583763260112565*^9, 3.590759437258623*^9, 3.590760010136773*^9, 
   3.5908356303709383`*^9, 3.590924440998415*^9, 3.591617612533634*^9, 
   3.591634603590858*^9, 3.591648070062373*^9, 3.5919543624394827`*^9, 
   3.5919545180066757`*^9, 3.592837657457862*^9, 3.5928382693275557`*^9, 
   3.592841356296074*^9, 3.593124591087276*^9, 3.686070282027134*^9, 
   3.686931681714973*^9, 3.771591847978251*^9, 3.771616215624236*^9, 
   3.77162420566223*^9, 3.771624569457315*^9, 3.771625765942883*^9, 
   3.771767601315835*^9, {3.772726262388627*^9, 3.772726286419333*^9}, 
   3.772879649224169*^9, 3.772885524274646*^9, 3.772891692262309*^9, 
   3.772891826673773*^9, 3.772907957164679*^9, 3.772968690184169*^9, 
   3.773059139195053*^9, 3.773150218995473*^9, 3.7732447678871183`*^9, 
   3.77334695286868*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"af6bef91-f4dd-4d53-985e-642f49b5fc74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusRatio", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "/", 
     RowBox[{"EuclideanDistance", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"latticeVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Alpha]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"22", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"1245", "-", 
              RowBox[{"880", " ", 
               SqrtBox["2"]}]}]]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "13"}], "+", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]}]], "]"}], "<", "\[Alpha]", "<", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           FractionBox["2", "41"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "51"}], "+", 
             RowBox[{"38", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              RowBox[{"5", " ", 
               RowBox[{"(", 
                RowBox[{"737", "-", 
                 RowBox[{"480", " ", 
                  SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581333928283676*^9, 3.5813339332161627`*^9}, {
   3.581334020790724*^9, 3.581334024038533*^9}, {3.5814137912868853`*^9, 
   3.581413793610195*^9}, {3.581413914891388*^9, 3.581413969106378*^9}, {
   3.581414006658498*^9, 3.5814140098857813`*^9}, {3.581417178533601*^9, 
   3.581417182493422*^9}, {3.581418120652129*^9, 3.58141812244401*^9}, {
   3.5821149063355827`*^9, 3.5821149065242977`*^9}, {3.582214283944845*^9, 
   3.582214285342742*^9}, {3.583763127000839*^9, 3.5837631367212667`*^9}, 
   3.590836445225319*^9, 3.590836673722036*^9, 3.771616430596385*^9, {
   3.771625658093115*^9, 3.7716256605829687`*^9}, 3.772726045063327*^9, 
   3.7727262995919867`*^9, {3.772885543729047*^9, 3.77288554407128*^9}, 
   3.7728916960033817`*^9, 3.772891823105571*^9, 3.772891864659317*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", 
            RowBox[{"2", " ", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], ")"}]}], "]"}]}], "+", 
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"37", "-", 
                RowBox[{"26", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "62"}], "+", 
                   RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"25", "-", 
                   RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"5", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["\[Alpha]", "2"], "]"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
               ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"7", "-", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
               ")"}]}], "]"}]}], ")"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"37", "-", 
              RowBox[{"26", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "62"}], "+", 
                 RowBox[{"44", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"25", "-", 
                 RowBox[{"18", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"12", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"8", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"5", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"4", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Alpha]", "2"], "]"}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"218", "-", 
                  RowBox[{"152", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"56", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"1270", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"898", " ", 
                   SqrtBox["2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"253", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"174", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"486", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"344", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"269", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"190", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"7", "-", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
           "]"}]}], "]"}]}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"37", "-", 
              RowBox[{"26", " ", 
               SqrtBox["2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "62"}], "+", 
                 RowBox[{"44", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"25", "-", 
                 RowBox[{"18", " ", 
                  SqrtBox["2"]}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"12", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"8", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
              RowBox[{"5", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"8", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
              RowBox[{"4", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "22"}], "+", 
                 RowBox[{"16", " ", 
                  SqrtBox["2"]}]}]], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["\[Alpha]", "2"], "]"}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"218", "-", 
                  RowBox[{"152", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"56", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"1270", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"898", " ", 
                   SqrtBox["2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"253", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"174", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                  RowBox[{"486", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"344", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                  RowBox[{"269", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                  RowBox[{"190", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"7", "-", 
                RowBox[{"4", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], ")"}]}], 
           "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", 
            RowBox[{"2", " ", 
             RowBox[{"ArcCos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox["2"]}], ")"}]}], "]"}]}], "+", 
            RowBox[{"ArcCos", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"37", "-", 
                RowBox[{"26", " ", 
                 SqrtBox["2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "62"}], "+", 
                   RowBox[{"44", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"25", "-", 
                   RowBox[{"18", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"12", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                RowBox[{"5", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "11"}], "+", 
                   RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                RowBox[{"4", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "22"}], "+", 
                   RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["\[Alpha]", "2"], "]"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"218", "-", 
                    RowBox[{"152", " ", 
                    SqrtBox["2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "598"}], "+", 
                    RowBox[{"423", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"56", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "41"}], "+", 
                    RowBox[{"29", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"1270", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"898", " ", 
                    SqrtBox["2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"253", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"174", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
                    RowBox[{"486", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"344", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
                    RowBox[{"269", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}], "-", 
                    RowBox[{"190", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "22"}], "+", 
                    RowBox[{"16", " ", 
                    SqrtBox["2"]}]}]], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"3", " ", "\[Alpha]"}], "]"}]}]}], ")"}]}]}]}], 
               ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"7", "-", 
                  RowBox[{"4", " ", 
                   SqrtBox["2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
                  RowBox[{"2", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", "11"}], "+", 
                    RowBox[{"8", " ", 
                    SqrtBox["2"]}]}]], " ", 
                   RowBox[{"Sin", "[", "\[Alpha]", "]"}]}]}], ")"}]}], 
               ")"}]}], "]"}]}], ")"}]}], "]"}]}], "]"}], "2"]}], ")"}]}], 
  " ", 
  RowBox[{"Csc", "[", 
   FractionBox["\[Alpha]", "2"], "]"}]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGCwAOKT4WmujOtfOT5ZXOsFotvmVviD6LkLrO8wAWmZ4LOf
QXTSnuJAZiAtNeV3ZRyQrvVlCo0H0jZpNidAtNjZ/ZztQJrhQ585y4ZXjic/
Z1SyA2mD5EDTcCCdLJHcDaKPxR0U7ADSfBsV94Joj9/HsnuANFurQfZqIC3M
M19vM5A28ft7r2PjK8dbX/4qbtn0ynGXO/vGmM2vHKdNDYqoAdJZ3PvSQfSX
49sarxx45Xhi5YqTINr31tetP4H0uojD0r+AdIlyuAWInmSoL6x68JVjR9Sd
zvJDrxxVPgpdrwfSs25eyWoD0ge+RrmcPvLKkUPvZD+InsOxRvAskD71hyUu
/OgrxzPLwxjnl712nL6jZ45zxWvHQ5fEp+6VfON45lDTtJNA+t6aE4lngbRU
i10/iJ7Ev0j8HJBmuWGUJiz1xvGZ38Pm59JvHC+YZqcYybxx7F5xzdUUSD+X
znKzANJVRxnCQXRamIC5A5BukO65Fwukl0y4ztEFUq+2qnEbkO7a6LrmCZA+
NSt+opjsG0cAdPDn1A==
  "],
 CellLabel->"Out[25]=",ExpressionUUID->"95429dad-1db4-48f2-aeba-5a2052f1fe25"]
}, Open  ]],

Cell["\<\
Now plot the region of the moduli space that is covered by \
(r,theta)=(torusRatio,torusAngle). The right boundary is in the region, the \
others are not.\
\>", "Text",
 CellChangeTimes->{{3.5814140902111692`*^9, 3.581414154771768*^9}, {
   3.581417869513275*^9, 3.5814179087877693`*^9}, 3.5819442751664667`*^9, 
   3.581952458180634*^9, {3.58195324790655*^9, 3.581953260663254*^9}, 
   3.582222917826333*^9, {3.582740615417358*^9, 
   3.582740626390436*^9}},ExpressionUUID->"7fea073f-4678-488f-94be-\
79aeb56d8b30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".5"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Thick", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".5", ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"torusRatio", "*", 
         RowBox[{"Cos", "[", "torusAngleFromVectors", "]"}]}], ",", 
        RowBox[{"torusRatio", "*", 
         RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"ArcCos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "31"}], "+", 
             RowBox[{"22", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              RowBox[{"1245", "-", 
               RowBox[{"880", " ", 
                SqrtBox["2"]}]}]]}], ")"}]}], 
          RowBox[{
           RowBox[{"-", "13"}], "+", 
           RowBox[{"8", " ", 
            SqrtBox["2"]}]}]], "]"}], ",", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"ArcCos", "[", 
           RowBox[{
            FractionBox["2", "41"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "51"}], "+", 
              RowBox[{"38", " ", 
               SqrtBox["2"]}], "+", 
              SqrtBox[
               RowBox[{"5", " ", 
                RowBox[{"(", 
                 RowBox[{"737", "-", 
                  RowBox[{"480", " ", 
                   SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}], 
       "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.581415831271719*^9, 3.581415978032723*^9}, {
   3.58141612812768*^9, 3.581416251087431*^9}, {3.5814163536961203`*^9, 
   3.581416442716133*^9}, {3.581416480954212*^9, 3.581416483177804*^9}, {
   3.5814165146738863`*^9, 3.581416565902112*^9}, {3.581416608288938*^9, 
   3.5814166596471777`*^9}, {3.5814168167885647`*^9, 3.581417153958934*^9}, {
   3.581417202245771*^9, 3.581417213509737*^9}, {3.581417400105816*^9, 
   3.581417408207815*^9}, {3.58141746709744*^9, 3.5814175008866453`*^9}, {
   3.581417557569965*^9, 3.581417612638392*^9}, {3.581417671918985*^9, 
   3.581417831941291*^9}, {3.581417963968446*^9, 3.581417981960126*^9}, {
   3.5814180770100727`*^9, 3.581418078736156*^9}, {3.581418154813571*^9, 
   3.581418198197053*^9}, {3.581418231380889*^9, 3.581418233404674*^9}, {
   3.5814228339713078`*^9, 3.581422878811762*^9}, {3.581422916120751*^9, 
   3.581422920863715*^9}, {3.581423093095364*^9, 3.5814231218921137`*^9}, {
   3.5814325481543407`*^9, 3.581432568807173*^9}, {3.58143260450275*^9, 
   3.581432634829975*^9}, {3.581606579957893*^9, 3.581606608420135*^9}, {
   3.581606987915503*^9, 3.581606998825101*^9}, {3.5816074940013037`*^9, 
   3.581607502096019*^9}, {3.5816089617270803`*^9, 3.581608961944695*^9}, {
   3.581610590770281*^9, 3.5816106180632963`*^9}, {3.581610681115829*^9, 
   3.581610701075707*^9}, {3.581610737934224*^9, 3.581610756661036*^9}, {
   3.581610842392229*^9, 3.581610866051654*^9}, {3.581610899571859*^9, 
   3.581610901443101*^9}, {3.581628476144258*^9, 3.581628557405979*^9}, {
   3.5816288727085114`*^9, 3.5816289082821913`*^9}, {3.581629178822418*^9, 
   3.581629182837798*^9}, {3.581629414916697*^9, 3.581629440685017*^9}, {
   3.581629482704157*^9, 3.581629535764595*^9}, {3.581673461804196*^9, 
   3.581673549905184*^9}, {3.581673641406663*^9, 3.5816736439745283`*^9}, {
   3.5816736910543633`*^9, 3.581673692799611*^9}, {3.581673723190359*^9, 
   3.5816738188450117`*^9}, {3.581687950683776*^9, 3.5816879567545223`*^9}, {
   3.581688016649939*^9, 3.5816880272652283`*^9}, {3.5819443936836443`*^9, 
   3.5819445342161207`*^9}, {3.581950949672516*^9, 3.581950957971415*^9}, {
   3.581950988486538*^9, 3.581950995522575*^9}, {3.5819531797520447`*^9, 
   3.5819532355691442`*^9}, {3.58221429143818*^9, 3.582214323641893*^9}, {
   3.5822143838841248`*^9, 3.582214397599576*^9}, {3.5822144308149233`*^9, 
   3.582214468851671*^9}, {3.582214521826295*^9, 3.582214548417429*^9}, {
   3.582214625108366*^9, 3.582214653749571*^9}, {3.582214715107759*^9, 
   3.582214723919776*^9}, {3.582214962155978*^9, 3.582214985349832*^9}, {
   3.5822151321151953`*^9, 3.582215160198626*^9}, {3.582215328952002*^9, 
   3.5822153367977*^9}, {3.5822154632111673`*^9, 3.582215466952477*^9}, {
   3.582215958667633*^9, 3.582215958826397*^9}, {3.582216169371503*^9, 
   3.582216225367741*^9}, {3.582216696200515*^9, 3.582216709707431*^9}, {
   3.5822866723292437`*^9, 3.5822866925090446`*^9}, {3.582286752029377*^9, 
   3.582286752908947*^9}, {3.582287158898551*^9, 3.5822871632335443`*^9}, {
   3.582287337500922*^9, 3.582287358257596*^9}, {3.582301692611936*^9, 
   3.582301712401127*^9}, {3.582301784817443*^9, 3.582301789917963*^9}, {
   3.582302650469707*^9, 3.582302655265546*^9}, {3.5823027058646097`*^9, 
   3.5823027249979687`*^9}, {3.5823029530486193`*^9, 3.582303020216475*^9}, {
   3.582303064333783*^9, 3.58230307483996*^9}, {3.5823031290716467`*^9, 
   3.582303135836779*^9}, {3.583353031333394*^9, 3.583353124551704*^9}, 
   3.5837631490547533`*^9, {3.583763272239708*^9, 3.583763274307045*^9}, {
   3.5837634289930067`*^9, 3.583763431208726*^9}, {3.7716164575815573`*^9, 
   3.771616478135851*^9}, {3.7716166852611103`*^9, 3.771616698019866*^9}, {
   3.7716170003808947`*^9, 3.771617001546206*^9}, {3.771617152902998*^9, 
   3.771617154084714*^9}, {3.771625225156486*^9, 3.771625253346716*^9}, {
   3.7716256656214123`*^9, 3.771625668004211*^9}, {3.771626607610469*^9, 
   3.7716266619078503`*^9}, {3.7727261256365147`*^9, 3.772726143331822*^9}, {
   3.772885560972527*^9, 3.7728855690041037`*^9}, {3.7728856098177958`*^9, 
   3.772885646636066*^9}, 3.772891707124332*^9, {3.772891849801701*^9, 
   3.772891878164115*^9}, 3.772892144636554*^9, {3.773059212454925*^9, 
   3.773059401836439*^9}, {3.773060546227853*^9, 3.773060616432885*^9}, {
   3.773060649065866*^9, 3.773060653233057*^9}, {3.773150171310512*^9, 
   3.773150192482739*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}], LineBox[{{0, -1}, {0, 2}}], 
   LineBox[{{-1.1, 0}, {1.1, 0}}], 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{-0.5, Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
        2}}, {{-0.5, 0.8660254037844386}, {-0.5, 2}}]]}, 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{0.5, Rational[1, 2] 3^Rational[1, 2]}, {0.5, 2}}, {{0.5, 
       0.8660254037844386}, {0.5, 2}}]]}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwV0XlME3YUB3AE5RCUIrBKQc6BDJ3TyVWuRykgp0UQUCY6mFYuJdtUFHSg
cwvnxiHMhcVAGUNhHmhQqFAExCmnicKCOFnBZ3+Ko9yXinv+8fLyyfclL3nP
IjY59ICqiopKMNWHPmHEPd9txSDIVhXLDiGsGD0x3UHucerYV0rWuR5vcp/8
j8sNwxJyW8psYit564jqmRzyxSml1i1yES9uzzHy1ECvoIzMC+7hBpGv7d9V
/g1Zx3304lwSgiQw04xL3uThYC8iv5O05oosGVx+F/x4JAEhLMyupciCgTLN
eqAwHiEG1bc9MWdgUYgVAXEIgpSsbF2y+nS8xksxwq/+GfIQM8rLR3zLDyAU
BMguZZgy2FP7b7bnfoSTm/kXrq9jMJ9SVM9iEYzvT86MmzDIsgt3qo5B2Hlc
O3od+dSFdo+wLxFs0n4RRRgzmHnlEGK4D6HpapusgMeAO+LcNBSN8Hba6qnU
iIFE+tfnhXsQJtwd+8bXMuBznm2M/gKh43nqRgPyBpfc85wohLTmcwN8LgNZ
i+RM1y6Eo63bbiZ9xIDj2RBfFolQ/6ImO9eQwZ+DrsLoCISKkqn6BgMGe9fH
Pd4SjhDYtZTzSJ9BOsw1K8MQ8jxnOpRrGHhVDY/VhSIo7LukRuT5szaioh0I
l0s34Gd6DFwrBVlRIQiztcLXYRwGP4oXrzqLEO59PHEzVZfBadXifNPtCN3j
raF5qxmUxwXcGwtCMLhz3fLKKgavK0oO9gUihGxZdkiqQ/cJ8Wz7IwDhyXP1
HQ+0GXQY2C2m+yMYmp68+2Il3dv8mlGyH/1r1lGo1GKgBleS/bfRP7cnpquT
H9p7JfJ9Ec5F7q8112RQKFveuNkHoTL1SIa1BoNLBm639b0Regpr4vjqDAa5
gmFtIYKGm6DIaQWDN1mBvHEBQmpNpbrPcgb1xXVOLz0RbIc7s8PVGFQHib99
CQifrPIeEqkyeNTd7NjvgdDQkjy4exkD64SB2L/dEYoMNQOCVRiUnNA93u6G
kNvk9ZvwvQLqFsWdUleErjL/Bf8lBWj/oKl11wVBmFISwn+ngIBekyopH+HO
06rnzm8V8D61eeyuM0Kmt88d1zcKEPZqTPU5IfwUqWG2flEBOmLDzseOtF9/
fp3VAs2LRY9eOCDc8BjKNyXbZnFrh8mdPIkajzz0asXPz8hdK28zDnnAKzyw
n3wsjV+7NK+ADYmy9nZy0OhB1yfkT3WlLb+Tdx8+a19APmcT1h9LlljIJbnk
qzry+r3knAQjvUxys1lxaRRZt9/kv+/IfleSY0LJdgOHK5LIW9PHxgTkvmEP
LT9yZNQaPQuy+8TOo0KycazqrAm5p8BX7kH2/n7t4Fpyx+HGegdygc2tSg65
8ebkASuysLrJTYWcZ4oPTcn5uc8s39ojDK+84cojR2Rba82TG0/IOXrkyQfW
/UqybFaQpkOOXT3UOEqeXjiFGmS5WFahIG86UixSI3PkbdkjH/JTmQ1Lcwow
/0r59RD5f7jJbss=
       "]]},
     Annotation[#, "Charting`Private`Tag$3441#1"]& ]}},
  ImageSize->{341.937045732584, Automatic}]], "Output",
 CellChangeTimes->{{3.7716266149462214`*^9, 3.771626632038991*^9}, 
   3.77162666291777*^9, 3.771767601712225*^9, 3.772726310735919*^9, 
   3.772879651892415*^9, 3.772885576478664*^9, {3.772885618219396*^9, 
   3.7728856483985643`*^9}, 3.7728917116137733`*^9, 3.772891883042508*^9, 
   3.772907961470174*^9, 3.772968692867426*^9, 3.773059143141197*^9, {
   3.773059244860841*^9, 3.773059377985529*^9}, 3.773059409297824*^9, {
   3.773060547054323*^9, 3.7730605619740543`*^9}, {3.773060594258806*^9, 
   3.773060617181691*^9}, 3.773060654011664*^9, 3.773150221888616*^9, 
   3.773244770425666*^9, 3.7733469552210827`*^9},
 CellLabel->"Out[26]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQncXsP1xy/vExGxBVWtaoPa9yV2ErXvWy2NNYKi9jUSShAiJEKEbJIQ
SaigiK1CrKGWEgmySkS0VaSlam06//OdOefJfabzTCKfl7+2r8/nkeTO7/xm
7r0zZ845c2buPh3OOfH4Uzucc1LHDq13O6vDGSee1PHs1ruefpZcalikKBbl
d3/rgr+7orD/zfuvgf+Vr/z/XvjI/7GM+/TTT92HH37o3nnnHTdlyhT32muv
uZdfftk999xz7sknn3SPPvqou/fee92oUaPcHXfc4YYPH+5uvfVWN2TIkGJR
N3jw4GJp/2+uUw4OPHLIwwMfvPBTD/VJvaEJxR/9H8v6lrz77rtu4sSJ7umn
n3a//e1vXb9+/dwll1ziTjzxRLf//vu7bbfd1m288cZurbXWcj/+8Y/d9773
Pbfkkku6SqXyPf/Al+Wv/hJFQIAigigUUEEJNVVQFVVStTQhtKZ4y//R0v3r
X/9yf/nLXzxi7Nix3LDr1KmTO/jgg93WW2/t2VdccUW32GKLyeOgBev5FrRq
1crXvv7667utttrK7bbbbu6www5zJ510kuvcubO7+uqr3YABA9xtt93m7r77
bvfII49UH9cLL7zgXnzxRf/YXnnlFde7d2/X0NDghg4d6v/NdcrB2WtCHh74
4IWfeqiPeqmfdtAe2kX7pJ3a5pa0398H98N9cX/cJ/fLfXP/PAd5Hvpsikn+
jxb+Ec2ePds3ibfPwz3wwAPdRhtt5FZeeWXXvHlzrWZJt8IKK7i1117bbbPN
Nu6QQw5x5557rrvhhhvc/fff78aNG+cmTJjgZs6c6T744AP3xRdfLOuraHCj
R4/2T/X3v/99Ea4tSbGHAUcMcWiggxZ6qqE6qTa0oAWt8a2idbSS1tJqWs9d
cIPhzooJ/o/mvqapU6e6xx9/3L+L9u3be3F5XoXRLrPMMr6mXXbZxZ1yyinu
+uuvdw8++KB/X3R56VnFD/Vu6HXczTPPPKPXWvjODw48csjDAx+8wq91Nffv
ifppB+2hXbRP2qltLl7R0U2nlmo8Ha90nXXWcUsttRRErlmzZm711Vd3O++8
szv77LPdLbfc4h/iW2+95Zu7aqK5q5a0BjjwyCEPD3zwwk891Ee91E87pD3a
tuIF/8fSvvugGFAaZ555pttyyy39HUJBr19jjTXcPvvs4y699FLfD15//XX3
0UcfrZVo3VpKKcUeBhwxxKGBDlroqYbqqJbqpRmhRcVz2sF4pPSMk08+2SsQ
lArS9GGGyGmnneZ+85vf+M7397//ff1Eg9ZXKin2MOCIIQ4NdNBCTzVUJ9WG
FhRPqw7685//7B577DHXpUsX32x7gSuttJJr166du/jii92YMWPcrFmzik0S
rdhEeaTc48Ajh7y9KHjhpx6pT+sunvB/LOHeeOMNd/PNN7t9993X/eAHP6iK
cSOI0QX/+Mc/tknU3kYppNjDgCNmdwEdtNBLNaHGYoxKff75517Hde3a1W2x
xRZu8cUX91Jrrrmm69ixo7vrrrvctGnTtk5UvLVSSLGHAUcMcWiggxZ6qSbU
WDyiUp988omfGs477zzfi00KJWpS8lq3S1S8nVLw1q3tiFnboYMWeqkm1Fg8
qJqAO2ao0Dl/+tOfVh81w4s5a9KkSUW7RK3tVF7KPQ68PWM6P3zwCr/WVdxf
0uB/+MMfvC5cb731vMjSSy/t9txzTz8ByBMsdkpUuZPK84TBgUcOeXjggxed
Guoq7vV/LO5mzJjhNTXPZdFFF/XzD32yf//+bvr06bsmattVRaXYw4Ajhjg0
0AltqKG4W9Eff/yxV6hMgkx6tG3TTTd1PXr0oLvtkahoDxWl0wMDjhji0EAn
tKGGYpSiJ0+e7JUNzxr0D3/4Qz+meeZffvnlXomK9lJRKfYw4IjZK4NOaEMN
xR2KRvc+/PDDXq+2bNnS3z8vGwvsvffe2zdR0b4qKsUeBhwxxKGBTmhDDcVI
nfcYsSjuDTbYwDeJaZNeJHNUcUCilgNUjjkMHHjkkIdH+JS7GK5QtPQ555zj
vv/973soigFFIA0tDkpUcZDKcSPgwCOHPDzCp9zFMIU+9dRT7tBDD/Wjj8kf
uwA99NVXXxUHJ6o4WOWk3OPAI4c8PMKn3MVQhfL+HnjgAbfrrrtWW4MJIh2o
OCxRxWEqRwcDZ3ePPDzCp9zFYIX+4x//cCNGjPB6Gmjr1q1d9+7d/YTaPlFF
e5XDAAAHHjnk4RE+5S4GlaoYNmyYn4yAYiredNNNWOvFEYkqjlA5rHlw4JFD
Hh6qCNzFAIWiVDEXsF4MivMg14ujElUcVZIDZ01DHh7kAnfRT6EYayNHjqxC
N9lkk2prjklUcUx09+CtafBgVAXu4kaFzp0715sWeBTWGuxuqjg2UcWxpSrA
2d0jD4/wKXfR1/+xmDfpMdmBMQlg0st0clyC/TgVYbYBZnMG4kITGIs+iqLL
HXXUUdXx3LNnTzdnzpwTEsQnqIgUe5gNZ8SFJjAW1ykKZYHDgErBpMH5EEPi
xATxiSqCXQMMOGKIC01gLK5V1Geffebns3L1b7755skJ4pNVRIprbhJxoQmM
RS//RzPv1my33XYeteOOO/KwilMSrKconncCDjxyIq9cxTVaMbPacccd5xZZ
ZBH3k5/8xE+K0oFOTbCeqiL0V2DAEUNcaAJj0UNRGAXMbxiNKCPMB3HHTk8Q
n64ieGvAgCOGuNAExuIqvannn3/e/exnP/M3tfvuu+NbFmcmWM9UPL4nOPDI
ibxyFVdqxegDXiVzMybmoEGD0GhnJVjPUhEUKDDgiCEuNIGxuELrZpYy84TH
JP5ScU6C9RzF40+BM3NE5JWruFwhPCTcLCC4WTIci/MSlOcpnuEKDjxyIq9c
xWUKwQc1M5NZEPV5foLyfMXzuMCZVSvyylV0LUFwG2wyFWe/uCBBeYHiCQbY
pI0cTQhcxSUKeeKJJ6p6iNr/+te/Fp0TlJ0VL+XVViIn8spV/FohqDcsPvy/
1VZbzd/IhQnKC0sPChx45FCfgau4SCFoq5122snXeswxx7g//elPWlZLaXgp
9zjwyDEBhzKtteLNn+WXX94bczKFXJxgu1ihzDDAgItYYKg+EdQi0RXq2mGH
HfDv9InUstkTx/8DBx45kVeu6nvDVm7Tpo2HnH/++X5665qgtH7BtAgOPHIi
r1xFJ70HpjRiE4wsobgswXaZQrkGDLiIBYZqz2d6OeOMM6raUnxm7fm1bDay
8KlNWyIn8spVnKsQ3AaD0Le43W4Jym6l27U+iBxuSeDSIV/x7i3hLbwQmWqv
TLBdqVBmYmDARSwwFGdrKQYNmmjdddcl6tQ9QdRdoVLsYcBFLDBUFSaNNg2z
3377eSP4qgSbKWTmUXCmYXgogas4o9TLcbWAoOHx6HokKHsonskDHHjkGEWB
SyeLihs/frwf1kwWooivSbBdo9CBAwd6GHARCwzFaVr60EMPeXOWn6ihngmi
ngpFSxlUxAKDzosVb93zRLHDZOj0ShD1UigjCxhwEQsMxa/07nFur7jiipq7
vzbBdm3i6V555ZXeeQ1cal+EB3r66ad7yNFHH+3fUe8EZe9SHwAHHjleWOAq
TlLI3/72N+9dAMElwDu5LkF5neLxTsCBR07klUvNq4qf28wj6dWrV58EWx+F
SnHVARGxwFD8UkuZR4mkoqiHDh16Q4LoBoUSogYGXMQCg1qSFa8TeFEYe3ff
fXffBFFfhRLLBgZcxAJDcbyWspiAg7zsssuy0HBjguhGhbIOAQy4iAUGNZor
XuPiGtEHn3322ZsSRDcpVIo9DLiIBYaio5YSPl5llVW8uSl/75cg6leCAgMu
fw8M6iRUfMCIGABqSarpnyDqX2o8MOAiFhiKDiUi1Pmqq67KOB2QIBpQGv3A
gItYYFDPqOKXGaiCuXrixIkDE0QDFcoqATDgIhYYiqNL7eWmabO8ikEJokGl
FwwMuIgFBnUHQymvgWqk9OYE0c2lOoEBF7HAUBxZ6pB0DN6rvIrBCaLBpbcG
DLiIBQb1gcMQQSHS08aNGzckQTREoYTMgQEXscBQHK6l77//vh88SyyxBF13
aIJoaKlnAwMuYoFBHf+Kj4GzeMBolMF0S4LoltJYAwZcxAJD8QstRdmZZpLh
fWuC6NbS6DeFJGKBQaMdFe82m9YUhTMsQTRMoaaPgIvYYWWiBq+Vde4rbkuw
2DWb8wSvssWhWgGzizmT//znP+uzVCiuOpMiFhiKQ7QUnwSJPfbYAzU/PEE0
XKHMAsC4LmKBQcNNoU/Tv1B4MgWNSBCNUCgzFDDgIhYYip9rKV41xj+LHDIe
RyaIRpaGKzDgIhYYNMZW8fY8rh6TvfS12xNEt5e6IjDgIhYYigO1lBnYTCCx
Hu5IEN2hUIwLs3xE7MAyUYM3ytQ2Ln6TYLFrZhMLXmU1Nlnx6xvYCSwJietd
n6XiPXNgwEUsMBT7aylRaDQUlp/YbHcmiO5UKCYdMOAiFhiK/UrdAr+AWP1L
L700KkE0SqFS7GHARWy/MlFD1ToXw7a4K8Fi1zB81SpX2cJixngLFJ111lka
QK+lsGtSXq0qyBb7aBsJ/qLeiM5LG+uzhDsHBlzEAkOxt5bicRKMY1KaOnXq
PQmiexTKSh0w4CK2d5mowTtbRFbuu+++4rcJFrsm5R4neJUtLGiP08j9durU
SVcwainsGnELcIJX2WJPbSMxKcIw22+/PTdenyU8F2DARSww6KpExYf/27Zt
69008W/vSxDdp1DcZ2DARWyPMlGD97lprLi5ujpTy2LXcIPBCV5li921iNg6
cNGPxegEhV1Df3KN2HmQLXYrvWaCM5gNMlDqs4RxBAy4iO1WJmpwp556qn99
DzzwQPFAgsWuEWAHJ3iVLXYtFdnIeDBBYddspFFVkC120TYyfxOB3XDDDfHw
67NUfAABGHAR26VM1OA1IOvVonmKhxIsdg2FBk7wKlvsrEW/+93vqrfzcILi
4eh2BK+yurIX2ki8iyXLDz74oD5LxediAAMuYjuVieapZHH0dIm1lsWu4T+a
ileKn2kRdii6+Nhjjy1+l6Cwa1LucYJX2WJHbSO2DMqTNefZs2fXZ6n4XBBg
wEVsxzJRg+vbt68ZBMWjCRa7ZnaG4FVW12krPlZMjhJWl3hz9Vkq3tkDBlzE
2pWJwv2yOMWy3JgEi11DM4Pj+SlFWy0itK2eZ/FYgsKumcdJqDzIFjtoGwnT
Y4liaL/33nv1WSp+8Q4YcBHboUzU4Jd2TS09nmCxa6aWBK+yxfZaAQYSRj+T
y5dfflmfpeIjz8CAiwm0fZko6HMG19NPP12MTbDYNVbywTE/KIUlBqCDWeA4
8sgjNZuilsKuSbnHEbLcrpbi8MMP977w5MmTsxSsQIMTvFFsq0Uoah5W586d
iycTFHaN5RhwKOogW2xT6oSsG+O6yhuszxJeMDDgIrZNmWielr322muLpxIs
dk3Kq1pWKbYujWOWfnHGZCaozxLmF2DARWzrMlGDu/32230dgwYN0pSXWha7
xuIEOMGrbLGVVoCZjAGNPyczd32WMLEDAy5iW5WJGvwCp9XxTILlmajNglfZ
YkutANsAcrwD+Xt9lgAFBlz+vmWZaJ6NOGLEiOLZBItdYynZDEGl2KJUAdMb
lcjN1mcJjxAYcBHbokw0rw6MqnEJFrtmRhptVoo2pf6y+eab+yVqeQn1WcI7
AgZcxNqUiUIiInUMGDBA88RqWewaC7HgWE9Sis21AvxJ1iYIuMg8WZ8lzL7A
gIvY5mWieWO6R48exfMJFrtGCouN6Yji5z//uXcAiYnmKFCo4ARvFJtpERkc
uH5MHb9PUNg1pg5wZGhsVktB8iATk9i6WQpMaHCCN4pN9UnRQGZHkjXEb6zP
ErxRYMBFbNMyUYPr06ePf1isb72QYLFrrJ+BE7zKappd6PiYqExv4kPWZwku
JjDgIrZJmWieLTR06NDixQSLXbOwC7ZVREGGK1ObGGdZCow3cII3io21iBgZ
YSZ8wpcSFHYNnxAcC0Mb11KQx0SAafz48VkK4pDgBG8UG+mTYvmJ5FLMIHmD
9VnCCwYGXMQ2KhPNG8EjR44sXk6w2DVyP2wERxRkTDG98VBzFDxUcII3ig21
iKRlPPmTTz65+EOCwq6REcYileBVtkrBej5+zHPPPZelIA4MTvBGsYE+KYwf
1g0322wzdF19lqBBgQEXsQ3KRA0+KwCJq6++WtN7a1nsGlnpXCPLIKL49a9/
7fUDRk6OAiMHnOCNYn1tIyYoHgh5CXPnzq3PEmKRwICL2PplomDOmZZ/NcFi
10zLYx5GFEQu7cXlKOgI4ARvFOuVujzu7t57702frs8Sujww4CK2XplonnWP
HhmfYLFrpkew7iMKcuvor9xOjsL6teCNYt3S22F3AWtM0t76LOF2gAEXsXXL
RA0+gE6HxvB/LcFi13AkwAm+iCjIgG7RogWBoywFgSVwgjeKdbSNmMMMCNS3
zM31WcKMDwy4iK1TJgoOArMaSm9CgsWuoURpCw5CREHUlDvF481R4EGDE3xM
Qe8h+4Rl+hwFnRKc4I1ibS0i8MykevzxxxcTExR2Tco9jjTztWspLGJxzz33
ZCmkvBqxiCguuOCC6sDLUdjAE7xRrFV6X5h/5OeJoqjPEvQIMOAitlaZKHQf
HLKLLrqoeD3BYtek3OPojhEFOwZsTOYobIwLPqZgwxNLBeTU5ijw2sAJ3ijW
LHV2HAUcOhmc9VnC2AUGXMTWLBMFY4I77dq1a/FGgsWukTIPDmMiomC1ijsl
/S5HQXofOMHHFChngqvkYuQoCDiCQzkrxRqlF89LJ04rt1yfJTwRYMBFbI0y
UYOPM5FghHn1ZoLFrmFegRN8EVGYLXrXXXdlKdhdYrZtRIGvjeWFCZ6jwAQH
h+8eURx00EFVDZKjMA0ieKP4qRYxReCrH3DAAboHq5bCrrGND5zgVbZKQQcj
jHL55ZdnKaTc4+hgEQWLWWZO5yjMPBd8THHNNddUjZkchRkzgo8p2GhAZPjj
jz/OUrC/AZzgjWJ1LWLU4lnsvvvuxeQEhV1j1Q4cOSer11Kwrk2vY6k1R8FS
KzhSMiMK0qPYa0CIIEdByAEce/wiCvaV8qSZ33IUzG/gBB9ToGJZZ3r77bez
FFLucajsiIKsLB4TvS5HQS8GJ3ijWE2LmFlYCdxzzz2LKQkKu0b+ETjBq2yV
glmWtS6C+jkKgvrgmGUjCpaaCZATlM5REOQGJ/iYwsYIE3COwiZ0xkhEgdFC
zJS8yRwF2V3gMFoiCqxSwhLo8RwFehwcVmlEIarGvyxSsnIU+D/gUE0RBXqd
FTb+laKYqtfAgOVfYR9ldYslATDc1fbt21fhKQp2fIIjVTaiYHMfcxX2TI4C
+wgcmwUjCnO/+/Xrl6Ugnd7c+YjCJl10Z47CdCeTeERhs9SLL76YpSAhB5zg
YwpcY+DMZjkKZjOu4RpHFBdeeGFVoeUoTEEKPqYg9ZzoHanVOQoi1OAEH1Ng
lRMwRjPnKND04LDKIwp2ObKGxb9SFNP0Ghiw/Kt1oGitRdg6aCPYp2UoaC04
MiYjCqKqOKesguQoWAUBRwePKEhnJER12mmnZSlIeAdHan5Egc2/3HLLeXcu
R4F7CA4fIqLAWyPK1bt37ywF+7LB4a1FFKSkodA4QSFHIeUeR1Z3RMGuDZvo
chQ2cbJLI6Kw6DFZ+jkKsvQtehxRkGxNEUvUOQqWqA0XUbCVkiJ89BwFPj84
wccUpi9eeumlLAXJM6YvIgpbYeBJ5yh4c7bCEFFY5syrr76apZByjxN8TGHh
F9RqjgI1beGciMKWmydOnJilIPHLlq+VoqUW4a3of8Vyeo1ICqYZsfscLWsB
4IjMrJDgaxGqWkKLfvWrX/mNVKJ6pCr+38xPkpizhCl0YpVJdV4Z+oUytF1c
Bp4y5Clb3pc1+Dqw/xJNIGkE0Xbt2kkT+H8zHxck8gQVGlH+LdXMK2N1iDK2
Bcdl4ClDnrLlfVmY+9EqiSbwgNCwaM3l/P+b+adlQR3sH+dNi3llxD94+AQq
4zLwGuTxZcv7sgaro9yEuOdhitm75FwEqnj22Wer16Cu0/Os/y9o5030fxuF
5DHkKMhjqDMK77zzzq+lCwQfU9jqNCozR0FY3VanIwozjvGzcxRmLGEcRxQW
zoE9R2GtJTwUUVgDuccchT0z1hEiCsL6jGfed46C/gOOsH5EgUogusk6WY6C
dTdwqJiIgkQZXDICpDkKAqTgBB9TENrCGTrzzDOzFOwuAkeoLKLAzyZp5Zhj
jslSsP0MHH57RIH3R3YUjmGOAkeThQm8P6Uwa44QMukq/CtnzYEBy78iCvYF
o7rYdZyzKdEX4AQf25TsZcEN+eijj7IU5KCDE3xMQT4YLhn713MU7F8HRz5Y
REHMyoIsOQoLshCziihskY+JP0dhEz+pGRGFGUHyZ5aijIsozCBkNs5RMLub
QRhRMEawWFkVy1GwygaOMRJRWAfnZeUoePnWwZXCPGFyOMhVcC7vCYMBy78i
CvN4OAIh54+zdGkeT+SPmwPAIM5RoBTMoYgocCAtHJqjsHAoDmREYR4uk0CO
woK3eMwRBf0COMlJOQqSk7hGv4goiC6z1kL8LkdB/A4c0eWIghwF4rX7779/
loKgLDgOTFAKi5yhcnjfvNRc5IyXCg6VEwXfSB8hbIG+yFGgL8CRjhJRWH4V
9kWOwuwL8qsiCoF524o5NUfBnAqOaxEFp2aRk40PmqPAWgQn+JiCWJS9kRyF
vRFiW0ph0WUOXMKU5pyvXHSZXBZwgo8D1JdddplfoqGBOQpuGJzgYwrLxSAK
lKMwQ4lcjIgCT4ZV0V69emUp2FEEDs8oomBBAoX2i1/8Iksh5R7HAodS2NoH
23pY8CI0nFv7IDQMTvDx8km3bt18A9nUnKNg0zQ4wccUbKg1JzlHYU43xwhE
FNY7CWflKAiPWe+MKIhF4SLtsssuWQpSdMAR21IKW58jckbizPvvv59dnyPZ
HhyRs2iJzxIYsWpzFGYlk1wYUeDtYDf07NkzS2GLPXhPEQXvmxG4zz77ZCnY
ZgSO/qMUtnpLRIyNQxwXkFu9JVcQHBG2aAHY3DtWVnIUrNSYexdRMMy4R3IN
cxTkGoJjmEUUzCNE0OkXOQr6BTjmEaWwtX0CBrZum1vbt3Vb9kRE6QG4tdb3
cxQ2lgQfU7BERN9nxTZHwYotOJaclMKyLTDPsV7QzLlsCzQ9OIIIUcKGrdiy
OJOjYLHHVmwjCrMvrrvuuiyFlFftixqKeSlXmpaXy4KxtDxNuVIiy8hhuQrn
jXh7LiOHeDs4PLkoqcfcbjL7chRm9ON2RxQ4LGw5Zm06R8FaNzh23SuFZUpZ
dgsptblMKctYJVsmSrYy/UzmQo7CMiHQ9xEFJ8awe4UFpRwFcxo4TohRCstg
w87H82IBMZfBxoIkOPyGKAnOboSklByFJblwIxEFbwS1hq2To8DWAYdLqhSW
WUiMj0wfVrxymYWsoIFjY1iUnEiw3BKnchQWsyNYXkMRctzp+gx9mfJyuZbM
oMCAi5gSWd4ndpetyubyPm2VF7srSh1lEQMt3aVLlywFR3WCYxFDKSwHlpFM
CgbGUC4HFuMKHFo/SqO1eB+eT47CPCnifREFBgDxGjJscxRk7ILDoFAKy00m
F4hEEOyuXG4ydhc4coGi9GbLfiXnJEdBzgnXCJPVUATlyJE2mkBTP1W7Us2f
AS5iSmQJ37Y5hHkrl/Bt8yARjZqc8bBjhqFEEsLcuXNz+evEiIABFzElslx6
OwyKeSOXS888pIdAFVE6Pk8d54E9uTkK9viC4y0qhe0uQI9xihPDP7e7gOEP
Dj0WbVDASCS+edVVV2UppNzjMDprKMKT4o1p2Kz+ZotKNWoGXMSUyLZs2Ivj
5PXclg3OlLOOULPrI0zabJXWXUK5HSi2Swi4iCmR7YYxj5rEs9xuGE7fNY+6
ZkNNxUed0A+s0Yj7n9uZQ3QAGHARUyLbJcQBo2bY5XYJmWEn+KJmo1HFT5oc
w8dCjlSW27FEW4ABFzElst1TtnON7Jjc7inLjsE2q9mAFdrCqCJUJvNBbicX
0wUw4CKmRLarjJMbzdrJ7Soz6wlvp2ZjWtjZC7k+l9wON3suwEVMiWy3nW2u
YSd+brcdO/Ftc03Nhr2KPyeJxTUW2qRD5nb+0c2BARcxJbJdiOYUMavkdiHa
LIVTVLORMUzpDAy8FdHKuR2RKG1gwEVMiWx3phly9Mnc7kzr4xiG25Yp5u3O
ZJYT07L+NtGwVwqY7s5UIttsyjFHBJkJoOU2mxKQA8f6oG42tV2zaFymStZy
xiYo7BprQ+DQuDUbbyvVNE5OkpFJLreDl6kTmGZzKpHtJrZDDjj7MbebmHNc
wDEH1WxIDl0OUwxHTPRObmcz2gwYcBFTorbRa2aXTG6XNbtk7DW3LVOE1HSC
BUxU06dPr7/dOxxQAgy4iCmRbRpnHZb8FByE3KZxMs7AYW3qpnHbA0+E0kZz
bg+8jWYebc02+vBoiYcxROfMmZPbj098AxhwEVMiOxvAbESy33JnA9gBHdic
ejaAnVDAwh0rkERJcicUECUBx0JgzSEH4RQoRhY7Aj755JPcaQkkRAEDLmJK
ZCc32FZWTi7KndxgJyERvdq5TBEMDjshXAys+kdIhDOy7CRwEVMiO9HCzinA
HBGVmjvRAo0LTM8p0OMo7HQN8plobPfu3bOna3BcNTjyo3YtU4Tuz95NAqDP
P/98/WM+Kj5FChhwEVMiO3WEN8XaDykjYm/lTh3BHAMGXMT0yBA7AcVMGxZY
cieg2FlUmEp6Aoqdw/LLX/7SW42oqNw5LKgocIK3c1jsTBhmaKYXpt133303
dyYMCyTAgIuYEtkpNWh/Ojcbg2VuyJ1Sw4wDDLiI6Sk1dmKOmR3ElnIn5hBb
MrNjrzJFsCVIz0X9iEVd/+iecNYdMODVs/arJwnxsrlltPJ7772XO0mINUFg
wEVMjwGys42wkXBUyM2X28+dbcTTAQZcxPRsIztnybZkMxPkzlmymYCw675l
ilAB0x4u/pgxY+of+BQORQUGXMSUaL/oln/0ox8Rzs+dP8XqADB9kHp4lJ2I
RUIu8RNynWQizJ2IxTwJDLiI6YlY9k0B03509PosYeCY9tPTueykMNYnrPvl
Tgqz7sd6R81hY2FvNnE+ntzo0aNzp5axjgUMuIgpkZ2jxgPGh0IryrSbO0eN
WRkYcBHTc9TsZDdWm9FCPH4ZxrmT3RjlwICLmJ7sZmfNkZCJbmSPpVimubPm
MFyBARcxPWvOTr8zlc6nVUTJ5k6/++LzT13HYzuYZtfT7w5VCfZ7UUJEKsVi
h/F9+vlXrnv/+1yLpZZzl3a95NAyS5jzWCNQWzp3qt/Ae191B3e5z3Xocpub
87dPlMiOKsTt5WVi4N5+++31jyps5v2DDdsd6dpfdJ87/JIH3eDRE7Q91RMU
8eXYAMYcKy5f/RMUm3uPcEmB7diures36kV3iDTx6EsfdG//6SN96NUDHtFq
rJ+RfS76r/4Bj4t79QgM+LuzZ7s5f//SdR30rLv/mWnu4398ocR2BCW2N/EH
VtbE7Kt/BGVzH2MEBhyx8N+/3Ff/nGsnLtoJmXRtO0V02rRpQxKsQxRK0MdO
ERUxPSHTzuxkiiKFhQls5syZuTM7yfcGBnzcuHF6ZqedIopaRAEx2GbNmpU7
RZTYEDDgIqaniB6tpYS58T6wEmTg5c41ZVwCAy42aGConrSKpcw0xtdsxEvL
nbSKEwcMuIjpSat29iueBvMyh95IlbmzX2mRfZxIxPTsVzuNFvOGKtj2Lx0u
dxot/REYmkLE9DTajqVb46ZxgOW15M7H5a0BAy5iej6undjLw+Y14AdIR8md
2Es/AgZcxPTEXjtDmKGGf0Q4acKECbkzhFkJBgZcxPQMYTvVmCRc1lCYGcU5
yJ1qjO8ADLiI6anGds4yiSf0e5YupZflzlmm7wIDLmJ6zrKd/EzGG/2enfij
Ro3KnfxM9jww4CKmJz+fpKUsddKHkOrbt+/1CaLrFcpmMa4BFzE9i9pOzCZQ
zxINmhm/kZTk3InZOPXmXyJH4F5PzLZzvYm+mAXAFmdSWXLneqPTwall4beY
6Lne9oUP3Asy5ICQiMYaXv2Dx8NR4eDAI0fCZuCqnofOERGYBhxtJN0odx46
vQwYcBHT89DthHasf3Zn03UeeeSR3AnthDiBARcxPaH9jKgaBvyNN954dYLo
aoVKsYdp4/XMeDvZnlV2u3ty7ngBuZPteQH2FQvkWMXXk+3PUggOpHlKrDCx
Aaf+0fvNvKoApx6Yz58IXNUvAmCiMPEyRT311FO5LwKwygcMuIjpFwHO1VLm
HZQA+q1Pnz5XJIiuUChxTmDARUy/UWBfUkBR2gn/HTp08GuvuS8pYD6AA48c
S+T6JQX7hgi2KuuCQFCdrDDV/9RD+IqLfegIOXItApd+P6Li9/0wtaM8+/fv
f2mC7VKFsj0EGHAR0y9Q2HcyOATBPmXEOaCkZea+k4G5bOctI8ehCPqdjC4K
IS2CxTS8YRKqybG8OEF5seLJsQQHHjnSLgJX9cshKFRW1fDXMEaB5L40QhPA
gUeOtF790oh9D4WZ1W6E3XXkHea+h4L6tw+EIEeqo34PxZ4NuyzwD3ja5KiS
w537agsGMTjwyLHrQr/aYt8QwWyzUbzXXnv5oG3u2zIEbcHZKGYDvX5bJvSH
8DUfaiX5hSmT4SCqsf5HcBbzmhcYcMQQF5rAWB0J1G2fZsApYbNJ7ms92Jz2
BQTkuDf9Wk83rRg3mv6LiYjBQURNZob6nxVazE88wIAjhrjQBEZVJs38HEx4
hLrJxKeDnJ1gPbvUAcGBR46sdv3+kSlQskrRT3pIse8guW810QHt8GPkyFrV
bzXZd6VI3iBPiZGBYcJ0Jc89910p3i4w4IghLjT6XakwBzX3G/bsu1Is2rEu
TUiOibz+R7bC9+rAgbePc8HDBkH9JlbPUkPQ7rwDYFCJP1+ffTG/C4xrwMlZ
YRFIaAJj9YtjHKgKgh/kbCyZM2dO/S+Ohew7YALXz/SGndb6X1FTw+LVr1Lx
Zux7kbwh/V5Y/Y+mNat+L8w6gryGao1EPZI1LlGtkR/54qhEe758E5CqRFvU
/w5c+Owd1+0ThIizT4m0B2sBGSPJFrSsaQE7GfgPLcoiMoF9rrOMyUA5PtGM
4/XZMVDsm1DIIQ8P/3Xr1m2+LanEz6JBXzt5D6yw0bFtrpXZu2OiLR1VBJvA
pnLEEBeaBq2IucYqkvZcm21GM+Vk/iMZ2L4PTBxC6uyQaEYHFZG/exhwxBAX
mmYL1Az7XhY/GdfNlROXF5uWuAFFhFbFZTk60YyjVQRHCBhwxBAXmuZakcV4
+HXq1ClqBhqVnoX/IEZEC+10GEus4dnTYMrBvsXUzn2UkgkFnE1tyMOD8dRC
q2T04/qySCxKPGoQ3R0WfuKOtFRidlRgMtnHk5mxcaIwGHIf4qSLgrMZHnl4
2HHRUqvE6ylVqQ2yYAsdgw5mCoPNWShiMoNzXxlFN4Gzz9giDw+G2NDae8ZW
ozPxE52+jDKwBMJxy0QurKszvsi2OSRR8yEqhwMOzkYU8vCQpLeMVskLpjo6
j/iN0Us44YQT/CSj26NaqQ5ACeIQ4RpShLFNojRaTfR5/S/Hhm/tAgOOGOLQ
QCe0rbRihhAV8xO1GjWLeGdp6K6g98tCGh4OCaoU0bn4ZgVPOvfBXN4sOPDI
IQ8PiVMrLIwuWVFvls6KY26vnlGARUBAUB5E7lPBPCdgwG3wQQOd0K64MM1a
qcSNGucdEF2ySYi8GVEYeyeatbeKopaA2SSEODTQCe1KC9OslZWb5Q0Ghu0j
h5s1UYJgotVzn4pm7gAGHDHbvg6d0K68MM1axV9u4bUBI4RMRftSMKFRxgYr
UqRg1v9edgsfwgcH3r4uDQ988KJKV1mYBrbWClAw7EgnV8A+/21fHMdAoIG5
z4fTQHDgTbnBAx+8KLjWC9TAaC5bXSsgUoGZwGTAmKeYQwI4XZUnQxp37pPq
pCmAA2+f14UHPniJZKyuTcjPcqxtM8o5DlJmuTW1AuJsKEZmT/tmO/nl9GwW
GLD0t080cHuVx2oGBx455OGBD162INhZfvybSZZmyDOKGmhTkJ4WELL0l6hW
wFH0OJL2BPCuyHrEd5XXuHWijVsrBW8ZGHBbUYIGOmj1PtcpNcSm4Hlz4Vj/
R0v/Rpje2UbM/jTccDOiST9iamc4Myu3STSqjfIwK4MDb7ua4YEPXviphx4y
tvZJ4TgTMeInc2VIK17SO5T4nXiFaANuD23ARIL+JATJ5iTmxuqRz7WN20Sp
CJgBA44Y4tBABy30VEN1Uq0dlYyKpFEMqZkzZ0YvmP0JNrHJjLqZ1sUUzzY7
zDAiakxBQHgYxNAZWah+Tk748MMPN0g0ewOlIl4FDDhi9iVa6KCFnmqoTqq1
DNn8jBupnpDkuJSvi4+0s1DOaOSxWF+wj2uQqcaeD7LeUSVrJ9q+tvKhysCB
R86+umF9gr9TD/VRL7E7S9n8WrozZN0t40cFD4sOyCdfWGUisGDPHjMRb4cy
3jUeB4ORT06ulriR1ZSX/CJw4JFDHh4zW+GnHuqjjPppB7p624W5obb+8nJ+
zKJvebtUjM5kWQiFTmTbPHWCZsRksHOYJVnXIWbCSsFnn322cuLeVtYqiBID
A44Y4tBAB615+FRHtVRPM2gOzaJ50sy2C3ObITnq+/426XwkPbB9hS+MMl/Z
ehPbJhiniBHQIoRO+4gtEIVgpwgmJyEt2gMXgSUm41Z676yZcS/EPlppvahD
cOCRQx4e+OCFn3qoj3otykB7bNmMdtJe2k374SKSuPPCPJCQ97ObbxijhyVh
XgoeB9l2nEBv2Q90OF6KPRg6IdeJzZIMx65kNAaWCc4ah2jRMekEjDbsUQ5Q
QvWi5XgArMEQxcKGplMQIuWhcTIK/+Y65eDAI4c8PPDBCz/1UB/1Uj/toD20
i/bRThuUtJ/74H4sXYP75H65b+6f58Dz4IXuuTAPNjgHrXxPo8fjKDFCuTHC
XqggYm/MnYxsVvCIafHWaRjzK40UB6fwClHUGzdAT6AMjGHNXijLghO8yrby
jhJ8ZVnqo17qpx20h3bRPtpJe2k37aeHHbBADyKy4kJewhq+h+H4MffzFtHT
nPhJNgurFXjXTJWEt5h7aAjdHC+bt8p6IpFVHgKGEuEJrlMODjxyyMMDH7zw
Uw/1US/10w7erOVM5K0+TB4sPiJmo0ePtgglT4iuyrGmpygUc5IuB1zGdMI6
oz+odVY/1PlvUCVyCQlXWwdaFQcZ80EGTa4OzFag/GbMmJGwNBgp/OSZ5oiY
+w0637k/R/S1RlgT0TdJFI3iHFF+9JAsqcfElUdPigjlT6YVI0gar0Q+qWBR
RsGpCdlTq6W9F3iMTJo0yVsSak3Mb4wAY54RT6PO016AMfKf9v6biL7eGBHr
dOHHCHMXHZ+kWplWckRMbQwl4OIAlsdIUXtcY4rltASu1wKPGzJYmU75zWfc
kNoBjMDe9OnTv/OvsonoP3HcsE2BMcOuFbHa5zdu2JUPfPDgwfM3qBZgPGBS
Elikk4u3nquebThA+U2bNu07/4qaiP4TxwPHZDEWcOjmMx7YpUFmBmOiscYD
0QzCreTmzp49O1c9UVug/KZOnZpfoMsRWd4cv86dO3/n33UT0Tc2Hs4///yI
iKVGxgJ7pR966KEcEesXwBgTQ4YMaZTxwLFbRPf4zWc8sN0XGDthp0yZkhkP
AwcObBoP/1tEjTYeiJDSyVnAk96WI2IJheUT4EOHDm2U8UDuOsFVfu+8806u
ehbOgBFkmzx5ctN4aCL6BsYD+0cZC3xCSyyRHBEZreSzA7/lllsaZTywyMDm
U36zZs3KVU9qFzAi2v8+Hsopr19jPFxwwQXf+XfdRPQtjgeWYhkLLEHOZzzw
bRrOzQV+6623Nsp4IBOCVVM6+QKMB6D8Jk2atPDjgbTvpvHw30X0NcaDHTCU
Hg/saWEskDMiTm2OiNV4NtYwJoYNG9Yo44FFboo5NO7tt9/OVc+aONf5vfnm
m5nxMJ/FnKbx8N9HRGpco4wH9nUxFsisePTRR3NE7Hbi7CrGxG233dYo44EE
bfbGk1U6c+bMXPUsgwPl98Ybb0T3Yfsxm8bD/yRRo40H8k0YC+xAWIDxwF4j
xsTw4cMbZTywD5g0F1LXZ8yYkaueJW+g/F5//fXGGQ//HoD+7r3rJqJvcTyw
C4axQDbdmDFjckR0RPLbGRMjRoxolPFAvhrjjN98xgNL2cAw2yZOnLjw4yG/
IPPde9dNRN/ieOBTy4wFdnc+9thjOSJ0OFDGxMiRIxtlPJAdjJ/O76233spV
z1I2MMJcEyZMyDhUTePhf46o0cYDKfyMBba+PP744zkiDHfSfYFLp2yU8UAa
MOsa/KZPn56rnqVsYCwLvvbaa03joYnoGxgP7DZgLHC059ixY3NE+Lwchgtc
FHWjjAfOMyMPhN+0adNy1bOUDYw0qvHjxy98wK1pPPz3ETXaeGAbFGOB7xrN
ZzxwjRN6gYsR3yjjgQ1F5KDzm894YCkbGBs+Xn311cYZD//+QL5777qJ6Fsc
Dxy0w1hgc9YTTzyRI2KNgJ2BwMWxbZTxwClQ7DfnN3Xq1Fz1LGUDYx/eK6+8
svDjIf9AvnvvuonoWxwPnJzFWGD/35NPPpkjYmH4iCOO8PBRo0Y1ynhgNzZ7
I/lNmTIlVz1L2cBo8csvv/xNPZDMK2LD54K/ojoRL7QKO0n5TMyCWXAcGMQu
bn6ih4yIvbSYm3x23IiIFgLj0JBrSdWsIWILPFub+X3++edT9TJ7UbnENxM+
/fTT8nv1/zX8v14oFvk/4Oz2fA==\
\>"],ExpressionUUID->"4e1246ba-0540-4b4a-88f8-224a4a98b061"]
}, Open  ]],

Cell["\<\
Now, we can reflect this region and then invert it to place it into the \
region in the moduli space.  \
\>", "Text",
 CellChangeTimes->{{3.77324464790587*^9, 
  3.773244671299913*^9}},ExpressionUUID->"bdb431a9-b687-4e8a-8bf8-\
a6af86b6dc60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".5"}], ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".5"}], ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Thick", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".5", ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".5", ",", "2"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "torusRatio"}], "*", 
           RowBox[{"Cos", "[", "torusAngleFromVectors", "]"}]}], "+", "1"}], 
         ")"}], "/", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "torusRatio"}], "*", 
              RowBox[{"Cos", "[", "torusAngleFromVectors", "]"}]}], "+", 
             "1"}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"torusRatio", "*", 
             RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}], ")"}], "^",
            "2"}]}], ")"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"torusRatio", "*", 
          RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}], ")"}], "/", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "torusRatio"}], "*", 
              RowBox[{"Cos", "[", "torusAngleFromVectors", "]"}]}], "+", 
             "1"}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"torusRatio", "*", 
             RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}], ")"}], "^",
            "2"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"22", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"1245", "-", 
              RowBox[{"880", " ", 
               SqrtBox["2"]}]}]]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "13"}], "+", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]}]], "]"}], ",", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           FractionBox["2", "41"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "51"}], "+", 
             RowBox[{"38", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              RowBox[{"5", " ", 
               RowBox[{"(", 
                RowBox[{"737", "-", 
                 RowBox[{"480", " ", 
                  SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}], "}"}]}],
     "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.773150368639204*^9, 3.773150372206848*^9}, {
  3.773150579985718*^9, 3.773150653002881*^9}, {3.77315070341838*^9, 
  3.773150712916458*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"bdb6dae8-b167-4a97-81ab-625371c57f9b"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}], LineBox[{{0, -1}, {0, 2}}], 
   LineBox[{{-1.1, 0}, {1.1, 0}}], 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{-0.5, Rational[1, 2] 3^Rational[1, 2]}, {-0.5, 
        2}}, {{-0.5, 0.8660254037844386}, {-0.5, 2}}]]}, 
   {Thickness[Large], Dashing[{Small, Small}], 
    LineBox[NCache[{{0.5, Rational[1, 2] 3^Rational[1, 2]}, {0.5, 2}}, {{0.5, 
       0.8660254037844386}, {0.5, 2}}]]}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
6n8AQ4wT7Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$3467#1"]& ]}}]], "Output",
 CellChangeTimes->{3.773150290167261*^9, 3.773150372945443*^9, 
  3.773150656621516*^9, 3.773150715290358*^9, 3.77324477087148*^9, 
  3.773346955590659*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"d9c30632-5e09-49c2-a0de-3a443490d521"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Density Of Packings ", "Section",
 CellChangeTimes->{{3.5814349606441174`*^9, 3.581434966706005*^9}, {
  3.581443652345149*^9, 
  3.58144365457318*^9}},ExpressionUUID->"0778b274-df47-40d0-990e-\
9f18ab4dee0d"],

Cell["\<\
Here we analyze the density of the locally maximally dense packings and \
explore the density.\
\>", "Text",
 CellChangeTimes->{{3.5814349743941193`*^9, 
  3.5814350022015533`*^9}},ExpressionUUID->"e2b21120-6780-408f-b4b4-\
7bd65fa10119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"torusDensity", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], "^", "2"}]}], "+", 
       RowBox[{"2", "*", "Pi", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "-", "1"}], ")"}]}], ")"}], "^",
          "2"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Norm", "[", 
        RowBox[{"latticeVectors", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "*", 
       RowBox[{"Sin", "[", "torusAngleFromVectors", "]"}]}], ")"}]}], " ", 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", "\[Alpha]", "}"}], ",", "Reals"}], "]"}], ",", 
      RowBox[{
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"22", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"1245", "-", 
              RowBox[{"880", " ", 
               SqrtBox["2"]}]}]]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "13"}], "+", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]}]], "]"}], "<", "\[Alpha]", "<", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           FractionBox["2", "41"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "51"}], "+", 
             RowBox[{"38", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              RowBox[{"5", " ", 
               RowBox[{"(", 
                RowBox[{"737", "-", 
                 RowBox[{"480", " ", 
                  SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.581435007166294*^9, 3.581435026699298*^9}, {
   3.5814350629183598`*^9, 3.581435137463068*^9}, {3.581441446598172*^9, 
   3.5814414948170977`*^9}, {3.5814421896974163`*^9, 3.5814422295017653`*^9}, 
   3.581442694940857*^9, {3.581604837617858*^9, 3.581604867599731*^9}, {
   3.581607908671111*^9, 3.581607909369944*^9}, {3.581944549930921*^9, 
   3.5819445543944483`*^9}, {3.582114922893406*^9, 3.582114923036167*^9}, {
   3.5822165846144447`*^9, 3.582216585540084*^9}, {3.582303334411914*^9, 
   3.582303334736128*^9}, {3.583763359343549*^9, 3.583763364560102*^9}, 
   3.771617083708983*^9, {3.771617193070365*^9, 3.771617222420538*^9}, {
   3.771626748724434*^9, 3.771626750958971*^9}, 3.772907757004389*^9, 
   3.772908323437892*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.581435174638554*^9, 3.5814360377394533`*^9, 3.5814414525442343`*^9, {
   3.581442212853862*^9, 3.5814422309332247`*^9}, 3.5814426963111486`*^9, {
   3.581604816468317*^9, 3.581604842276881*^9}, 3.581604949571162*^9, 
   3.581607510569717*^9, 3.5816079104502077`*^9, 3.58160937151543*^9, 
   3.581687886583846*^9, {3.581944542797326*^9, 3.581944555361349*^9}, 
   3.5819510064190474`*^9, 3.5819532664168997`*^9, 3.582114219746011*^9, 
   3.5821149243109617`*^9, {3.582216584034459*^9, 3.582216587666834*^9}, 
   3.5822232014315166`*^9, 3.582286936524232*^9, 3.582302582175164*^9, 
   3.582303335778859*^9, 3.582740217258*^9, {3.583763341462748*^9, 
   3.5837633660660152`*^9}, 3.590759438761785*^9, 3.590835632743123*^9, 
   3.590836699525751*^9, 3.590924442373547*^9, 3.5916176659788513`*^9, 
   3.591634628349544*^9, 3.591648115760672*^9, 3.591954372553525*^9, 
   3.592837678747449*^9, 3.592838271356739*^9, 3.592841358448024*^9, 
   3.59312459321947*^9, 3.686070283738555*^9, 3.686931689066928*^9, 
   3.771591849711658*^9, 3.7716170854992456`*^9, 3.7716242092109537`*^9, 
   3.7716245711148777`*^9, 3.771626377492437*^9, 3.7716267524561453`*^9, 
   3.7717676033879337`*^9, {3.772908312443695*^9, 3.772908337308607*^9}, 
   3.772968711847146*^9, 3.773059163266577*^9, 3.773150241678802*^9, 
   3.773244790120468*^9, 3.773346958894329*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"7ebadd2a-ab8f-4877-9467-99553983d304"]
}, Open  ]],

Cell["Plot the density over the parameter space", "Text",
 CellChangeTimes->{{3.581609262745317*^9, 
  3.581609279281209*^9}},ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-\
e5f2bb2c8c0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"torusDensity", ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "31"}], "+", 
          RowBox[{"22", " ", 
           SqrtBox["2"]}], "+", 
          SqrtBox[
           RowBox[{"1245", "-", 
            RowBox[{"880", " ", 
             SqrtBox["2"]}]}]]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "13"}], "+", 
        RowBox[{"8", " ", 
         SqrtBox["2"]}]}]], "]"}], ",", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         FractionBox["2", "41"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "51"}], "+", 
           RowBox[{"38", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            RowBox[{"5", " ", 
             RowBox[{"(", 
              RowBox[{"737", "-", 
               RowBox[{"480", " ", 
                SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581607973838263*^9, 3.581608022458598*^9}, {
   3.5816080842911158`*^9, 3.58160808861963*^9}, {3.58160813949725*^9, 
   3.581608146824136*^9}, {3.5816089073150682`*^9, 3.581608922003821*^9}, {
   3.581608970988791*^9, 3.5816089717227383`*^9}, {3.581944701349125*^9, 
   3.58194471749083*^9}, {3.581944751737221*^9, 3.581944787874208*^9}, {
   3.581951021398402*^9, 3.581951033668231*^9}, {3.58221660360467*^9, 
   3.582216617749133*^9}, {3.5822869554826403`*^9, 3.582286956658009*^9}, {
   3.5827407405041*^9, 3.582740763790533*^9}, {3.590837063823267*^9, 
   3.590837065433181*^9}, 3.771626404677743*^9, 3.772907778970625*^9, {
   3.77290835090221*^9, 3.7729083511968203`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Dmrnl4Mtf5B+Suz76uzBFnBzrV8b8f8BHzGsYg==
       "]]},
     Annotation[#, "Charting`Private`Tag$37720#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Alpha]", HoldForm], TraditionalForm], None},
  AxesOrigin->NCache[{
     ArcCos[
     2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
       22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^Rational[1, 2])], 
     0.7993573088221168}, {2.878675843704429, 0.7993573088221168}],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      ArcCos[
      2 (-13 + 8 2^Rational[1, 2])^(-1) (-31 + 
        22 2^Rational[1, 2] + (1245 - 880 2^Rational[1, 2])^Rational[1, 2])], 
      Pi + Rational[-1, 2] 
       ArcCos[Rational[2, 41] (-51 + 
          38 2^Rational[1, 2] + (5 (737 - 480 2^Rational[1, 2]))^
           Rational[1, 2])]}, {0.7993573088221168, 0.8014445425847025}}, {{
    2.878675843704429, 3.0101342486471787`}, {0.7993573088221168, 
    0.8014445425847025}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.581609096455961*^9, 3.5816289197193604`*^9, 3.58168788679126*^9, 
   3.5819447901637697`*^9, 3.581951034908289*^9, 3.5819533173554783`*^9, 
   3.5821142198997307`*^9, 3.582114951275977*^9, 3.582216621867839*^9, 
   3.582223201755753*^9, {3.582286941086684*^9, 3.582286957215057*^9}, 
   3.582302582262513*^9, 3.582303339581299*^9, 3.58274021742274*^9, 
   3.582740765531266*^9, 3.583763378488957*^9, 3.590759438998534*^9, 
   3.590835632984823*^9, 3.590837068452118*^9, 3.590924442561226*^9, 
   3.591617761635764*^9, 3.5928382714151497`*^9, 3.5928413586413317`*^9, 
   3.593124593379208*^9, 3.686070283937107*^9, 3.68693168944556*^9, 
   3.771591849854644*^9, 3.771624209995349*^9, 3.771624571238709*^9, 
   3.771626405392148*^9, 3.771626756886554*^9, 3.771767603492222*^9, {
   3.772908346195554*^9, 3.772908352429759*^9}, 3.7729687120950108`*^9, 
   3.773059163551057*^9, 3.773150241911154*^9, 3.773244790390324*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"61664634-41bc-45f5-a306-9bb812953679"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.581609094038151*^9, 3.581609094069778*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],

Cell["\<\
Color the moduli space region with color depending on the density. Red shade \
is close to 1 and Blue shade is close to .5\
\>", "Text",
 CellChangeTimes->{{3.5816092922408857`*^9, 3.5816093140005407`*^9}, {
  3.581609621573914*^9, 3.5816096454884663`*^9}, {3.581953354061882*^9, 
  3.5819533586268*^9}, {3.582222943743129*^9, 
  3.582222944008811*^9}},ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-\
8ad9c9b01e0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"(", 
        RowBox[{"torusRatio", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], "]"}], 
      ",", 
      RowBox[{"Im", "[", 
       RowBox[{"(", 
        RowBox[{"torusRatio", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", " ", "torusAngleFromVectors"}], "]"}]}], ")"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      RowBox[{"ArcCos", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "31"}], "+", 
           RowBox[{"22", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            RowBox[{"1245", "-", 
             RowBox[{"880", " ", 
              SqrtBox["2"]}]}]]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}]}]], "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"ArcCos", "[", 
         RowBox[{
          FractionBox["2", "41"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "51"}], "+", 
            RowBox[{"38", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"5", " ", 
              RowBox[{"(", 
               RowBox[{"737", "-", 
                RowBox[{"480", " ", 
                 SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}], "}"}], 
    ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Hue", "[", "torusDensity", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", "->", "#3"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "#4"}]}], "}"}]}], " ", "&"}], 
      ")"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
    RowBox[{"BoundaryStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], ",", 
    RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.5814415563651342`*^9, 3.58144157581666*^9}, {
   3.58144166381931*^9, 3.581441756142213*^9}, {3.581441806320602*^9, 
   3.581441878069029*^9}, {3.581441915668941*^9, 3.581441925996266*^9}, 
   3.581441969683961*^9, {3.581442240718355*^9, 3.581442258158124*^9}, {
   3.581442377548176*^9, 3.581442417514968*^9}, {3.58144247190583*^9, 
   3.5814424734743013`*^9}, {3.581442751557214*^9, 3.5814427571400003`*^9}, {
   3.5814434590030537`*^9, 3.581443460904909*^9}, {3.581609502983444*^9, 
   3.581609548034075*^9}, {3.581609898970262*^9, 3.581609928408107*^9}, 
   3.581673696967795*^9, {3.581944806767089*^9, 3.58194488275401*^9}, {
   3.5819533247323313`*^9, 3.581953341447814*^9}, {3.58221665186229*^9, 
   3.582216657188343*^9}, {3.582216731483777*^9, 3.582216751511827*^9}, {
   3.582216898707114*^9, 3.5822169242483463`*^9}, {3.5822229328956413`*^9, 
   3.582222933118864*^9}, {3.58228697958738*^9, 3.582286980702338*^9}, {
   3.5822870338872538`*^9, 3.582287078033432*^9}, {3.582303381723358*^9, 
   3.582303382080562*^9}, {3.583763394256619*^9, 3.583763397797147*^9}, 
   3.771626448096888*^9, 3.772907788656896*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJwV03lQU1cUBnAEJSIoQUkjkZ2CFq3VyhZZDiGArAZBQKlopRLZlGmrIiAF
re2wtixC7dBxIJS61QUdFCIEAbHK6oxAB7DQgMdcxRKQRUTBHv948+Y357vf
e+++uRZRicHRmhoaGoF0fbhPGPHPdlgxCFiniWWHEGT+mWZ88kY3eztJAsK8
rClXYsngynxg90gcQkiIbWORBQN1qnVfYSzCftTe1m/OwKIQK/xiEERJWdn6
ZO2pWM5zKcKvvhnKIDOal494l0cjFPgpLmaYMthT9W+2+wGEE5uE526YMJhN
KqphUQhrHryaHjdmkGUb6nhpP8LO47qRJuS0cy1uIV8i2KT+Iglbw2D6hX0Q
bx9C/bVmRYGAAX/EqX4oEuHdlNUTuREDmfyvzwv3IEy4OvSMr2Yg5A5uiPwC
ofVpygZD8vqtuWe5EQipDWf6hHwGikbZqfZdCEebtt1K+IgB1702tiwcoebZ
5excHoM/B5zFkWEIFSWTNbWGDPaujeneHIrg376Q83gVg3R43aAOQchzn25V
r2TgcX54rDoYQWXXLjciz562kRTtQLhSuh4/M2DgXCnKighCmKkSvwzhMvhR
OnfNSYJw/+OJWyn6DE5qFuebbkfoGG8KzlvBoDzG7/5YAILh3RuWV5czeFlR
crDHHyFo86JDcj3anyD35j/8EPqfau94qMug1dB2Lt0XgWd64t6zZbTf5teN
En3of804iNU6DLTgaqLvNvqf2+PTtcmP7Dzihd4IZ8IPVJkvZVCoWFy3yQuh
MuVIhjWHwUVDlzurPBE6Cy/HCLUZDPBFw7piBI6LqMhxCYO3Wf6CcRFCyuVK
ba/FDGqKqx2fuyOsG27LDtVicClA+u1zQPhkueeQRJPB444Gh143hNrGxIHd
ixhYx/VF/e2KUMRb6heowaAkWf94iwtCbr3Hb+L3Kqiek7bJnRHay3zf+C6o
QPeHpTr3tiKIk0qChPMq8OsyPi8XItx9cv6p0zsVvE9pGLvnhJDp6XXX+a0K
xF2cyR5HhJ/COWZr51SgJ+W1dTvQ81fNmli9obxU8viZPcJUWmbtwmsVmH+l
/nrIDuH6gV3l39B50HMdvfCazsPuw6ftCmZVcMYmpDeK8pN9XaIymgsCO/kB
dH4CRg8699P8U3154+807xl20/Ehh0esNLAgX5hU69ymfJEgZs8xyh9LFVYt
0Hx9vKKlhea2fYcrEshb0sfGROS6W6+ircjiS/UuGuTmpJn4Jlq/ZUTzVA6t
b192h3Hp/fs8Qv17aa7fa/zfd5T3uZq4P5jceriuxp5cYHO7kvuhL1nJNSC/
emjdq6bv07sRa/yA+v7ZepNXQn1tApmWgPqGXiz5eZDyOXFGBpmUbzArLo0g
dxZ4K93Int+vHlhNHl5201lADsu21pmlvqk3acghK6WKChV5yWjyVCv1dzq2
7iul/ptuQ/mm1L8ui181TOtlFkpZLuWv6Slr9pJdJ3YeFZPXRGnOGJPzTPGR
KTk/d9DyHfUpZkSpeuSoFUN1o+SNR4olWmSusjl7hPw/j4puyw==
   "], {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1], LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
       12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
       47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 63, 59,
        75, 69, 64, 76, 70, 77, 50},
       VertexColors->Automatic]},
     Annotation[#, "Charting`Private`Tag$37761#1"]& ]},
   VertexColors->{
     Hue[0.8014445374277261], 
     Hue[0.8013652103050437], 
     Hue[0.8012807809130621], 
     Hue[0.8012035598563274], 
     Hue[0.80112936718412], 
     Hue[0.8010505819241561], 
     Hue[0.8009786476309424], 
     Hue[0.8009024290143238], 
     Hue[0.8008293606934491], 
     Hue[0.8007627766890256], 
     Hue[0.800692293532236], 
     Hue[0.8006281081798318], 
     Hue[0.8005667001025369], 
     Hue[0.800501769644624], 
     Hue[0.8004427789045564], 
     Hue[0.8003805756742806], 
     Hue[0.8003212729332301], 
     Hue[0.800267542354301], 
     Hue[0.8002109867359476], 
     Hue[0.8001598163495464], 
     Hue[0.8001061339994541], 
     Hue[0.8000552163617739], 
     Hue[0.8000093134117595], 
     Hue[0.799961290085137], 
     Hue[0.7999180930158182], 
     Hue[0.79987728380676], 
     Hue[0.7998347375249314], 
     Hue[0.7997966552235682], 
     Hue[0.7997571511223923], 
     Hue[0.7997201614056101], 
     Hue[0.7996872635825509], 
     Hue[0.7996533385533795], 
     Hue[0.7996233162475563], 
     Hue[0.7995954299957678], 
     Hue[0.7995669028990416], 
     Hue[0.7995419145393798], 
     Hue[0.7995166031462078], 
     Hue[0.7994946396272702], 
     Hue[0.799474675847614], 
     Hue[0.7994547800550392], 
     Hue[0.7994378646564649], 
     Hue[0.799421338878216], 
     Hue[0.7994069431276116], 
     Hue[0.7993951501009379], 
     Hue[0.7993841496764401], 
     Hue[0.7993755600355895], 
     Hue[0.7993687165567529], 
     Hue[0.7993630605248203], 
     Hue[0.7993594454241125], 
     Hue[0.7993573088210835], 
     Hue[0.8014047514289372], 
     Hue[0.7993581265231341], 
     Hue[0.8014246643732739], 
     Hue[0.7993587233490028], 
     Hue[0.7993576549970028], 
     Hue[0.8014346564131712], 
     Hue[0.7993590687335725], 
     Hue[0.7993578750944659], 
     Hue[0.7993574662370901], 
     Hue[0.8014396613281832], 
     Hue[0.7993592531660092], 
     Hue[0.7993579968928624], 
     Hue[0.7993575566993165], 
     Hue[0.7993573836105952], 
     Hue[0.8014421657583327], 
     Hue[0.7993593483168996], 
     Hue[0.799358060729138], 
     Hue[0.7993576048688279], 
     Hue[0.7993574239442643], 
     Hue[0.7993573452363345], 
     Hue[0.8014434187240081], 
     Hue[0.7993593966260076], 
     Hue[0.7993580933813487], 
     Hue[0.7993576296881075], 
     Hue[0.7993574448458928], 
     Hue[0.7993573641786169], 
     Hue[0.799357326783616]}],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.7490228294081462, 0.6627042031569523},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0.7490228294081462, 0.7543704958450786}, {0.6627042031569523, 
   0.6696323845692489}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.581609384437285*^9, {3.581609504822774*^9, 3.581609549260466*^9}, {
   3.581609900266757*^9, 3.581609929014892*^9}, 3.581673699423524*^9, 
   3.581687887039155*^9, {3.5819448706496763`*^9, 3.581944883675671*^9}, 
   3.581953345308755*^9, 3.5821142202221193`*^9, 3.582216660165596*^9, {
   3.582216735008424*^9, 3.582216752562191*^9}, {3.582216900522902*^9, 
   3.582216925413727*^9}, 3.582222934929668*^9, 3.582223202402267*^9, 
   3.582286981851467*^9, {3.582287036288845*^9, 3.582287079211164*^9}, 
   3.582302583044299*^9, 3.58230334630746*^9, 3.582303382805304*^9, 
   3.582740217957407*^9, {3.5837633852906523`*^9, 3.5837633996885767`*^9}, 
   3.5907594396778*^9, 3.590835633320829*^9, 3.590924442886402*^9, 
   3.5916177675330877`*^9, 3.59283827170261*^9, 3.592841358957922*^9, 
   3.5931245937263193`*^9, 3.6860702842285557`*^9, 3.686931690535644*^9, 
   3.7715918500836573`*^9, 3.771624210867381*^9, 3.7716245714190683`*^9, 
   3.7716264502796497`*^9, 3.771626760470799*^9, 3.771767603654272*^9, 
   3.772908363994431*^9, 3.7729687123362303`*^9, 3.773059163799024*^9, 
   3.7731502421604557`*^9, 3.773244790631258*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"3b326c99-ab6f-4ffd-8d9a-40cfd80d1e4b"]
}, Open  ]],

Cell["Now find the minimum and maximum density with in the region ", "Text",
 CellChangeTimes->{{3.5816743195141582`*^9, 3.581674339375255*^9}, {
  3.581944995026071*^9, 3.581944995378251*^9}, {3.5819533802020197`*^9, 
  3.581953383961735*^9}, {3.771626465765153*^9, 3.7716264659772577`*^9}, {
  3.7716266883958263`*^9, 3.771626712352277*^9}, {3.772907806742948*^9, 
  3.7729078113677683`*^9}},ExpressionUUID->"2fd82056-65c0-4b36-af8f-\
270e781cc6c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMinimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"torusDensity", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"22", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"1245", "-", 
              RowBox[{"880", " ", 
               SqrtBox["2"]}]}]]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "13"}], "+", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]}]], "]"}], "<", " ", "\[Alpha]"}], " ", "&&", " ", 
      RowBox[{"\[Alpha]", " ", "<", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           FractionBox["2", "41"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "51"}], "+", 
             RowBox[{"38", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              RowBox[{"5", " ", 
               RowBox[{"(", 
                RowBox[{"737", "-", 
                 RowBox[{"480", " ", 
                  SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      RowBox[{"ArcCos", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "31"}], "+", 
           RowBox[{"22", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            RowBox[{"1245", "-", 
             RowBox[{"880", " ", 
              SqrtBox["2"]}]}]]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}]}]], "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"ArcCos", "[", 
         RowBox[{
          FractionBox["2", "41"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "51"}], "+", 
            RowBox[{"38", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"5", " ", 
              RowBox[{"(", 
               RowBox[{"737", "-", 
                RowBox[{"480", " ", 
                 SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}], "}"}], 
    "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "18"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581609382124021*^9, 3.5816093821731052`*^9}, {
  3.581674342761096*^9, 3.581674366016737*^9}, {3.581674410493896*^9, 
  3.581674416321011*^9}, {3.5816745142249126`*^9, 3.5816745887031527`*^9}, {
  3.581674797332777*^9, 3.581674801987938*^9}, {3.5816749471944838`*^9, 
  3.581674948858513*^9}, {3.581944908530826*^9, 3.58194498132018*^9}, {
  3.581945027577073*^9, 3.581945027991763*^9}, {3.581945303251691*^9, 
  3.581945309353141*^9}, {3.581945340371601*^9, 3.581945372512339*^9}, {
  3.581945409818782*^9, 3.581945414450327*^9}, {3.581953389988534*^9, 
  3.581953448617591*^9}, {3.582216775133053*^9, 3.582216836170295*^9}, {
  3.7716264793393393`*^9, 3.771626489876069*^9}, {3.7716265205913677`*^9, 
  3.77162655779049*^9}, {3.772907820476071*^9, 3.7729078430980473`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"f0795534-1999-46a5-8f81-df354a425f40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7993573088212865619523517675522021582077577925444177513968`40.", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Alpha]", "\[Rule]", 
     "3.0101342486471789840851997367114024886631917776961238599233`40."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7729083795896*^9, 3.7729687134151287`*^9, 
  3.773059165030164*^9, 3.77315024330315*^9, 3.773244791831417*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"756e3ca3-e4a9-4f11-8f58-b5f5ba4ac55f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NMaximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"torusDensity", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcCos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "31"}], "+", 
            RowBox[{"22", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"1245", "-", 
              RowBox[{"880", " ", 
               SqrtBox["2"]}]}]]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "13"}], "+", 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]}]], "]"}], "<", " ", "\[Alpha]"}], " ", "&&", " ", 
      RowBox[{"\[Alpha]", " ", "<", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           FractionBox["2", "41"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "51"}], "+", 
             RowBox[{"38", " ", 
              SqrtBox["2"]}], "+", 
             SqrtBox[
              RowBox[{"5", " ", 
               RowBox[{"(", 
                RowBox[{"737", "-", 
                 RowBox[{"480", " ", 
                  SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      RowBox[{"ArcCos", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "31"}], "+", 
           RowBox[{"22", " ", 
            SqrtBox["2"]}], "+", 
           SqrtBox[
            RowBox[{"1245", "-", 
             RowBox[{"880", " ", 
              SqrtBox["2"]}]}]]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"8", " ", 
          SqrtBox["2"]}]}]], "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"ArcCos", "[", 
         RowBox[{
          FractionBox["2", "41"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "51"}], "+", 
            RowBox[{"38", " ", 
             SqrtBox["2"]}], "+", 
            SqrtBox[
             RowBox[{"5", " ", 
              RowBox[{"(", 
               RowBox[{"737", "-", 
                RowBox[{"480", " ", 
                 SqrtBox["2"]}]}], ")"}]}]]}], ")"}]}], "]"}]}]}]}], "}"}], 
    "}"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "18"}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.581609382124021*^9, 3.5816093821731052`*^9}, {
  3.581674342761096*^9, 3.581674366016737*^9}, {3.581674410493896*^9, 
  3.581674416321011*^9}, {3.5816745142249126`*^9, 3.5816745887031527`*^9}, {
  3.581674797332777*^9, 3.581674801987938*^9}, {3.5816749471944838`*^9, 
  3.581674948858513*^9}, {3.581944908530826*^9, 3.58194498132018*^9}, {
  3.581945027577073*^9, 3.581945027991763*^9}, {3.581945303251691*^9, 
  3.581945309353141*^9}, {3.581945340371601*^9, 3.581945372512339*^9}, {
  3.581945409818782*^9, 3.581945414450327*^9}, {3.581953389988534*^9, 
  3.581953448617591*^9}, {3.582216775133053*^9, 3.582216836170295*^9}, {
  3.7716264793393393`*^9, 3.771626489876069*^9}, {3.7716265205913677`*^9, 
  3.77162655779049*^9}, {3.772907820476071*^9, 3.7729078597700233`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"ce853216-53c8-4dd4-8645-6741dfaa5f23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8014446723007539671949097258930182839285409447157604384515`40.", ",", 
   RowBox[{"{", 
    RowBox[{
    "\[Alpha]", "\[Rule]", 
     "2.8786758437045647305033177591351466301721791977975112103425`40."}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.772908384461894*^9, 3.7729687143838367`*^9, 
  3.773059166073032*^9, 3.7731502443332777`*^9, 3.7732447930495253`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"ed9afdca-538e-4036-a9f4-caf1d147a95e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 775},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.5,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 994, 14, 146, "Title",ExpressionUUID->"3bc0b118-19e5-4ef3-836d-0d9f018f7019"],
Cell[1576, 38, 955, 16, 53, "Text",ExpressionUUID->"baec14af-3b99-4417-84bc-478b4d896230"],
Cell[CellGroupData[{
Cell[2556, 58, 181771, 2984, 438, "Input",ExpressionUUID->"b7192fac-0db3-4656-b2ec-c2398165bcd5"],
Cell[184330, 3044, 181980, 2987, 444, "Output",ExpressionUUID->"ac6a9a79-6087-4dd8-a00e-3ad6bca579f4"]
}, Open  ]],
Cell[366325, 6034, 284, 6, 53, "Text",ExpressionUUID->"54dfc02e-f7ed-4495-bac2-524f27f64cab"],
Cell[366612, 6042, 283, 6, 53, "Text",ExpressionUUID->"14f867e9-5e44-48cf-98b1-5eabaf46436c"],
Cell[CellGroupData[{
Cell[366920, 6052, 1973, 55, 182, "Input",ExpressionUUID->"eb425463-592d-4ae7-b0d4-cf7c260e5c08"],
Cell[368896, 6109, 1342, 36, 95, "Output",ExpressionUUID->"f1f52e77-0b70-48dd-a1bf-2703c5f5bef8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370275, 6150, 1562, 41, 182, "Input",ExpressionUUID->"9e168390-79c8-4bc8-ab8e-8b649016683d"],
Cell[371840, 6193, 633, 14, 34, "Message",ExpressionUUID->"90336593-2026-4165-bbfc-a215e0f8c00d"],
Cell[372476, 6209, 22907, 623, 1261, "Output",ExpressionUUID->"a5accec6-d3cc-4271-9184-dcf9086bf57f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395420, 6837, 1649, 43, 224, "Input",ExpressionUUID->"f308d889-83b6-404f-baf0-3a95fca36a37"],
Cell[397072, 6882, 670, 14, 34, "Message",ExpressionUUID->"cd2d0ae2-fa70-4dfc-863d-a1f9798b5a44"],
Cell[397745, 6898, 867, 20, 52, "Output",ExpressionUUID->"a70c0e10-11c1-453a-88d4-d78504bf0b52"]
}, Open  ]],
Cell[398627, 6921, 562, 10, 122, "Text",ExpressionUUID->"cd0900e2-032e-41bc-a3f4-93b73a61973d"],
Cell[399192, 6933, 5961, 165, 401, "Text",ExpressionUUID->"f0fd063a-9b94-46c2-8b58-0e41b6ac020b"],
Cell[CellGroupData[{
Cell[405178, 7102, 396, 6, 101, "Section",ExpressionUUID->"58eac1c0-3dea-4423-bd3e-40f227e6c6e5"],
Cell[CellGroupData[{
Cell[405599, 7112, 5793, 109, 202, "Input",ExpressionUUID->"56b426ba-7978-4852-a10a-3cd4eae9172c"],
Cell[411395, 7223, 1943, 51, 87, "Output",ExpressionUUID->"0abe955f-cf47-4509-97f0-74c435bd1502"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413387, 7280, 215, 4, 101, "Section",ExpressionUUID->"dd1d0949-4425-489a-9138-ef893592d4c8"],
Cell[413605, 7286, 370, 6, 53, "Text",ExpressionUUID->"200ae999-c74e-4e08-bfe2-f7fa1b43f45d"],
Cell[413978, 7294, 26722, 659, 1770, "Input",ExpressionUUID->"0c4eaee0-0906-4beb-a970-1a075586bce9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440737, 7958, 150, 3, 101, "Section",ExpressionUUID->"8c1dc234-14dc-4eeb-9527-a7c0cd7c55bc"],
Cell[440890, 7963, 724, 12, 122, "Text",ExpressionUUID->"e7a21d8e-f617-4378-a5da-9dc2d5a1e93e"],
Cell[441617, 7977, 1469, 31, 46, "Input",ExpressionUUID->"8647fd8e-e317-47c6-8550-972afd32233b"],
Cell[CellGroupData[{
Cell[443111, 8012, 436, 9, 81, "Subsection",ExpressionUUID->"13c39ee2-5a3a-466d-965d-7a6d5f6b780b"],
Cell[CellGroupData[{
Cell[443572, 8025, 3668, 81, 264, "Input",ExpressionUUID->"86250681-3e60-4d0f-8f4c-72bf508bab26"],
Cell[CellGroupData[{
Cell[447265, 8110, 1487, 26, 59, "Print",ExpressionUUID->"2dfbd219-01c7-4ea9-a053-f02cb53f289f"],
Cell[448755, 8138, 1487, 26, 59, "Print",ExpressionUUID->"8f832de3-08b5-49a7-a6bb-2927484cb240"],
Cell[450245, 8166, 1556, 29, 44, "Print",ExpressionUUID->"69102a70-60d8-4587-8d39-380f70f4034b"],
Cell[451804, 8197, 1487, 26, 59, "Print",ExpressionUUID->"4d93127a-fbdd-4daf-a97f-b2874661eb48"],
Cell[453294, 8225, 1487, 26, 59, "Print",ExpressionUUID->"76696f61-e4eb-487f-8249-11b45c29c914"]
}, Open  ]]
}, Open  ]],
Cell[454808, 8255, 370, 7, 88, "Text",ExpressionUUID->"501a0c14-48e0-46ca-9ccb-fe49c16cecf6"],
Cell[455181, 8264, 146, 3, 53, "Text",ExpressionUUID->"44713034-9149-4e18-aea8-b2757e3281a2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[455376, 8273, 221, 4, 101, "Section",ExpressionUUID->"84c54b26-f298-4444-9ec8-58440b22b9ee"],
Cell[455600, 8279, 337, 7, 88, "Text",ExpressionUUID->"80c5fdb9-69be-42ff-a2d1-bdaf155f4274"],
Cell[CellGroupData[{
Cell[455962, 8290, 18462, 395, 938, "Input",ExpressionUUID->"4236f1e2-8b41-4e4e-af4f-387ccda170f7"],
Cell[474427, 8687, 6619, 149, 678, "Output",ExpressionUUID->"b313c762-5c97-4de7-be47-97aaeb1254ee"]
}, Open  ]],
Cell[481061, 8839, 426, 8, 53, "Text",ExpressionUUID->"546fbb8a-85e6-4b81-a5f4-58b26d2ba1db"],
Cell[CellGroupData[{
Cell[481512, 8851, 5700, 159, 520, "Input",ExpressionUUID->"e32aa1b2-55a2-482b-a630-17d58cff8604"],
Cell[487215, 9012, 798, 22, 101, "Output",ExpressionUUID->"aa2f9491-6165-4a29-aeb1-6716e708b00f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488050, 9039, 657, 20, 112, "Input",ExpressionUUID->"24222d7c-3bf2-4c4e-8cc1-5bfb0b0150ef"],
Cell[488710, 9061, 362, 5, 52, "Output",ExpressionUUID->"0f3270d0-4dd7-458c-9787-d0c2e39c8fbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[489109, 9071, 828, 25, 46, "Input",ExpressionUUID->"3568413b-90b7-4c27-b5da-27c5befd4f13"],
Cell[489940, 9098, 586, 14, 77, "Output",ExpressionUUID->"962ba1e8-d002-418c-b9fc-6b12de425617"]
}, Open  ]],
Cell[490541, 9115, 7176, 111, 118, "Text",ExpressionUUID->"5212699b-78f0-4721-aaf2-e1e9be8e40aa"],
Cell[CellGroupData[{
Cell[497742, 9230, 737, 22, 138, "Input",ExpressionUUID->"b9a10a46-e16c-486f-bf24-b0593dc5f4fa"],
Cell[498482, 9254, 726, 20, 91, "Output",ExpressionUUID->"0615a87c-cfb7-45c0-a800-fb0896bd55ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499245, 9279, 680, 21, 86, "Input",ExpressionUUID->"4e34178c-3bc6-47f1-911c-648c5bb3dd60"],
Cell[499928, 9302, 741, 21, 91, "Output",ExpressionUUID->"0904754f-bb3a-4f24-91c3-84fa128895eb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[500718, 9329, 168, 3, 101, "Section",ExpressionUUID->"38ec1223-37f7-4cb2-a7b2-4479b3290d12"],
Cell[500889, 9334, 600, 11, 157, "Text",ExpressionUUID->"587b476a-42fe-4314-b5c2-430cf24c7bba"],
Cell[CellGroupData[{
Cell[501514, 9349, 172, 3, 81, "Subsection",ExpressionUUID->"c7bddc5d-bf82-4e8d-8bdb-64a93ed30112"],
Cell[501689, 9354, 864, 14, 122, "Text",ExpressionUUID->"31f5fd9e-ffa2-41b5-8658-8abc959f8dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502590, 9373, 161, 3, 81, "Subsection",ExpressionUUID->"31f2c795-42a7-4371-8bcc-f26ae4f35c51"],
Cell[502754, 9378, 799, 17, 89, "Text",ExpressionUUID->"dad468d2-f604-44ad-83e4-8184a0b76de7"],
Cell[CellGroupData[{
Cell[503578, 9399, 13993, 346, 1014, "Input",ExpressionUUID->"39a0cf25-4042-4b6b-ad72-07cca4231186"],
Cell[517574, 9747, 7266, 161, 678, "Output",ExpressionUUID->"c8c418f6-e5b0-4f68-913d-e87272a3fdcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524877, 9913, 6962, 173, 481, "Input",ExpressionUUID->"ef28eb54-9eeb-436b-b3ad-0cc9261a2bee"],
Cell[531842, 10088, 855, 19, 52, "Output",ExpressionUUID->"5a911073-5955-4611-8582-67f7f971fc41"]
}, Open  ]],
Cell[532712, 10110, 1056, 19, 78, "Input",ExpressionUUID->"8f7f3838-6972-492f-814a-ca5be2400366"],
Cell[CellGroupData[{
Cell[533793, 10133, 711, 16, 46, "Input",ExpressionUUID->"079eff23-d452-4b8a-b102-2477f53b339f"],
Cell[534507, 10151, 582, 13, 52, "Output",ExpressionUUID->"5600f607-fc46-4289-b94d-945a3dddaaed"]
}, Open  ]],
Cell[535104, 10167, 974, 24, 109, "Input",ExpressionUUID->"b861794b-5dc4-4f62-a8af-a6aa1633b81c"],
Cell[CellGroupData[{
Cell[536103, 10195, 976, 26, 112, "Input",ExpressionUUID->"e19a6967-7441-4af8-aa7e-13ca11c722cc"],
Cell[537082, 10223, 3117, 72, 332, "Output",ExpressionUUID->"b5a54609-6b0c-41c6-851b-b0e1dff1e4f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[540260, 10302, 244, 4, 101, "Section",ExpressionUUID->"1367c9d9-3697-4765-9fd2-49fbdfafea09"],
Cell[540507, 10308, 464, 9, 53, "Text",ExpressionUUID->"c42143cc-2a37-4ae5-8b7d-5dfd369c5feb"],
Cell[CellGroupData[{
Cell[540996, 10321, 2390, 60, 243, "Input",ExpressionUUID->"0c443183-9e62-4363-88fc-2a49f4f58e50"],
Cell[543389, 10383, 40246, 968, 1880, "Output",ExpressionUUID->"af6bef91-f4dd-4d53-985e-642f49b5fc74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[583672, 11356, 2694, 68, 274, "Input",ExpressionUUID->"22becb88-4f23-4d64-9d64-75f4a66893ac"],
Cell[586369, 11426, 26109, 648, 1232, "Output",ExpressionUUID->"95429dad-1db4-48f2-aeba-5a2052f1fe25"]
}, Open  ]],
Cell[612493, 12077, 526, 10, 88, "Text",ExpressionUUID->"7fea073f-4678-488f-94be-79aeb56d8b30"],
Cell[CellGroupData[{
Cell[613044, 12091, 7846, 163, 408, "Input",ExpressionUUID->"7af55f2d-c6fe-463e-ac7b-e5519ce27699"],
Cell[620893, 12256, 20211, 333, 717, 2285, 40, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4e1246ba-0540-4b4a-88f8-224a4a98b061"]
}, Open  ]],
Cell[641119, 12592, 252, 6, 53, "Text",ExpressionUUID->"bdb431a9-b687-4e8a-8bf8-a6af86b6dc60"],
Cell[CellGroupData[{
Cell[641396, 12602, 4697, 140, 468, "Input",ExpressionUUID->"bdb6dae8-b167-4a97-81ab-625371c57f9b"],
Cell[646096, 12744, 3266, 56, 674, "Output",ExpressionUUID->"d9c30632-5e09-49c2-a0de-3a443490d521"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[649411, 12806, 215, 4, 101, "Section",ExpressionUUID->"0778b274-df47-40d0-990e-9f18ab4dee0d"],
Cell[649629, 12812, 248, 6, 53, "Text",ExpressionUUID->"e2b21120-6780-408f-b4b4-7bd65fa10119"],
Cell[CellGroupData[{
Cell[649902, 12822, 3037, 81, 305, "Input",ExpressionUUID->"2e76b167-8ff2-450b-99ea-9d7c127b6874"],
Cell[652942, 12905, 1480, 21, 52, "Output",ExpressionUUID->"7ebadd2a-ab8f-4877-9467-99553983d304"]
}, Open  ]],
Cell[654437, 12929, 183, 3, 119, "Text",ExpressionUUID->"fa94ecbe-88f4-4df6-9dfc-e5f2bb2c8c0b"],
Cell[CellGroupData[{
Cell[654645, 12936, 1975, 51, 436, "Input",ExpressionUUID->"0cf564df-6ffb-41c6-b1d5-d96cd9113d99"],
Cell[656623, 12989, 5460, 110, 740, "Output",ExpressionUUID->"61664634-41bc-45f5-a306-9bb812953679"]
}, Open  ]],
Cell[662098, 13102, 175, 3, 103, "Input",ExpressionUUID->"e96436cc-c511-48f4-9f9b-83029183b59e"],
Cell[662276, 13107, 420, 8, 119, "Text",ExpressionUUID->"a67662e1-3ba4-4e4d-8f45-8ad9c9b01e0d"],
Cell[CellGroupData[{
Cell[662721, 13119, 3446, 86, 609, "Input",ExpressionUUID->"ce796029-28a5-4a15-b31f-97c7c87f213a"],
Cell[666170, 13207, 6438, 152, 1516, "Output",ExpressionUUID->"3b326c99-ab6f-4ffd-8d9a-40cfd80d1e4b"]
}, Open  ]],
Cell[672623, 13362, 451, 6, 119, "Text",ExpressionUUID->"2fd82056-65c0-4b36-af8f-270e781cc6c8"],
Cell[CellGroupData[{
Cell[673099, 13372, 3451, 94, 900, "Input",ExpressionUUID->"f0795534-1999-46a5-8f81-df354a425f40"],
Cell[676553, 13468, 495, 12, 117, "Output",ExpressionUUID->"756e3ca3-e4a9-4f11-8f58-b5f5ba4ac55f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677085, 13485, 3451, 94, 900, "Input",ExpressionUUID->"ce853216-53c8-4dd4-8645-6741dfaa5f23"],
Cell[680539, 13581, 502, 12, 117, "Output",ExpressionUUID->"ed9afdca-538e-4036-a9f4-caf1d147a95e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

